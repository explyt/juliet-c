!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":173:10)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":173:14)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":173:20)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":173:32)
#loc211 = loc(fused[#loc51, #loc52])
#loc212 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.func private @printUnsignedLine(!u32i) loc(#loc190)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc11)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc17)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc17)
    %9 = cir.const #cir.int<2> : !u32i loc(#loc17)
    %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc17)
    %11 = cir.const #cir.int<1> : !u32i loc(#loc17)
    %12 = cir.binop(add, %10, %11) : !u32i loc(#loc17)
    cir.store %12, %1 : !u32i, !cir.ptr<!u32i> loc(#loc197)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %15 ^bb6, ^bb9 loc(#loc199)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc200)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc25)
    %17 = cir.unary(inc, %16) : !u32i, !u32i loc(#loc25)
    cir.store %17, %1 : !u32i, !cir.ptr<!u32i> loc(#loc201)
    %18 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc8)
    cir.store %18, %0 : !u32i, !cir.ptr<!u32i> loc(#loc192)
    %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc27)
    cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc28)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc191)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc30)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc208)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_preinc_05_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc72)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc79)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc85)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc85)
    %9 = cir.const #cir.int<2> : !u32i loc(#loc85)
    %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc85)
    %11 = cir.const #cir.int<1> : !u32i loc(#loc85)
    %12 = cir.binop(add, %10, %11) : !u32i loc(#loc85)
    cir.store %12, %1 : !u32i, !cir.ptr<!u32i> loc(#loc223)
    cir.br ^bb3 loc(#loc82)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc216)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc225)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb13 loc(#loc91)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc226)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc96)
    %19 = cir.const #cir.int<2147483647> : !s32i loc(#loc97)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc97)
    %21 = cir.const #cir.int<2> : !u32i loc(#loc97)
    %22 = cir.binop(mul, %20, %21) : !u32i loc(#loc97)
    %23 = cir.const #cir.int<1> : !u32i loc(#loc97)
    %24 = cir.binop(add, %22, %23) : !u32i loc(#loc97)
    %25 = cir.cmp(lt, %18, %24) : !u32i, !cir.bool loc(#loc227)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc228)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc101)
    %27 = cir.unary(inc, %26) : !u32i, !u32i loc(#loc101)
    cir.store %27, %1 : !u32i, !cir.ptr<!u32i> loc(#loc229)
    %28 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc76)
    cir.store %28, %0 : !u32i, !cir.ptr<!u32i> loc(#loc218)
    %29 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc103)
    cir.call @printUnsignedLine(%29) : (!u32i) -> () loc(#loc104)
    cir.br ^bb11 loc(#loc99)
  ^bb10:  // pred: ^bb8
    %30 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc72)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb11 loc(#loc95)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc95)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc88)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc74)
  } loc(#loc217)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc232)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc112)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc118)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc118)
    %9 = cir.const #cir.int<2> : !u32i loc(#loc118)
    %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc118)
    %11 = cir.const #cir.int<1> : !u32i loc(#loc118)
    %12 = cir.binop(add, %10, %11) : !u32i loc(#loc118)
    cir.store %12, %1 : !u32i, !cir.ptr<!u32i> loc(#loc236)
    cir.br ^bb3 loc(#loc115)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc237)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %15 ^bb6, ^bb12 loc(#loc238)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc239)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc126)
    %17 = cir.const #cir.int<2147483647> : !s32i loc(#loc127)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc127)
    %19 = cir.const #cir.int<2> : !u32i loc(#loc127)
    %20 = cir.binop(mul, %18, %19) : !u32i loc(#loc127)
    %21 = cir.const #cir.int<1> : !u32i loc(#loc127)
    %22 = cir.binop(add, %20, %21) : !u32i loc(#loc127)
    %23 = cir.cmp(lt, %16, %22) : !u32i, !cir.bool loc(#loc240)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc241)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc131)
    %25 = cir.unary(inc, %24) : !u32i, !u32i loc(#loc131)
    cir.store %25, %1 : !u32i, !cir.ptr<!u32i> loc(#loc242)
    %26 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc109)
    cir.store %26, %0 : !u32i, !cir.ptr<!u32i> loc(#loc231)
    %27 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc133)
    cir.call @printUnsignedLine(%27) : (!u32i) -> () loc(#loc134)
    cir.br ^bb10 loc(#loc129)
  ^bb9:  // pred: ^bb7
    %28 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc135)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb10 loc(#loc125)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc121)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc107)
  } loc(#loc230)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc143)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc147)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb4 loc(#loc149)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc153)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc153)
    cir.store %10, %1 : !u32i, !cir.ptr<!u32i> loc(#loc249)
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc251)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc252)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc161)
    %15 = cir.unary(inc, %14) : !u32i, !u32i loc(#loc161)
    cir.store %15, %1 : !u32i, !cir.ptr<!u32i> loc(#loc253)
    %16 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc140)
    cir.store %16, %0 : !u32i, !cir.ptr<!u32i> loc(#loc244)
    %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc163)
    cir.call @printUnsignedLine(%17) : (!u32i) -> () loc(#loc164)
    cir.br ^bb9 loc(#loc160)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc156)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc156)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc138)
  } loc(#loc243)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc256)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc171)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc257)
    cir.br ^bb1 loc(#loc258)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc177)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc177)
    cir.store %8, %1 : !u32i, !cir.ptr<!u32i> loc(#loc260)
    cir.br ^bb3 loc(#loc174)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc189)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc181)
    cir.brcond %11 ^bb6, ^bb9 loc(#loc262)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc263)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc185)
    %13 = cir.unary(inc, %12) : !u32i, !u32i loc(#loc185)
    cir.store %13, %1 : !u32i, !cir.ptr<!u32i> loc(#loc264)
    %14 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc168)
    cir.store %14, %0 : !u32i, !cir.ptr<!u32i> loc(#loc255)
    %15 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc187)
    cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc188)
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc180)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc180)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc166)
  } loc(#loc254)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":28:1)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":46:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":42:13)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":42:35)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":30:5)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":30:18)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":31:12)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":31:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":32:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":36:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":32:8)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":35:16)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":35:9)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":37:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":45:5)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":37:8)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":38:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":39:9)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":44:9)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":41:13)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":41:15)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":43:31)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":43:13)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":156:1)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":162:1)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":158:5)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":158:14)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":159:5)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":159:14)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":160:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":160:14)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":161:5)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":161:14)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":178:15)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":180:15)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":183:15)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":185:15)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":173:1)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":188:1)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":174:1)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":176:27)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":176:22)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":176:5)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":178:5)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":179:5)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":179:62)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":180:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":183:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":184:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":184:61)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":185:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":187:12)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":187:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":24:1)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":24:26)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":65:19)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":78:23)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":53:1)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":81:1)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":73:13)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":73:35)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":55:5)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":55:18)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":56:12)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":56:5)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":57:5)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":61:5)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":57:8)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":58:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":60:16)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":60:9)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":62:5)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":80:5)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":62:8)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":63:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":66:5)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":68:5)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":65:9)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":70:9)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":79:9)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":70:13)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":70:20)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":71:9)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":75:9)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":77:9)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":72:13)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":72:15)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":74:31)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":74:13)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":78:13)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":84:1)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":107:1)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":99:13)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":99:35)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":86:5)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":86:18)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":87:12)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":87:5)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":88:5)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":92:5)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":88:8)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":89:5)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":91:16)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":91:9)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":93:5)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":106:5)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":93:8)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":94:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":96:9)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":105:9)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":96:13)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":96:20)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":97:9)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":101:9)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":103:9)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":98:13)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":98:15)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":100:31)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":100:13)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":104:23)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":104:13)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":110:1)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":133:1)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":129:13)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":129:35)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":112:5)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":112:18)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":113:12)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":113:5)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":114:5)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":123:5)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":114:8)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":115:5)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":118:5)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":120:5)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":117:19)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":117:9)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":122:16)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":122:9)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":124:5)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":132:5)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":124:8)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":125:5)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":126:9)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":131:9)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":128:13)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":128:15)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":130:31)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":130:13)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":136:1)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":154:1)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":150:13)
#loc168 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":150:35)
#loc169 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":138:5)
#loc170 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":138:18)
#loc171 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":139:12)
#loc172 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":139:5)
#loc173 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":140:5)
#loc174 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":144:5)
#loc175 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":140:8)
#loc176 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":141:5)
#loc177 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":143:16)
#loc178 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":143:9)
#loc179 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":145:5)
#loc180 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":153:5)
#loc181 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":145:8)
#loc182 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":146:5)
#loc183 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":147:9)
#loc184 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":152:9)
#loc185 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":149:13)
#loc186 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":149:15)
#loc187 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":151:31)
#loc188 = loc("CWE190_Integer_Overflow__unsigned_int_max_preinc_05.c":151:13)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc12, #loc11])
#loc195 = loc(fused[#loc13, #loc14])
#loc196 = loc(fused[#loc16, #loc14])
#loc197 = loc(fused[#loc18, #loc17])
#loc198 = loc(fused[#loc19, #loc20])
#loc199 = loc(fused[#loc22, #loc20])
#loc200 = loc(fused[#loc23, #loc24])
#loc201 = loc(fused[#loc25, #loc26])
#loc202 = loc(fused[#loc29, #loc30])
#loc203 = loc(fused[#loc31, #loc32])
#loc204 = loc(fused[#loc33, #loc34])
#loc205 = loc(fused[#loc35, #loc36])
#loc206 = loc(fused[#loc37, #loc38])
#loc207 = loc(fused[#loc39, #loc40])
#loc208 = loc(fused[#loc41, #loc42])
#loc209 = loc(fused[#loc43, #loc44])
#loc210 = loc(fused[#loc49, #loc50])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc64, #loc65])
#loc215 = loc(fused[#loc68, #loc67])
#loc216 = loc(fused[#loc69, #loc70])
#loc217 = loc(fused[#loc73, #loc74])
#loc218 = loc(fused[#loc75, #loc76])
#loc219 = loc(fused[#loc77, #loc78])
#loc220 = loc(fused[#loc80, #loc79])
#loc221 = loc(fused[#loc81, #loc82])
#loc222 = loc(fused[#loc84, #loc82])
#loc223 = loc(fused[#loc86, #loc85])
#loc224 = loc(fused[#loc87, #loc88])
#loc225 = loc(fused[#loc90, #loc91, #loc92, #loc88])
#loc226 = loc(fused[#loc94, #loc95])
#loc227 = loc(fused[#loc96, #loc97])
#loc228 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc229 = loc(fused[#loc101, #loc102])
#loc230 = loc(fused[#loc106, #loc107])
#loc231 = loc(fused[#loc108, #loc109])
#loc232 = loc(fused[#loc110, #loc111])
#loc233 = loc(fused[#loc113, #loc112])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc117, #loc115])
#loc236 = loc(fused[#loc119, #loc118])
#loc237 = loc(fused[#loc120, #loc121])
#loc238 = loc(fused[#loc123, #loc121])
#loc239 = loc(fused[#loc124, #loc125])
#loc240 = loc(fused[#loc126, #loc127])
#loc241 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc242 = loc(fused[#loc131, #loc132])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc139, #loc140])
#loc245 = loc(fused[#loc141, #loc142])
#loc246 = loc(fused[#loc144, #loc143])
#loc247 = loc(fused[#loc145, #loc146])
#loc248 = loc(fused[#loc148, #loc149, #loc150, #loc146])
#loc249 = loc(fused[#loc154, #loc153])
#loc250 = loc(fused[#loc155, #loc156])
#loc251 = loc(fused[#loc158, #loc156])
#loc252 = loc(fused[#loc159, #loc160])
#loc253 = loc(fused[#loc161, #loc162])
#loc254 = loc(fused[#loc165, #loc166])
#loc255 = loc(fused[#loc167, #loc168])
#loc256 = loc(fused[#loc169, #loc170])
#loc257 = loc(fused[#loc172, #loc171])
#loc258 = loc(fused[#loc173, #loc174])
#loc259 = loc(fused[#loc176, #loc174])
#loc260 = loc(fused[#loc178, #loc177])
#loc261 = loc(fused[#loc179, #loc180])
#loc262 = loc(fused[#loc182, #loc180])
#loc263 = loc(fused[#loc183, #loc184])
#loc264 = loc(fused[#loc185, #loc186])
