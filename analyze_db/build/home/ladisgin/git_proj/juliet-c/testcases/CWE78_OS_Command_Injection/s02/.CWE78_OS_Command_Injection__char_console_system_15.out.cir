!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:33)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:10)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:14)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:20)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:32)
#true = #cir.bool<true> : !cir.bool
#loc225 = loc(fused[#loc110, #loc111])
#loc226 = loc(fused[#loc112, #loc113])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc184)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc185)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc186)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc187)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc19)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc192)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc186)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc186)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc186)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<6> : !s32i loc(#loc32)
    cir.br ^bb2 loc(#loc30)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %5 : !s32i, ^bb28 [
      6: ^bb4
    ] loc(#loc30)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc200)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
    %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc201)
    cir.brcond %15 ^bb7, ^bb25 loc(#loc202)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc203)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc48)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc49)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc204)
    %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc204)
    %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
    %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
    %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
    %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
    cir.brcond %29 ^bb9, ^bb22 loc(#loc206)
  ^bb9:  // pred: ^bb8
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb10 loc(#loc208)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc64)
    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %36 ^bb11, ^bb16 loc(#loc65)
  ^bb11:  // pred: ^bb10
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc68)
    %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc210)
    %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc69)
    %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc66)
    %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc66)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc70)
    %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc65)
  ^bb12:  // pred: ^bb11
    %47 = cir.const #true loc(#loc65)
    cir.br ^bb14(%47 : !cir.bool) loc(#loc65)
  ^bb13:  // pred: ^bb11
    %48 = cir.const #false loc(#loc65)
    cir.br ^bb14(%48 : !cir.bool) loc(#loc65)
  ^bb14(%49: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:33)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc65)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17(%49 : !cir.bool) loc(#loc65)
  ^bb16:  // pred: ^bb10
    %50 = cir.const #false loc(#loc65)
    cir.br ^bb17(%50 : !cir.bool) loc(#loc65)
  ^bb17(%51: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:33)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc65)
  ^bb18:  // pred: ^bb17
    cir.brcond %51 ^bb19, ^bb20 loc(#loc212)
  ^bb19:  // pred: ^bb18
    %52 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc72)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc75)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc213)
    %59 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %53, %59 : !s8i, !cir.ptr<!s8i> loc(#loc214)
    cir.br ^bb20 loc(#loc62)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc62)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc55)
  ^bb22:  // pred: ^bb8
    %60 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc78)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %65 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc215)
    cir.br ^bb23 loc(#loc45)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc45)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc39)
  ^bb25:  // 2 preds: ^bb6, ^bb24
    cir.br ^bb26 loc(#loc39)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc35)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29 loc(#loc82)
  ^bb28:  // pred: ^bb2
    %67 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb29 loc(#loc84)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc31)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc216)
  ^bb31:  // pred: ^bb30
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %70 = cir.call @system(%69) : (!cir.ptr<!s8i>) -> !s32i loc(#loc88)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %72 = cir.cmp(ne, %70, %71) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %72 ^bb32, ^bb33 loc(#loc218)
  ^bb32:  // pred: ^bb31
    %73 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc19)
    %74 = cir.cast(array_to_ptrdecay, %73 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%74) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %75 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc93)
    cir.call @exit(%76) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
    cir.br ^bb33 loc(#loc86)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc86)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc23)
  } loc(#loc193)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc95)
  } loc(#loc219)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc222)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call @CWE78_OS_Command_Injection__char_console_system_15_good() : () -> () loc(#loc119)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE78_OS_Command_Injection__char_console_system_15_bad() : () -> () loc(#loc123)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    cir.return %17 : !s32i loc(#loc229)
  } loc(#loc224)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc130)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc185)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc185)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc185)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc139)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc137)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc141)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb6 loc(#loc143)
  ^bb5:  // pred: ^bb2
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc130)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc130)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc138)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc235)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %13 = cir.call @system(%12) : (!cir.ptr<!s8i>) -> !s32i loc(#loc150)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc237)
  ^bb9:  // pred: ^bb8
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc153)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc156)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
    cir.br ^bb10 loc(#loc148)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc148)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc132)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc184)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc184)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc184)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc165)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc163)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc167)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc169)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc169)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
    cir.br ^bb6 loc(#loc170)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc164)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc242)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %13 = cir.call @system(%12) : (!cir.ptr<!s8i>) -> !s32i loc(#loc177)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc244)
  ^bb9:  // pred: ^bb8
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc180)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc182)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc183)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc182)
    cir.br ^bb10 loc(#loc175)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc175)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc158)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":116:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":116:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":91:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":91:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":39:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":39:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":63:27)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":72:19)
#loc17 = loc("/usr/include/stdlib.h":923:1)
#loc18 = loc("/usr/include/stdlib.h":923:41)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":78:19)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":36:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":81:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:37)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":38:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":38:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":40:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":40:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":41:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":74:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":41:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":43:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":44:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":68:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:26)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":46:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":67:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":48:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":49:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":66:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:23)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:28)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:27)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:43)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:57)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":51:67)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":52:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":60:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":62:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:34)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":55:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":59:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:31)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:36)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:41)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:49)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:50)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":56:55)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":57:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:39)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:26)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:34)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":58:35)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":63:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:33)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:22)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":65:29)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":69:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":72:9)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":73:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":80:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:16)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":76:25)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":77:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":78:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":79:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":79:14)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":137:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":141:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":139:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":139:14)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":140:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":140:14)
#loc100 = loc("/usr/include/stdlib.h":575:1)
#loc101 = loc("/usr/include/stdlib.h":575:41)
#loc102 = loc("/usr/include/time.h":76:1)
#loc103 = loc("/usr/include/time.h":76:38)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":158:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":160:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":163:15)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":165:15)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":153:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":168:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":154:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:27)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:22)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":156:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":158:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":159:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":159:61)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":160:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":163:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":164:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":164:60)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":165:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":167:12)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":167:5)
#loc128 = loc("/usr/include/string.h":149:1)
#loc129 = loc("/usr/include/string.h":150:14)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:22)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":88:1)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":110:1)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":90:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":90:12)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":92:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":92:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":93:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":103:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":93:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":95:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":97:19)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":97:9)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":98:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":101:16)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":102:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":109:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:16)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":105:25)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":106:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":107:19)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":107:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":108:9)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":108:14)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":113:1)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":135:1)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":115:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":115:12)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":117:12)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":117:5)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":118:5)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":128:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":118:12)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":120:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:9)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:16)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":122:22)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":123:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":126:19)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":126:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":127:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":134:5)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:16)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":130:25)
#loc179 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":131:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":132:19)
#loc181 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":132:9)
#loc182 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":133:9)
#loc183 = loc("CWE78_OS_Command_Injection__char_console_system_15.c":133:14)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc12])
#loc190 = loc(fused[#loc13, #loc14])
#loc191 = loc(fused[#loc17, #loc18])
#loc192 = loc(fused[#loc20, #loc21])
#loc193 = loc(fused[#loc22, #loc23])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc26, #loc27])
#loc196 = loc(fused[#loc29, #loc28])
#loc197 = loc(fused[#loc30, #loc31])
#loc198 = loc(fused[#loc34, #loc35])
#loc199 = loc(fused[#loc38, #loc39])
#loc200 = loc(fused[#loc40, #loc41])
#loc201 = loc(fused[#loc40, #loc42])
#loc202 = loc(fused[#loc43, #loc39])
#loc203 = loc(fused[#loc44, #loc45])
#loc204 = loc(fused[#loc49, #loc50])
#loc205 = loc(fused[#loc52, #loc53])
#loc206 = loc(fused[#loc54, #loc55, #loc56, #loc45])
#loc207 = loc(fused[#loc59, #loc60])
#loc208 = loc(fused[#loc61, #loc62])
#loc209 = loc(fused[#loc63, #loc64])
#loc210 = loc(fused[#loc67, #loc68])
#loc211 = loc(fused[#loc66, #loc70])
#loc212 = loc(fused[#loc71, #loc62])
#loc213 = loc(fused[#loc74, #loc75])
#loc214 = loc(fused[#loc73, #loc72])
#loc215 = loc(fused[#loc79, #loc78])
#loc216 = loc(fused[#loc85, #loc86])
#loc217 = loc(fused[#loc88, #loc89])
#loc218 = loc(fused[#loc90, #loc86])
#loc219 = loc(fused[#loc94, #loc95])
#loc220 = loc(fused[#loc96, #loc97])
#loc221 = loc(fused[#loc98, #loc99])
#loc222 = loc(fused[#loc100, #loc101])
#loc223 = loc(fused[#loc102, #loc103])
#loc224 = loc(fused[#loc108, #loc109])
#loc227 = loc(fused[#loc119, #loc120])
#loc228 = loc(fused[#loc123, #loc124])
#loc229 = loc(fused[#loc127, #loc126])
#loc230 = loc(fused[#loc128, #loc129])
#loc231 = loc(fused[#loc131, #loc132])
#loc232 = loc(fused[#loc133, #loc134])
#loc233 = loc(fused[#loc136, #loc135])
#loc234 = loc(fused[#loc137, #loc138])
#loc235 = loc(fused[#loc147, #loc148])
#loc236 = loc(fused[#loc150, #loc151])
#loc237 = loc(fused[#loc152, #loc148])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc162, #loc161])
#loc241 = loc(fused[#loc163, #loc164])
#loc242 = loc(fused[#loc174, #loc175])
#loc243 = loc(fused[#loc177, #loc178])
#loc244 = loc(fused[#loc179, #loc175])
