!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":31:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":31:31)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":58:27)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":58:35)
#loc101 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc99)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc102)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc103)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc107)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc6)
  } loc(#loc100)
  cir.func private  @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc110)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc36)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc38)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc117)
      %3 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc117)
      cir.store %3, %2 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc117)
      %4 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc43)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc45)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
      %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc48)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc118)
      %13 = cir.call @strncpy(%5, %6, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
    } loc(#loc116)
    cir.return loc(#loc33)
  } loc(#loc113)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc59)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc59)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc121)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc122)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc126)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc73)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc54)
  } loc(#loc119)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc80)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc132)
      %3 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc132)
      cir.store %3, %2 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc132)
      %4 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc85)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc87)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc88)
      %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc89)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc88)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc90)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc133)
      %13 = cir.call @strncpy(%5, %6, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc85)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
      cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    } loc(#loc131)
    cir.return loc(#loc75)
  } loc(#loc128)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43L7goodG2BEv() : () -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":31:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":36:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":32:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":34:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":35:29)
#loc24 = loc("/usr/include/string.h":144:1)
#loc25 = loc("/usr/include/string.h":146:14)
#loc26 = loc("/usr/include/string.h":407:1)
#loc27 = loc("/usr/include/string.h":408:33)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("/usr/include/stdlib.h":687:1)
#loc31 = loc("/usr/include/stdlib.h":687:32)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":38:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":51:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":40:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":40:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":41:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":41:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":42:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":50:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":44:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":44:29)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:38)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":47:48)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":48:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":48:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":49:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":49:14)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":58:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":63:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":59:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:31)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:34)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:45)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:27)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:46)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":61:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:17)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:30)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":62:29)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":65:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":78:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":67:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":67:12)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":68:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":68:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":69:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":70:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":77:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":71:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":71:29)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:23)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:31)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:38)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":74:48)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":75:19)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":75:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":76:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":76:14)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":80:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":83:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_43.cpp":82:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc12, #loc13])
#loc103 = loc(fused[#loc11, #loc13])
#loc104 = loc(fused[#loc10, #loc14])
#loc105 = loc(fused[#loc15, #loc14])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc20, #loc17])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc34, #loc35])
#loc115 = loc(fused[#loc37, #loc36])
#loc116 = loc(fused[#loc39, #loc40])
#loc117 = loc(fused[#loc41, #loc42])
#loc118 = loc(fused[#loc46, #loc48])
#loc119 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc61, #loc62])
#loc122 = loc(fused[#loc63, #loc62])
#loc123 = loc(fused[#loc58, #loc64])
#loc124 = loc(fused[#loc65, #loc64])
#loc125 = loc(fused[#loc66, #loc67])
#loc126 = loc(fused[#loc68, #loc69])
#loc127 = loc(fused[#loc70, #loc67])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc79, #loc78])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc88, #loc90])
#loc134 = loc(fused[#loc95, #loc96])
