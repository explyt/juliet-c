!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":126:10)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":126:14)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":126:20)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":126:32)
#loc254 = loc(fused[#loc88, #loc89])
#loc255 = loc(fused[#loc90, #loc91])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc218)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc219)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc221)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc222)
  cir.func private @printIntLine(!s32i) loc(#loc223)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc224)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc218)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc229)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc28)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc232)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc233)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc36)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc37)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc234)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc235)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc236)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc237)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc45)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc239)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc49)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
        } loc(#loc240)
      } loc(#loc238)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc52)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc242)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc55)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc243)
          cir.condition(%24) loc(#loc56)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc61)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc245)
          } loc(#loc244)
          cir.yield loc(#loc51)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc63)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc246)
          cir.yield loc(#loc241)
        } loc(#loc241)
      } loc(#loc241)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc65)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc66)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc67)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    } loc(#loc231)
    cir.return loc(#loc17)
  } loc(#loc225)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc247)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc250)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc85)
  cir.func @main(%arg0: !s32i loc(fused[#loc88, #loc89]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc92)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc94)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc95)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc82)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_good() : () -> () loc(#loc97)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc84)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13_bad() : () -> () loc(#loc101)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %17 : !s32i loc(#loc258)
  } loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc112)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc218)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc117)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc263)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc121)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc122)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc267)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc268)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc269)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc270)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc271)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc272)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc274)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc143)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
        } loc(#loc275)
      } loc(#loc273)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc277)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc148)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc149)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc278)
          cir.condition(%24) loc(#loc150)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc155)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          } loc(#loc279)
          cir.yield loc(#loc145)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc157)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc281)
          cir.yield loc(#loc276)
        } loc(#loc276)
      } loc(#loc276)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc160)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc161)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc162)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
    } loc(#loc266)
    cir.return loc(#loc108)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc283)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc169)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc218)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc286)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc176)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
      } loc(#loc287)
    } loc(#loc285)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc290)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc291)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc184)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc185)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc292)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc293)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc294)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc295)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc192)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc193)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc193)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc297)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc195)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc196)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc197)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc195)
        } loc(#loc298)
      } loc(#loc296)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc200)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc200)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc300)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc202)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc203)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc301)
          cir.condition(%24) loc(#loc204)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc206)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc208)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc209)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          } loc(#loc302)
          cir.yield loc(#loc199)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc210)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc211)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc304)
          cir.yield loc(#loc299)
        } loc(#loc299)
      } loc(#loc299)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc212)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc213)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc214)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc212)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc215)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc216)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc217)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc216)
    } loc(#loc289)
    cir.return loc(#loc165)
  } loc(#loc282)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":29:23)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":21:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":45:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":23:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":23:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":25:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":25:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":25:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":26:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":30:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":26:8)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":26:27)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":27:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":29:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":29:16)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":31:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":44:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":32:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":32:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":33:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":33:14)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:28)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:35)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:42)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:52)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:53)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":36:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:43)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:27)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:33)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:34)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":37:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":41:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:14)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:23)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":39:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":40:29)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":40:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":40:24)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":40:25)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:40)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":38:39)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":42:22)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":42:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":42:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":42:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":43:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":43:14)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":110:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":114:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":112:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":112:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":113:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":113:14)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc81 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":131:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":133:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":136:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":138:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":126:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":141:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":127:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":129:27)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":129:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":129:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":131:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":132:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":132:71)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":133:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":136:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":137:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":137:70)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":138:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":140:12)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":140:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":60:19)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":52:1)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":81:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":54:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":54:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":56:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":56:12)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":56:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":57:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":66:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":57:8)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":57:27)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":58:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":61:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":63:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":60:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":65:16)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":65:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":67:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":80:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":68:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":68:16)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":69:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":69:14)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:42)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:52)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:53)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":72:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:27)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":73:39)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":77:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:18)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:14)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:21)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:33)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":75:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":76:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":76:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":76:24)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":76:25)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:40)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":74:39)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":78:22)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":78:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":78:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":78:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":79:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":79:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":84:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":108:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":86:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":86:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":88:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":88:12)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":88:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":89:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":93:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":89:8)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":89:27)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":90:5)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":92:16)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":92:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":94:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":107:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":95:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":95:16)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":96:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":96:14)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:28)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:35)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:42)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:52)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:53)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":99:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:43)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:13)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:27)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:33)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:34)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:40)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":100:39)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":104:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:18)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:14)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:21)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:33)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:23)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":102:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":103:29)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":103:13)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":103:24)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":103:25)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:40)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":101:39)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":105:22)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":105:33)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":105:34)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":105:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":106:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_13.c":106:14)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc5, #loc6])
#loc221 = loc(fused[#loc8, #loc9])
#loc222 = loc(fused[#loc10, #loc11])
#loc223 = loc(fused[#loc12, #loc13])
#loc224 = loc(fused[#loc14, #loc15])
#loc225 = loc(fused[#loc16, #loc17])
#loc226 = loc(fused[#loc18, #loc19])
#loc227 = loc(fused[#loc22, #loc20])
#loc228 = loc(fused[#loc23, #loc24])
#loc229 = loc(fused[#loc25, #loc26])
#loc230 = loc(fused[#loc27, #loc24])
#loc231 = loc(fused[#loc30, #loc31])
#loc232 = loc(fused[#loc32, #loc33])
#loc233 = loc(fused[#loc34, #loc35])
#loc234 = loc(fused[#loc38, #loc39])
#loc235 = loc(fused[#loc37, #loc39])
#loc236 = loc(fused[#loc36, #loc40])
#loc237 = loc(fused[#loc41, #loc40])
#loc238 = loc(fused[#loc42, #loc43])
#loc239 = loc(fused[#loc44, #loc45])
#loc240 = loc(fused[#loc46, #loc43])
#loc241 = loc(fused[#loc50, #loc51])
#loc242 = loc(fused[#loc53, #loc52])
#loc243 = loc(fused[#loc54, #loc55])
#loc244 = loc(fused[#loc57, #loc51])
#loc245 = loc(fused[#loc59, #loc58])
#loc246 = loc(fused[#loc63, #loc62])
#loc247 = loc(fused[#loc70, #loc71])
#loc248 = loc(fused[#loc72, #loc73])
#loc249 = loc(fused[#loc74, #loc75])
#loc250 = loc(fused[#loc76, #loc77])
#loc251 = loc(fused[#loc78, #loc79])
#loc252 = loc(fused[#loc80, #loc81])
#loc253 = loc(fused[#loc86, #loc87])
#loc256 = loc(fused[#loc97, #loc98])
#loc257 = loc(fused[#loc101, #loc102])
#loc258 = loc(fused[#loc105, #loc104])
#loc259 = loc(fused[#loc107, #loc108])
#loc260 = loc(fused[#loc109, #loc110])
#loc261 = loc(fused[#loc113, #loc111])
#loc262 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc116, #loc117])
#loc264 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc265 = loc(fused[#loc123, #loc122])
#loc266 = loc(fused[#loc124, #loc125])
#loc267 = loc(fused[#loc126, #loc127])
#loc268 = loc(fused[#loc128, #loc129])
#loc269 = loc(fused[#loc132, #loc133])
#loc270 = loc(fused[#loc131, #loc133])
#loc271 = loc(fused[#loc130, #loc134])
#loc272 = loc(fused[#loc135, #loc134])
#loc273 = loc(fused[#loc136, #loc137])
#loc274 = loc(fused[#loc138, #loc139])
#loc275 = loc(fused[#loc140, #loc137])
#loc276 = loc(fused[#loc144, #loc145])
#loc277 = loc(fused[#loc147, #loc146])
#loc278 = loc(fused[#loc148, #loc149])
#loc279 = loc(fused[#loc151, #loc145])
#loc280 = loc(fused[#loc153, #loc152])
#loc281 = loc(fused[#loc157, #loc156])
#loc282 = loc(fused[#loc164, #loc165])
#loc283 = loc(fused[#loc166, #loc167])
#loc284 = loc(fused[#loc170, #loc168])
#loc285 = loc(fused[#loc171, #loc172])
#loc286 = loc(fused[#loc173, #loc174])
#loc287 = loc(fused[#loc175, #loc172])
#loc288 = loc(fused[#loc177, #loc176])
#loc289 = loc(fused[#loc178, #loc179])
#loc290 = loc(fused[#loc180, #loc181])
#loc291 = loc(fused[#loc182, #loc183])
#loc292 = loc(fused[#loc186, #loc187])
#loc293 = loc(fused[#loc185, #loc187])
#loc294 = loc(fused[#loc184, #loc188])
#loc295 = loc(fused[#loc189, #loc188])
#loc296 = loc(fused[#loc190, #loc191])
#loc297 = loc(fused[#loc192, #loc193])
#loc298 = loc(fused[#loc194, #loc191])
#loc299 = loc(fused[#loc198, #loc199])
#loc300 = loc(fused[#loc201, #loc200])
#loc301 = loc(fused[#loc202, #loc203])
#loc302 = loc(fused[#loc205, #loc199])
#loc303 = loc(fused[#loc207, #loc206])
#loc304 = loc(fused[#loc211, #loc210])
