!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc74)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc75)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc76)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc81)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc85)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc27)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc29)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc37)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.return loc(#loc10)
  } loc(#loc77)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc89)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc93)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc52)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc95)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc99)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc100)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc64)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc58)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc70)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.return loc(#loc45)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":37:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":23:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":23:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":25:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":25:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":26:10)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":30:29)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":30:36)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":30:47)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":30:48)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":30:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:17)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:23)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":31:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":32:20)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":32:5)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":33:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":33:5)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":35:21)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":35:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":36:10)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":36:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":61:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":64:1)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":63:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":63:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":44:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":59:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":46:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":46:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":48:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":48:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":49:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":49:10)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":52:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":52:36)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":52:48)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":52:49)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":52:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:24)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:30)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":53:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":54:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":54:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":55:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":55:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":57:21)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":57:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":58:10)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_18.c":58:5)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc5, #loc6])
#loc76 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc9, #loc10])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc14, #loc13])
#loc80 = loc(fused[#loc15, #loc16])
#loc81 = loc(fused[#loc18, #loc19])
#loc82 = loc(fused[#loc17, #loc20])
#loc83 = loc(fused[#loc21, #loc20])
#loc84 = loc(fused[#loc22, #loc23])
#loc85 = loc(fused[#loc24, #loc25])
#loc86 = loc(fused[#loc26, #loc23])
#loc87 = loc(fused[#loc31, #loc30])
#loc88 = loc(fused[#loc34, #loc33])
#loc89 = loc(fused[#loc40, #loc41])
#loc90 = loc(fused[#loc42, #loc43])
#loc91 = loc(fused[#loc44, #loc45])
#loc92 = loc(fused[#loc46, #loc47])
#loc93 = loc(fused[#loc49, #loc48])
#loc94 = loc(fused[#loc50, #loc51])
#loc95 = loc(fused[#loc53, #loc54])
#loc96 = loc(fused[#loc52, #loc55])
#loc97 = loc(fused[#loc56, #loc55])
#loc98 = loc(fused[#loc57, #loc58])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc58])
#loc101 = loc(fused[#loc66, #loc65])
#loc102 = loc(fused[#loc68, #loc67])
