!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc213)
  cir.func private @printIntLine(!s32i) loc(#loc214)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc217)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc218)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc221)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc221)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc23)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc225)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc225)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc27)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %13 ^bb6, ^bb14 loc(#loc226)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc227)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc217)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc217)
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %17 ^bb9, ^bb10 loc(#loc230)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc41)
    cir.br ^bb11 loc(#loc37)
  ^bb10:  // pred: ^bb8
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc26)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc9)
  } loc(#loc216)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc234)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc235)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc44)
  } loc(#loc231)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc238)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc239)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc64)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc242)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc242)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc68)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc71)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc72)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb3 loc(#loc67)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc245)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc246)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc246)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc76)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc247)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb23 loc(#loc79)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc248)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc238)
    cir.store %16, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc238)
    cir.br ^bb9 loc(#loc249)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %19 ^bb10, ^bb15 loc(#loc88)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc90)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc88)
  ^bb11:  // pred: ^bb10
    %23 = cir.const #true loc(#loc88)
    cir.br ^bb13(%23 : !cir.bool) loc(#loc88)
  ^bb12:  // pred: ^bb10
    %24 = cir.const #false loc(#loc88)
    cir.br ^bb13(%24 : !cir.bool) loc(#loc88)
  ^bb13(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%25 : !cir.bool) loc(#loc88)
  ^bb15:  // pred: ^bb9
    %26 = cir.const #false loc(#loc88)
    cir.br ^bb16(%26 : !cir.bool) loc(#loc88)
  ^bb16(%27: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc88)
  ^bb17:  // pred: ^bb16
    cir.brcond %27 ^bb18, ^bb19 loc(#loc252)
  ^bb18:  // pred: ^bb17
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc96)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc97)
    cir.br ^bb20 loc(#loc93)
  ^bb19:  // pred: ^bb17
    %32 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc56)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb20 loc(#loc85)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc85)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc83)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc75)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc75)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc58)
  } loc(#loc237)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc254)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc106)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc258)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc258)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc110)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc114)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc262)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc262)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc118)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %13 ^bb6, ^bb22 loc(#loc263)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc264)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc254)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc254)
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %17 ^bb9, ^bb14 loc(#loc127)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc129)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %20 ^bb10, ^bb11 loc(#loc127)
  ^bb10:  // pred: ^bb9
    %21 = cir.const #true loc(#loc127)
    cir.br ^bb12(%21 : !cir.bool) loc(#loc127)
  ^bb11:  // pred: ^bb9
    %22 = cir.const #false loc(#loc127)
    cir.br ^bb12(%22 : !cir.bool) loc(#loc127)
  ^bb12(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc127)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%23 : !cir.bool) loc(#loc127)
  ^bb14:  // pred: ^bb8
    %24 = cir.const #false loc(#loc127)
    cir.br ^bb15(%24 : !cir.bool) loc(#loc127)
  ^bb15(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:27)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc127)
  ^bb16:  // pred: ^bb15
    cir.brcond %25 ^bb17, ^bb18 loc(#loc268)
  ^bb17:  // pred: ^bb16
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc135)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc135)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc136)
    cir.br ^bb19 loc(#loc132)
  ^bb18:  // pred: ^bb16
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc137)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb19 loc(#loc124)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc124)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc122)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc117)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc117)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc100)
  } loc(#loc253)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc270)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc271)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc146)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb1 loc(#loc273)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc274)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc274)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc150)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc275)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc157)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc277)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc278)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc278)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc161)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %14 ^bb7, ^bb15 loc(#loc279)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc270)
    cir.store %15, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc270)
    cir.br ^bb9 loc(#loc281)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc169)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc282)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc283)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc174)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc174)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc175)
    cir.br ^bb12 loc(#loc171)
  ^bb11:  // pred: ^bb9
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc176)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb12 loc(#loc167)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc167)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc165)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc160)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc160)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc140)
  } loc(#loc269)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc285)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc185)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc289)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc289)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc189)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc189)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc192)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb3 loc(#loc188)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc292)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc293)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc293)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc196)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc196)
    cir.brcond %12 ^bb6, ^bb14 loc(#loc294)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc295)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc285)
    cir.store %13, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc285)
    cir.br ^bb8 loc(#loc296)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc204)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %16 ^bb9, ^bb10 loc(#loc298)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc209)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc210)
    cir.br ^bb11 loc(#loc206)
  ^bb10:  // pred: ^bb8
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc211)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb11 loc(#loc202)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc202)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc200)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc195)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc195)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc179)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":44:27)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":22:1)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":48:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":35:13)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":35:34)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":24:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":24:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:13)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:12)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":26:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":31:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:8)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":27:26)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":28:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:17)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:16)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":30:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":47:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:8)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":32:26)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":33:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":34:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":46:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:13)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":45:13)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:17)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":38:24)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":39:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":41:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":43:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:37)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:30)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":40:17)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":44:17)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":180:1)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":186:1)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":182:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":182:14)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":183:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":183:14)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":184:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":184:14)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":185:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":185:14)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":68:19)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":81:27)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":55:1)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":85:1)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":73:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":73:34)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":57:5)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":57:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:13)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:12)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":59:5)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":64:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:8)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":60:26)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":61:5)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:17)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:16)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":63:9)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":84:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:8)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":65:27)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":66:5)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":69:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":71:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":68:9)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":72:9)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":83:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:13)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":82:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:17)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:25)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:30)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:38)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":75:40)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":76:13)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":78:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":80:13)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:37)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:30)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":77:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":81:17)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":88:1)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":113:1)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":101:13)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":101:34)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":90:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":90:9)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:13)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:12)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":92:5)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:5)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":97:5)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:8)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":93:26)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":94:5)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:17)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:16)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":96:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:5)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":112:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:8)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":98:26)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":99:5)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":100:9)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":111:9)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:13)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":110:13)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:17)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:25)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:30)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:38)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":103:40)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":104:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":106:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":108:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:37)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:30)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":105:17)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":109:27)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":109:17)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":116:1)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":148:1)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":135:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":135:34)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":118:5)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":118:9)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:13)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:12)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":120:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":131:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:8)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":121:27)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":122:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":125:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":127:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":124:19)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":124:9)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":130:16)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":130:9)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":147:5)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:8)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":132:26)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":133:5)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":134:9)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":146:9)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:13)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":145:13)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:17)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":138:24)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":139:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":141:13)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":143:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:37)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:30)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":140:17)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":144:27)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":144:17)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":151:1)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":178:1)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":165:13)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":165:34)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":153:5)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":153:9)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:13)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:12)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":155:5)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:5)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":161:5)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:8)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":156:26)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":157:5)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":160:16)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":160:9)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:5)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":177:5)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:8)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":162:26)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":163:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":164:9)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":176:9)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:13)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":175:13)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:17)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":168:24)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":169:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":171:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":173:13)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:37)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:30)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":170:17)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":174:27)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_negative_11.c":174:17)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc5, #loc6])
#loc216 = loc(fused[#loc8, #loc9])
#loc217 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc12, #loc13])
#loc219 = loc(fused[#loc16, #loc14])
#loc220 = loc(fused[#loc17, #loc18])
#loc221 = loc(fused[#loc19, #loc20])
#loc222 = loc(fused[#loc21, #loc18])
#loc223 = loc(fused[#loc24, #loc22])
#loc224 = loc(fused[#loc25, #loc26])
#loc225 = loc(fused[#loc27, #loc28])
#loc226 = loc(fused[#loc29, #loc26])
#loc227 = loc(fused[#loc30, #loc31])
#loc228 = loc(fused[#loc32, #loc33])
#loc229 = loc(fused[#loc34, #loc35])
#loc230 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc231 = loc(fused[#loc43, #loc44])
#loc232 = loc(fused[#loc45, #loc46])
#loc233 = loc(fused[#loc47, #loc48])
#loc234 = loc(fused[#loc49, #loc50])
#loc235 = loc(fused[#loc51, #loc52])
#loc236 = loc(fused[#loc53, #loc54])
#loc237 = loc(fused[#loc57, #loc58])
#loc238 = loc(fused[#loc59, #loc60])
#loc239 = loc(fused[#loc61, #loc62])
#loc240 = loc(fused[#loc65, #loc63])
#loc241 = loc(fused[#loc66, #loc67])
#loc242 = loc(fused[#loc68, #loc69])
#loc243 = loc(fused[#loc70, #loc67])
#loc244 = loc(fused[#loc73, #loc71])
#loc245 = loc(fused[#loc74, #loc75])
#loc246 = loc(fused[#loc76, #loc77])
#loc247 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc248 = loc(fused[#loc82, #loc83])
#loc249 = loc(fused[#loc84, #loc85])
#loc250 = loc(fused[#loc86, #loc87])
#loc251 = loc(fused[#loc89, #loc91])
#loc252 = loc(fused[#loc92, #loc93, #loc94, #loc85])
#loc253 = loc(fused[#loc99, #loc100])
#loc254 = loc(fused[#loc101, #loc102])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc107, #loc105])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc112, #loc109])
#loc260 = loc(fused[#loc115, #loc113])
#loc261 = loc(fused[#loc116, #loc117])
#loc262 = loc(fused[#loc118, #loc119])
#loc263 = loc(fused[#loc120, #loc117])
#loc264 = loc(fused[#loc121, #loc122])
#loc265 = loc(fused[#loc123, #loc124])
#loc266 = loc(fused[#loc125, #loc126])
#loc267 = loc(fused[#loc128, #loc130])
#loc268 = loc(fused[#loc131, #loc132, #loc133, #loc124])
#loc269 = loc(fused[#loc139, #loc140])
#loc270 = loc(fused[#loc141, #loc142])
#loc271 = loc(fused[#loc143, #loc144])
#loc272 = loc(fused[#loc147, #loc145])
#loc273 = loc(fused[#loc148, #loc149])
#loc274 = loc(fused[#loc150, #loc151])
#loc275 = loc(fused[#loc152, #loc153, #loc154, #loc149])
#loc276 = loc(fused[#loc158, #loc157])
#loc277 = loc(fused[#loc159, #loc160])
#loc278 = loc(fused[#loc161, #loc162])
#loc279 = loc(fused[#loc163, #loc160])
#loc280 = loc(fused[#loc164, #loc165])
#loc281 = loc(fused[#loc166, #loc167])
#loc282 = loc(fused[#loc168, #loc169])
#loc283 = loc(fused[#loc170, #loc171, #loc172, #loc167])
#loc284 = loc(fused[#loc178, #loc179])
#loc285 = loc(fused[#loc180, #loc181])
#loc286 = loc(fused[#loc182, #loc183])
#loc287 = loc(fused[#loc186, #loc184])
#loc288 = loc(fused[#loc187, #loc188])
#loc289 = loc(fused[#loc189, #loc190])
#loc290 = loc(fused[#loc191, #loc188])
#loc291 = loc(fused[#loc193, #loc192])
#loc292 = loc(fused[#loc194, #loc195])
#loc293 = loc(fused[#loc196, #loc197])
#loc294 = loc(fused[#loc198, #loc195])
#loc295 = loc(fused[#loc199, #loc200])
#loc296 = loc(fused[#loc201, #loc202])
#loc297 = loc(fused[#loc203, #loc204])
#loc298 = loc(fused[#loc205, #loc206, #loc207, #loc202])
