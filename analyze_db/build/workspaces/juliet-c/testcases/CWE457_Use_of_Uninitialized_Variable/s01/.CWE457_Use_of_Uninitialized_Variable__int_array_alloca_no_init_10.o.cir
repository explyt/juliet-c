!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc259)
  cir.func private @printIntLine(!s32i) loc(#loc260)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc9)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc9)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc9)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc263)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc13)
      cir.if %10 {
      } loc(#loc265)
    } loc(#loc264)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc17)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc269)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc271)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc27)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc28)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc272)
              cir.condition(%15) loc(#loc29)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc33)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc31)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc34)
              } loc(#loc273)
              cir.yield loc(#loc24)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc36)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc274)
              cir.yield loc(#loc270)
            } loc(#loc270)
          } loc(#loc270)
        } loc(#loc268)
      } loc(#loc267)
    } loc(#loc266)
    cir.return loc(#loc6)
  } loc(#loc261)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc276)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc277)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc278)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc279)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc275)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc280)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc56)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc56)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc56)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc56)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc56)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc56)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc284)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc60)
      cir.if %10 {
      } loc(#loc286)
    } loc(#loc285)
    cir.scope {
      %8 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc280)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc64)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc290)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc75)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc292)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc78)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc293)
              cir.condition(%15) loc(#loc79)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc84)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc295)
              } loc(#loc294)
              cir.yield loc(#loc74)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc85)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc86)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc296)
              cir.yield loc(#loc291)
            } loc(#loc291)
          } loc(#loc291)
        } loc(#loc289)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc298)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc93)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc300)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc96)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc301)
              cir.condition(%15) loc(#loc97)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc101)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc102)
              } loc(#loc302)
              cir.yield loc(#loc92)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc104)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc303)
              cir.yield loc(#loc299)
            } loc(#loc299)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc288)
    } loc(#loc287)
    cir.return loc(#loc53)
  } loc(#loc282)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc305)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc109)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc109)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc109)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc109)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc109)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc306)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc113)
      cir.if %10 {
      } loc(#loc308)
    } loc(#loc307)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc117)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc312)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc125)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc128)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc315)
              cir.condition(%15) loc(#loc129)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc134)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc317)
              } loc(#loc316)
              cir.yield loc(#loc124)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc136)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc318)
              cir.yield loc(#loc313)
            } loc(#loc313)
          } loc(#loc313)
        } loc(#loc311)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc320)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc143)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc322)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc146)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc323)
              cir.condition(%15) loc(#loc147)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc151)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc152)
              } loc(#loc324)
              cir.yield loc(#loc142)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc154)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc325)
              cir.yield loc(#loc321)
            } loc(#loc321)
          } loc(#loc321)
        } loc(#loc319)
      } loc(#loc310)
    } loc(#loc309)
    cir.return loc(#loc106)
  } loc(#loc304)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc327)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc159)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc159)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc159)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc159)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc159)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc159)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc159)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc328)
    cir.scope {
      %8 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc280)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc163)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc167)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc167)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc168)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc332)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc175)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc334)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc178)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc335)
              cir.condition(%15) loc(#loc179)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc184)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc337)
              } loc(#loc336)
              cir.yield loc(#loc174)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc186)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.yield loc(#loc333)
            } loc(#loc333)
          } loc(#loc333)
        } loc(#loc331)
      } loc(#loc330)
    } loc(#loc329)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc189)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc342)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc197)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc344)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc200)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc345)
              cir.condition(%15) loc(#loc201)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc205)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc206)
              } loc(#loc346)
              cir.yield loc(#loc196)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc207)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc208)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc347)
              cir.yield loc(#loc343)
            } loc(#loc343)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc340)
    } loc(#loc339)
    cir.return loc(#loc156)
  } loc(#loc326)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc349)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc213)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc213)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc213)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc213)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc213)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc213)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc213)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc350)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc217)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc354)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc225)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc356)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc227)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc228)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc357)
              cir.condition(%15) loc(#loc229)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc232)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc234)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc359)
              } loc(#loc358)
              cir.yield loc(#loc224)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc236)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc360)
              cir.yield loc(#loc355)
            } loc(#loc355)
          } loc(#loc355)
        } loc(#loc353)
      } loc(#loc352)
    } loc(#loc351)
    cir.scope {
      %8 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc259)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc239)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc239)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc364)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc247)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc366)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc250)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc367)
              cir.condition(%15) loc(#loc251)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc255)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc256)
              } loc(#loc368)
              cir.yield loc(#loc246)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc258)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc369)
              cir.yield loc(#loc365)
            } loc(#loc365)
          } loc(#loc365)
        } loc(#loc363)
      } loc(#loc362)
    } loc(#loc361)
    cir.return loc(#loc210)
  } loc(#loc348)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":42:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":24:11)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":25:19)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":25:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":30:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":26:8)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":27:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":31:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":41:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":31:8)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":32:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":34:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":40:9)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":35:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":35:17)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":39:13)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:19)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:17)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:22)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:24)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:23)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":37:13)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":38:30)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":38:35)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":38:36)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":38:17)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:29)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":36:28)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":176:1)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":182:1)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":178:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":178:14)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":179:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":179:14)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":180:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":180:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":181:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":181:14)
#loc47 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc48 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":61:19)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":49:1)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":81:1)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":51:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":51:11)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":52:19)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":52:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":53:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":57:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":53:8)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":54:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":58:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":80:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":58:8)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":59:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":62:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":64:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":61:9)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":66:9)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":72:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":67:13)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":67:17)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:13)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":71:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:19)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:17)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:22)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:24)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:23)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":69:13)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":70:27)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":70:17)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":70:22)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":70:23)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:29)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":68:28)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":73:9)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":79:9)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":74:13)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":74:17)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:13)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":78:13)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:19)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:22)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:24)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:23)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":76:13)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":77:30)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":77:35)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":77:36)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":77:17)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:29)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":75:28)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":84:1)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":111:1)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":86:5)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":86:11)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":87:19)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":87:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":88:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":92:5)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":88:8)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":89:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":93:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":110:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":93:8)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":94:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":96:9)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":102:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":97:13)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":97:17)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:13)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":101:13)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:19)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:17)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:22)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:24)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:23)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":99:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":100:27)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":100:17)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":100:22)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":100:23)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:29)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":98:28)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":103:9)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":109:9)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":104:13)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":104:17)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:13)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":108:13)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:19)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:17)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:22)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:24)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:23)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":106:13)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":107:30)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":107:35)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":107:36)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":107:17)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:29)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":105:28)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":114:1)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":145:1)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":116:5)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":116:11)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":117:19)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":117:5)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":118:5)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":133:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":118:8)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":119:5)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":122:5)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":124:5)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":121:19)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":121:9)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":126:9)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":132:9)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":127:13)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":127:17)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:13)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":131:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:19)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:17)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:22)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:24)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:23)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":129:13)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":130:27)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":130:17)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":130:22)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":130:23)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:29)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":128:28)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":134:5)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":144:5)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":134:8)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":135:5)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":137:9)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":143:9)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":138:13)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":138:17)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:13)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":142:13)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:19)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:17)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:22)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:24)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:23)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":140:13)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":141:30)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":141:35)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":141:36)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":141:17)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:29)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":139:28)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":148:1)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":174:1)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":150:5)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":150:11)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":151:19)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":151:5)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":152:5)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":162:5)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":152:8)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":153:5)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":155:9)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":161:9)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":156:13)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":156:17)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:13)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":160:13)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:19)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:17)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:22)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:24)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:23)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":158:13)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":159:27)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":159:17)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":159:22)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":159:23)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:29)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":157:28)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":163:5)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":173:5)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":163:8)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":164:5)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":166:9)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":172:9)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":167:13)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":167:17)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:13)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":171:13)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:19)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:17)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:22)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:24)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:23)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":169:13)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":170:30)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":170:35)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":170:36)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":170:17)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:29)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_10.c":168:28)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc7, #loc8])
#loc263 = loc(fused[#loc10, #loc9])
#loc264 = loc(fused[#loc11, #loc12])
#loc265 = loc(fused[#loc14, #loc12])
#loc266 = loc(fused[#loc15, #loc16])
#loc267 = loc(fused[#loc18, #loc16])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc21, #loc22])
#loc270 = loc(fused[#loc23, #loc24])
#loc271 = loc(fused[#loc26, #loc25])
#loc272 = loc(fused[#loc27, #loc28])
#loc273 = loc(fused[#loc30, #loc24])
#loc274 = loc(fused[#loc36, #loc35])
#loc275 = loc(fused[#loc37, #loc38])
#loc276 = loc(fused[#loc39, #loc40])
#loc277 = loc(fused[#loc41, #loc42])
#loc278 = loc(fused[#loc43, #loc44])
#loc279 = loc(fused[#loc45, #loc46])
#loc280 = loc(fused[#loc47, #loc48])
#loc281 = loc(fused[#loc49, #loc50])
#loc282 = loc(fused[#loc52, #loc53])
#loc283 = loc(fused[#loc54, #loc55])
#loc284 = loc(fused[#loc57, #loc56])
#loc285 = loc(fused[#loc58, #loc59])
#loc286 = loc(fused[#loc61, #loc59])
#loc287 = loc(fused[#loc62, #loc63])
#loc288 = loc(fused[#loc65, #loc66, #loc67, #loc63])
#loc289 = loc(fused[#loc69, #loc70])
#loc290 = loc(fused[#loc71, #loc72])
#loc291 = loc(fused[#loc73, #loc74])
#loc292 = loc(fused[#loc76, #loc75])
#loc293 = loc(fused[#loc77, #loc78])
#loc294 = loc(fused[#loc80, #loc74])
#loc295 = loc(fused[#loc82, #loc81])
#loc296 = loc(fused[#loc86, #loc85])
#loc297 = loc(fused[#loc87, #loc88])
#loc298 = loc(fused[#loc89, #loc90])
#loc299 = loc(fused[#loc91, #loc92])
#loc300 = loc(fused[#loc94, #loc93])
#loc301 = loc(fused[#loc95, #loc96])
#loc302 = loc(fused[#loc98, #loc92])
#loc303 = loc(fused[#loc104, #loc103])
#loc304 = loc(fused[#loc105, #loc106])
#loc305 = loc(fused[#loc107, #loc108])
#loc306 = loc(fused[#loc110, #loc109])
#loc307 = loc(fused[#loc111, #loc112])
#loc308 = loc(fused[#loc114, #loc112])
#loc309 = loc(fused[#loc115, #loc116])
#loc310 = loc(fused[#loc118, #loc116])
#loc311 = loc(fused[#loc119, #loc120])
#loc312 = loc(fused[#loc121, #loc122])
#loc313 = loc(fused[#loc123, #loc124])
#loc314 = loc(fused[#loc126, #loc125])
#loc315 = loc(fused[#loc127, #loc128])
#loc316 = loc(fused[#loc130, #loc124])
#loc317 = loc(fused[#loc132, #loc131])
#loc318 = loc(fused[#loc136, #loc135])
#loc319 = loc(fused[#loc137, #loc138])
#loc320 = loc(fused[#loc139, #loc140])
#loc321 = loc(fused[#loc141, #loc142])
#loc322 = loc(fused[#loc144, #loc143])
#loc323 = loc(fused[#loc145, #loc146])
#loc324 = loc(fused[#loc148, #loc142])
#loc325 = loc(fused[#loc154, #loc153])
#loc326 = loc(fused[#loc155, #loc156])
#loc327 = loc(fused[#loc157, #loc158])
#loc328 = loc(fused[#loc160, #loc159])
#loc329 = loc(fused[#loc161, #loc162])
#loc330 = loc(fused[#loc164, #loc165, #loc166, #loc162])
#loc331 = loc(fused[#loc169, #loc170])
#loc332 = loc(fused[#loc171, #loc172])
#loc333 = loc(fused[#loc173, #loc174])
#loc334 = loc(fused[#loc176, #loc175])
#loc335 = loc(fused[#loc177, #loc178])
#loc336 = loc(fused[#loc180, #loc174])
#loc337 = loc(fused[#loc182, #loc181])
#loc338 = loc(fused[#loc186, #loc185])
#loc339 = loc(fused[#loc187, #loc188])
#loc340 = loc(fused[#loc190, #loc188])
#loc341 = loc(fused[#loc191, #loc192])
#loc342 = loc(fused[#loc193, #loc194])
#loc343 = loc(fused[#loc195, #loc196])
#loc344 = loc(fused[#loc198, #loc197])
#loc345 = loc(fused[#loc199, #loc200])
#loc346 = loc(fused[#loc202, #loc196])
#loc347 = loc(fused[#loc208, #loc207])
#loc348 = loc(fused[#loc209, #loc210])
#loc349 = loc(fused[#loc211, #loc212])
#loc350 = loc(fused[#loc214, #loc213])
#loc351 = loc(fused[#loc215, #loc216])
#loc352 = loc(fused[#loc218, #loc216])
#loc353 = loc(fused[#loc219, #loc220])
#loc354 = loc(fused[#loc221, #loc222])
#loc355 = loc(fused[#loc223, #loc224])
#loc356 = loc(fused[#loc226, #loc225])
#loc357 = loc(fused[#loc227, #loc228])
#loc358 = loc(fused[#loc230, #loc224])
#loc359 = loc(fused[#loc232, #loc231])
#loc360 = loc(fused[#loc236, #loc235])
#loc361 = loc(fused[#loc237, #loc238])
#loc362 = loc(fused[#loc240, #loc238])
#loc363 = loc(fused[#loc241, #loc242])
#loc364 = loc(fused[#loc243, #loc244])
#loc365 = loc(fused[#loc245, #loc246])
#loc366 = loc(fused[#loc248, #loc247])
#loc367 = loc(fused[#loc249, #loc250])
#loc368 = loc(fused[#loc252, #loc246])
#loc369 = loc(fused[#loc258, #loc257])
