!s32i = !cir.int<s, 32>
!ty__stdThread = !cir.struct<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":26:23)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":26:29)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":44:24)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":44:30)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:25)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:25)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:25)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:25)
#loc218 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:25)
#loc227 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:25)
#loc263 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:25)
#loc272 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:25)
#true = #cir.bool<true> : !cir.bool
#loc286 = loc(fused[#loc9, #loc10])
#loc302 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc282)
  cir.global "private" internal dsolocal @gBadInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc284)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc287)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb2 loc(#loc288)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %4 = cir.const #cir.int<1000000> : !s32i loc(#loc19)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc290)
    cir.brcond %5 ^bb3, ^bb7 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc291)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc283)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc22)
    %10 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc283)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc26)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb2 loc(#loc288)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc285)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc294)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc295)
  cir.func private @printIntLine(!s32i) loc(#loc296)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc297)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc298)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc299)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc300)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc43, #loc44])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc303)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc47)
    %2 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc48)
    cir.call @stdThreadLockAcquire(%3) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc49)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb2 loc(#loc304)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %6 = cir.const #cir.int<1000000> : !s32i loc(#loc55)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc306)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc56)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc307)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc308)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc60)
    %12 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc308)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc64)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb2 loc(#loc304)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc51)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc65)
    cir.call @stdThreadLockRelease(%16) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc66)
    cir.return loc(#loc42)
  } loc(#loc301)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc311)
  cir.global "private" internal dsolocal @gGoodInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc308)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc314)
    %2 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc315)
    %3 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc316)
    cir.br ^bb1 loc(#loc317)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc318)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc318)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc81)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %7 ^bb2, ^bb37 loc(#loc319)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc320)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc72)
    cir.store %8, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc313)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc74)
    cir.store %9, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc314)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %11 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc283)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb4 loc(#loc322)
  ^bb4:  // pred: ^bb3
    %12 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc92)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
    %14 = cir.call @stdThreadCreate(%12, %13, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc94)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc94)
    %16 = cir.unary(not, %15) : !cir.bool, !cir.bool loc(#loc94)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc323)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc96)
    cir.store %17, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc324)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc325)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc100)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %20 = cir.call @stdThreadCreate(%18, %19, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc102)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc102)
    %22 = cir.unary(not, %21) : !cir.bool, !cir.bool loc(#loc102)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc326)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc104)
    cir.store %23, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc327)
    cir.br ^bb10 loc(#loc99)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc328)
  ^bb12:  // pred: ^bb11
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc108)
    %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc108)
    cir.brcond %25 ^bb13, ^bb18 loc(#loc109)
  ^bb13:  // pred: ^bb12
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc110)
    %27 = cir.call @stdThreadJoin(%26) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc111)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %28 ^bb14, ^bb15 loc(#loc109)
  ^bb14:  // pred: ^bb13
    %29 = cir.const #true loc(#loc109)
    cir.br ^bb16(%29 : !cir.bool) loc(#loc109)
  ^bb15:  // pred: ^bb13
    %30 = cir.const #false loc(#loc109)
    cir.br ^bb16(%30 : !cir.bool) loc(#loc109)
  ^bb16(%31: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:25)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc109)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%31 : !cir.bool) loc(#loc109)
  ^bb18:  // pred: ^bb12
    %32 = cir.const #false loc(#loc109)
    cir.br ^bb19(%32 : !cir.bool) loc(#loc109)
  ^bb19(%33: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:25)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc109)
  ^bb20:  // pred: ^bb19
    cir.brcond %33 ^bb21, ^bb22 loc(#loc329)
  ^bb21:  // pred: ^bb20
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc113)
    %35 = cir.call @stdThreadDestroy(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc114)
    cir.br ^bb22 loc(#loc107)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc107)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc330)
  ^bb24:  // pred: ^bb23
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc117)
    %37 = cir.cast(ptr_to_bool, %36 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc117)
    cir.brcond %37 ^bb25, ^bb30 loc(#loc118)
  ^bb25:  // pred: ^bb24
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc119)
    %39 = cir.call @stdThreadJoin(%38) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc120)
    %40 = cir.cast(int_to_bool, %39 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %40 ^bb26, ^bb27 loc(#loc118)
  ^bb26:  // pred: ^bb25
    %41 = cir.const #true loc(#loc118)
    cir.br ^bb28(%41 : !cir.bool) loc(#loc118)
  ^bb27:  // pred: ^bb25
    %42 = cir.const #false loc(#loc118)
    cir.br ^bb28(%42 : !cir.bool) loc(#loc118)
  ^bb28(%43: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:25)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc118)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31(%43 : !cir.bool) loc(#loc118)
  ^bb30:  // pred: ^bb24
    %44 = cir.const #false loc(#loc118)
    cir.br ^bb31(%44 : !cir.bool) loc(#loc118)
  ^bb31(%45: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:25)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc118)
  ^bb32:  // pred: ^bb31
    cir.brcond %45 ^bb33, ^bb34 loc(#loc331)
  ^bb33:  // pred: ^bb32
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc122)
    %47 = cir.call @stdThreadDestroy(%46) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc123)
    cir.br ^bb34 loc(#loc116)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc116)
  ^bb35:  // pred: ^bb34
    %48 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc283)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc125)
    cir.br ^bb36 loc(#loc87)
  ^bb36:  // pred: ^bb35
    cir.br ^bb76 loc(#loc84)
  ^bb37:  // pred: ^bb1
    cir.br ^bb38 loc(#loc332)
  ^bb38:  // pred: ^bb37
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc76)
    cir.store %50, %2 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc315)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc78)
    cir.store %51, %3 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc316)
    cir.br ^bb39 loc(#loc333)
  ^bb39:  // pred: ^bb38
    %52 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %53 = cir.call @stdThreadLockCreate(%52) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc130)
    %54 = cir.cast(int_to_bool, %53 : !s32i), !cir.bool loc(#loc130)
    %55 = cir.unary(not, %54) : !cir.bool, !cir.bool loc(#loc130)
    cir.brcond %55 ^bb40, ^bb41 loc(#loc334)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc132)
  ^bb41:  // pred: ^bb39
    cir.br ^bb42 loc(#loc129)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc335)
  ^bb43:  // pred: ^bb42
    %56 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %58 = cir.call @stdThreadCreate(%56, %57, %2) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc137)
    %59 = cir.cast(int_to_bool, %58 : !s32i), !cir.bool loc(#loc137)
    %60 = cir.unary(not, %59) : !cir.bool, !cir.bool loc(#loc137)
    cir.brcond %60 ^bb44, ^bb45 loc(#loc336)
  ^bb44:  // pred: ^bb43
    %61 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc139)
    cir.store %61, %2 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc337)
    cir.br ^bb45 loc(#loc134)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc134)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc338)
  ^bb47:  // pred: ^bb46
    %62 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc143)
    %63 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
    %64 = cir.call @stdThreadCreate(%62, %63, %3) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc145)
    %65 = cir.cast(int_to_bool, %64 : !s32i), !cir.bool loc(#loc145)
    %66 = cir.unary(not, %65) : !cir.bool, !cir.bool loc(#loc145)
    cir.brcond %66 ^bb48, ^bb49 loc(#loc339)
  ^bb48:  // pred: ^bb47
    %67 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc147)
    cir.store %67, %3 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc340)
    cir.br ^bb49 loc(#loc142)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc142)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc341)
  ^bb51:  // pred: ^bb50
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc151)
    %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc151)
    cir.brcond %69 ^bb52, ^bb57 loc(#loc152)
  ^bb52:  // pred: ^bb51
    %70 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc153)
    %71 = cir.call @stdThreadJoin(%70) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc154)
    %72 = cir.cast(int_to_bool, %71 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %72 ^bb53, ^bb54 loc(#loc152)
  ^bb53:  // pred: ^bb52
    %73 = cir.const #true loc(#loc152)
    cir.br ^bb55(%73 : !cir.bool) loc(#loc152)
  ^bb54:  // pred: ^bb52
    %74 = cir.const #false loc(#loc152)
    cir.br ^bb55(%74 : !cir.bool) loc(#loc152)
  ^bb55(%75: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:25)):  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc152)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58(%75 : !cir.bool) loc(#loc152)
  ^bb57:  // pred: ^bb51
    %76 = cir.const #false loc(#loc152)
    cir.br ^bb58(%76 : !cir.bool) loc(#loc152)
  ^bb58(%77: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:25)):  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc152)
  ^bb59:  // pred: ^bb58
    cir.brcond %77 ^bb60, ^bb61 loc(#loc342)
  ^bb60:  // pred: ^bb59
    %78 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc156)
    %79 = cir.call @stdThreadDestroy(%78) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc157)
    cir.br ^bb61 loc(#loc150)
  ^bb61:  // 2 preds: ^bb59, ^bb60
    cir.br ^bb62 loc(#loc150)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc343)
  ^bb63:  // pred: ^bb62
    %80 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc160)
    %81 = cir.cast(ptr_to_bool, %80 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc160)
    cir.brcond %81 ^bb64, ^bb69 loc(#loc161)
  ^bb64:  // pred: ^bb63
    %82 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc162)
    %83 = cir.call @stdThreadJoin(%82) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc163)
    %84 = cir.cast(int_to_bool, %83 : !s32i), !cir.bool loc(#loc163)
    cir.brcond %84 ^bb65, ^bb66 loc(#loc161)
  ^bb65:  // pred: ^bb64
    %85 = cir.const #true loc(#loc161)
    cir.br ^bb67(%85 : !cir.bool) loc(#loc161)
  ^bb66:  // pred: ^bb64
    %86 = cir.const #false loc(#loc161)
    cir.br ^bb67(%86 : !cir.bool) loc(#loc161)
  ^bb67(%87: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:25)):  // 2 preds: ^bb65, ^bb66
    cir.br ^bb68 loc(#loc161)
  ^bb68:  // pred: ^bb67
    cir.br ^bb70(%87 : !cir.bool) loc(#loc161)
  ^bb69:  // pred: ^bb63
    %88 = cir.const #false loc(#loc161)
    cir.br ^bb70(%88 : !cir.bool) loc(#loc161)
  ^bb70(%89: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:25)):  // 2 preds: ^bb68, ^bb69
    cir.br ^bb71 loc(#loc161)
  ^bb71:  // pred: ^bb70
    cir.brcond %89 ^bb72, ^bb73 loc(#loc344)
  ^bb72:  // pred: ^bb71
    %90 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc165)
    %91 = cir.call @stdThreadDestroy(%90) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc166)
    cir.br ^bb73 loc(#loc159)
  ^bb73:  // 2 preds: ^bb71, ^bb72
    cir.br ^bb74 loc(#loc159)
  ^bb74:  // pred: ^bb73
    %92 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %93 = cir.load %92 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc167)
    cir.call @stdThreadLockDestroy(%93) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc168)
    %94 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc308)
    %95 = cir.load %94 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @printIntLine(%95) : (!s32i) -> () loc(#loc170)
    cir.br ^bb75 loc(#loc127)
  ^bb75:  // pred: ^bb74
    cir.br ^bb76 loc(#loc80)
  ^bb76:  // 2 preds: ^bb36, ^bb75
    cir.br ^bb77 loc(#loc80)
  ^bb77:  // pred: ^bb76
    cir.return loc(#loc70)
  } loc(#loc312)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    cir.return loc(#loc172)
  } loc(#loc345)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc349)
    %2 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc350)
    %3 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc351)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc353)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc353)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc187)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %7 ^bb2, ^bb41 loc(#loc354)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc355)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc178)
    cir.store %8, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc348)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc180)
    cir.store %9, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc349)
    cir.br ^bb4 loc(#loc356)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %11 = cir.call @stdThreadLockCreate(%10) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc196)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc196)
    %13 = cir.unary(not, %12) : !cir.bool, !cir.bool loc(#loc196)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc357)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc198)
  ^bb6:  // pred: ^bb4
    cir.br ^bb7 loc(#loc195)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc358)
  ^bb8:  // pred: ^bb7
    %14 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc201)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
    %16 = cir.call @stdThreadCreate(%14, %15, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc203)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc203)
    %18 = cir.unary(not, %17) : !cir.bool, !cir.bool loc(#loc203)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc359)
  ^bb9:  // pred: ^bb8
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc205)
    cir.store %19, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc360)
    cir.br ^bb10 loc(#loc200)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc200)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc361)
  ^bb12:  // pred: ^bb11
    %20 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc209)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
    %22 = cir.call @stdThreadCreate(%20, %21, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc211)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc211)
    %24 = cir.unary(not, %23) : !cir.bool, !cir.bool loc(#loc211)
    cir.brcond %24 ^bb13, ^bb14 loc(#loc362)
  ^bb13:  // pred: ^bb12
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc213)
    cir.store %25, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc363)
    cir.br ^bb14 loc(#loc208)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc208)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc364)
  ^bb16:  // pred: ^bb15
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc217)
    %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc217)
    cir.brcond %27 ^bb17, ^bb22 loc(#loc218)
  ^bb17:  // pred: ^bb16
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc219)
    %29 = cir.call @stdThreadJoin(%28) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc220)
    %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc220)
    cir.brcond %30 ^bb18, ^bb19 loc(#loc218)
  ^bb18:  // pred: ^bb17
    %31 = cir.const #true loc(#loc218)
    cir.br ^bb20(%31 : !cir.bool) loc(#loc218)
  ^bb19:  // pred: ^bb17
    %32 = cir.const #false loc(#loc218)
    cir.br ^bb20(%32 : !cir.bool) loc(#loc218)
  ^bb20(%33: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:25)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc218)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%33 : !cir.bool) loc(#loc218)
  ^bb22:  // pred: ^bb16
    %34 = cir.const #false loc(#loc218)
    cir.br ^bb23(%34 : !cir.bool) loc(#loc218)
  ^bb23(%35: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:25)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc218)
  ^bb24:  // pred: ^bb23
    cir.brcond %35 ^bb25, ^bb26 loc(#loc365)
  ^bb25:  // pred: ^bb24
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc222)
    %37 = cir.call @stdThreadDestroy(%36) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc223)
    cir.br ^bb26 loc(#loc216)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc216)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc366)
  ^bb28:  // pred: ^bb27
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc226)
    %39 = cir.cast(ptr_to_bool, %38 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc226)
    cir.brcond %39 ^bb29, ^bb34 loc(#loc227)
  ^bb29:  // pred: ^bb28
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc228)
    %41 = cir.call @stdThreadJoin(%40) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc229)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc229)
    cir.brcond %42 ^bb30, ^bb31 loc(#loc227)
  ^bb30:  // pred: ^bb29
    %43 = cir.const #true loc(#loc227)
    cir.br ^bb32(%43 : !cir.bool) loc(#loc227)
  ^bb31:  // pred: ^bb29
    %44 = cir.const #false loc(#loc227)
    cir.br ^bb32(%44 : !cir.bool) loc(#loc227)
  ^bb32(%45: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:25)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc227)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35(%45 : !cir.bool) loc(#loc227)
  ^bb34:  // pred: ^bb28
    %46 = cir.const #false loc(#loc227)
    cir.br ^bb35(%46 : !cir.bool) loc(#loc227)
  ^bb35(%47: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:25)):  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc227)
  ^bb36:  // pred: ^bb35
    cir.brcond %47 ^bb37, ^bb38 loc(#loc367)
  ^bb37:  // pred: ^bb36
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc231)
    %49 = cir.call @stdThreadDestroy(%48) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc232)
    cir.br ^bb38 loc(#loc225)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc225)
  ^bb39:  // pred: ^bb38
    %50 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %51 = cir.load %50 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc233)
    cir.call @stdThreadLockDestroy(%51) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc234)
    %52 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc308)
    %53 = cir.load %52 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc236)
    cir.br ^bb40 loc(#loc193)
  ^bb40:  // pred: ^bb39
    cir.br ^bb80 loc(#loc190)
  ^bb41:  // pred: ^bb1
    cir.br ^bb42 loc(#loc368)
  ^bb42:  // pred: ^bb41
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc182)
    cir.store %54, %2 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc350)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc184)
    cir.store %55, %3 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc351)
    cir.br ^bb43 loc(#loc369)
  ^bb43:  // pred: ^bb42
    %56 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %57 = cir.call @stdThreadLockCreate(%56) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc241)
    %58 = cir.cast(int_to_bool, %57 : !s32i), !cir.bool loc(#loc241)
    %59 = cir.unary(not, %58) : !cir.bool, !cir.bool loc(#loc241)
    cir.brcond %59 ^bb44, ^bb45 loc(#loc370)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc243)
  ^bb45:  // pred: ^bb43
    cir.br ^bb46 loc(#loc240)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc371)
  ^bb47:  // pred: ^bb46
    %60 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc246)
    %61 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc247)
    %62 = cir.call @stdThreadCreate(%60, %61, %2) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc248)
    %63 = cir.cast(int_to_bool, %62 : !s32i), !cir.bool loc(#loc248)
    %64 = cir.unary(not, %63) : !cir.bool, !cir.bool loc(#loc248)
    cir.brcond %64 ^bb48, ^bb49 loc(#loc372)
  ^bb48:  // pred: ^bb47
    %65 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc250)
    cir.store %65, %2 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc373)
    cir.br ^bb49 loc(#loc245)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc245)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc374)
  ^bb51:  // pred: ^bb50
    %66 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc254)
    %67 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc255)
    %68 = cir.call @stdThreadCreate(%66, %67, %3) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc256)
    %69 = cir.cast(int_to_bool, %68 : !s32i), !cir.bool loc(#loc256)
    %70 = cir.unary(not, %69) : !cir.bool, !cir.bool loc(#loc256)
    cir.brcond %70 ^bb52, ^bb53 loc(#loc375)
  ^bb52:  // pred: ^bb51
    %71 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc258)
    cir.store %71, %3 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc376)
    cir.br ^bb53 loc(#loc253)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc253)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc377)
  ^bb55:  // pred: ^bb54
    %72 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc262)
    %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc262)
    cir.brcond %73 ^bb56, ^bb61 loc(#loc263)
  ^bb56:  // pred: ^bb55
    %74 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc264)
    %75 = cir.call @stdThreadJoin(%74) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc265)
    %76 = cir.cast(int_to_bool, %75 : !s32i), !cir.bool loc(#loc265)
    cir.brcond %76 ^bb57, ^bb58 loc(#loc263)
  ^bb57:  // pred: ^bb56
    %77 = cir.const #true loc(#loc263)
    cir.br ^bb59(%77 : !cir.bool) loc(#loc263)
  ^bb58:  // pred: ^bb56
    %78 = cir.const #false loc(#loc263)
    cir.br ^bb59(%78 : !cir.bool) loc(#loc263)
  ^bb59(%79: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:25)):  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc263)
  ^bb60:  // pred: ^bb59
    cir.br ^bb62(%79 : !cir.bool) loc(#loc263)
  ^bb61:  // pred: ^bb55
    %80 = cir.const #false loc(#loc263)
    cir.br ^bb62(%80 : !cir.bool) loc(#loc263)
  ^bb62(%81: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:25)):  // 2 preds: ^bb60, ^bb61
    cir.br ^bb63 loc(#loc263)
  ^bb63:  // pred: ^bb62
    cir.brcond %81 ^bb64, ^bb65 loc(#loc378)
  ^bb64:  // pred: ^bb63
    %82 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc267)
    %83 = cir.call @stdThreadDestroy(%82) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc268)
    cir.br ^bb65 loc(#loc261)
  ^bb65:  // 2 preds: ^bb63, ^bb64
    cir.br ^bb66 loc(#loc261)
  ^bb66:  // pred: ^bb65
    cir.br ^bb67 loc(#loc379)
  ^bb67:  // pred: ^bb66
    %84 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc271)
    %85 = cir.cast(ptr_to_bool, %84 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc271)
    cir.brcond %85 ^bb68, ^bb73 loc(#loc272)
  ^bb68:  // pred: ^bb67
    %86 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc273)
    %87 = cir.call @stdThreadJoin(%86) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc274)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc274)
    cir.brcond %88 ^bb69, ^bb70 loc(#loc272)
  ^bb69:  // pred: ^bb68
    %89 = cir.const #true loc(#loc272)
    cir.br ^bb71(%89 : !cir.bool) loc(#loc272)
  ^bb70:  // pred: ^bb68
    %90 = cir.const #false loc(#loc272)
    cir.br ^bb71(%90 : !cir.bool) loc(#loc272)
  ^bb71(%91: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:25)):  // 2 preds: ^bb69, ^bb70
    cir.br ^bb72 loc(#loc272)
  ^bb72:  // pred: ^bb71
    cir.br ^bb74(%91 : !cir.bool) loc(#loc272)
  ^bb73:  // pred: ^bb67
    %92 = cir.const #false loc(#loc272)
    cir.br ^bb74(%92 : !cir.bool) loc(#loc272)
  ^bb74(%93: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:25)):  // 2 preds: ^bb72, ^bb73
    cir.br ^bb75 loc(#loc272)
  ^bb75:  // pred: ^bb74
    cir.brcond %93 ^bb76, ^bb77 loc(#loc380)
  ^bb76:  // pred: ^bb75
    %94 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc276)
    %95 = cir.call @stdThreadDestroy(%94) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc277)
    cir.br ^bb77 loc(#loc270)
  ^bb77:  // 2 preds: ^bb75, ^bb76
    cir.br ^bb78 loc(#loc270)
  ^bb78:  // pred: ^bb77
    %96 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc298)
    %97 = cir.load %96 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc278)
    cir.call @stdThreadLockDestroy(%97) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc279)
    %98 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc308)
    %99 = cir.load %98 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.call @printIntLine(%99) : (!s32i) -> () loc(#loc281)
    cir.br ^bb79 loc(#loc238)
  ^bb79:  // pred: ^bb78
    cir.br ^bb80 loc(#loc186)
  ^bb80:  // 2 preds: ^bb40, ^bb79
    cir.br ^bb81 loc(#loc186)
  ^bb81:  // pred: ^bb80
    cir.return loc(#loc176)
  } loc(#loc347)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":22:1)
#loc4 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":22:22)
#loc5 = loc("../../testcasesupport/std_thread.h":14:1)
#loc6 = loc("../../testcasesupport/std_thread.h":14:74)
#loc7 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":26:1)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":42:1)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":28:5)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":28:9)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":27:1)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:5)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":41:5)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:14)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:10)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:17)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:21)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:19)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":39:5)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":40:19)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":40:29)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":40:9)
#loc25 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:31)
#loc26 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":38:30)
#loc27 = loc("../../testcasesupport/std_thread.h":15:1)
#loc28 = loc("../../testcasesupport/std_thread.h":15:35)
#loc29 = loc("../../testcasesupport/std_thread.h":16:1)
#loc30 = loc("../../testcasesupport/std_thread.h":16:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc33 = loc("../../testcasesupport/std_thread.h":18:1)
#loc34 = loc("../../testcasesupport/std_thread.h":18:44)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":24:1)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":24:34)
#loc37 = loc("../../testcasesupport/std_thread.h":19:1)
#loc38 = loc("../../testcasesupport/std_thread.h":19:45)
#loc39 = loc("../../testcasesupport/std_thread.h":20:1)
#loc40 = loc("../../testcasesupport/std_thread.h":20:45)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":44:1)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":55:1)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":46:5)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":46:9)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":45:1)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":49:26)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":49:5)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:5)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":53:5)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:14)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:10)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:17)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:21)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:19)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":51:5)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":23:1)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":23:23)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":52:20)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":52:31)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":52:9)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:31)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":50:30)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":54:26)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":54:5)
#loc67 = loc("../../testcasesupport/std_thread.h":21:1)
#loc68 = loc("../../testcasesupport/std_thread.h":21:45)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":59:1)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":115:1)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":64:13)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":64:33)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":65:13)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":65:33)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":89:13)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":89:33)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":90:13)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":90:33)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":61:5)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":114:5)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":61:8)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":61:33)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":62:5)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":85:5)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":87:5)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":63:9)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":84:9)
#loc88 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":66:23)
#loc89 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":66:13)
#loc90 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":67:13)
#loc91 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":70:13)
#loc92 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":67:34)
#loc93 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":67:45)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":67:18)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":68:13)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":69:27)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":69:17)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":71:13)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":74:13)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":71:34)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":71:45)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":71:18)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":72:13)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":73:27)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":73:17)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:13)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":78:13)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:17)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:42)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":75:28)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":76:13)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":77:34)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":77:17)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:13)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":82:13)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:17)
#loc119 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:42)
#loc120 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":79:28)
#loc121 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":80:13)
#loc122 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":81:34)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":81:17)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":83:26)
#loc125 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":83:13)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":88:9)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":113:9)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":91:13)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":94:13)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":91:18)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":92:13)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":93:17)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":95:13)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":98:13)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":95:34)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":95:46)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":95:18)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":96:13)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":97:27)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":97:17)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":99:13)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":102:13)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":99:34)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":99:46)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":99:18)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":100:13)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":101:27)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":101:17)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:13)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":106:13)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:17)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:42)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":103:28)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":104:13)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":105:34)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":105:17)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:13)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":110:13)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:17)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:42)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":107:28)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":108:13)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":109:34)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":109:17)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":111:34)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":111:13)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":112:26)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":112:13)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":184:1)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":187:1)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":186:5)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":186:11)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":122:1)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":182:1)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":127:13)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":127:33)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":128:13)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":128:33)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":156:13)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":156:33)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":157:13)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":157:33)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":124:5)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":181:5)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":124:8)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":124:33)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":125:5)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":152:5)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":154:5)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":126:9)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":151:9)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":129:13)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":132:13)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":129:18)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":130:13)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":131:17)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":133:13)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":136:13)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":133:34)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":133:46)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":133:18)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":134:13)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":135:27)
#loc206 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":135:17)
#loc207 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":137:13)
#loc208 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":140:13)
#loc209 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":137:34)
#loc210 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":137:46)
#loc211 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":137:18)
#loc212 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":138:13)
#loc213 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":139:27)
#loc214 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":139:17)
#loc215 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:13)
#loc216 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":144:13)
#loc217 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:17)
#loc219 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:42)
#loc220 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":141:28)
#loc221 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":142:13)
#loc222 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":143:34)
#loc223 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":143:17)
#loc224 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:13)
#loc225 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":148:13)
#loc226 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:17)
#loc228 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:42)
#loc229 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":145:28)
#loc230 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":146:13)
#loc231 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":147:34)
#loc232 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":147:17)
#loc233 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":149:34)
#loc234 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":149:13)
#loc235 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":150:26)
#loc236 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":150:13)
#loc237 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":155:9)
#loc238 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":180:9)
#loc239 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":158:13)
#loc240 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":161:13)
#loc241 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":158:18)
#loc242 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":159:13)
#loc243 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":160:17)
#loc244 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":162:13)
#loc245 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":165:13)
#loc246 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":162:34)
#loc247 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":162:46)
#loc248 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":162:18)
#loc249 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":163:13)
#loc250 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":164:27)
#loc251 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":164:17)
#loc252 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":166:13)
#loc253 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":169:13)
#loc254 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":166:34)
#loc255 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":166:46)
#loc256 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":166:18)
#loc257 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":167:13)
#loc258 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":168:27)
#loc259 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":168:17)
#loc260 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:13)
#loc261 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":173:13)
#loc262 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:17)
#loc264 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:42)
#loc265 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":170:28)
#loc266 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":171:13)
#loc267 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":172:34)
#loc268 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":172:17)
#loc269 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:13)
#loc270 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":177:13)
#loc271 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:17)
#loc273 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:42)
#loc274 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":174:28)
#loc275 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":175:13)
#loc276 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":176:34)
#loc277 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":176:17)
#loc278 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":178:34)
#loc279 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":178:13)
#loc280 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":179:26)
#loc281 = loc("CWE366_Race_Condition_Within_Thread__global_int_12.c":179:13)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc14, #loc15])
#loc289 = loc(fused[#loc17, #loc16])
#loc290 = loc(fused[#loc18, #loc19])
#loc291 = loc(fused[#loc21, #loc15])
#loc292 = loc(fused[#loc24, #loc23])
#loc293 = loc(fused[#loc26, #loc25])
#loc294 = loc(fused[#loc27, #loc28])
#loc295 = loc(fused[#loc29, #loc30])
#loc296 = loc(fused[#loc31, #loc32])
#loc297 = loc(fused[#loc33, #loc34])
#loc298 = loc(fused[#loc35, #loc36])
#loc299 = loc(fused[#loc37, #loc38])
#loc300 = loc(fused[#loc39, #loc40])
#loc301 = loc(fused[#loc41, #loc42])
#loc303 = loc(fused[#loc45, #loc46])
#loc304 = loc(fused[#loc50, #loc51])
#loc305 = loc(fused[#loc53, #loc52])
#loc306 = loc(fused[#loc54, #loc55])
#loc307 = loc(fused[#loc57, #loc51])
#loc308 = loc(fused[#loc58, #loc59])
#loc309 = loc(fused[#loc62, #loc61])
#loc310 = loc(fused[#loc64, #loc63])
#loc311 = loc(fused[#loc67, #loc68])
#loc312 = loc(fused[#loc69, #loc70])
#loc313 = loc(fused[#loc71, #loc72])
#loc314 = loc(fused[#loc73, #loc74])
#loc315 = loc(fused[#loc75, #loc76])
#loc316 = loc(fused[#loc77, #loc78])
#loc317 = loc(fused[#loc79, #loc80])
#loc318 = loc(fused[#loc81, #loc82])
#loc319 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc320 = loc(fused[#loc86, #loc87])
#loc321 = loc(fused[#loc89, #loc88])
#loc322 = loc(fused[#loc90, #loc91])
#loc323 = loc(fused[#loc95, #loc91])
#loc324 = loc(fused[#loc97, #loc96])
#loc325 = loc(fused[#loc98, #loc99])
#loc326 = loc(fused[#loc103, #loc99])
#loc327 = loc(fused[#loc105, #loc104])
#loc328 = loc(fused[#loc106, #loc107])
#loc329 = loc(fused[#loc112, #loc107])
#loc330 = loc(fused[#loc115, #loc116])
#loc331 = loc(fused[#loc121, #loc116])
#loc332 = loc(fused[#loc126, #loc127])
#loc333 = loc(fused[#loc128, #loc129])
#loc334 = loc(fused[#loc131, #loc129])
#loc335 = loc(fused[#loc133, #loc134])
#loc336 = loc(fused[#loc138, #loc134])
#loc337 = loc(fused[#loc140, #loc139])
#loc338 = loc(fused[#loc141, #loc142])
#loc339 = loc(fused[#loc146, #loc142])
#loc340 = loc(fused[#loc148, #loc147])
#loc341 = loc(fused[#loc149, #loc150])
#loc342 = loc(fused[#loc155, #loc150])
#loc343 = loc(fused[#loc158, #loc159])
#loc344 = loc(fused[#loc164, #loc159])
#loc345 = loc(fused[#loc171, #loc172])
#loc346 = loc(fused[#loc173, #loc174])
#loc347 = loc(fused[#loc175, #loc176])
#loc348 = loc(fused[#loc177, #loc178])
#loc349 = loc(fused[#loc179, #loc180])
#loc350 = loc(fused[#loc181, #loc182])
#loc351 = loc(fused[#loc183, #loc184])
#loc352 = loc(fused[#loc185, #loc186])
#loc353 = loc(fused[#loc187, #loc188])
#loc354 = loc(fused[#loc189, #loc190, #loc191, #loc186])
#loc355 = loc(fused[#loc192, #loc193])
#loc356 = loc(fused[#loc194, #loc195])
#loc357 = loc(fused[#loc197, #loc195])
#loc358 = loc(fused[#loc199, #loc200])
#loc359 = loc(fused[#loc204, #loc200])
#loc360 = loc(fused[#loc206, #loc205])
#loc361 = loc(fused[#loc207, #loc208])
#loc362 = loc(fused[#loc212, #loc208])
#loc363 = loc(fused[#loc214, #loc213])
#loc364 = loc(fused[#loc215, #loc216])
#loc365 = loc(fused[#loc221, #loc216])
#loc366 = loc(fused[#loc224, #loc225])
#loc367 = loc(fused[#loc230, #loc225])
#loc368 = loc(fused[#loc237, #loc238])
#loc369 = loc(fused[#loc239, #loc240])
#loc370 = loc(fused[#loc242, #loc240])
#loc371 = loc(fused[#loc244, #loc245])
#loc372 = loc(fused[#loc249, #loc245])
#loc373 = loc(fused[#loc251, #loc250])
#loc374 = loc(fused[#loc252, #loc253])
#loc375 = loc(fused[#loc257, #loc253])
#loc376 = loc(fused[#loc259, #loc258])
#loc377 = loc(fused[#loc260, #loc261])
#loc378 = loc(fused[#loc266, #loc261])
#loc379 = loc(fused[#loc269, #loc270])
#loc380 = loc(fused[#loc275, #loc270])
