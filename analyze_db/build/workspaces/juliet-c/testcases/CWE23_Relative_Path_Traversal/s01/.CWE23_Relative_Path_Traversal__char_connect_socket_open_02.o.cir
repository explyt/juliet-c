!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc259)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc260)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_023badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc261)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc262)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc265)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc266)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc267)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc268)
  cir.func private @close(!s32i) -> !s32i loc(#loc269)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc270)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc273)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc274)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc275)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc276)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc277)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc278)
    %7 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc261)
    %8 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_023badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc261)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc261)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %9, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %11 ^bb2, ^bb44 loc(#loc281)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc282)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc35)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
    %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
    cir.store %16, %4 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb4 loc(#loc283)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc283)
  ^bb5:  // pred: ^bb36
    %17 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %18 ^bb6, ^bb37 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc284)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %20 = cir.const #cir.int<1> : !u32i loc(#loc58)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc58)
    %22 = cir.const #cir.int<6> : !u32i loc(#loc59)
    %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc59)
    %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb8 loc(#loc286)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc66)
    %28 = cir.cmp(eq, %25, %27) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc288)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc68)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc64)
  ^bb11:  // pred: ^bb10
    %29 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc289)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %31 = cir.const #cir.int<16> : !u64i loc(#loc290)
    cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc76)
    %34 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc292)
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %37 = cir.call @inet_addr(%36) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc79)
    %38 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc293)
    %40 = cir.const #cir.int<27015> : !s32i loc(#loc84)
    %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc84)
    %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc85)
    %43 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc294)
    cir.br ^bb12 loc(#loc295)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %45 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc296)
    %46 = cir.const #cir.int<16> : !u64i loc(#loc297)
    %47 = cir.cast(integral, %46 : !u64i), !u32i loc(#loc297)
    %48 = cir.call @connect(%44, %45, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc96)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc97)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %51 ^bb13, ^bb14 loc(#loc299)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc99)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc90)
  ^bb15:  // pred: ^bb14
    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %53 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc103)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc300)
    %57 = cir.const #cir.int<1> : !u64i loc(#loc301)
    %58 = cir.const #cir.int<4096> : !s32i loc(#loc108)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc108)
    %60 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %61 = cir.binop(sub, %59, %60) : !u64i loc(#loc302)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc110)
    %64 = cir.binop(sub, %61, %63) : !u64i loc(#loc303)
    %65 = cir.binop(mul, %57, %64) : !u64i loc(#loc304)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %67 = cir.call @recv(%52, %56, %65, %66) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
    %68 = cir.cast(integral, %67 : !s64i), !s32i loc(#loc113)
    cir.store %68, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb16 loc(#loc306)
  ^bb16:  // pred: ^bb15
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc119)
    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %72 ^bb17, ^bb18 loc(#loc120)
  ^bb17:  // pred: ^bb16
    %73 = cir.const #true loc(#loc120)
    cir.br ^bb23(%73 : !cir.bool) loc(#loc120)
  ^bb18:  // pred: ^bb16
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %76 ^bb19, ^bb20 loc(#loc120)
  ^bb19:  // pred: ^bb18
    %77 = cir.const #true loc(#loc120)
    cir.br ^bb21(%77 : !cir.bool) loc(#loc120)
  ^bb20:  // pred: ^bb18
    %78 = cir.const #false loc(#loc120)
    cir.br ^bb21(%78 : !cir.bool) loc(#loc120)
  ^bb21(%79: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc120)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%79 : !cir.bool) loc(#loc120)
  ^bb23(%80: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc120)
  ^bb24:  // pred: ^bb23
    cir.brcond %80 ^bb25, ^bb26 loc(#loc309)
  ^bb25:  // pred: ^bb24
    cir.br ^bb37 loc(#loc124)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc117)
  ^bb27:  // pred: ^bb26
    %81 = cir.const #cir.int<0> : !s8i loc(#loc125)
    %82 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %83 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %85 = cir.cast(integral, %84 : !s32i), !u64i loc(#loc128)
    %86 = cir.const #cir.int<1> : !u64i loc(#loc310)
    %87 = cir.binop(div, %85, %86) : !u64i loc(#loc311)
    %88 = cir.binop(add, %83, %87) : !u64i loc(#loc312)
    %89 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %88 : !u64i), !cir.ptr<!s8i> loc(#loc131)
    cir.store %81, %89 : !s8i, !cir.ptr<!s8i> loc(#loc313)
    %90 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %91 = cir.const #cir.int<13> : !s8i loc(#loc133)
    %92 = cir.cast(integral, %91 : !s8i), !s32i loc(#loc133)
    %93 = cir.call @strchr(%90, %92) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc134)
    cir.store %93, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    cir.br ^bb28 loc(#loc315)
  ^bb28:  // pred: ^bb27
    %94 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %95 = cir.cast(ptr_to_bool, %94 : !cir.ptr<!s8i>), !cir.bool loc(#loc139)
    cir.brcond %95 ^bb29, ^bb30 loc(#loc316)
  ^bb29:  // pred: ^bb28
    %96 = cir.const #cir.int<0> : !s8i loc(#loc141)
    %97 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.store %96, %97 : !s8i, !cir.ptr<!s8i> loc(#loc317)
    cir.br ^bb30 loc(#loc138)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc138)
  ^bb31:  // pred: ^bb30
    %98 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %99 = cir.const #cir.int<10> : !s8i loc(#loc145)
    %100 = cir.cast(integral, %99 : !s8i), !s32i loc(#loc145)
    %101 = cir.call @strchr(%98, %100) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc146)
    cir.store %101, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    cir.br ^bb32 loc(#loc319)
  ^bb32:  // pred: ^bb31
    %102 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %103 = cir.cast(ptr_to_bool, %102 : !cir.ptr<!s8i>), !cir.bool loc(#loc151)
    cir.brcond %103 ^bb33, ^bb34 loc(#loc320)
  ^bb33:  // pred: ^bb32
    %104 = cir.const #cir.int<0> : !s8i loc(#loc153)
    %105 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.store %104, %105 : !s8i, !cir.ptr<!s8i> loc(#loc321)
    cir.br ^bb34 loc(#loc150)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc150)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc56)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc53)
  ^bb37:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb38 loc(#loc53)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc322)
  ^bb39:  // pred: ^bb38
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc159)
    %109 = cir.cmp(ne, %106, %108) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %109 ^bb40, ^bb41 loc(#loc324)
  ^bb40:  // pred: ^bb39
    %110 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %111 = cir.call @close(%110) : (!s32i) -> !s32i loc(#loc162)
    cir.br ^bb41 loc(#loc157)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc157)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc49)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc45)
  ^bb44:  // 2 preds: ^bb1, ^bb43
    cir.br ^bb45 loc(#loc45)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc325)
  ^bb46:  // pred: ^bb45
    %112 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %113 = cir.const #cir.int<2> : !s32i loc(#loc166)
    %114 = cir.const #cir.int<64> : !s32i loc(#loc167)
    %115 = cir.binop(or, %113, %114) : !s32i loc(#loc326)
    %116 = cir.const #cir.int<256> : !s32i loc(#loc168)
    %117 = cir.const #cir.int<128> : !s32i loc(#loc169)
    %118 = cir.binop(or, %116, %117) : !s32i loc(#loc327)
    %119 = cir.call @open(%112, %115, %118) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc170)
    cir.store %119, %5 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb47 loc(#loc329)
  ^bb47:  // pred: ^bb46
    %120 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %121 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %122 = cir.unary(minus, %121) nsw : !s32i, !s32i loc(#loc177)
    %123 = cir.cmp(ne, %120, %122) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %123 ^bb48, ^bb49 loc(#loc331)
  ^bb48:  // pred: ^bb47
    %124 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %125 = cir.call @close(%124) : (!s32i) -> !s32i loc(#loc180)
    cir.br ^bb49 loc(#loc174)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc174)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc164)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc27)
  } loc(#loc271)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc183)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc333)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc186)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc336)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc260)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc260)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc260)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
    cir.br ^bb1 loc(#loc338)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc339)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc183)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    cir.br ^bb4 loc(#loc199)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc202)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc186)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc186)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
    cir.br ^bb4 loc(#loc196)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc340)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc207)
    %16 = cir.const #cir.int<64> : !s32i loc(#loc208)
    %17 = cir.binop(or, %15, %16) : !s32i loc(#loc341)
    %18 = cir.const #cir.int<256> : !s32i loc(#loc209)
    %19 = cir.const #cir.int<128> : !s32i loc(#loc210)
    %20 = cir.binop(or, %18, %19) : !s32i loc(#loc342)
    %21 = cir.call @open(%14, %17, %20) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc211)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb7 loc(#loc344)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc218)
    %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc346)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc221)
    cir.br ^bb9 loc(#loc215)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc215)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc205)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc188)
  } loc(#loc334)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc349)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc259)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc259)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc259)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc350)
    cir.br ^bb1 loc(#loc351)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc232)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc352)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc234)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc236)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc236)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
    cir.br ^bb3 loc(#loc231)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc231)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc353)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc240)
    %14 = cir.const #cir.int<64> : !s32i loc(#loc241)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc354)
    %16 = cir.const #cir.int<256> : !s32i loc(#loc242)
    %17 = cir.const #cir.int<128> : !s32i loc(#loc243)
    %18 = cir.binop(or, %16, %17) : !s32i loc(#loc355)
    %19 = cir.call @open(%12, %15, %18) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc244)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb6 loc(#loc357)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc251)
    %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc359)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc254)
    cir.br ^bb8 loc(#loc248)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc248)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc223)
  } loc(#loc347)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev() : () -> () loc(#loc257)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev() : () -> () loc(#loc258)
    cir.return loc(#loc256)
  } loc(#loc360)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":181:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":181:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":154:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":154:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":63:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":63:37)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":94:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":226:1)
#loc21 = loc("/usr/include/string.h":227:50)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/fcntl.h":209:1)
#loc25 = loc("/usr/include/fcntl.h":209:56)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":60:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":144:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":72:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":72:17)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":73:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":73:32)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":74:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":74:19)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":75:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":75:36)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":76:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":76:41)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":136:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":136:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":62:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":62:12)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":64:12)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":64:5)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":65:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":134:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":65:8)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":66:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":67:9)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":133:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":76:30)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":76:37)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":77:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":122:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":122:20)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":78:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":121:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:40)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:49)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:62)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:33)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":87:73)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":88:17)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":91:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":88:21)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":88:38)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":89:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":90:21)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:24)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:25)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:34)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:37)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:51)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":92:52)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":93:38)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":93:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":94:43)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":94:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":94:63)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":95:42)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":95:36)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":95:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":95:50)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":99:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:29)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:62)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:63)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:72)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:86)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:21)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":96:92)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":97:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":98:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:35)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:59)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:66)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:64)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:50)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:73)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:76)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:87)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:92)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:107)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:117)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:118)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:121)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:30)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":103:122)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:17)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":107:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:21)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:35)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:51)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":104:65)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":105:17)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":106:21)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:61)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:17)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:22)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:32)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:45)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:56)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":109:57)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":111:34)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":111:40)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":111:27)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":111:17)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":111:44)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":112:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":115:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":112:21)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":113:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":114:32)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":114:22)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":114:21)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":116:34)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":116:40)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":116:27)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":116:17)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":116:44)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":117:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":120:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":117:21)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":118:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":119:32)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":119:22)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":119:21)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":123:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":126:13)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":123:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":123:34)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":124:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":125:30)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":125:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":135:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":143:5)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:25)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:31)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:38)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:47)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:55)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:20)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:9)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":138:63)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":139:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":142:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":139:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":139:26)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":139:25)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":140:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":141:19)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":141:13)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":159:19)
#loc184 = loc("/usr/include/string.h":149:1)
#loc185 = loc("/usr/include/string.h":150:14)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":164:22)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":151:1)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":175:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":167:9)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":167:13)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":153:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":153:12)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":155:12)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":155:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":156:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":165:5)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":156:8)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":157:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":160:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":162:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":159:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":164:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":164:16)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":166:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":174:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:25)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:31)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:38)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:47)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:55)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:20)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":169:63)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":170:9)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":173:9)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":170:13)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":170:26)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":170:25)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":171:9)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":172:19)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":172:13)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":178:1)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":197:1)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":189:9)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":189:13)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":180:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":180:12)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":182:12)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":182:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":183:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":187:5)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":183:8)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":184:5)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":186:9)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":186:16)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":186:22)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":188:5)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":196:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:25)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:31)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:38)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:47)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:55)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:20)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":191:63)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":192:9)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":195:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":192:13)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":192:26)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":192:25)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":193:9)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":194:19)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":194:13)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":199:1)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":203:1)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":201:5)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_02.cpp":202:5)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc7, #loc8])
#loc263 = loc(fused[#loc9, #loc10])
#loc264 = loc(fused[#loc11, #loc12])
#loc265 = loc(fused[#loc14, #loc15])
#loc266 = loc(fused[#loc16, #loc17])
#loc267 = loc(fused[#loc18, #loc19])
#loc268 = loc(fused[#loc20, #loc21])
#loc269 = loc(fused[#loc22, #loc23])
#loc270 = loc(fused[#loc24, #loc25])
#loc271 = loc(fused[#loc26, #loc27])
#loc272 = loc(fused[#loc28, #loc29])
#loc273 = loc(fused[#loc30, #loc31])
#loc274 = loc(fused[#loc32, #loc33])
#loc275 = loc(fused[#loc34, #loc35])
#loc276 = loc(fused[#loc36, #loc37])
#loc277 = loc(fused[#loc38, #loc39])
#loc278 = loc(fused[#loc40, #loc41])
#loc279 = loc(fused[#loc43, #loc42])
#loc280 = loc(fused[#loc44, #loc45])
#loc281 = loc(fused[#loc47, #loc45])
#loc282 = loc(fused[#loc48, #loc49])
#loc283 = loc(fused[#loc52, #loc53])
#loc284 = loc(fused[#loc55, #loc56])
#loc285 = loc(fused[#loc61, #loc62])
#loc286 = loc(fused[#loc63, #loc64])
#loc287 = loc(fused[#loc65, #loc66])
#loc288 = loc(fused[#loc67, #loc64])
#loc289 = loc(fused[#loc69, #loc70])
#loc290 = loc(fused[#loc72, #loc73])
#loc291 = loc(fused[#loc74, #loc75])
#loc292 = loc(fused[#loc78, #loc76])
#loc293 = loc(fused[#loc82, #loc83])
#loc294 = loc(fused[#loc87, #loc88])
#loc295 = loc(fused[#loc89, #loc90])
#loc296 = loc(fused[#loc92, #loc93])
#loc297 = loc(fused[#loc94, #loc95])
#loc298 = loc(fused[#loc96, #loc97])
#loc299 = loc(fused[#loc98, #loc90])
#loc300 = loc(fused[#loc104, #loc105])
#loc301 = loc(fused[#loc106, #loc107])
#loc302 = loc(fused[#loc108, #loc109])
#loc303 = loc(fused[#loc108, #loc110])
#loc304 = loc(fused[#loc106, #loc111])
#loc305 = loc(fused[#loc114, #loc115])
#loc306 = loc(fused[#loc116, #loc117])
#loc307 = loc(fused[#loc118, #loc119])
#loc308 = loc(fused[#loc121, #loc122])
#loc309 = loc(fused[#loc123, #loc117])
#loc310 = loc(fused[#loc129, #loc130])
#loc311 = loc(fused[#loc128, #loc130])
#loc312 = loc(fused[#loc127, #loc130])
#loc313 = loc(fused[#loc126, #loc125])
#loc314 = loc(fused[#loc135, #loc136])
#loc315 = loc(fused[#loc137, #loc138])
#loc316 = loc(fused[#loc140, #loc138])
#loc317 = loc(fused[#loc143, #loc141])
#loc318 = loc(fused[#loc147, #loc148])
#loc319 = loc(fused[#loc149, #loc150])
#loc320 = loc(fused[#loc152, #loc150])
#loc321 = loc(fused[#loc155, #loc153])
#loc322 = loc(fused[#loc156, #loc157])
#loc323 = loc(fused[#loc158, #loc159])
#loc324 = loc(fused[#loc160, #loc157])
#loc325 = loc(fused[#loc163, #loc164])
#loc326 = loc(fused[#loc166, #loc167])
#loc327 = loc(fused[#loc168, #loc169])
#loc328 = loc(fused[#loc171, #loc172])
#loc329 = loc(fused[#loc173, #loc174])
#loc330 = loc(fused[#loc175, #loc176])
#loc331 = loc(fused[#loc178, #loc174])
#loc332 = loc(fused[#loc181, #loc182])
#loc333 = loc(fused[#loc184, #loc185])
#loc334 = loc(fused[#loc187, #loc188])
#loc335 = loc(fused[#loc189, #loc190])
#loc336 = loc(fused[#loc191, #loc192])
#loc337 = loc(fused[#loc194, #loc193])
#loc338 = loc(fused[#loc195, #loc196])
#loc339 = loc(fused[#loc198, #loc199, #loc200, #loc196])
#loc340 = loc(fused[#loc204, #loc205])
#loc341 = loc(fused[#loc207, #loc208])
#loc342 = loc(fused[#loc209, #loc210])
#loc343 = loc(fused[#loc212, #loc213])
#loc344 = loc(fused[#loc214, #loc215])
#loc345 = loc(fused[#loc216, #loc217])
#loc346 = loc(fused[#loc219, #loc215])
#loc347 = loc(fused[#loc222, #loc223])
#loc348 = loc(fused[#loc224, #loc225])
#loc349 = loc(fused[#loc226, #loc227])
#loc350 = loc(fused[#loc229, #loc228])
#loc351 = loc(fused[#loc230, #loc231])
#loc352 = loc(fused[#loc233, #loc231])
#loc353 = loc(fused[#loc237, #loc238])
#loc354 = loc(fused[#loc240, #loc241])
#loc355 = loc(fused[#loc242, #loc243])
#loc356 = loc(fused[#loc245, #loc246])
#loc357 = loc(fused[#loc247, #loc248])
#loc358 = loc(fused[#loc249, #loc250])
#loc359 = loc(fused[#loc252, #loc248])
#loc360 = loc(fused[#loc255, #loc256])
