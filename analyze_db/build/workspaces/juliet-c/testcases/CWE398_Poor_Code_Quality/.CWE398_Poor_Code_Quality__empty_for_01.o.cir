!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_for_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_for_01_bad() extra(#fn_attr) {
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc47)
      cir.scope {
        %3 = cir.const #cir.int<0> : !s32i loc(#loc12)
        cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc49)
        cir.for : cond {
          %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
          %5 = cir.const #cir.int<10> : !s32i loc(#loc15)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc50)
          cir.condition(%6) loc(#loc16)
        } body {
          cir.yield loc(#loc11)
        } step {
          %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
          %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc18)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc51)
          cir.yield loc(#loc48)
        } loc(#loc48)
      } loc(#loc48)
    } loc(#loc46)
    %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
    %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    cir.return loc(#loc5)
  } loc(#loc45)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_for_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc53)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Inside the for statement\00" : !cir.array<!s8i x 25>> : !cir.array<!s8i x 25> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc56)
      cir.scope {
        %3 = cir.const #cir.int<0> : !s32i loc(#loc34)
        cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc58)
        cir.for : cond {
          %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          %5 = cir.const #cir.int<10> : !s32i loc(#loc37)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc59)
          cir.condition(%6) loc(#loc38)
        } body {
          cir.scope {
            %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 25>> loc(#loc24)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 25>>), !cir.ptr<!s8i> loc(#loc24)
            cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc40)
          } loc(#loc60)
          cir.yield loc(#loc33)
        } step {
          %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc42)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc61)
          cir.yield loc(#loc57)
        } loc(#loc57)
      } loc(#loc57)
    } loc(#loc55)
    %0 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc25)
    %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.return loc(#loc27)
  } loc(#loc54)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_for_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":29:15)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":20:1)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":30:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":23:5)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":28:5)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":24:9)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":24:13)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:9)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":27:9)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:18)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:14)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:21)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:25)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:23)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:30)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":25:29)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":29:5)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":49:1)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":52:1)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":51:5)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":51:11)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":43:23)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":46:15)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":36:1)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":47:1)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":39:5)
#loc29 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":45:5)
#loc30 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":40:9)
#loc31 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":40:13)
#loc32 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:9)
#loc33 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":44:9)
#loc34 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:18)
#loc35 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:14)
#loc36 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:21)
#loc37 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:25)
#loc38 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:23)
#loc39 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":42:9)
#loc40 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":43:13)
#loc41 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:30)
#loc42 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":41:29)
#loc43 = loc("CWE398_Poor_Code_Quality__empty_for_01.c":46:5)
#loc44 = loc(fused[#loc1, #loc2])
#loc45 = loc(fused[#loc4, #loc5])
#loc46 = loc(fused[#loc6, #loc7])
#loc47 = loc(fused[#loc8, #loc9])
#loc48 = loc(fused[#loc10, #loc11])
#loc49 = loc(fused[#loc13, #loc12])
#loc50 = loc(fused[#loc14, #loc15])
#loc51 = loc(fused[#loc18, #loc17])
#loc52 = loc(fused[#loc20, #loc21])
#loc53 = loc(fused[#loc22, #loc23])
#loc54 = loc(fused[#loc26, #loc27])
#loc55 = loc(fused[#loc28, #loc29])
#loc56 = loc(fused[#loc30, #loc31])
#loc57 = loc(fused[#loc32, #loc33])
#loc58 = loc(fused[#loc35, #loc34])
#loc59 = loc(fused[#loc36, #loc37])
#loc60 = loc(fused[#loc39, #loc33])
#loc61 = loc(fused[#loc42, #loc41])
