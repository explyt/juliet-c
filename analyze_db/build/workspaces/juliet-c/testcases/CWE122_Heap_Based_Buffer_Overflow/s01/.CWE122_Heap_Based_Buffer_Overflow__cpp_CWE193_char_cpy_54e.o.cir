!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":33:16)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":33:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":49:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":49:27)
#loc40 = loc(fused[#loc11, #loc12])
#loc43 = loc(fused[#loc24, #loc25])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_5413goodG2BSink_eEPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc35)
  cir.global "private" constant cir_private @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_549badSink_eEPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc36)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc38)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_549badSink_eEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc36)
      %2 = cir.get_global @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_549badSink_eEPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc36)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc36)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc16)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc20)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.delete.array %8 : <!s8i> loc(#loc21)
    } loc(#loc41)
    cir.return loc(#loc10)
  } loc(#loc39)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_5413goodG2BSink_eEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc24, #loc25])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc35)
      %2 = cir.get_global @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_5413goodG2BSink_eEPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc35)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc35)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc29)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc31)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc29)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc33)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      cir.delete.array %8 : <!s8i> loc(#loc34)
    } loc(#loc44)
    cir.return loc(#loc23)
  } loc(#loc42)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":52:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":52:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":36:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":36:29)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":33:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":42:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":34:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":35:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":41:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":38:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":38:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":38:22)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":39:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":39:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":40:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":49:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":58:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":50:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":51:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":57:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":54:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":54:16)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":54:22)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":55:19)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":55:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_54e.cpp":56:19)
#loc35 = loc(fused[#loc1, #loc2])
#loc36 = loc(fused[#loc3, #loc4])
#loc37 = loc(fused[#loc5, #loc6])
#loc38 = loc(fused[#loc7, #loc8])
#loc39 = loc(fused[#loc9, #loc10])
#loc41 = loc(fused[#loc14, #loc15])
#loc42 = loc(fused[#loc22, #loc23])
#loc44 = loc(fused[#loc27, #loc28])
