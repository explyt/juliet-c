!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":92:10)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":92:14)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":92:20)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":92:32)
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc138)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc140)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc13)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc141)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc16)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc142)
    cir.scope {
      %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc144)
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc145)
      %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      cir.store %8, %6 : !s16i, !cir.ptr<!s16i> loc(#loc144)
      %9 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc23)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc145)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc26)
        %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc26)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc27)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc147)
        cir.if %13 {
          %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc149)
          %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc31)
          %16 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc32)
          %17 = cir.cast(integral, %16 : !s16i), !u64i loc(#loc32)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
          cir.store %19, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
          cir.scope {
            %40 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
            cir.if %43 {
              %44 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
              %45 = cir.const #cir.int<1> : !s32i loc(#loc39)
              %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc40)
              cir.call @exit(%46) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
            } loc(#loc153)
          } loc(#loc151)
          %20 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
          %22 = cir.const #cir.int<65> : !s32i loc(#loc42)
          %23 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc43)
          %24 = cir.cast(integral, %23 : !s16i), !s32i loc(#loc43)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc43)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc43)
          cir.libc.memset %27 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
          %28 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc47)
          %30 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %31 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc49)
          %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc49)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc49)
          %35 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc51)
          cir.store %29, %35 : !s8i, !cir.ptr<!s8i> loc(#loc155)
          %36 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc54)
          %38 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
          cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
        } loc(#loc148)
      } loc(#loc146)
    } loc(#loc143)
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_31_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_31_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %17 : !s32i loc(#loc165)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc167)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc92)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc168)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc94)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc94)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc169)
    cir.scope {
      %7 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc171)
      %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc172)
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc100)
      cir.store %9, %7 : !s16i, !cir.ptr<!s16i> loc(#loc171)
      %10 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc102)
      cir.store %10, %8 : !s16i, !cir.ptr<!s16i> loc(#loc172)
      cir.scope {
        %11 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc105)
        %12 = cir.cast(integral, %11 : !s16i), !s32i loc(#loc105)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc106)
        %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc174)
        cir.if %14 {
          %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc176)
          %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
          %17 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc111)
          %18 = cir.cast(integral, %17 : !s16i), !u64i loc(#loc111)
          %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
          cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
          cir.scope {
            %41 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %44 = cir.cmp(eq, %41, %43) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
            cir.if %44 {
              %45 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc117)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc119)
              cir.call @exit(%47) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
            } loc(#loc180)
          } loc(#loc178)
          %21 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
          %23 = cir.const #cir.int<65> : !s32i loc(#loc121)
          %24 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc122)
          %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc122)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc123)
          %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc122)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc122)
          cir.libc.memset %28 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
          %29 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc126)
          %31 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %32 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc128)
          %33 = cir.cast(integral, %32 : !s16i), !s32i loc(#loc128)
          %34 = cir.const #cir.int<1> : !s32i loc(#loc129)
          %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc128)
          %36 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc130)
          cir.store %30, %36 : !s8i, !cir.ptr<!s8i> loc(#loc182)
          %37 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
          %39 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
          cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
        } loc(#loc175)
      } loc(#loc173)
    } loc(#loc170)
    cir.return loc(#loc89)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":21:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":45:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":23:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":23:11)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":25:12)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":25:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":27:13)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":27:12)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":27:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":28:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":44:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":29:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":29:26)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":30:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":30:22)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":32:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":43:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":32:13)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":32:20)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":33:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":36:13)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":36:52)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":36:41)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":36:48)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:47)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:17)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:31)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:37)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:38)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:44)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":37:43)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:20)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:32)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:37)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:42)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":39:43)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":40:34)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":40:13)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":40:24)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":40:29)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":40:30)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":41:23)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":41:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":42:13)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":42:18)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":78:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":81:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":80:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":80:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":97:15)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":99:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":102:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":104:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":92:1)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":107:1)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":93:1)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":95:27)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":95:22)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":95:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":97:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":98:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":98:63)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":99:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":102:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":103:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":103:62)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":104:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":106:12)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":106:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":52:1)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":76:1)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":54:5)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":54:11)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":56:12)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":56:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":58:12)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":58:16)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":58:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":59:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":75:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":60:9)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":60:26)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":61:9)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":61:22)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":63:9)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":74:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":63:13)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":63:20)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":64:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":67:13)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":67:52)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":67:41)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":67:48)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:13)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:47)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:17)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:31)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:37)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:38)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:44)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":68:43)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:20)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:32)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:37)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:42)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:13)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":70:43)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":71:34)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":71:13)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":71:24)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":71:29)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":71:30)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":72:23)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":72:13)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":73:13)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_31.c":73:18)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc14, #loc13])
#loc142 = loc(fused[#loc17, #loc15])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc24, #loc25])
#loc147 = loc(fused[#loc26, #loc27])
#loc148 = loc(fused[#loc28, #loc25])
#loc149 = loc(fused[#loc29, #loc30])
#loc150 = loc(fused[#loc31, #loc30])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc37, #loc34])
#loc154 = loc(fused[#loc45, #loc46])
#loc155 = loc(fused[#loc48, #loc47])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc58, #loc59])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc68, #loc69])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc87, #loc86])
#loc166 = loc(fused[#loc88, #loc89])
#loc167 = loc(fused[#loc90, #loc91])
#loc168 = loc(fused[#loc93, #loc92])
#loc169 = loc(fused[#loc96, #loc95])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc103, #loc104])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc107, #loc104])
#loc176 = loc(fused[#loc108, #loc109])
#loc177 = loc(fused[#loc110, #loc109])
#loc178 = loc(fused[#loc112, #loc113])
#loc179 = loc(fused[#loc114, #loc115])
#loc180 = loc(fused[#loc116, #loc113])
#loc181 = loc(fused[#loc124, #loc125])
#loc182 = loc(fused[#loc127, #loc126])
