!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc41)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc42)
    cir.goto "sink" loc(#loc43)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc12)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc41)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc41)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %4 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc13)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %8 = cir.call @__isoc99_scanf(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc13)
    cir.return loc(#loc5)
  } loc(#loc40)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc45)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    cir.return loc(#loc16)
  } loc(#loc44)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc48)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc49)
    cir.goto "sink" loc(#loc50)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc30)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc48)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc48)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.scope {
      %4 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc33)
      %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc34)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc34)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %8 = cir.call @__isoc99_scanf(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc33)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc36)
      %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc52)
      cir.if %11 {
        %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc21)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } loc(#loc53)
    } loc(#loc51)
    cir.return loc(#loc23)
  } loc(#loc47)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":34:15)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":24:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":36:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":31:9)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":31:32)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":32:9)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":32:23)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":26:10)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":27:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":34:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":34:25)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":60:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":63:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":62:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":62:11)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":55:23)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":43:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":58:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":50:9)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":50:32)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":51:9)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":51:23)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":45:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":45:10)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":46:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":53:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":56:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":53:13)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":53:19)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":53:29)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":53:38)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":54:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_18.c":55:13)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc4, #loc5])
#loc41 = loc(fused[#loc6, #loc7])
#loc42 = loc(fused[#loc8, #loc9])
#loc43 = loc(fused[#loc10, #loc11])
#loc44 = loc(fused[#loc15, #loc16])
#loc45 = loc(fused[#loc17, #loc18])
#loc46 = loc(fused[#loc19, #loc20])
#loc47 = loc(fused[#loc22, #loc23])
#loc48 = loc(fused[#loc24, #loc25])
#loc49 = loc(fused[#loc26, #loc27])
#loc50 = loc(fused[#loc28, #loc29])
#loc51 = loc(fused[#loc31, #loc32])
#loc52 = loc(fused[#loc33, #loc36])
#loc53 = loc(fused[#loc37, #loc32])
