!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType = !cir.record<union "CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc347)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc349)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc350)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc351)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc352)
  cir.func private @close(!s32i) -> !s32i loc(#loc353)
  cir.func private @printIntLine(!s32i) loc(#loc354)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc355)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc357)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc358)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc28)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc361)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc362)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc363)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc364)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc363)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc46)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc367)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc53)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc369)
              cir.if %57 {
                cir.break loc(#loc55)
              } loc(#loc370)
            } loc(#loc368)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc371)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc372)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc373)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc63)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc374)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc375)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc71)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc71)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc376)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc378)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc379)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc379)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc84)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc380)
              cir.if %61 {
                cir.break loc(#loc86)
              } loc(#loc381)
            } loc(#loc377)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc89)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc89)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc89)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc89)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc89)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc89)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc90)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc382)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc92)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc383)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc98)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc385)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc99)
                cir.yield %59 : !cir.bool loc(#loc99)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc101)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc386)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc99)
                  cir.yield %63 : !cir.bool loc(#loc99)
                }, false {
                  %63 = cir.const #false loc(#loc99)
                  cir.yield %63 : !cir.bool loc(#loc99)
                }) : (!cir.bool) -> !cir.bool loc(#loc99)
                cir.yield %62 : !cir.bool loc(#loc99)
              }) : (!cir.bool) -> !cir.bool loc(#loc99)
              cir.if %58 {
                cir.break loc(#loc103)
              } loc(#loc387)
            } loc(#loc384)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc104)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc106)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc388)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
          } loc(#loc366)
          cir.yield loc(#loc41)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc111)
          cir.condition(%13) loc(#loc111)
        } loc(#loc365)
      } loc(#loc365)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc115)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc391)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc118)
        } loc(#loc392)
      } loc(#loc390)
    } loc(#loc360)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc120)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc395)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc126)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc395)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc397)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc398)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc398)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc398)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc136)
          %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc400)
          cir.if %14 {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %17 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc142)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc402)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc145)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc404)
              cir.for : cond {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %21 = cir.const #cir.int<10> : !s32i loc(#loc148)
                %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc405)
                cir.condition(%22) loc(#loc149)
              } body {
                cir.scope {
                  %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                  %21 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc152)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc152)
                  %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                  cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc153)
                } loc(#loc406)
                cir.yield loc(#loc144)
              } step {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc155)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc407)
                cir.yield loc(#loc403)
              } loc(#loc403)
            } loc(#loc403)
          } else {
            %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc156)
          } loc(#loc401)
        } loc(#loc399)
      } loc(#loc396)
    } loc(#loc394)
    cir.return loc(#loc22)
  } loc(#loc356)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc409)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc410)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    cir.return loc(#loc158)
  } loc(#loc408)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc412)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc413)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc170)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc120)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc418)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc126)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc418)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc420)
        %11 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc421)
        %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc421)
        cir.store %12, %11 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc421)
        cir.scope {
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc188)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc189)
          %15 = cir.cmp(ge, %13, %14) : !s32i, !cir.bool loc(#loc423)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc193)
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc194)
            %18 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc195)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc425)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc198)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc427)
              cir.for : cond {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc201)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc428)
                cir.condition(%23) loc(#loc202)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                  %22 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc205)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc205)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc206)
                } loc(#loc429)
                cir.yield loc(#loc197)
              } step {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc208)
                cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc430)
                cir.yield loc(#loc426)
              } loc(#loc426)
            } loc(#loc426)
          } else {
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc209)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc209)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc210)
          } loc(#loc424)
        } loc(#loc422)
      } loc(#loc419)
    } loc(#loc417)
    cir.return loc(#loc164)
  } loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc211)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc432)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc433)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc219)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc436)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc437)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc438)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc439)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc228)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc228)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc438)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc235)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc237)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc442)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc244)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc244)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc444)
              cir.if %57 {
                cir.break loc(#loc246)
              } loc(#loc445)
            } loc(#loc443)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc446)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc249)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc447)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc448)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc254)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc254)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc449)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc256)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc256)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc257)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc450)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc260)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc260)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc261)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc451)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc453)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc454)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc454)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc271)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc272)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc272)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc455)
              cir.if %61 {
                cir.break loc(#loc274)
              } loc(#loc456)
            } loc(#loc452)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc276)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc276)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc277)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc277)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc277)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc277)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc277)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc277)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc277)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc278)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc278)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc457)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc279)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc280)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc458)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc286)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc286)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc460)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc287)
                cir.yield %59 : !cir.bool loc(#loc287)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc289)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc461)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc287)
                  cir.yield %63 : !cir.bool loc(#loc287)
                }, false {
                  %63 = cir.const #false loc(#loc287)
                  cir.yield %63 : !cir.bool loc(#loc287)
                }) : (!cir.bool) -> !cir.bool loc(#loc287)
                cir.yield %62 : !cir.bool loc(#loc287)
              }) : (!cir.bool) -> !cir.bool loc(#loc287)
              cir.if %58 {
                cir.break loc(#loc291)
              } loc(#loc462)
            } loc(#loc459)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc292)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc292)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc293)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc294)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc463)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc296)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
          } loc(#loc441)
          cir.yield loc(#loc232)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc299)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc299)
          cir.condition(%13) loc(#loc299)
        } loc(#loc440)
      } loc(#loc440)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc302)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc303)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc303)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc466)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc306)
        } loc(#loc467)
      } loc(#loc465)
    } loc(#loc435)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc120)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc470)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc126)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc470)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc472)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc473)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc473)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc473)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc321)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc322)
          %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc475)
          %15 = cir.ternary(%14, true {
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc324)
            %17 = cir.const #cir.int<10> : !s32i loc(#loc325)
            %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc476)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc323)
              cir.yield %20 : !cir.bool loc(#loc323)
            }, false {
              %20 = cir.const #false loc(#loc323)
              cir.yield %20 : !cir.bool loc(#loc323)
            }) : (!cir.bool) -> !cir.bool loc(#loc323)
            cir.yield %19 : !cir.bool loc(#loc323)
          }, false {
            %16 = cir.const #false loc(#loc323)
            cir.yield %16 : !cir.bool loc(#loc323)
          }) : (!cir.bool) -> !cir.bool loc(#loc323)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc330)
            %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc331)
            %18 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc332)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc332)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc478)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc335)
              cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc480)
              cir.for : cond {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc338)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc481)
                cir.condition(%23) loc(#loc339)
              } body {
                cir.scope {
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc341)
                  %22 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc342)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc342)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc343)
                } loc(#loc482)
                cir.yield loc(#loc334)
              } step {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc344)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc345)
                cir.store %22, %9 : !s32i, !cir.ptr<!s32i> loc(#loc483)
                cir.yield loc(#loc479)
              } loc(#loc479)
            } loc(#loc479)
          } else {
            %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc211)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc211)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc346)
          } loc(#loc477)
        } loc(#loc474)
      } loc(#loc471)
    } loc(#loc469)
    cir.return loc(#loc213)
  } loc(#loc431)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":82:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":131:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":50:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":135:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":52:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":52:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":53:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":53:76)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":55:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":55:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":55:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":56:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":111:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":61:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":61:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":62:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":62:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":63:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":63:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":64:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":64:41)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":65:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":100:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":66:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":99:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:45)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:58)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":75:69)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":76:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":79:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":76:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":76:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":77:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":78:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:30)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:47)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":80:48)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":81:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":81:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":82:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":82:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":82:59)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":83:38)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":83:32)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":83:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":83:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":87:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:25)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:58)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:59)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:68)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:82)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":84:88)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":85:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":86:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:46)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:59)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:77)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:80)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:26)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":90:81)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":94:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:44)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:47)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":91:61)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":92:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":93:17)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":96:39)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":96:25)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":96:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":98:25)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":98:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":98:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":98:36)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":100:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":101:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":104:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":101:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":101:30)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":102:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":103:26)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":103:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":112:26)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":44:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":112:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":113:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":134:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":114:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":114:28)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":45:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":115:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":133:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":116:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":116:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":117:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":117:34)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":120:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":132:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":120:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":120:25)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":121:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":128:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":130:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":122:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":122:24)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":122:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:17)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":127:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:21)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:28)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:32)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":125:17)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":126:41)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":126:34)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":126:21)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:37)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":124:36)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":131:17)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":263:1)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":267:1)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":265:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":265:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":266:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":266:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":142:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":174:1)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":144:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":144:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":145:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":145:76)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":147:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":147:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":147:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":150:12)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":150:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":151:26)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":151:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":152:5)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":173:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":153:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":153:28)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":154:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":172:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":155:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":155:17)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":156:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":156:34)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":159:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":171:13)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":159:17)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":159:25)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":160:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":167:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":169:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":161:32)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":161:24)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":161:17)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:17)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":166:17)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:25)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:21)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:28)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:32)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:30)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":164:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":165:41)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":165:34)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":165:21)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:37)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":163:36)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":170:27)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":170:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":257:27)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":177:1)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":261:1)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":179:5)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":179:9)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":180:5)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":180:76)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":182:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":182:12)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":182:5)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":183:5)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":238:5)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":188:9)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":188:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":189:9)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":189:28)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":190:9)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":190:32)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":191:9)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":191:41)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":192:9)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":227:17)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":193:9)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":226:9)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:36)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:45)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:58)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:29)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:13)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":202:69)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":203:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":206:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":203:17)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":203:34)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":204:13)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":205:17)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:20)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:21)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:30)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:33)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:47)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:13)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":207:48)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":208:34)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":208:13)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":209:49)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":209:39)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":209:13)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":209:59)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":210:38)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":210:32)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":210:13)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":210:46)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":214:13)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:25)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:58)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:59)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:68)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:82)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:17)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":211:88)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":212:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":213:17)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:31)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:46)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:59)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:77)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:80)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:26)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:13)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":217:81)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":221:13)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:17)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:31)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:44)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:47)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":218:61)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":219:13)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":220:17)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":223:39)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":223:25)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":223:13)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":225:25)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":225:20)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":225:13)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":225:36)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":227:16)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":228:9)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":231:9)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":228:13)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":228:30)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":229:9)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":230:26)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":230:13)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":239:26)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":239:5)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":240:5)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":260:5)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":241:9)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":241:28)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":242:9)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":259:9)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":243:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":243:17)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":244:13)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":244:34)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":258:13)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:17)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:25)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:27)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:30)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:38)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":246:40)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":247:13)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":254:13)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":256:13)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":248:32)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":248:24)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":248:17)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:17)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":253:17)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:25)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:21)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:28)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:32)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:30)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":251:17)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":252:41)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":252:34)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":252:21)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:37)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":250:36)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_34.c":257:17)
#loc347 = loc(fused[#loc1, #loc2])
#loc348 = loc(fused[#loc3, #loc4])
#loc349 = loc(fused[#loc6, #loc7])
#loc350 = loc(fused[#loc8, #loc9])
#loc351 = loc(fused[#loc10, #loc11])
#loc352 = loc(fused[#loc12, #loc13])
#loc353 = loc(fused[#loc14, #loc15])
#loc354 = loc(fused[#loc16, #loc17])
#loc355 = loc(fused[#loc18, #loc19])
#loc356 = loc(fused[#loc21, #loc22])
#loc357 = loc(fused[#loc23, #loc24])
#loc358 = loc(fused[#loc25, #loc26])
#loc359 = loc(fused[#loc29, #loc27])
#loc360 = loc(fused[#loc30, #loc31])
#loc361 = loc(fused[#loc32, #loc33])
#loc362 = loc(fused[#loc34, #loc35])
#loc363 = loc(fused[#loc36, #loc37])
#loc364 = loc(fused[#loc38, #loc39])
#loc365 = loc(fused[#loc40, #loc41])
#loc366 = loc(fused[#loc42, #loc43])
#loc367 = loc(fused[#loc48, #loc49])
#loc368 = loc(fused[#loc50, #loc51])
#loc369 = loc(fused[#loc52, #loc53])
#loc370 = loc(fused[#loc54, #loc51])
#loc371 = loc(fused[#loc56, #loc57])
#loc372 = loc(fused[#loc59, #loc60])
#loc373 = loc(fused[#loc61, #loc62])
#loc374 = loc(fused[#loc65, #loc63])
#loc375 = loc(fused[#loc69, #loc70])
#loc376 = loc(fused[#loc74, #loc75])
#loc377 = loc(fused[#loc76, #loc77])
#loc378 = loc(fused[#loc79, #loc80])
#loc379 = loc(fused[#loc81, #loc82])
#loc380 = loc(fused[#loc83, #loc84])
#loc381 = loc(fused[#loc85, #loc77])
#loc382 = loc(fused[#loc89, #loc90])
#loc383 = loc(fused[#loc93, #loc94])
#loc384 = loc(fused[#loc95, #loc96])
#loc385 = loc(fused[#loc97, #loc98])
#loc386 = loc(fused[#loc100, #loc101])
#loc387 = loc(fused[#loc102, #loc96])
#loc388 = loc(fused[#loc106, #loc104])
#loc389 = loc(fused[#loc109, #loc110])
#loc390 = loc(fused[#loc112, #loc113])
#loc391 = loc(fused[#loc114, #loc115])
#loc392 = loc(fused[#loc116, #loc113])
#loc393 = loc(fused[#loc121, #loc119])
#loc394 = loc(fused[#loc122, #loc123])
#loc395 = loc(fused[#loc124, #loc125])
#loc396 = loc(fused[#loc127, #loc128])
#loc397 = loc(fused[#loc129, #loc130])
#loc398 = loc(fused[#loc131, #loc132])
#loc399 = loc(fused[#loc133, #loc134])
#loc400 = loc(fused[#loc135, #loc136])
#loc401 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc402 = loc(fused[#loc142, #loc140])
#loc403 = loc(fused[#loc143, #loc144])
#loc404 = loc(fused[#loc146, #loc145])
#loc405 = loc(fused[#loc147, #loc148])
#loc406 = loc(fused[#loc150, #loc144])
#loc407 = loc(fused[#loc155, #loc154])
#loc408 = loc(fused[#loc157, #loc158])
#loc409 = loc(fused[#loc159, #loc160])
#loc410 = loc(fused[#loc161, #loc162])
#loc411 = loc(fused[#loc163, #loc164])
#loc412 = loc(fused[#loc165, #loc166])
#loc413 = loc(fused[#loc167, #loc168])
#loc414 = loc(fused[#loc171, #loc169])
#loc415 = loc(fused[#loc173, #loc172])
#loc416 = loc(fused[#loc175, #loc174])
#loc417 = loc(fused[#loc176, #loc177])
#loc418 = loc(fused[#loc178, #loc179])
#loc419 = loc(fused[#loc180, #loc181])
#loc420 = loc(fused[#loc182, #loc183])
#loc421 = loc(fused[#loc184, #loc185])
#loc422 = loc(fused[#loc186, #loc187])
#loc423 = loc(fused[#loc188, #loc189])
#loc424 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc425 = loc(fused[#loc195, #loc193])
#loc426 = loc(fused[#loc196, #loc197])
#loc427 = loc(fused[#loc199, #loc198])
#loc428 = loc(fused[#loc200, #loc201])
#loc429 = loc(fused[#loc203, #loc197])
#loc430 = loc(fused[#loc208, #loc207])
#loc431 = loc(fused[#loc212, #loc213])
#loc432 = loc(fused[#loc214, #loc215])
#loc433 = loc(fused[#loc216, #loc217])
#loc434 = loc(fused[#loc220, #loc218])
#loc435 = loc(fused[#loc221, #loc222])
#loc436 = loc(fused[#loc223, #loc224])
#loc437 = loc(fused[#loc225, #loc226])
#loc438 = loc(fused[#loc227, #loc228])
#loc439 = loc(fused[#loc229, #loc230])
#loc440 = loc(fused[#loc231, #loc232])
#loc441 = loc(fused[#loc233, #loc234])
#loc442 = loc(fused[#loc239, #loc240])
#loc443 = loc(fused[#loc241, #loc242])
#loc444 = loc(fused[#loc243, #loc244])
#loc445 = loc(fused[#loc245, #loc242])
#loc446 = loc(fused[#loc247, #loc248])
#loc447 = loc(fused[#loc250, #loc251])
#loc448 = loc(fused[#loc252, #loc253])
#loc449 = loc(fused[#loc255, #loc254])
#loc450 = loc(fused[#loc258, #loc259])
#loc451 = loc(fused[#loc262, #loc263])
#loc452 = loc(fused[#loc264, #loc265])
#loc453 = loc(fused[#loc267, #loc268])
#loc454 = loc(fused[#loc269, #loc270])
#loc455 = loc(fused[#loc271, #loc272])
#loc456 = loc(fused[#loc273, #loc265])
#loc457 = loc(fused[#loc277, #loc278])
#loc458 = loc(fused[#loc281, #loc282])
#loc459 = loc(fused[#loc283, #loc284])
#loc460 = loc(fused[#loc285, #loc286])
#loc461 = loc(fused[#loc288, #loc289])
#loc462 = loc(fused[#loc290, #loc284])
#loc463 = loc(fused[#loc294, #loc292])
#loc464 = loc(fused[#loc297, #loc298])
#loc465 = loc(fused[#loc300, #loc301])
#loc466 = loc(fused[#loc302, #loc303])
#loc467 = loc(fused[#loc304, #loc301])
#loc468 = loc(fused[#loc308, #loc307])
#loc469 = loc(fused[#loc309, #loc310])
#loc470 = loc(fused[#loc311, #loc312])
#loc471 = loc(fused[#loc313, #loc314])
#loc472 = loc(fused[#loc315, #loc316])
#loc473 = loc(fused[#loc317, #loc318])
#loc474 = loc(fused[#loc319, #loc320])
#loc475 = loc(fused[#loc321, #loc322])
#loc476 = loc(fused[#loc324, #loc326])
#loc477 = loc(fused[#loc327, #loc328, #loc329, #loc320])
#loc478 = loc(fused[#loc332, #loc330])
#loc479 = loc(fused[#loc333, #loc334])
#loc480 = loc(fused[#loc336, #loc335])
#loc481 = loc(fused[#loc337, #loc338])
#loc482 = loc(fused[#loc340, #loc334])
#loc483 = loc(fused[#loc345, #loc344])
