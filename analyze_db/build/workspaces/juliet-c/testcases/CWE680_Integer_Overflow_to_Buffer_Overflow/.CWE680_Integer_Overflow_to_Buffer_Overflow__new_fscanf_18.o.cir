!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc105)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc107)
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_183badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc15)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.goto "source" loc(#loc112)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc19)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc20)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc114)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
      %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc116)
      %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc29)
      %14 = cir.const #cir.int<4> : !u64i loc(#loc117)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc118)
      cir.store %15, %9 : !u64i, !cir.ptr<!u64i> loc(#loc119)
      %16 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc33)
      %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc34)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc120)
      cir.store %19, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc40)
        cir.store %26, %10 : !u64i, !cir.ptr<!u64i> loc(#loc123)
        cir.for : cond {
          %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc43)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc124)
          cir.condition(%30) loc(#loc124)
        } body {
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc45)
            %28 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
            %29 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc48)
            cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          } loc(#loc125)
          cir.yield loc(#loc39)
        } step {
          %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc50)
          cir.store %28, %10 : !u64i, !cir.ptr<!u64i> loc(#loc127)
          cir.yield loc(#loc122)
        } loc(#loc122)
      } loc(#loc122)
      %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc53)
      %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc54)
      %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
      cir.delete.array %24 : <!s32i> loc(#loc55)
    } loc(#loc113)
    cir.return loc(#loc11)
  } loc(#loc109)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc61)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.goto "source" loc(#loc131)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc65)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc66)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc134)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc136)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc75)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc137)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc138)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc139)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc79)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc80)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc140)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc86)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc143)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc89)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc144)
          cir.condition(%25) loc(#loc144)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc93)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc94)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          } loc(#loc145)
          cir.yield loc(#loc85)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc96)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc147)
          cir.yield loc(#loc142)
        } loc(#loc142)
      } loc(#loc142)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc99)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc100)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
      cir.delete.array %19 : <!s32i> loc(#loc101)
    } loc(#loc133)
    cir.return loc(#loc57)
  } loc(#loc128)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_184goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18L7goodG2BEv() : () -> () loc(#loc104)
    cir.return loc(#loc103)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:19)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":46:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":26:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":26:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":29:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":29:10)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":30:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":32:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":33:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":45:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":34:26)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":35:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":35:14)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:21)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:28)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:38)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":37:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:37)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":24:6)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:28)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:46)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":38:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":42:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:18)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:14)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:21)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":40:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:29)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:24)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":41:25)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":39:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:22)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:34)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":43:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":44:19)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":53:1)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":75:1)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":55:5)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":55:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:12)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":57:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":58:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":58:10)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":59:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":61:12)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":61:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":62:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":74:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:16)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":63:26)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":64:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":64:14)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:21)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:28)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:38)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":66:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:37)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":53:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:28)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:46)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":67:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":71:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:18)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:14)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:21)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:33)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":69:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:29)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:24)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":70:25)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:40)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":68:39)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:22)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:33)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:34)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":72:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":73:19)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":77:1)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":80:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_18.cpp":79:5)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc6, #loc7])
#loc108 = loc(fused[#loc8, #loc9])
#loc109 = loc(fused[#loc10, #loc11])
#loc110 = loc(fused[#loc12, #loc13])
#loc111 = loc(fused[#loc16, #loc14])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc24, #loc25])
#loc115 = loc(fused[#loc24, #loc26])
#loc116 = loc(fused[#loc27, #loc28])
#loc117 = loc(fused[#loc30, #loc31])
#loc118 = loc(fused[#loc29, #loc31])
#loc119 = loc(fused[#loc32, #loc31])
#loc120 = loc(fused[#loc35, #loc36])
#loc121 = loc(fused[#loc37, #loc36])
#loc122 = loc(fused[#loc38, #loc39])
#loc123 = loc(fused[#loc41, #loc40])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc39])
#loc126 = loc(fused[#loc46, #loc45])
#loc127 = loc(fused[#loc50, #loc49])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc58, #loc59])
#loc130 = loc(fused[#loc62, #loc60])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc67, #loc66])
#loc133 = loc(fused[#loc68, #loc69])
#loc134 = loc(fused[#loc70, #loc71])
#loc135 = loc(fused[#loc70, #loc72])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc76, #loc77])
#loc138 = loc(fused[#loc75, #loc77])
#loc139 = loc(fused[#loc78, #loc77])
#loc140 = loc(fused[#loc81, #loc82])
#loc141 = loc(fused[#loc83, #loc82])
#loc142 = loc(fused[#loc84, #loc85])
#loc143 = loc(fused[#loc87, #loc86])
#loc144 = loc(fused[#loc88, #loc89])
#loc145 = loc(fused[#loc90, #loc85])
#loc146 = loc(fused[#loc92, #loc91])
#loc147 = loc(fused[#loc96, #loc95])
#loc148 = loc(fused[#loc102, #loc103])
