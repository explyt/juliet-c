!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE401_Memory_Leak__char_malloc_17.c":107:10)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_17.c":107:14)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_17.c":107:20)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_17.c":107:32)
#loc208 = loc(fused[#loc72, #loc73])
#loc209 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc21)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc188)
        cir.condition(%7) loc(#loc25)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc28)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc28)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc190)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc191)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
          cir.scope {
            %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc39)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc40)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
            } loc(#loc196)
          } loc(#loc194)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc41)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        } loc(#loc189)
        cir.yield loc(#loc20)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc46)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
        cir.yield loc(#loc186)
      } loc(#loc186)
    } loc(#loc186)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc49)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc199)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc200)
        cir.condition(%7) loc(#loc53)
      } body {
        cir.yield loc(#loc48)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc55)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
        cir.yield loc(#loc198)
      } loc(#loc198)
    } loc(#loc198)
    cir.return loc(#loc11)
  } loc(#loc181)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE401_Memory_Leak__char_malloc_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE401_Memory_Leak__char_malloc_17_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE401_Memory_Leak__char_malloc_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE401_Memory_Leak__char_malloc_17_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc213)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc216)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc103)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc221)
        cir.condition(%7) loc(#loc107)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc110)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc110)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc223)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc224)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
          cir.scope {
            %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc228)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc122)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc229)
          } loc(#loc227)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc123)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc125)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc125)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc127)
        } loc(#loc222)
        cir.yield loc(#loc102)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc129)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
        cir.yield loc(#loc219)
      } loc(#loc219)
    } loc(#loc219)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc132)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc233)
        cir.condition(%7) loc(#loc136)
      } body {
        cir.scope {
          %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
        } loc(#loc234)
        cir.yield loc(#loc131)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc141)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc235)
        cir.yield loc(#loc231)
      } loc(#loc231)
    } loc(#loc231)
    cir.return loc(#loc93)
  } loc(#loc214)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc238)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc149)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc153)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc242)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc156)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc243)
        cir.condition(%7) loc(#loc157)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<100> : !s32i loc(#loc159)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc159)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc159)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc159)
          %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc159)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc159)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc161)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc163)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc163)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc165)
        } loc(#loc244)
        cir.yield loc(#loc152)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc167)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
        cir.yield loc(#loc241)
      } loc(#loc241)
    } loc(#loc241)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc170)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc249)
        cir.condition(%7) loc(#loc174)
      } body {
        cir.yield loc(#loc169)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc175)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc176)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc250)
        cir.yield loc(#loc247)
      } loc(#loc247)
    } loc(#loc247)
    cir.return loc(#loc143)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_malloc_17.c":35:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_malloc_17.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_malloc_17.c":43:1)
#loc12 = loc("CWE401_Memory_Leak__char_malloc_17.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_17.c":26:9)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_17.c":26:11)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_17.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_17.c":27:12)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_17.c":28:12)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_17.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:5)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_17.c":37:5)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:13)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:9)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:16)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:20)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:18)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_17.c":30:5)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:24)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:31)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:35)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:46)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:47)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_17.c":32:9)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:9)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:37)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:13)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:21)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:27)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:28)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:34)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_17.c":33:33)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_17.c":35:9)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_17.c":35:16)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_17.c":36:19)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_17.c":36:9)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:24)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_17.c":29:23)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:5)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_17.c":42:5)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:13)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:9)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:16)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:20)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:18)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:24)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_17.c":38:23)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_17.c":92:1)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_17.c":96:1)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_17.c":94:5)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_17.c":94:13)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_17.c":95:5)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_17.c":95:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_17.c":112:15)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_17.c":114:15)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_17.c":117:15)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_17.c":119:15)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_17.c":107:1)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_17.c":122:1)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_17.c":108:1)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_17.c":110:27)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_17.c":110:22)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_17.c":110:5)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_17.c":112:5)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_17.c":113:5)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_17.c":113:45)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_17.c":114:5)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_17.c":117:5)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_17.c":118:5)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_17.c":118:44)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_17.c":119:5)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_17.c":121:12)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_17.c":121:5)
#loc90 = loc("/usr/include/stdlib.h":687:1)
#loc91 = loc("/usr/include/stdlib.h":687:32)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_17.c":50:1)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_17.c":69:1)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_17.c":52:5)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_17.c":52:9)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_17.c":52:11)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_17.c":53:5)
#loc98 = loc("CWE401_Memory_Leak__char_malloc_17.c":53:12)
#loc99 = loc("CWE401_Memory_Leak__char_malloc_17.c":54:12)
#loc100 = loc("CWE401_Memory_Leak__char_malloc_17.c":54:5)
#loc101 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:5)
#loc102 = loc("CWE401_Memory_Leak__char_malloc_17.c":63:5)
#loc103 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:13)
#loc104 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:9)
#loc105 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:16)
#loc106 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:20)
#loc107 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:18)
#loc108 = loc("CWE401_Memory_Leak__char_malloc_17.c":56:5)
#loc109 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:24)
#loc110 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:31)
#loc111 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:35)
#loc112 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:46)
#loc113 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:47)
#loc114 = loc("CWE401_Memory_Leak__char_malloc_17.c":58:9)
#loc115 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:9)
#loc116 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:37)
#loc117 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:13)
#loc118 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:21)
#loc119 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:27)
#loc120 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:28)
#loc121 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:34)
#loc122 = loc("CWE401_Memory_Leak__char_malloc_17.c":59:33)
#loc123 = loc("CWE401_Memory_Leak__char_malloc_17.c":61:9)
#loc124 = loc("CWE401_Memory_Leak__char_malloc_17.c":61:16)
#loc125 = loc("CWE401_Memory_Leak__char_malloc_17.c":61:22)
#loc126 = loc("CWE401_Memory_Leak__char_malloc_17.c":62:19)
#loc127 = loc("CWE401_Memory_Leak__char_malloc_17.c":62:9)
#loc128 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:24)
#loc129 = loc("CWE401_Memory_Leak__char_malloc_17.c":55:23)
#loc130 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:5)
#loc131 = loc("CWE401_Memory_Leak__char_malloc_17.c":68:5)
#loc132 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:13)
#loc133 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:9)
#loc134 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:16)
#loc135 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:20)
#loc136 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:18)
#loc137 = loc("CWE401_Memory_Leak__char_malloc_17.c":65:5)
#loc138 = loc("CWE401_Memory_Leak__char_malloc_17.c":67:9)
#loc139 = loc("CWE401_Memory_Leak__char_malloc_17.c":67:14)
#loc140 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:24)
#loc141 = loc("CWE401_Memory_Leak__char_malloc_17.c":64:23)
#loc142 = loc("CWE401_Memory_Leak__char_malloc_17.c":72:1)
#loc143 = loc("CWE401_Memory_Leak__char_malloc_17.c":90:1)
#loc144 = loc("CWE401_Memory_Leak__char_malloc_17.c":74:5)
#loc145 = loc("CWE401_Memory_Leak__char_malloc_17.c":74:9)
#loc146 = loc("CWE401_Memory_Leak__char_malloc_17.c":74:11)
#loc147 = loc("CWE401_Memory_Leak__char_malloc_17.c":75:5)
#loc148 = loc("CWE401_Memory_Leak__char_malloc_17.c":75:12)
#loc149 = loc("CWE401_Memory_Leak__char_malloc_17.c":76:12)
#loc150 = loc("CWE401_Memory_Leak__char_malloc_17.c":76:5)
#loc151 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:5)
#loc152 = loc("CWE401_Memory_Leak__char_malloc_17.c":84:5)
#loc153 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:13)
#loc154 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:9)
#loc155 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:16)
#loc156 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:20)
#loc157 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:18)
#loc158 = loc("CWE401_Memory_Leak__char_malloc_17.c":78:5)
#loc159 = loc("CWE401_Memory_Leak__char_malloc_17.c":80:24)
#loc160 = loc("CWE401_Memory_Leak__char_malloc_17.c":80:9)
#loc161 = loc("CWE401_Memory_Leak__char_malloc_17.c":82:9)
#loc162 = loc("CWE401_Memory_Leak__char_malloc_17.c":82:16)
#loc163 = loc("CWE401_Memory_Leak__char_malloc_17.c":82:22)
#loc164 = loc("CWE401_Memory_Leak__char_malloc_17.c":83:19)
#loc165 = loc("CWE401_Memory_Leak__char_malloc_17.c":83:9)
#loc166 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:24)
#loc167 = loc("CWE401_Memory_Leak__char_malloc_17.c":77:23)
#loc168 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:5)
#loc169 = loc("CWE401_Memory_Leak__char_malloc_17.c":89:5)
#loc170 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:13)
#loc171 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:9)
#loc172 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:16)
#loc173 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:20)
#loc174 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:18)
#loc175 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:24)
#loc176 = loc("CWE401_Memory_Leak__char_malloc_17.c":85:23)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc8, #loc9])
#loc181 = loc(fused[#loc10, #loc11])
#loc182 = loc(fused[#loc12, #loc13])
#loc183 = loc(fused[#loc12, #loc14])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc18, #loc17])
#loc186 = loc(fused[#loc19, #loc20])
#loc187 = loc(fused[#loc22, #loc21])
#loc188 = loc(fused[#loc23, #loc24])
#loc189 = loc(fused[#loc26, #loc20])
#loc190 = loc(fused[#loc29, #loc30])
#loc191 = loc(fused[#loc28, #loc30])
#loc192 = loc(fused[#loc27, #loc31])
#loc193 = loc(fused[#loc32, #loc31])
#loc194 = loc(fused[#loc33, #loc34])
#loc195 = loc(fused[#loc35, #loc36])
#loc196 = loc(fused[#loc37, #loc34])
#loc197 = loc(fused[#loc46, #loc45])
#loc198 = loc(fused[#loc47, #loc48])
#loc199 = loc(fused[#loc50, #loc49])
#loc200 = loc(fused[#loc51, #loc52])
#loc201 = loc(fused[#loc55, #loc54])
#loc202 = loc(fused[#loc56, #loc57])
#loc203 = loc(fused[#loc58, #loc59])
#loc204 = loc(fused[#loc60, #loc61])
#loc205 = loc(fused[#loc62, #loc63])
#loc206 = loc(fused[#loc64, #loc65])
#loc207 = loc(fused[#loc70, #loc71])
#loc210 = loc(fused[#loc81, #loc82])
#loc211 = loc(fused[#loc85, #loc86])
#loc212 = loc(fused[#loc89, #loc88])
#loc213 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc92, #loc93])
#loc215 = loc(fused[#loc94, #loc95])
#loc216 = loc(fused[#loc94, #loc96])
#loc217 = loc(fused[#loc97, #loc98])
#loc218 = loc(fused[#loc100, #loc99])
#loc219 = loc(fused[#loc101, #loc102])
#loc220 = loc(fused[#loc104, #loc103])
#loc221 = loc(fused[#loc105, #loc106])
#loc222 = loc(fused[#loc108, #loc102])
#loc223 = loc(fused[#loc111, #loc112])
#loc224 = loc(fused[#loc110, #loc112])
#loc225 = loc(fused[#loc109, #loc113])
#loc226 = loc(fused[#loc114, #loc113])
#loc227 = loc(fused[#loc115, #loc116])
#loc228 = loc(fused[#loc117, #loc118])
#loc229 = loc(fused[#loc119, #loc116])
#loc230 = loc(fused[#loc129, #loc128])
#loc231 = loc(fused[#loc130, #loc131])
#loc232 = loc(fused[#loc133, #loc132])
#loc233 = loc(fused[#loc134, #loc135])
#loc234 = loc(fused[#loc137, #loc131])
#loc235 = loc(fused[#loc141, #loc140])
#loc236 = loc(fused[#loc142, #loc143])
#loc237 = loc(fused[#loc144, #loc145])
#loc238 = loc(fused[#loc144, #loc146])
#loc239 = loc(fused[#loc147, #loc148])
#loc240 = loc(fused[#loc150, #loc149])
#loc241 = loc(fused[#loc151, #loc152])
#loc242 = loc(fused[#loc154, #loc153])
#loc243 = loc(fused[#loc155, #loc156])
#loc244 = loc(fused[#loc158, #loc152])
#loc245 = loc(fused[#loc160, #loc159])
#loc246 = loc(fused[#loc167, #loc166])
#loc247 = loc(fused[#loc168, #loc169])
#loc248 = loc(fused[#loc171, #loc170])
#loc249 = loc(fused[#loc172, #loc173])
#loc250 = loc(fused[#loc176, #loc175])
