!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc349)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc350)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc351)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc358)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc361)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc361)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc361)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc350)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc363)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
            } loc(#loc364)
          } loc(#loc362)
        } loc(#loc360)
      } loc(#loc359)
    } loc(#loc357)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc367)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc46)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc46)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc370)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc371)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc371)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc371)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc58)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc373)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc64)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc375)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc377)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc70)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc378)
                  cir.condition(%19) loc(#loc71)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc74)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc74)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc75)
                  } loc(#loc379)
                  cir.yield loc(#loc66)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc77)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc380)
                  cir.yield loc(#loc376)
                } loc(#loc376)
              } loc(#loc376)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc78)
            } loc(#loc374)
          } loc(#loc372)
        } loc(#loc369)
      } loc(#loc368)
    } loc(#loc366)
    cir.return loc(#loc14)
  } loc(#loc354)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc382)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc383)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc83)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc384)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc385)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc80)
  } loc(#loc381)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    cir.return %2 : !s32i loc(#loc387)
  } loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc389)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc100)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc392)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc104)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc104)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc395)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc395)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc395)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc114)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc114)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc114)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc114)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc114)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc114)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc114)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc114)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc350)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc397)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc122)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc126)
            } loc(#loc398)
          } loc(#loc396)
        } loc(#loc394)
      } loc(#loc393)
    } loc(#loc391)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc401)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc129)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc129)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc404)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc405)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc405)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc405)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc144)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc407)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc147)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc408)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc145)
                cir.yield %17 : !cir.bool loc(#loc145)
              }, false {
                %17 = cir.const #false loc(#loc145)
                cir.yield %17 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.yield %16 : !cir.bool loc(#loc145)
            }, false {
              %13 = cir.const #false loc(#loc145)
              cir.yield %13 : !cir.bool loc(#loc145)
            }) : (!cir.bool) -> !cir.bool loc(#loc145)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc152)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc154)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc154)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc410)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc157)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc412)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc160)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc413)
                  cir.condition(%20) loc(#loc161)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc164)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc164)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc165)
                  } loc(#loc414)
                  cir.yield loc(#loc156)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc167)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc415)
                  cir.yield loc(#loc411)
                } loc(#loc411)
              } loc(#loc411)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc94)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc168)
            } loc(#loc409)
          } loc(#loc406)
        } loc(#loc403)
      } loc(#loc402)
    } loc(#loc400)
    cir.return loc(#loc96)
  } loc(#loc388)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc171)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    cir.return %2 : !s32i loc(#loc417)
  } loc(#loc416)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc419)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc422)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc182)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc182)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc425)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc425)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc425)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc191)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc192)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc192)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc192)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc192)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc192)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc192)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc192)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc192)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc350)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc193)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc194)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc195)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc427)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc199)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc200)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc203)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc204)
            } loc(#loc428)
          } loc(#loc426)
        } loc(#loc424)
      } loc(#loc423)
    } loc(#loc421)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc431)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc207)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc207)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc434)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc435)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc435)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc435)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc219)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc437)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc222)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc438)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc220)
                cir.yield %17 : !cir.bool loc(#loc220)
              }, false {
                %17 = cir.const #false loc(#loc220)
                cir.yield %17 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.yield %16 : !cir.bool loc(#loc220)
            }, false {
              %13 = cir.const #false loc(#loc220)
              cir.yield %13 : !cir.bool loc(#loc220)
            }) : (!cir.bool) -> !cir.bool loc(#loc220)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc227)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc229)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc229)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc440)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc232)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc442)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc235)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc443)
                  cir.condition(%20) loc(#loc236)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc239)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc239)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc240)
                  } loc(#loc444)
                  cir.yield loc(#loc231)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc242)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc445)
                  cir.yield loc(#loc441)
                } loc(#loc441)
              } loc(#loc441)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc243)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc243)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc244)
            } loc(#loc439)
          } loc(#loc436)
        } loc(#loc433)
      } loc(#loc432)
    } loc(#loc430)
    cir.return loc(#loc174)
  } loc(#loc418)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc447)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc250)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc450)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc254)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc254)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc259)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc259)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc260)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc261)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
      } loc(#loc451)
    } loc(#loc449)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc454)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc265)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc265)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc457)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc458)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc458)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc458)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc277)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc460)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc281)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc283)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc283)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc462)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc286)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc464)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc289)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc465)
                  cir.condition(%19) loc(#loc290)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc293)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc293)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc294)
                  } loc(#loc466)
                  cir.yield loc(#loc285)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc296)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc467)
                  cir.yield loc(#loc463)
                } loc(#loc463)
              } loc(#loc463)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc297)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc297)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc298)
            } loc(#loc461)
          } loc(#loc459)
        } loc(#loc456)
      } loc(#loc455)
    } loc(#loc453)
    cir.return loc(#loc246)
  } loc(#loc446)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc469)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc304)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc472)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc308)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc308)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc311)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
      } loc(#loc473)
    } loc(#loc471)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc476)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc315)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc315)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc479)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc480)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc480)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc480)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc327)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc482)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc331)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc332)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc333)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc333)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc484)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc336)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc339)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc487)
                  cir.condition(%19) loc(#loc340)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc343)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc343)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc343)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc344)
                  } loc(#loc488)
                  cir.yield loc(#loc335)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc345)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc346)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc489)
                  cir.yield loc(#loc485)
                } loc(#loc485)
              } loc(#loc485)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc347)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc347)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc348)
            } loc(#loc483)
          } loc(#loc481)
        } loc(#loc478)
      } loc(#loc477)
    } loc(#loc475)
    cir.return loc(#loc300)
  } loc(#loc468)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":54:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":76:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":37:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":80:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":39:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":39:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":41:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":41:12)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":41:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":42:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":57:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":42:8)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":42:26)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":43:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":44:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":56:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":45:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":45:49)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":55:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:23)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:36)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:53)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:17)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":47:63)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":48:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":51:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":53:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":50:29)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":50:24)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":50:17)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":50:40)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":54:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":58:5)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":79:5)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":58:8)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":58:26)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":59:5)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":60:9)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":78:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":61:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":61:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":62:13)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":62:34)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":65:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":77:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":65:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":65:24)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":66:13)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":73:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":75:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":67:32)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":67:24)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":67:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:17)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":72:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:25)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:21)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:28)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:32)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:30)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":70:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":71:41)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":71:34)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":71:21)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:37)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":69:36)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":76:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":258:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":264:1)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":260:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":260:14)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":261:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":261:14)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":262:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":262:14)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":263:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":263:14)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":25:1)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":28:1)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":27:12)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":27:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":111:19)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":130:27)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":87:1)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":134:1)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":89:5)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":89:9)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":91:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":91:12)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":91:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":92:5)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":107:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":92:8)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":92:26)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":93:5)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":94:9)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":106:9)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":95:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":95:49)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":105:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:23)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:36)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:53)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":97:63)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":98:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":101:13)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":103:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":100:29)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":100:24)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":100:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":100:40)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":104:27)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":104:17)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":108:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":133:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":108:8)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":108:27)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":109:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":112:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":114:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":111:9)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":115:9)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":132:9)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":116:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":116:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":117:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":117:34)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":131:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:25)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:27)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:30)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:38)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":119:40)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":120:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":127:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":129:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":121:32)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":121:24)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":121:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:17)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":126:17)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:25)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:21)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:28)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:32)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:30)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":124:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":125:41)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":125:34)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":125:21)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:37)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":123:36)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":130:17)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":30:1)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":33:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":32:12)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":32:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":137:1)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":179:1)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":139:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":139:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":141:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":141:12)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":141:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":142:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":157:5)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":142:8)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":142:26)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":143:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":144:9)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":156:9)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":145:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":145:49)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":155:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:23)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:36)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:53)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":147:63)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":148:13)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":151:13)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":153:13)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":150:29)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":150:24)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":150:17)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":150:40)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":154:27)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":154:17)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":158:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":178:5)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":158:8)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":158:26)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":159:5)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":160:9)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":177:9)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":161:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":161:17)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":162:13)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":162:34)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:13)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":176:13)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:17)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:25)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:27)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:30)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:38)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":164:40)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":165:13)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":172:13)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":174:13)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":166:32)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":166:24)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":166:17)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":171:17)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:25)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:21)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:28)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:32)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:30)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":169:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":170:41)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":170:34)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":170:21)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:37)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":168:36)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":175:27)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":175:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":182:1)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":220:1)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":184:5)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":184:9)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":186:13)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":186:12)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":186:5)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":187:5)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":197:5)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":187:8)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":187:27)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":188:5)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":191:5)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":193:5)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":190:19)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":190:9)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":196:16)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":196:9)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":198:5)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":219:5)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":198:8)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":198:26)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":199:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":200:9)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":218:9)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":201:13)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":201:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":202:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":202:34)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":205:13)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":217:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":205:17)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":205:24)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":206:13)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":213:13)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":215:13)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":207:32)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":207:24)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":207:17)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:17)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":212:17)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:25)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:21)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:28)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:32)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:30)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":210:17)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":211:41)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":211:34)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":211:21)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:37)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":209:36)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":216:27)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":216:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":223:1)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":256:1)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":225:5)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":225:9)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":227:13)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":227:12)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":227:5)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":228:5)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":233:5)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":228:8)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":228:26)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":229:5)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":232:16)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":232:9)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":234:5)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":255:5)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":234:8)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":234:26)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":235:5)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":236:9)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":254:9)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":237:13)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":237:17)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":238:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":238:34)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":241:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":253:13)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":241:17)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":241:24)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":242:13)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":249:13)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":251:13)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":243:32)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":243:24)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":243:17)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:17)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":248:17)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:25)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:21)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:28)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:32)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:30)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":246:17)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":247:41)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":247:34)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":247:21)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:37)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":245:36)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":252:27)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_08.c":252:17)
#loc349 = loc(fused[#loc1, #loc2])
#loc350 = loc(fused[#loc3, #loc4])
#loc351 = loc(fused[#loc5, #loc6])
#loc352 = loc(fused[#loc7, #loc8])
#loc353 = loc(fused[#loc10, #loc11])
#loc354 = loc(fused[#loc13, #loc14])
#loc355 = loc(fused[#loc15, #loc16])
#loc356 = loc(fused[#loc19, #loc17])
#loc357 = loc(fused[#loc20, #loc21])
#loc358 = loc(fused[#loc22, #loc23])
#loc359 = loc(fused[#loc24, #loc21])
#loc360 = loc(fused[#loc25, #loc26])
#loc361 = loc(fused[#loc27, #loc28])
#loc362 = loc(fused[#loc29, #loc30])
#loc363 = loc(fused[#loc34, #loc35])
#loc364 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc365 = loc(fused[#loc41, #loc42])
#loc366 = loc(fused[#loc44, #loc45])
#loc367 = loc(fused[#loc46, #loc47])
#loc368 = loc(fused[#loc48, #loc45])
#loc369 = loc(fused[#loc49, #loc50])
#loc370 = loc(fused[#loc51, #loc52])
#loc371 = loc(fused[#loc53, #loc54])
#loc372 = loc(fused[#loc55, #loc56])
#loc373 = loc(fused[#loc57, #loc58])
#loc374 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc375 = loc(fused[#loc64, #loc62])
#loc376 = loc(fused[#loc65, #loc66])
#loc377 = loc(fused[#loc68, #loc67])
#loc378 = loc(fused[#loc69, #loc70])
#loc379 = loc(fused[#loc72, #loc66])
#loc380 = loc(fused[#loc77, #loc76])
#loc381 = loc(fused[#loc79, #loc80])
#loc382 = loc(fused[#loc81, #loc82])
#loc383 = loc(fused[#loc83, #loc84])
#loc384 = loc(fused[#loc85, #loc86])
#loc385 = loc(fused[#loc87, #loc88])
#loc386 = loc(fused[#loc89, #loc90])
#loc387 = loc(fused[#loc92, #loc91])
#loc388 = loc(fused[#loc95, #loc96])
#loc389 = loc(fused[#loc97, #loc98])
#loc390 = loc(fused[#loc101, #loc99])
#loc391 = loc(fused[#loc102, #loc103])
#loc392 = loc(fused[#loc104, #loc105])
#loc393 = loc(fused[#loc106, #loc103])
#loc394 = loc(fused[#loc107, #loc108])
#loc395 = loc(fused[#loc109, #loc110])
#loc396 = loc(fused[#loc111, #loc112])
#loc397 = loc(fused[#loc116, #loc117])
#loc398 = loc(fused[#loc118, #loc119, #loc120, #loc112])
#loc399 = loc(fused[#loc123, #loc124])
#loc400 = loc(fused[#loc127, #loc128])
#loc401 = loc(fused[#loc129, #loc130])
#loc402 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc403 = loc(fused[#loc135, #loc136])
#loc404 = loc(fused[#loc137, #loc138])
#loc405 = loc(fused[#loc139, #loc140])
#loc406 = loc(fused[#loc141, #loc142])
#loc407 = loc(fused[#loc143, #loc144])
#loc408 = loc(fused[#loc146, #loc148])
#loc409 = loc(fused[#loc149, #loc150, #loc151, #loc142])
#loc410 = loc(fused[#loc154, #loc152])
#loc411 = loc(fused[#loc155, #loc156])
#loc412 = loc(fused[#loc158, #loc157])
#loc413 = loc(fused[#loc159, #loc160])
#loc414 = loc(fused[#loc162, #loc156])
#loc415 = loc(fused[#loc167, #loc166])
#loc416 = loc(fused[#loc169, #loc170])
#loc417 = loc(fused[#loc172, #loc171])
#loc418 = loc(fused[#loc173, #loc174])
#loc419 = loc(fused[#loc175, #loc176])
#loc420 = loc(fused[#loc179, #loc177])
#loc421 = loc(fused[#loc180, #loc181])
#loc422 = loc(fused[#loc182, #loc183])
#loc423 = loc(fused[#loc184, #loc181])
#loc424 = loc(fused[#loc185, #loc186])
#loc425 = loc(fused[#loc187, #loc188])
#loc426 = loc(fused[#loc189, #loc190])
#loc427 = loc(fused[#loc194, #loc195])
#loc428 = loc(fused[#loc196, #loc197, #loc198, #loc190])
#loc429 = loc(fused[#loc201, #loc202])
#loc430 = loc(fused[#loc205, #loc206])
#loc431 = loc(fused[#loc207, #loc208])
#loc432 = loc(fused[#loc209, #loc206])
#loc433 = loc(fused[#loc210, #loc211])
#loc434 = loc(fused[#loc212, #loc213])
#loc435 = loc(fused[#loc214, #loc215])
#loc436 = loc(fused[#loc216, #loc217])
#loc437 = loc(fused[#loc218, #loc219])
#loc438 = loc(fused[#loc221, #loc223])
#loc439 = loc(fused[#loc224, #loc225, #loc226, #loc217])
#loc440 = loc(fused[#loc229, #loc227])
#loc441 = loc(fused[#loc230, #loc231])
#loc442 = loc(fused[#loc233, #loc232])
#loc443 = loc(fused[#loc234, #loc235])
#loc444 = loc(fused[#loc237, #loc231])
#loc445 = loc(fused[#loc242, #loc241])
#loc446 = loc(fused[#loc245, #loc246])
#loc447 = loc(fused[#loc247, #loc248])
#loc448 = loc(fused[#loc251, #loc249])
#loc449 = loc(fused[#loc252, #loc253])
#loc450 = loc(fused[#loc254, #loc255])
#loc451 = loc(fused[#loc256, #loc257, #loc258, #loc253])
#loc452 = loc(fused[#loc262, #loc261])
#loc453 = loc(fused[#loc263, #loc264])
#loc454 = loc(fused[#loc265, #loc266])
#loc455 = loc(fused[#loc267, #loc264])
#loc456 = loc(fused[#loc268, #loc269])
#loc457 = loc(fused[#loc270, #loc271])
#loc458 = loc(fused[#loc272, #loc273])
#loc459 = loc(fused[#loc274, #loc275])
#loc460 = loc(fused[#loc276, #loc277])
#loc461 = loc(fused[#loc278, #loc279, #loc280, #loc275])
#loc462 = loc(fused[#loc283, #loc281])
#loc463 = loc(fused[#loc284, #loc285])
#loc464 = loc(fused[#loc287, #loc286])
#loc465 = loc(fused[#loc288, #loc289])
#loc466 = loc(fused[#loc291, #loc285])
#loc467 = loc(fused[#loc296, #loc295])
#loc468 = loc(fused[#loc299, #loc300])
#loc469 = loc(fused[#loc301, #loc302])
#loc470 = loc(fused[#loc305, #loc303])
#loc471 = loc(fused[#loc306, #loc307])
#loc472 = loc(fused[#loc308, #loc309])
#loc473 = loc(fused[#loc310, #loc307])
#loc474 = loc(fused[#loc312, #loc311])
#loc475 = loc(fused[#loc313, #loc314])
#loc476 = loc(fused[#loc315, #loc316])
#loc477 = loc(fused[#loc317, #loc314])
#loc478 = loc(fused[#loc318, #loc319])
#loc479 = loc(fused[#loc320, #loc321])
#loc480 = loc(fused[#loc322, #loc323])
#loc481 = loc(fused[#loc324, #loc325])
#loc482 = loc(fused[#loc326, #loc327])
#loc483 = loc(fused[#loc328, #loc329, #loc330, #loc325])
#loc484 = loc(fused[#loc333, #loc331])
#loc485 = loc(fused[#loc334, #loc335])
#loc486 = loc(fused[#loc337, #loc336])
#loc487 = loc(fused[#loc338, #loc339])
#loc488 = loc(fused[#loc341, #loc335])
#loc489 = loc(fused[#loc346, #loc345])
