!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":109:10)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":109:14)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":109:20)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":109:32)
#loc223 = loc(fused[#loc96, #loc97])
#loc224 = loc(fused[#loc98, #loc99])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc183)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc184)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc186)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc184)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc194)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc196)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc197)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc196)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc197)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc30)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc35)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc36)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc200)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc201)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb2 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc206)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc48)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc42)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %26 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc208)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb8 loc(#loc209)
  ^bb8:  // pred: ^bb7
    %29 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc184)
    cir.copy %29 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc184)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
    %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc58)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
    cir.store %32, %4 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb9 loc(#loc211)
  ^bb9:  // pred: ^bb8
    %33 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc63)
    cir.store %34, %3 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb10 loc(#loc211)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %36 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc67)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc213)
    %40 = cir.cmp(lt, %35, %39) : !u64i, !cir.bool loc(#loc214)
    cir.brcond %40 ^bb11, ^bb15 loc(#loc68)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc215)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc71)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %46 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc62)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %49 = cir.unary(inc, %48) : !u64i, !u64i loc(#loc77)
    cir.store %49, %3 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb10 loc(#loc211)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc62)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb17 loc(#loc56)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc53)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc16)
  } loc(#loc190)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc83)
  } loc(#loc218)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc220)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %17 : !s32i loc(#loc227)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc183)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc231)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc232)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc234)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc235)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc234)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc235)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc129)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc134)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc135)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc135)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc135)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc238)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc239)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.br ^bb2 loc(#loc242)
  ^bb2:  // pred: ^bb1
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc243)
    cir.brcond %23 ^bb3, ^bb4 loc(#loc244)
  ^bb3:  // pred: ^bb2
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %28 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.store %27, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.br ^bb6 loc(#loc132)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %29 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    cir.store %30, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.br ^bb8 loc(#loc247)
  ^bb8:  // pred: ^bb7
    %31 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc183)
    cir.copy %31 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc183)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc158)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc159)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc158)
    cir.store %34, %4 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.br ^bb9 loc(#loc249)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc164)
    cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.br ^bb10 loc(#loc249)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc166)
    %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc168)
    %41 = cir.binop(add, %38, %40) : !u64i loc(#loc251)
    %42 = cir.cmp(lt, %37, %41) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %42 ^bb11, ^bb15 loc(#loc169)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc253)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc171)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc172)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc172)
    %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc172)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    %48 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc175)
    cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    cir.br ^bb13 loc(#loc163)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc163)
  ^bb14:  // pred: ^bb13
    %50 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc178)
    cir.store %51, %3 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb10 loc(#loc249)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc163)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc181)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
    cir.br ^bb17 loc(#loc157)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc154)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc115)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":80:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":80:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":44:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":44:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":57:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":35:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":35:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":42:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":42:24)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":45:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":45:20)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":45:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":30:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":31:25)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":32:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":32:25)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":33:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":33:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":34:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":40:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":35:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:31)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:45)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:46)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":37:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:37)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:21)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:27)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:28)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:34)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":38:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":39:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":39:10)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":39:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":41:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":56:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":42:23)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":43:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":55:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":46:25)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":46:32)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":46:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":46:38)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":52:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:22)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:29)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:41)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":50:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:34)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:27)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:22)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":51:35)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:45)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":49:44)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":53:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":53:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":54:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":54:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":95:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":98:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":97:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":97:13)
#loc86 = loc("/usr/include/stdlib.h":575:1)
#loc87 = loc("/usr/include/stdlib.h":575:41)
#loc88 = loc("/usr/include/time.h":76:1)
#loc89 = loc("/usr/include/time.h":76:38)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":114:15)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":116:15)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":119:15)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":121:15)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":109:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":124:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":110:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":112:27)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":112:22)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":112:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":114:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":115:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":115:67)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":116:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":119:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":120:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":120:66)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":121:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":123:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":123:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":64:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":93:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":71:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":71:24)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":78:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":78:24)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":81:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":81:20)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":81:23)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":66:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":66:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":67:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":67:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":68:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":68:25)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":69:12)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":69:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":70:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":76:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":71:23)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:24)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:32)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:35)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:38)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:49)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:31)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:50)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":73:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:37)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:21)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:27)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:28)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:34)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":74:33)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":75:21)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":75:10)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":75:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":77:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":92:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":78:23)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":79:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":91:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":82:25)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":82:32)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":82:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":82:38)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":88:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:22)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:18)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:25)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:29)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:41)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:27)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":86:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:34)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:27)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:17)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:22)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:23)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":87:35)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:45)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":85:44)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":89:23)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":89:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":90:18)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_32.c":90:13)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc17, #loc18])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc21, #loc22])
#loc194 = loc(fused[#loc21, #loc23])
#loc195 = loc(fused[#loc24, #loc25])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc28, #loc29])
#loc198 = loc(fused[#loc31, #loc30])
#loc199 = loc(fused[#loc32, #loc33])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc36, #loc38])
#loc202 = loc(fused[#loc35, #loc39])
#loc203 = loc(fused[#loc40, #loc39])
#loc204 = loc(fused[#loc41, #loc42])
#loc205 = loc(fused[#loc43, #loc44])
#loc206 = loc(fused[#loc45, #loc42])
#loc207 = loc(fused[#loc51, #loc49])
#loc208 = loc(fused[#loc52, #loc53])
#loc209 = loc(fused[#loc55, #loc56])
#loc210 = loc(fused[#loc59, #loc60])
#loc211 = loc(fused[#loc61, #loc62])
#loc212 = loc(fused[#loc64, #loc63])
#loc213 = loc(fused[#loc66, #loc67])
#loc214 = loc(fused[#loc65, #loc67])
#loc215 = loc(fused[#loc69, #loc62])
#loc216 = loc(fused[#loc72, #loc75])
#loc217 = loc(fused[#loc77, #loc76])
#loc218 = loc(fused[#loc82, #loc83])
#loc219 = loc(fused[#loc84, #loc85])
#loc220 = loc(fused[#loc86, #loc87])
#loc221 = loc(fused[#loc88, #loc89])
#loc222 = loc(fused[#loc94, #loc95])
#loc225 = loc(fused[#loc105, #loc106])
#loc226 = loc(fused[#loc109, #loc110])
#loc227 = loc(fused[#loc113, #loc112])
#loc228 = loc(fused[#loc114, #loc115])
#loc229 = loc(fused[#loc116, #loc117])
#loc230 = loc(fused[#loc118, #loc119])
#loc231 = loc(fused[#loc120, #loc121])
#loc232 = loc(fused[#loc120, #loc122])
#loc233 = loc(fused[#loc123, #loc124])
#loc234 = loc(fused[#loc125, #loc126])
#loc235 = loc(fused[#loc127, #loc128])
#loc236 = loc(fused[#loc130, #loc129])
#loc237 = loc(fused[#loc131, #loc132])
#loc238 = loc(fused[#loc137, #loc138])
#loc239 = loc(fused[#loc139, #loc138])
#loc240 = loc(fused[#loc134, #loc140])
#loc241 = loc(fused[#loc141, #loc140])
#loc242 = loc(fused[#loc142, #loc143])
#loc243 = loc(fused[#loc144, #loc145])
#loc244 = loc(fused[#loc146, #loc143])
#loc245 = loc(fused[#loc152, #loc150])
#loc246 = loc(fused[#loc153, #loc154])
#loc247 = loc(fused[#loc156, #loc157])
#loc248 = loc(fused[#loc160, #loc161])
#loc249 = loc(fused[#loc162, #loc163])
#loc250 = loc(fused[#loc165, #loc164])
#loc251 = loc(fused[#loc167, #loc168])
#loc252 = loc(fused[#loc166, #loc168])
#loc253 = loc(fused[#loc170, #loc163])
#loc254 = loc(fused[#loc173, #loc176])
#loc255 = loc(fused[#loc178, #loc177])
