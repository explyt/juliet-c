!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":143:10)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":143:14)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":143:20)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":143:32)
#loc277 = loc(fused[#loc105, #loc106])
#loc278 = loc(fused[#loc107, #loc108])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc235)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc236)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc239)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc240)
  cir.func private @printIntLine(!s32i) loc(#loc241)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc242)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc247)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc250)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc250)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc250)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc37)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc37)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc37)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc37)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc37)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc236)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc45)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc253)
          } loc(#loc251)
        } loc(#loc249)
      } loc(#loc248)
    } loc(#loc246)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc256)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc257)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc55)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc56)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc258)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc259)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc260)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc261)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc64)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc263)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc67)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc68)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
        } loc(#loc264)
      } loc(#loc262)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc71)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc266)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc74)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc267)
          cir.condition(%24) loc(#loc75)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc77)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc80)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc269)
          } loc(#loc268)
          cir.yield loc(#loc70)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc82)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc270)
          cir.yield loc(#loc265)
        } loc(#loc265)
      } loc(#loc265)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc85)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc86)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc88)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    } loc(#loc255)
    cir.return loc(#loc19)
  } loc(#loc243)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc271)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc274)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc278)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc279)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_good() : () -> () loc(#loc114)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc280)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06_bad() : () -> () loc(#loc118)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    cir.return %17 : !s32i loc(#loc281)
  } loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc283)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc129)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc133)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc134)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc286)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc138)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc139)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
      } loc(#loc287)
    } loc(#loc285)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc290)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc291)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc147)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc148)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc292)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc293)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc294)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc295)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc297)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc160)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
        } loc(#loc298)
      } loc(#loc296)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc163)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc163)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc300)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc166)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc301)
          cir.condition(%24) loc(#loc167)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc169)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc170)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc172)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          } loc(#loc302)
          cir.yield loc(#loc162)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc173)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc174)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc304)
          cir.yield loc(#loc299)
        } loc(#loc299)
      } loc(#loc299)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc176)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc177)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc175)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc178)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc179)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc180)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
    } loc(#loc289)
    cir.return loc(#loc125)
  } loc(#loc282)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc186)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc190)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc191)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc309)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc193)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
      } loc(#loc310)
    } loc(#loc308)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc313)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc314)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc201)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc202)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc315)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc316)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc317)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc318)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc210)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc320)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc212)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc213)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc214)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc212)
        } loc(#loc321)
      } loc(#loc319)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc217)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc217)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc323)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc219)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc220)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc324)
          cir.condition(%24) loc(#loc221)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc223)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc226)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc326)
          } loc(#loc325)
          cir.yield loc(#loc216)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc227)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc228)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc327)
          cir.yield loc(#loc322)
        } loc(#loc322)
      } loc(#loc322)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc230)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc231)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc229)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc232)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc233)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc234)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc233)
    } loc(#loc312)
    cir.return loc(#loc182)
  } loc(#loc305)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":44:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":27:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":62:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":29:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":29:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":31:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":31:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":31:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":32:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":47:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":32:8)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":32:27)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":33:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":34:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":46:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":35:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":35:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":45:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:23)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:36)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":37:63)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":38:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":41:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":43:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":40:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":40:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":40:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":40:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":44:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":48:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":61:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":49:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":49:16)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":50:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":50:14)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:28)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:35)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:42)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:52)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:53)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":53:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:43)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:27)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:40)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":54:39)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":58:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:18)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:21)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:33)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:23)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":56:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":57:29)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":57:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":57:24)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":57:25)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:40)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":55:39)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":59:22)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":59:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":59:34)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":59:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":60:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":60:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":127:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":131:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":129:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":129:14)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":130:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":130:14)
#loc95 = loc("/usr/include/stdlib.h":575:1)
#loc96 = loc("/usr/include/stdlib.h":575:41)
#loc97 = loc("/usr/include/time.h":76:1)
#loc98 = loc("/usr/include/time.h":76:38)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":148:15)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":150:15)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":153:15)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":155:15)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":143:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":158:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":144:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":146:27)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":146:22)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":146:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":148:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":149:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":149:70)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":150:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":153:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":154:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":154:69)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":155:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":157:12)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":157:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":77:19)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":69:1)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":98:1)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":71:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":71:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":73:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":73:12)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":73:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":74:5)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":83:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":74:8)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":74:27)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":75:5)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":78:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":80:5)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":77:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":82:16)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":82:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":84:5)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":97:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":85:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":85:16)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":86:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":86:14)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:28)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:35)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:42)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:52)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:53)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":89:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:43)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:27)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:40)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":90:39)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":94:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:18)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:21)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:33)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:23)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":92:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":93:29)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":93:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":93:24)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":93:25)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:40)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":91:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":95:22)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":95:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":95:34)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":95:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":96:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":96:14)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":101:1)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":125:1)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":103:5)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":103:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":105:13)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":105:12)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":105:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":106:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":110:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":106:8)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":106:27)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":107:5)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":109:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":109:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":111:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":124:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":112:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":112:16)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":113:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":113:14)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:28)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:35)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:42)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:52)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:53)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":116:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:43)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:13)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:27)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:33)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:34)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:40)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":117:39)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":121:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:18)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:14)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:21)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:33)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:23)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":119:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":120:29)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":120:13)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":120:24)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":120:25)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:40)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":118:39)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":122:22)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":122:33)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":122:34)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":122:9)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":123:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_06.c":123:14)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc10, #loc11])
#loc240 = loc(fused[#loc12, #loc13])
#loc241 = loc(fused[#loc14, #loc15])
#loc242 = loc(fused[#loc16, #loc17])
#loc243 = loc(fused[#loc18, #loc19])
#loc244 = loc(fused[#loc20, #loc21])
#loc245 = loc(fused[#loc24, #loc22])
#loc246 = loc(fused[#loc25, #loc26])
#loc247 = loc(fused[#loc27, #loc28])
#loc248 = loc(fused[#loc29, #loc26])
#loc249 = loc(fused[#loc30, #loc31])
#loc250 = loc(fused[#loc32, #loc33])
#loc251 = loc(fused[#loc34, #loc35])
#loc252 = loc(fused[#loc39, #loc40])
#loc253 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc254 = loc(fused[#loc46, #loc47])
#loc255 = loc(fused[#loc49, #loc50])
#loc256 = loc(fused[#loc51, #loc52])
#loc257 = loc(fused[#loc53, #loc54])
#loc258 = loc(fused[#loc57, #loc58])
#loc259 = loc(fused[#loc56, #loc58])
#loc260 = loc(fused[#loc55, #loc59])
#loc261 = loc(fused[#loc60, #loc59])
#loc262 = loc(fused[#loc61, #loc62])
#loc263 = loc(fused[#loc63, #loc64])
#loc264 = loc(fused[#loc65, #loc62])
#loc265 = loc(fused[#loc69, #loc70])
#loc266 = loc(fused[#loc72, #loc71])
#loc267 = loc(fused[#loc73, #loc74])
#loc268 = loc(fused[#loc76, #loc70])
#loc269 = loc(fused[#loc78, #loc77])
#loc270 = loc(fused[#loc82, #loc81])
#loc271 = loc(fused[#loc89, #loc90])
#loc272 = loc(fused[#loc91, #loc92])
#loc273 = loc(fused[#loc93, #loc94])
#loc274 = loc(fused[#loc95, #loc96])
#loc275 = loc(fused[#loc97, #loc98])
#loc276 = loc(fused[#loc103, #loc104])
#loc279 = loc(fused[#loc114, #loc115])
#loc280 = loc(fused[#loc118, #loc119])
#loc281 = loc(fused[#loc122, #loc121])
#loc282 = loc(fused[#loc124, #loc125])
#loc283 = loc(fused[#loc126, #loc127])
#loc284 = loc(fused[#loc130, #loc128])
#loc285 = loc(fused[#loc131, #loc132])
#loc286 = loc(fused[#loc133, #loc134])
#loc287 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc288 = loc(fused[#loc140, #loc139])
#loc289 = loc(fused[#loc141, #loc142])
#loc290 = loc(fused[#loc143, #loc144])
#loc291 = loc(fused[#loc145, #loc146])
#loc292 = loc(fused[#loc149, #loc150])
#loc293 = loc(fused[#loc148, #loc150])
#loc294 = loc(fused[#loc147, #loc151])
#loc295 = loc(fused[#loc152, #loc151])
#loc296 = loc(fused[#loc153, #loc154])
#loc297 = loc(fused[#loc155, #loc156])
#loc298 = loc(fused[#loc157, #loc154])
#loc299 = loc(fused[#loc161, #loc162])
#loc300 = loc(fused[#loc164, #loc163])
#loc301 = loc(fused[#loc165, #loc166])
#loc302 = loc(fused[#loc168, #loc162])
#loc303 = loc(fused[#loc170, #loc169])
#loc304 = loc(fused[#loc174, #loc173])
#loc305 = loc(fused[#loc181, #loc182])
#loc306 = loc(fused[#loc183, #loc184])
#loc307 = loc(fused[#loc187, #loc185])
#loc308 = loc(fused[#loc188, #loc189])
#loc309 = loc(fused[#loc190, #loc191])
#loc310 = loc(fused[#loc192, #loc189])
#loc311 = loc(fused[#loc194, #loc193])
#loc312 = loc(fused[#loc195, #loc196])
#loc313 = loc(fused[#loc197, #loc198])
#loc314 = loc(fused[#loc199, #loc200])
#loc315 = loc(fused[#loc203, #loc204])
#loc316 = loc(fused[#loc202, #loc204])
#loc317 = loc(fused[#loc201, #loc205])
#loc318 = loc(fused[#loc206, #loc205])
#loc319 = loc(fused[#loc207, #loc208])
#loc320 = loc(fused[#loc209, #loc210])
#loc321 = loc(fused[#loc211, #loc208])
#loc322 = loc(fused[#loc215, #loc216])
#loc323 = loc(fused[#loc218, #loc217])
#loc324 = loc(fused[#loc219, #loc220])
#loc325 = loc(fused[#loc222, #loc216])
#loc326 = loc(fused[#loc224, #loc223])
#loc327 = loc(fused[#loc228, #loc227])
