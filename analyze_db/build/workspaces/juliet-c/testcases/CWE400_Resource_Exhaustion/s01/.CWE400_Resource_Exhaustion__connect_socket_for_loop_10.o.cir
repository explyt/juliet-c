!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc476)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc477)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc479)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc480)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc481)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc482)
  cir.func private @close(!s32i) -> !s32i loc(#loc483)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc484)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc486)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc491)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc492)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc493)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc494)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc39)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc493)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc46)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc48)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc497)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc55)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc55)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc499)
                  cir.if %57 {
                    cir.break loc(#loc57)
                  } loc(#loc500)
                } loc(#loc498)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc501)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc60)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc502)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc503)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc65)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc65)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc504)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc505)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc73)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc73)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc506)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc508)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc509)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc509)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc86)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc86)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc510)
                  cir.if %61 {
                    cir.break loc(#loc88)
                  } loc(#loc511)
                } loc(#loc507)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc91)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc91)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc91)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc91)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc91)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc91)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc91)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc92)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc512)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc93)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc94)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc513)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc100)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc515)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc101)
                    cir.yield %59 : !cir.bool loc(#loc101)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc103)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc516)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc101)
                      cir.yield %63 : !cir.bool loc(#loc101)
                    }, false {
                      %63 = cir.const #false loc(#loc101)
                      cir.yield %63 : !cir.bool loc(#loc101)
                    }) : (!cir.bool) -> !cir.bool loc(#loc101)
                    cir.yield %62 : !cir.bool loc(#loc101)
                  }) : (!cir.bool) -> !cir.bool loc(#loc101)
                  cir.if %58 {
                    cir.break loc(#loc105)
                  } loc(#loc517)
                } loc(#loc514)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc106)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc106)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc108)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc518)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc110)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
              } loc(#loc496)
              cir.yield loc(#loc43)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%13) loc(#loc113)
            } loc(#loc495)
          } loc(#loc495)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc117)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc521)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc120)
            } loc(#loc522)
          } loc(#loc520)
        } loc(#loc490)
      } loc(#loc489)
    } loc(#loc488)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc123)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc526)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc128)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc526)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc131)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc131)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc528)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc134)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc529)
              cir.condition(%14) loc(#loc135)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc137)
              } loc(#loc530)
              cir.yield loc(#loc130)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc138)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc139)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc531)
              cir.yield loc(#loc527)
            } loc(#loc527)
          } loc(#loc527)
        } loc(#loc525)
      } loc(#loc524)
    } loc(#loc523)
    cir.return loc(#loc22)
  } loc(#loc485)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc533)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc534)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc535)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc536)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc532)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc537)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc152)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc539)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc540)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc162)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc544)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc545)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc546)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc547)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc171)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc171)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc546)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc178)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc179)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc180)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc181)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc550)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc187)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc187)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc552)
                  cir.if %57 {
                    cir.break loc(#loc189)
                  } loc(#loc553)
                } loc(#loc551)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc554)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc192)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc555)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc556)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc197)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc197)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc557)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc199)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc199)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc200)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc558)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc203)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc203)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc204)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc559)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc561)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc562)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc562)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc214)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc215)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc215)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc563)
                  cir.if %61 {
                    cir.break loc(#loc217)
                  } loc(#loc564)
                } loc(#loc560)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc219)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc220)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc220)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc220)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc220)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc220)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc220)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc220)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc221)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc221)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc565)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc222)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc223)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc223)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc566)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc229)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc229)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc568)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc230)
                    cir.yield %59 : !cir.bool loc(#loc230)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc232)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc569)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc230)
                      cir.yield %63 : !cir.bool loc(#loc230)
                    }, false {
                      %63 = cir.const #false loc(#loc230)
                      cir.yield %63 : !cir.bool loc(#loc230)
                    }) : (!cir.bool) -> !cir.bool loc(#loc230)
                    cir.yield %62 : !cir.bool loc(#loc230)
                  }) : (!cir.bool) -> !cir.bool loc(#loc230)
                  cir.if %58 {
                    cir.break loc(#loc234)
                  } loc(#loc570)
                } loc(#loc567)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc235)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc235)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc237)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc237)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc571)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc238)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc239)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc572)
              } loc(#loc549)
              cir.yield loc(#loc175)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc242)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc242)
              cir.condition(%13) loc(#loc242)
            } loc(#loc548)
          } loc(#loc548)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc245)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc246)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc246)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc574)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc249)
            } loc(#loc575)
          } loc(#loc573)
        } loc(#loc543)
      } loc(#loc542)
    } loc(#loc541)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc537)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc252)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc256)
      } else {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc579)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc260)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc260)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc579)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc264)
            %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc581)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %14 = cir.const #cir.int<20> : !s32i loc(#loc267)
              %15 = cir.cmp(le, %13, %14) : !s32i, !cir.bool loc(#loc582)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc265)
                cir.yield %17 : !cir.bool loc(#loc265)
              }, false {
                %17 = cir.const #false loc(#loc265)
                cir.yield %17 : !cir.bool loc(#loc265)
              }) : (!cir.bool) -> !cir.bool loc(#loc265)
              cir.yield %16 : !cir.bool loc(#loc265)
            }, false {
              %13 = cir.const #false loc(#loc265)
              cir.yield %13 : !cir.bool loc(#loc265)
            }) : (!cir.bool) -> !cir.bool loc(#loc265)
            cir.if %12 {
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc271)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc271)
                cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc585)
                cir.for : cond {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc273)
                  %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                  %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc274)
                  %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc586)
                  cir.condition(%18) loc(#loc275)
                } body {
                  cir.scope {
                    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc277)
                    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc277)
                    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc278)
                  } loc(#loc587)
                  cir.yield loc(#loc270)
                } step {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc279)
                  %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc280)
                  cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc588)
                  cir.yield loc(#loc584)
                } loc(#loc584)
              } loc(#loc584)
            } loc(#loc583)
          } loc(#loc580)
        } loc(#loc578)
      } loc(#loc577)
    } loc(#loc576)
    cir.return loc(#loc154)
  } loc(#loc538)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc590)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc286)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc591)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc290)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc595)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc596)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc597)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc598)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc299)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc299)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc597)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc306)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc307)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc308)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc309)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc315)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc315)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc603)
                  cir.if %57 {
                    cir.break loc(#loc317)
                  } loc(#loc604)
                } loc(#loc602)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc605)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc320)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc606)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc607)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc325)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc325)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc608)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc327)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc327)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc328)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc609)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc331)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc331)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc332)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc612)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc613)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc613)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc342)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc343)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc343)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc614)
                  cir.if %61 {
                    cir.break loc(#loc345)
                  } loc(#loc615)
                } loc(#loc611)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc347)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc347)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc348)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc348)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc348)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc348)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc348)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc348)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc348)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc349)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc349)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc616)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc350)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc351)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc351)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc356)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc357)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc357)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc619)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc358)
                    cir.yield %59 : !cir.bool loc(#loc358)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc359)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc360)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc620)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc358)
                      cir.yield %63 : !cir.bool loc(#loc358)
                    }, false {
                      %63 = cir.const #false loc(#loc358)
                      cir.yield %63 : !cir.bool loc(#loc358)
                    }) : (!cir.bool) -> !cir.bool loc(#loc358)
                    cir.yield %62 : !cir.bool loc(#loc358)
                  }) : (!cir.bool) -> !cir.bool loc(#loc358)
                  cir.if %58 {
                    cir.break loc(#loc362)
                  } loc(#loc621)
                } loc(#loc618)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc363)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc363)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc365)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc365)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc622)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc366)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc367)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
              } loc(#loc600)
              cir.yield loc(#loc303)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc370)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc370)
              cir.condition(%13) loc(#loc370)
            } loc(#loc599)
          } loc(#loc599)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc373)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc374)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc374)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc625)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc376)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc377)
            } loc(#loc626)
          } loc(#loc624)
        } loc(#loc594)
      } loc(#loc593)
    } loc(#loc592)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc380)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc380)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc630)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc385)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc385)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc630)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc389)
            %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc632)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc391)
              %14 = cir.const #cir.int<20> : !s32i loc(#loc392)
              %15 = cir.cmp(le, %13, %14) : !s32i, !cir.bool loc(#loc633)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc390)
                cir.yield %17 : !cir.bool loc(#loc390)
              }, false {
                %17 = cir.const #false loc(#loc390)
                cir.yield %17 : !cir.bool loc(#loc390)
              }) : (!cir.bool) -> !cir.bool loc(#loc390)
              cir.yield %16 : !cir.bool loc(#loc390)
            }, false {
              %13 = cir.const #false loc(#loc390)
              cir.yield %13 : !cir.bool loc(#loc390)
            }) : (!cir.bool) -> !cir.bool loc(#loc390)
            cir.if %12 {
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc396)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc396)
                cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc636)
                cir.for : cond {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc398)
                  %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                  %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc399)
                  %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc637)
                  cir.condition(%18) loc(#loc400)
                } body {
                  cir.scope {
                    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc402)
                    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc402)
                    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc403)
                  } loc(#loc638)
                  cir.yield loc(#loc395)
                } step {
                  %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc404)
                  %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc405)
                  cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc639)
                  cir.yield loc(#loc635)
                } loc(#loc635)
              } loc(#loc635)
            } loc(#loc634)
          } loc(#loc631)
        } loc(#loc629)
      } loc(#loc628)
    } loc(#loc627)
    cir.return loc(#loc282)
  } loc(#loc589)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc641)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc410)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc411)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc537)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc415)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc415)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc419)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc419)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc420)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc421)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc645)
      } loc(#loc644)
    } loc(#loc643)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc425)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc425)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc649)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc430)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc430)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc649)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc433)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc433)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc651)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc435)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc436)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc436)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc652)
              cir.condition(%14) loc(#loc437)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc439)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc439)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc440)
              } loc(#loc653)
              cir.yield loc(#loc432)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc441)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc442)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc654)
              cir.yield loc(#loc650)
            } loc(#loc650)
          } loc(#loc650)
        } loc(#loc648)
      } loc(#loc647)
    } loc(#loc646)
    cir.return loc(#loc407)
  } loc(#loc640)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc656)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc447)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc448)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc452)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc452)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc454)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc660)
      } loc(#loc659)
    } loc(#loc658)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc476)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc458)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc458)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc664)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc463)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc463)
          cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc664)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc466)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc466)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc666)
            cir.for : cond {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc468)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc469)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc469)
              %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc667)
              cir.condition(%14) loc(#loc470)
            } body {
              cir.scope {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc472)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc472)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc473)
              } loc(#loc668)
              cir.yield loc(#loc465)
            } step {
              %11 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc474)
              %12 = cir.unary(inc, %11) : !u64i, !u64i loc(#loc475)
              cir.store %12, %6 : !u64i, !cir.ptr<!u64i> loc(#loc669)
              cir.yield loc(#loc665)
            } loc(#loc665)
          } loc(#loc665)
        } loc(#loc663)
      } loc(#loc662)
    } loc(#loc661)
    cir.return loc(#loc444)
  } loc(#loc655)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":115:27)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":44:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":119:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":46:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":46:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":48:14)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":48:13)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":48:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":49:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":107:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":49:8)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":50:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":51:9)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":106:9)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":56:13)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":56:17)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":57:13)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":57:32)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":58:13)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":58:36)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":59:13)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":59:45)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":60:13)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":95:21)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":61:13)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":94:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:40)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:49)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:62)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:33)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:17)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":70:73)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":71:17)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":74:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":71:21)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":71:38)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":72:17)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":73:21)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:24)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:25)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:34)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:37)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:51)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:17)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":75:52)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":76:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":76:17)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":77:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":77:17)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":77:63)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":78:42)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":78:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":78:17)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":78:50)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:17)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":82:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:29)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:62)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:63)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:72)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:86)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:21)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":79:92)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":80:17)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":81:21)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:35)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:50)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:63)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:81)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:84)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:30)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:17)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":85:85)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:17)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":89:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:21)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:35)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:48)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:51)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":86:65)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":87:17)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":88:21)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":91:43)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":91:29)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":91:17)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":93:30)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":93:25)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":93:17)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":93:41)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":95:20)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":96:13)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":99:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":96:17)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":96:34)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":97:13)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":98:30)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":98:17)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":108:5)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":118:5)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":108:8)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":109:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":110:9)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":117:9)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":111:13)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":111:24)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:13)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":116:13)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:22)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:18)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:25)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:37)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:27)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":114:13)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":115:17)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:45)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":113:44)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":345:1)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":351:1)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":347:5)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":347:14)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":348:5)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":348:14)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":349:5)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":349:14)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":350:5)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":350:14)
#loc150 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc151 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":193:19)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":126:1)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":209:1)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":128:5)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":128:9)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":130:14)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":130:13)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":130:5)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":131:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":189:5)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":131:8)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":132:5)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":133:9)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":188:9)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":138:13)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":138:17)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":139:13)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":139:32)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":140:13)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":140:36)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":141:13)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":141:45)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":142:13)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":177:21)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":143:13)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":176:13)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:40)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:49)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:62)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:33)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:17)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":152:73)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":153:17)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":156:17)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":153:21)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":153:38)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":154:17)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":155:21)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:24)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:25)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:34)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:37)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:51)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:17)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":157:52)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":158:38)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":158:17)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":159:53)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":159:43)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":159:17)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":159:63)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":160:42)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":160:36)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":160:17)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":160:50)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:17)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":164:17)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:29)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:62)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:63)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:72)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:86)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:21)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":161:92)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":162:17)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":163:21)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:35)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:50)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:63)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:81)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:84)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:30)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:17)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":167:85)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:17)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":171:17)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:21)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:35)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:48)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:51)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":168:65)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":169:17)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":170:21)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":173:43)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":173:29)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":173:17)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":175:30)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":175:25)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":175:17)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":175:41)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":177:20)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":178:13)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":181:13)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":178:17)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":178:34)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":179:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":180:30)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":180:17)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":190:5)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":208:5)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":190:8)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":191:5)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":194:5)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":196:5)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":193:9)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":197:9)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":207:9)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":198:13)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":198:24)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:13)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":206:13)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:17)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:25)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:27)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:30)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":200:39)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":201:13)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:17)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":205:17)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:26)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:22)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:29)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:41)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:31)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":203:17)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":204:31)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":204:21)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:49)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":202:48)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":212:1)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":290:1)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":214:5)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":214:9)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":216:14)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":216:13)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":216:5)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":217:5)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":275:5)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":217:8)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":218:5)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":219:9)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":274:9)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":224:13)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":224:17)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":225:13)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":225:32)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":226:13)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":226:36)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":227:13)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":227:45)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":228:13)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":263:21)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":229:13)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":262:13)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:40)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:49)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:62)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:33)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:17)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":238:73)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":239:17)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":242:17)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":239:21)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":239:38)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":240:17)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":241:21)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:24)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:25)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:34)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:37)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:51)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:17)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":243:52)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":244:38)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":244:17)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":245:53)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":245:43)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":245:17)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":245:63)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":246:42)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":246:36)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":246:17)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":246:50)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:17)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":250:17)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:29)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:62)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:63)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:72)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:86)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:21)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":247:92)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":248:17)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":249:21)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:35)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:50)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:63)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:81)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:84)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:30)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:17)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":253:85)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:17)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":257:17)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:21)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:35)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:48)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:51)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":254:65)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":255:17)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":256:21)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":259:43)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":259:29)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":259:17)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":261:30)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":261:25)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":261:17)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":261:41)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":263:20)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":264:13)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":267:13)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":264:17)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":264:34)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":265:13)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":266:30)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":266:17)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":276:5)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":289:5)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":276:8)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":277:5)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":278:9)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":288:9)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":279:13)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":279:24)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:13)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":287:13)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:17)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:25)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:27)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:30)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":281:39)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":282:13)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:17)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":286:17)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:26)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:22)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:29)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:41)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:31)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":284:17)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":285:31)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":285:21)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:49)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":283:48)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":293:1)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":319:1)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":295:5)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":295:9)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":297:14)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":297:13)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":297:5)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":298:5)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":307:5)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":298:8)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":299:5)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":302:5)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":304:5)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":301:19)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":301:9)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":306:17)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":306:9)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":308:5)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":318:5)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":308:8)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":309:5)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":310:9)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":317:9)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":311:13)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":311:24)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:13)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":316:13)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:22)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:18)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:25)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:37)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:27)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":314:13)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":315:27)
#loc440 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":315:17)
#loc441 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:45)
#loc442 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":313:44)
#loc443 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":322:1)
#loc444 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":343:1)
#loc445 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":324:5)
#loc446 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":324:9)
#loc447 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":326:14)
#loc448 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":326:13)
#loc449 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":326:5)
#loc450 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":327:5)
#loc451 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":331:5)
#loc452 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":327:8)
#loc453 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":328:5)
#loc454 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":330:17)
#loc455 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":330:9)
#loc456 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":332:5)
#loc457 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":342:5)
#loc458 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":332:8)
#loc459 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":333:5)
#loc460 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":334:9)
#loc461 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":341:9)
#loc462 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":335:13)
#loc463 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":335:24)
#loc464 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:13)
#loc465 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":340:13)
#loc466 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:22)
#loc467 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:18)
#loc468 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:25)
#loc469 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:37)
#loc470 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:27)
#loc471 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":338:13)
#loc472 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":339:27)
#loc473 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":339:17)
#loc474 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:45)
#loc475 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_10.c":337:44)
#loc476 = loc(fused[#loc1, #loc2])
#loc477 = loc(fused[#loc3, #loc4])
#loc478 = loc(fused[#loc5, #loc6])
#loc479 = loc(fused[#loc8, #loc9])
#loc480 = loc(fused[#loc10, #loc11])
#loc481 = loc(fused[#loc12, #loc13])
#loc482 = loc(fused[#loc14, #loc15])
#loc483 = loc(fused[#loc16, #loc17])
#loc484 = loc(fused[#loc18, #loc19])
#loc485 = loc(fused[#loc21, #loc22])
#loc486 = loc(fused[#loc23, #loc24])
#loc487 = loc(fused[#loc27, #loc25])
#loc488 = loc(fused[#loc28, #loc29])
#loc489 = loc(fused[#loc31, #loc29])
#loc490 = loc(fused[#loc32, #loc33])
#loc491 = loc(fused[#loc34, #loc35])
#loc492 = loc(fused[#loc36, #loc37])
#loc493 = loc(fused[#loc38, #loc39])
#loc494 = loc(fused[#loc40, #loc41])
#loc495 = loc(fused[#loc42, #loc43])
#loc496 = loc(fused[#loc44, #loc45])
#loc497 = loc(fused[#loc50, #loc51])
#loc498 = loc(fused[#loc52, #loc53])
#loc499 = loc(fused[#loc54, #loc55])
#loc500 = loc(fused[#loc56, #loc53])
#loc501 = loc(fused[#loc58, #loc59])
#loc502 = loc(fused[#loc61, #loc62])
#loc503 = loc(fused[#loc63, #loc64])
#loc504 = loc(fused[#loc67, #loc65])
#loc505 = loc(fused[#loc71, #loc72])
#loc506 = loc(fused[#loc76, #loc77])
#loc507 = loc(fused[#loc78, #loc79])
#loc508 = loc(fused[#loc81, #loc82])
#loc509 = loc(fused[#loc83, #loc84])
#loc510 = loc(fused[#loc85, #loc86])
#loc511 = loc(fused[#loc87, #loc79])
#loc512 = loc(fused[#loc91, #loc92])
#loc513 = loc(fused[#loc95, #loc96])
#loc514 = loc(fused[#loc97, #loc98])
#loc515 = loc(fused[#loc99, #loc100])
#loc516 = loc(fused[#loc102, #loc103])
#loc517 = loc(fused[#loc104, #loc98])
#loc518 = loc(fused[#loc108, #loc106])
#loc519 = loc(fused[#loc111, #loc112])
#loc520 = loc(fused[#loc114, #loc115])
#loc521 = loc(fused[#loc116, #loc117])
#loc522 = loc(fused[#loc118, #loc115])
#loc523 = loc(fused[#loc121, #loc122])
#loc524 = loc(fused[#loc124, #loc122])
#loc525 = loc(fused[#loc125, #loc126])
#loc526 = loc(fused[#loc127, #loc128])
#loc527 = loc(fused[#loc129, #loc130])
#loc528 = loc(fused[#loc132, #loc131])
#loc529 = loc(fused[#loc133, #loc134])
#loc530 = loc(fused[#loc136, #loc130])
#loc531 = loc(fused[#loc139, #loc138])
#loc532 = loc(fused[#loc140, #loc141])
#loc533 = loc(fused[#loc142, #loc143])
#loc534 = loc(fused[#loc144, #loc145])
#loc535 = loc(fused[#loc146, #loc147])
#loc536 = loc(fused[#loc148, #loc149])
#loc537 = loc(fused[#loc150, #loc151])
#loc538 = loc(fused[#loc153, #loc154])
#loc539 = loc(fused[#loc155, #loc156])
#loc540 = loc(fused[#loc159, #loc157])
#loc541 = loc(fused[#loc160, #loc161])
#loc542 = loc(fused[#loc163, #loc161])
#loc543 = loc(fused[#loc164, #loc165])
#loc544 = loc(fused[#loc166, #loc167])
#loc545 = loc(fused[#loc168, #loc169])
#loc546 = loc(fused[#loc170, #loc171])
#loc547 = loc(fused[#loc172, #loc173])
#loc548 = loc(fused[#loc174, #loc175])
#loc549 = loc(fused[#loc176, #loc177])
#loc550 = loc(fused[#loc182, #loc183])
#loc551 = loc(fused[#loc184, #loc185])
#loc552 = loc(fused[#loc186, #loc187])
#loc553 = loc(fused[#loc188, #loc185])
#loc554 = loc(fused[#loc190, #loc191])
#loc555 = loc(fused[#loc193, #loc194])
#loc556 = loc(fused[#loc195, #loc196])
#loc557 = loc(fused[#loc198, #loc197])
#loc558 = loc(fused[#loc201, #loc202])
#loc559 = loc(fused[#loc205, #loc206])
#loc560 = loc(fused[#loc207, #loc208])
#loc561 = loc(fused[#loc210, #loc211])
#loc562 = loc(fused[#loc212, #loc213])
#loc563 = loc(fused[#loc214, #loc215])
#loc564 = loc(fused[#loc216, #loc208])
#loc565 = loc(fused[#loc220, #loc221])
#loc566 = loc(fused[#loc224, #loc225])
#loc567 = loc(fused[#loc226, #loc227])
#loc568 = loc(fused[#loc228, #loc229])
#loc569 = loc(fused[#loc231, #loc232])
#loc570 = loc(fused[#loc233, #loc227])
#loc571 = loc(fused[#loc237, #loc235])
#loc572 = loc(fused[#loc240, #loc241])
#loc573 = loc(fused[#loc243, #loc244])
#loc574 = loc(fused[#loc245, #loc246])
#loc575 = loc(fused[#loc247, #loc244])
#loc576 = loc(fused[#loc250, #loc251])
#loc577 = loc(fused[#loc253, #loc254, #loc255, #loc251])
#loc578 = loc(fused[#loc257, #loc258])
#loc579 = loc(fused[#loc259, #loc260])
#loc580 = loc(fused[#loc261, #loc262])
#loc581 = loc(fused[#loc263, #loc264])
#loc582 = loc(fused[#loc266, #loc267])
#loc583 = loc(fused[#loc268, #loc262])
#loc584 = loc(fused[#loc269, #loc270])
#loc585 = loc(fused[#loc272, #loc271])
#loc586 = loc(fused[#loc273, #loc274])
#loc587 = loc(fused[#loc276, #loc270])
#loc588 = loc(fused[#loc280, #loc279])
#loc589 = loc(fused[#loc281, #loc282])
#loc590 = loc(fused[#loc283, #loc284])
#loc591 = loc(fused[#loc287, #loc285])
#loc592 = loc(fused[#loc288, #loc289])
#loc593 = loc(fused[#loc291, #loc289])
#loc594 = loc(fused[#loc292, #loc293])
#loc595 = loc(fused[#loc294, #loc295])
#loc596 = loc(fused[#loc296, #loc297])
#loc597 = loc(fused[#loc298, #loc299])
#loc598 = loc(fused[#loc300, #loc301])
#loc599 = loc(fused[#loc302, #loc303])
#loc600 = loc(fused[#loc304, #loc305])
#loc601 = loc(fused[#loc310, #loc311])
#loc602 = loc(fused[#loc312, #loc313])
#loc603 = loc(fused[#loc314, #loc315])
#loc604 = loc(fused[#loc316, #loc313])
#loc605 = loc(fused[#loc318, #loc319])
#loc606 = loc(fused[#loc321, #loc322])
#loc607 = loc(fused[#loc323, #loc324])
#loc608 = loc(fused[#loc326, #loc325])
#loc609 = loc(fused[#loc329, #loc330])
#loc610 = loc(fused[#loc333, #loc334])
#loc611 = loc(fused[#loc335, #loc336])
#loc612 = loc(fused[#loc338, #loc339])
#loc613 = loc(fused[#loc340, #loc341])
#loc614 = loc(fused[#loc342, #loc343])
#loc615 = loc(fused[#loc344, #loc336])
#loc616 = loc(fused[#loc348, #loc349])
#loc617 = loc(fused[#loc352, #loc353])
#loc618 = loc(fused[#loc354, #loc355])
#loc619 = loc(fused[#loc356, #loc357])
#loc620 = loc(fused[#loc359, #loc360])
#loc621 = loc(fused[#loc361, #loc355])
#loc622 = loc(fused[#loc365, #loc363])
#loc623 = loc(fused[#loc368, #loc369])
#loc624 = loc(fused[#loc371, #loc372])
#loc625 = loc(fused[#loc373, #loc374])
#loc626 = loc(fused[#loc375, #loc372])
#loc627 = loc(fused[#loc378, #loc379])
#loc628 = loc(fused[#loc381, #loc379])
#loc629 = loc(fused[#loc382, #loc383])
#loc630 = loc(fused[#loc384, #loc385])
#loc631 = loc(fused[#loc386, #loc387])
#loc632 = loc(fused[#loc388, #loc389])
#loc633 = loc(fused[#loc391, #loc392])
#loc634 = loc(fused[#loc393, #loc387])
#loc635 = loc(fused[#loc394, #loc395])
#loc636 = loc(fused[#loc397, #loc396])
#loc637 = loc(fused[#loc398, #loc399])
#loc638 = loc(fused[#loc401, #loc395])
#loc639 = loc(fused[#loc405, #loc404])
#loc640 = loc(fused[#loc406, #loc407])
#loc641 = loc(fused[#loc408, #loc409])
#loc642 = loc(fused[#loc412, #loc410])
#loc643 = loc(fused[#loc413, #loc414])
#loc644 = loc(fused[#loc416, #loc417, #loc418, #loc414])
#loc645 = loc(fused[#loc422, #loc421])
#loc646 = loc(fused[#loc423, #loc424])
#loc647 = loc(fused[#loc426, #loc424])
#loc648 = loc(fused[#loc427, #loc428])
#loc649 = loc(fused[#loc429, #loc430])
#loc650 = loc(fused[#loc431, #loc432])
#loc651 = loc(fused[#loc434, #loc433])
#loc652 = loc(fused[#loc435, #loc436])
#loc653 = loc(fused[#loc438, #loc432])
#loc654 = loc(fused[#loc442, #loc441])
#loc655 = loc(fused[#loc443, #loc444])
#loc656 = loc(fused[#loc445, #loc446])
#loc657 = loc(fused[#loc449, #loc447])
#loc658 = loc(fused[#loc450, #loc451])
#loc659 = loc(fused[#loc453, #loc451])
#loc660 = loc(fused[#loc455, #loc454])
#loc661 = loc(fused[#loc456, #loc457])
#loc662 = loc(fused[#loc459, #loc457])
#loc663 = loc(fused[#loc460, #loc461])
#loc664 = loc(fused[#loc462, #loc463])
#loc665 = loc(fused[#loc464, #loc465])
#loc666 = loc(fused[#loc467, #loc466])
#loc667 = loc(fused[#loc468, #loc469])
#loc668 = loc(fused[#loc471, #loc465])
#loc669 = loc(fused[#loc475, #loc474])
