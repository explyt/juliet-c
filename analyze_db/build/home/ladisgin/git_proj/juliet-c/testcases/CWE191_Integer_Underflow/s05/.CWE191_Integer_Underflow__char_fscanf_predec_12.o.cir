!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_fscanf_predec_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc164)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc165)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printHexCharLine(!s8i) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_predec_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc170)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc171)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc172)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc21)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc175)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc175)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc30)
    cir.br ^bb4 loc(#loc28)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc33)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc33)
    cir.store %17, %2 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc178)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc179)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
    %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc37)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %21 ^bb7, ^bb10 loc(#loc180)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc181)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc44)
    %23 = cir.unary(dec, %22) : !s8i, !s8i loc(#loc44)
    cir.store %23, %2 : !s8i, !cir.ptr<!s8i> loc(#loc182)
    %24 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc16)
    cir.store %24, %0 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    %25 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    cir.call @printHexCharLine(%25) : (!s8i) -> () loc(#loc47)
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    cir.br ^bb16 loc(#loc40)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc183)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc50)
    %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc50)
    %28 = cir.const #cir.int<127> : !s32i loc(#loc51)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc51)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc51)
    %32 = cir.cmp(gt, %27, %31) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %32 ^bb12, ^bb13 loc(#loc185)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc55)
    %34 = cir.unary(dec, %33) : !s8i, !s8i loc(#loc55)
    cir.store %34, %2 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    %35 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc18)
    cir.store %35, %1 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    %36 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc57)
    cir.call @printHexCharLine(%36) : (!s8i) -> () loc(#loc58)
    cir.br ^bb14 loc(#loc53)
  ^bb13:  // pred: ^bb11
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc12)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb14 loc(#loc49)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc49)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc36)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc36)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_predec_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc187)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc191)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc192)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc193)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc74)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc74)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc196)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc78)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc78)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc83)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc83)
    cir.br ^bb4 loc(#loc81)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc86)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc88)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc88)
    %20 = cir.call @__isoc99_fscanf(%17, %19, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc86)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc199)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc199)
    %23 = cir.call %22() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %24 ^bb7, ^bb13 loc(#loc200)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc98)
    %26 = cir.cast(integral, %25 : !s8i), !s32i loc(#loc98)
    %27 = cir.const #cir.int<127> : !s32i loc(#loc99)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc99)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc99)
    %31 = cir.cmp(gt, %26, %30) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc203)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc103)
    %33 = cir.unary(dec, %32) : !s8i, !s8i loc(#loc103)
    cir.store %33, %2 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    %34 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc69)
    cir.store %34, %0 : !s8i, !cir.ptr<!s8i> loc(#loc191)
    %35 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc105)
    cir.call @printHexCharLine(%35) : (!s8i) -> () loc(#loc106)
    cir.br ^bb11 loc(#loc101)
  ^bb10:  // pred: ^bb8
    %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc107)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb11 loc(#loc97)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc97)
  ^bb12:  // pred: ^bb11
    cir.br ^bb19 loc(#loc94)
  ^bb13:  // pred: ^bb6
    cir.br ^bb14 loc(#loc205)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc111)
    %39 = cir.cast(integral, %38 : !s8i), !s32i loc(#loc111)
    %40 = cir.const #cir.int<127> : !s32i loc(#loc112)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc112)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc112)
    %44 = cir.cmp(gt, %39, %43) : !s32i, !cir.bool loc(#loc206)
    cir.brcond %44 ^bb15, ^bb16 loc(#loc207)
  ^bb15:  // pred: ^bb14
    %45 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc116)
    %46 = cir.unary(dec, %45) : !s8i, !s8i loc(#loc116)
    cir.store %46, %2 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %47 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc71)
    cir.store %47, %1 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %48 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc118)
    cir.call @printHexCharLine(%48) : (!s8i) -> () loc(#loc119)
    cir.br ^bb17 loc(#loc114)
  ^bb16:  // pred: ^bb14
    %49 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc120)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb17 loc(#loc110)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc110)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc90)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc90)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc67)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc210)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc211)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc212)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc130)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc130)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc215)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc134)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc134)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc139)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc140)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc140)
    cir.store %11, %2 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb4 loc(#loc137)
  ^bb3:  // pred: ^bb1
    %12 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc143)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc143)
    cir.store %14, %2 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc219)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
    %17 = cir.call %16() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc147)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc147)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc221)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc154)
    %20 = cir.unary(dec, %19) : !s8i, !s8i loc(#loc154)
    cir.store %20, %2 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %21 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc125)
    cir.store %21, %0 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %22 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc156)
    cir.call @printHexCharLine(%22) : (!s8i) -> () loc(#loc157)
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc150)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc224)
  ^bb11:  // pred: ^bb10
    %23 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc160)
    %24 = cir.unary(dec, %23) : !s8i, !s8i loc(#loc160)
    cir.store %24, %2 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    %25 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc127)
    cir.store %25, %1 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    %26 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc162)
    cir.call @printHexCharLine(%26) : (!s8i) -> () loc(#loc163)
    cir.br ^bb12 loc(#loc159)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc146)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc123)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_fscanf_predec_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":56:23)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":22:1)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":59:1)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":41:13)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":41:27)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":51:13)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":51:27)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":24:5)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":24:10)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":25:12)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":25:5)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":26:5)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":35:5)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":26:8)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":26:33)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":27:5)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":30:5)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":32:5)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":29:9)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":29:17)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":34:17)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":34:16)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":34:9)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":36:5)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":58:5)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":36:8)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":36:33)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":37:5)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":44:5)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":46:5)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":38:9)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":43:9)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":40:13)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":40:15)
#loc46 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":42:30)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":42:13)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":48:9)
#loc49 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":57:9)
#loc50 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":48:13)
#loc51 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":48:20)
#loc52 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":49:9)
#loc53 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":53:9)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":55:9)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":50:13)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":50:15)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":52:30)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":52:13)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":56:13)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":149:1)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":153:1)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":151:5)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":151:13)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":152:5)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":152:13)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":68:1)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":110:1)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":88:13)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":88:27)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":102:13)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":102:27)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":70:5)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":70:10)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":71:12)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":71:5)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":72:5)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":81:5)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":72:8)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":72:33)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":73:5)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":76:5)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":78:5)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":75:9)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":75:17)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":75:24)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":80:9)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":80:17)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":80:24)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":82:5)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":109:5)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":82:8)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":82:33)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":83:5)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":95:5)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":97:5)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":85:9)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":94:9)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":85:13)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":85:20)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":86:9)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":90:9)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":92:9)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":87:13)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":87:15)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":89:30)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":89:13)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":93:23)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":93:13)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":99:9)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":108:9)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":99:13)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":99:20)
#loc113 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":100:9)
#loc114 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":104:9)
#loc115 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":106:9)
#loc116 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":101:13)
#loc117 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":101:15)
#loc118 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":103:30)
#loc119 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":103:13)
#loc120 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":107:23)
#loc121 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":107:13)
#loc122 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":115:1)
#loc123 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":147:1)
#loc124 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":134:13)
#loc125 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":134:27)
#loc126 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":143:13)
#loc127 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":143:27)
#loc128 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":117:5)
#loc129 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":117:10)
#loc130 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":118:12)
#loc131 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":118:5)
#loc132 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":119:5)
#loc133 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":128:5)
#loc134 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":119:8)
#loc135 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":119:33)
#loc136 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":120:5)
#loc137 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":123:5)
#loc138 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":125:5)
#loc139 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":122:17)
#loc140 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":122:16)
#loc141 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":122:9)
#loc142 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":127:17)
#loc143 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":127:16)
#loc144 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":127:9)
#loc145 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":129:5)
#loc146 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":146:5)
#loc147 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":129:8)
#loc148 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":129:33)
#loc149 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":130:5)
#loc150 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":137:5)
#loc151 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":139:5)
#loc152 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":131:9)
#loc153 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":136:9)
#loc154 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":133:13)
#loc155 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":133:15)
#loc156 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":135:30)
#loc157 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":135:13)
#loc158 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":140:9)
#loc159 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":145:9)
#loc160 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":142:13)
#loc161 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":142:15)
#loc162 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":144:30)
#loc163 = loc("CWE191_Integer_Underflow__char_fscanf_predec_12.c":144:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc22, #loc21])
#loc174 = loc(fused[#loc23, #loc24])
#loc175 = loc(fused[#loc25, #loc26])
#loc176 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc177 = loc(fused[#loc34, #loc32])
#loc178 = loc(fused[#loc35, #loc36])
#loc179 = loc(fused[#loc37, #loc38])
#loc180 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc181 = loc(fused[#loc42, #loc43])
#loc182 = loc(fused[#loc44, #loc45])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc50, #loc51])
#loc185 = loc(fused[#loc52, #loc53, #loc54, #loc49])
#loc186 = loc(fused[#loc55, #loc56])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
#loc190 = loc(fused[#loc66, #loc67])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc75, #loc74])
#loc195 = loc(fused[#loc76, #loc77])
#loc196 = loc(fused[#loc78, #loc79])
#loc197 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc198 = loc(fused[#loc89, #loc90])
#loc199 = loc(fused[#loc91, #loc92])
#loc200 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc201 = loc(fused[#loc96, #loc97])
#loc202 = loc(fused[#loc98, #loc99])
#loc203 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc204 = loc(fused[#loc103, #loc104])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc111, #loc112])
#loc207 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc208 = loc(fused[#loc116, #loc117])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc126, #loc127])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc131, #loc130])
#loc214 = loc(fused[#loc132, #loc133])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc217 = loc(fused[#loc141, #loc139])
#loc218 = loc(fused[#loc144, #loc142])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc147, #loc148])
#loc221 = loc(fused[#loc149, #loc150, #loc151, #loc146])
#loc222 = loc(fused[#loc152, #loc153])
#loc223 = loc(fused[#loc154, #loc155])
#loc224 = loc(fused[#loc158, #loc159])
#loc225 = loc(fused[#loc160, #loc161])
