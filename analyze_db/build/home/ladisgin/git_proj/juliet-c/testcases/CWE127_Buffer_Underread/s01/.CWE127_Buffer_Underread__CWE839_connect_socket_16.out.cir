!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":263:10)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":263:14)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":263:20)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":263:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc381 = loc(fused[#loc154, #loc155])
#loc382 = loc(fused[#loc156, #loc157])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc325)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc326)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc327)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc328)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc329)
  cir.func private @close(!s32i) -> !s32i loc(#loc330)
  cir.func private @printIntLine(!s32i) loc(#loc331)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%4) loc(#loc30)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc338)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc339)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc340)
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc341)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc38)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc340)
          cir.scope {
            cir.do {
              %9 = cir.const #cir.int<2> : !s32i loc(#loc43)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %11 = cir.const #cir.int<6> : !s32i loc(#loc45)
              %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
              cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc343)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc51)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc52)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc345)
                cir.if %54 {
                  cir.break loc(#loc54)
                } loc(#loc346)
              } loc(#loc344)
              %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc347)
              %14 = cir.const #cir.int<0> : !s32i loc(#loc57)
              %15 = cir.const #cir.int<16> : !u64i loc(#loc348)
              cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc349)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc62)
              %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc62)
              %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
              cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc350)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc65)
              %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
              %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
              cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc351)
              %24 = cir.const #cir.int<27015> : !s32i loc(#loc70)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc70)
              %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc71)
              %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc352)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc354)
                %53 = cir.const #cir.int<16> : !u64i loc(#loc355)
                %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc355)
                %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc82)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc83)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc83)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc356)
                cir.if %58 {
                  cir.break loc(#loc85)
                } loc(#loc357)
              } loc(#loc353)
              %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
              %31 = cir.const #cir.int<3> : !s32i loc(#loc88)
              %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc88)
              %33 = cir.const #cir.int<4> : !u64i loc(#loc88)
              %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc88)
              %35 = cir.const #cir.int<2> : !s32i loc(#loc88)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc88)
              %37 = cir.binop(add, %34, %36) : !u64i loc(#loc88)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc358)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc91)
              %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc91)
              cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc359)
              cir.scope {
                %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc97)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc361)
                %55 = cir.ternary(%54, true {
                  %56 = cir.const #true loc(#loc98)
                  cir.yield %56 : !cir.bool loc(#loc98)
                }, false {
                  %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc100)
                  %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc362)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc98)
                    cir.yield %60 : !cir.bool loc(#loc98)
                  }, false {
                    %60 = cir.const #false loc(#loc98)
                    cir.yield %60 : !cir.bool loc(#loc98)
                  }) : (!cir.bool) -> !cir.bool loc(#loc98)
                  cir.yield %59 : !cir.bool loc(#loc98)
                }) : (!cir.bool) -> !cir.bool loc(#loc98)
                cir.if %55 {
                  cir.break loc(#loc102)
                } loc(#loc363)
              } loc(#loc360)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc103)
              %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
              %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc105)
              cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc364)
              %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
              %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
              cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
              cir.yield loc(#loc42)
            } while {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc110)
              cir.condition(%10) loc(#loc110)
            } loc(#loc342)
          } loc(#loc342)
          cir.scope {
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc114)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc367)
            cir.if %12 {
              %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc117)
            } loc(#loc368)
          } loc(#loc366)
        } loc(#loc337)
        cir.break loc(#loc118)
      } loc(#loc336)
    } loc(#loc336)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc121)
        cir.condition(%4) loc(#loc121)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc371)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc371)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc371)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc129)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc373)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc134)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc134)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc135)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc136)
            } loc(#loc374)
          } loc(#loc372)
        } loc(#loc370)
        cir.break loc(#loc137)
      } loc(#loc369)
    } loc(#loc369)
    cir.return loc(#loc22)
  } loc(#loc333)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    cir.return loc(#loc139)
  } loc(#loc375)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc378)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc151)
  cir.func @main(%arg0: !s32i loc(fused[#loc154, #loc155]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc156, #loc157])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc382)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc153)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc158)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc159)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc160)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc161)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc148)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_connect_socket_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc383)
    cir.call @CWE127_Buffer_Underread__CWE839_connect_socket_16_good() : () -> () loc(#loc163)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc149)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc150)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_connect_socket_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc384)
    cir.call @CWE127_Buffer_Underread__CWE839_connect_socket_16_bad() : () -> () loc(#loc167)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc151)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc170)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    cir.return %17 : !s32i loc(#loc385)
  } loc(#loc380)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc172)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc387)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc182)
        cir.condition(%4) loc(#loc182)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc391)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc392)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc393)
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc394)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc190)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
          cir.scope {
            cir.do {
              %9 = cir.const #cir.int<2> : !s32i loc(#loc195)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc196)
              %11 = cir.const #cir.int<6> : !s32i loc(#loc197)
              %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc198)
              cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc396)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc204)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc204)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc398)
                cir.if %54 {
                  cir.break loc(#loc206)
                } loc(#loc399)
              } loc(#loc397)
              %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc400)
              %14 = cir.const #cir.int<0> : !s32i loc(#loc209)
              %15 = cir.const #cir.int<16> : !u64i loc(#loc401)
              cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc402)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc214)
              %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc214)
              %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
              cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc403)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc216)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc216)
              %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc217)
              %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
              %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
              cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc404)
              %24 = cir.const #cir.int<27015> : !s32i loc(#loc220)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc220)
              %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc221)
              %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc405)
              cir.scope {
                %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc407)
                %53 = cir.const #cir.int<16> : !u64i loc(#loc408)
                %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc408)
                %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc231)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc232)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc232)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc409)
                cir.if %58 {
                  cir.break loc(#loc234)
                } loc(#loc410)
              } loc(#loc406)
              %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
              %31 = cir.const #cir.int<3> : !s32i loc(#loc237)
              %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc237)
              %33 = cir.const #cir.int<4> : !u64i loc(#loc237)
              %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc237)
              %35 = cir.const #cir.int<2> : !s32i loc(#loc237)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc237)
              %37 = cir.binop(add, %34, %36) : !u64i loc(#loc237)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc238)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc238)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc411)
              %41 = cir.const #cir.int<0> : !s32i loc(#loc239)
              %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
              %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc240)
              cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc412)
              cir.scope {
                %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc246)
                %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc246)
                %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc414)
                %55 = cir.ternary(%54, true {
                  %56 = cir.const #true loc(#loc247)
                  cir.yield %56 : !cir.bool loc(#loc247)
                }, false {
                  %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc249)
                  %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc415)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc247)
                    cir.yield %60 : !cir.bool loc(#loc247)
                  }, false {
                    %60 = cir.const #false loc(#loc247)
                    cir.yield %60 : !cir.bool loc(#loc247)
                  }) : (!cir.bool) -> !cir.bool loc(#loc247)
                  cir.yield %59 : !cir.bool loc(#loc247)
                }) : (!cir.bool) -> !cir.bool loc(#loc247)
                cir.if %55 {
                  cir.break loc(#loc251)
                } loc(#loc416)
              } loc(#loc413)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc252)
              %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc254)
              %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc254)
              cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc417)
              %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc255)
              %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc256)
              cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
              cir.yield loc(#loc194)
            } while {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc259)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc259)
              cir.condition(%10) loc(#loc259)
            } loc(#loc395)
          } loc(#loc395)
          cir.scope {
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc262)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc263)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc263)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc420)
            cir.if %12 {
              %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc266)
            } loc(#loc421)
          } loc(#loc419)
        } loc(#loc390)
        cir.break loc(#loc267)
      } loc(#loc389)
    } loc(#loc389)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc270)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc270)
        cir.condition(%4) loc(#loc270)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc424)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc424)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc424)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc426)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc281)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc427)
              %12 = cir.ternary(%11, true {
                %13 = cir.const #true loc(#loc279)
                cir.yield %13 : !cir.bool loc(#loc279)
              }, false {
                %13 = cir.const #false loc(#loc279)
                cir.yield %13 : !cir.bool loc(#loc279)
              }) : (!cir.bool) -> !cir.bool loc(#loc279)
              cir.yield %12 : !cir.bool loc(#loc279)
            }, false {
              %9 = cir.const #false loc(#loc279)
              cir.yield %9 : !cir.bool loc(#loc279)
            }) : (!cir.bool) -> !cir.bool loc(#loc279)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc287)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc287)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc287)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc288)
            } else {
              %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc172)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc172)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc289)
            } loc(#loc428)
          } loc(#loc425)
        } loc(#loc423)
        cir.break loc(#loc290)
      } loc(#loc422)
    } loc(#loc422)
    cir.return loc(#loc174)
  } loc(#loc386)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc430)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc296)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc300)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc300)
        cir.condition(%4) loc(#loc300)
      } do {
        %3 = cir.const #cir.int<7> : !s32i loc(#loc301)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
        cir.break loc(#loc303)
      } loc(#loc432)
    } loc(#loc432)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc306)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc306)
        cir.condition(%4) loc(#loc306)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc436)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc436)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc436)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc314)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc438)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc318)
              %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc319)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc319)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc319)
              cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc320)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc321)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc321)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc322)
            } loc(#loc439)
          } loc(#loc437)
        } loc(#loc435)
        cir.break loc(#loc323)
      } loc(#loc434)
    } loc(#loc434)
    cir.return loc(#loc292)
  } loc(#loc429)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":121:27)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":44:1)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":126:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":46:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":46:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":48:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":48:12)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":48:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":49:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":108:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":49:11)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":51:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":106:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":56:13)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":56:17)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":57:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":57:32)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":58:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":58:36)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":59:13)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":59:45)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":60:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":95:21)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:40)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:49)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:62)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:33)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:17)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":70:73)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":71:17)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":74:17)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":71:21)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":71:38)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":72:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":73:21)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:24)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:25)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:34)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:37)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:51)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:17)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":75:52)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":76:38)
#loc63 = loc("/usr/include/netinet/in.h":249:5)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":76:17)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":77:43)
#loc66 = loc("/usr/include/netinet/in.h":251:20)
#loc67 = loc("/usr/include/netinet/in.h":33:15)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":77:17)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":77:63)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":78:42)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":78:36)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":78:17)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":78:50)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:17)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":82:17)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:29)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:62)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:63)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:72)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:86)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:21)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":79:92)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":80:17)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":81:21)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:35)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:50)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:63)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:81)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:84)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:30)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:17)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":85:85)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":89:17)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:21)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:35)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:48)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:51)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":86:65)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":87:17)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":88:21)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":91:43)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":91:29)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":91:17)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":93:29)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":93:24)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":93:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":93:40)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":95:20)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":96:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":99:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":96:17)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":96:34)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":97:13)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":98:30)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":98:17)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":107:9)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":109:5)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":125:5)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":109:11)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":111:9)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":123:9)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":112:13)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":112:34)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":115:13)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":122:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":115:17)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":115:24)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":116:13)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":118:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":120:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":117:37)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":117:30)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":117:17)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":121:17)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":124:9)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":248:1)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":252:1)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":250:5)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":250:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":251:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":251:13)
#loc144 = loc("/usr/include/stdlib.h":575:1)
#loc145 = loc("/usr/include/stdlib.h":575:41)
#loc146 = loc("/usr/include/time.h":76:1)
#loc147 = loc("/usr/include/time.h":76:38)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":268:15)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":270:15)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":273:15)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":275:15)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":263:1)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":278:1)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":264:1)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":266:27)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":266:22)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":266:5)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":268:5)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":269:5)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":269:60)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":270:5)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":273:5)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":274:5)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":274:59)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":275:5)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":277:12)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":277:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":209:27)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":133:1)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":214:1)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":135:5)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":135:9)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":137:13)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":137:12)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":137:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":138:5)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":197:5)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":138:11)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":140:9)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":195:9)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":145:13)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":145:17)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":146:13)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":146:32)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":147:13)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":147:36)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":148:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":148:45)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":149:13)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":184:21)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:40)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:49)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:62)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:33)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:17)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":159:73)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":160:17)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":163:17)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":160:21)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":160:38)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":161:17)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":162:21)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:24)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:25)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:34)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:37)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:51)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:17)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":164:52)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":165:38)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":165:17)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":166:53)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":166:43)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":166:17)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":166:63)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":167:42)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":167:36)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":167:17)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":167:50)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:17)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":171:17)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:29)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:62)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:63)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:72)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:86)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:21)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":168:92)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":169:17)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":170:21)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:35)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:50)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:63)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:81)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:84)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:30)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:17)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":174:85)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:17)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":178:17)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:21)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:35)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:48)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:51)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":175:65)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":176:17)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":177:21)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":180:43)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":180:29)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":180:17)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":182:29)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":182:24)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":182:17)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":182:40)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":184:20)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":185:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":188:13)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":185:17)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":185:34)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":186:13)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":187:30)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":187:17)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":196:9)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":198:5)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":213:5)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":198:11)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":200:9)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":211:9)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":201:13)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":201:34)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:13)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":210:13)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:17)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:25)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:27)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:30)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:38)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":203:40)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":204:13)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":206:13)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":208:13)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":205:37)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":205:30)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":205:17)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":209:17)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":212:9)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":217:1)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":246:1)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":219:5)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":219:9)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":221:13)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":221:12)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":221:5)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":222:5)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":228:5)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":222:11)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":226:16)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":226:9)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":227:9)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":229:5)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":245:5)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":229:11)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":231:9)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":243:9)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":232:13)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":232:34)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":235:13)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":242:13)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":235:17)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":235:24)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":236:13)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":238:13)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":240:13)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":237:37)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":237:30)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":237:17)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":241:27)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":241:17)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_16.c":244:9)
#loc324 = loc(fused[#loc1, #loc2])
#loc325 = loc(fused[#loc3, #loc4])
#loc326 = loc(fused[#loc6, #loc7])
#loc327 = loc(fused[#loc8, #loc9])
#loc328 = loc(fused[#loc10, #loc11])
#loc329 = loc(fused[#loc12, #loc13])
#loc330 = loc(fused[#loc14, #loc15])
#loc331 = loc(fused[#loc16, #loc17])
#loc332 = loc(fused[#loc18, #loc19])
#loc333 = loc(fused[#loc21, #loc22])
#loc334 = loc(fused[#loc23, #loc24])
#loc335 = loc(fused[#loc27, #loc25])
#loc336 = loc(fused[#loc28, #loc29])
#loc337 = loc(fused[#loc31, #loc32])
#loc338 = loc(fused[#loc33, #loc34])
#loc339 = loc(fused[#loc35, #loc36])
#loc340 = loc(fused[#loc37, #loc38])
#loc341 = loc(fused[#loc39, #loc40])
#loc342 = loc(fused[#loc41, #loc42])
#loc343 = loc(fused[#loc47, #loc48])
#loc344 = loc(fused[#loc49, #loc50])
#loc345 = loc(fused[#loc51, #loc52])
#loc346 = loc(fused[#loc53, #loc50])
#loc347 = loc(fused[#loc55, #loc56])
#loc348 = loc(fused[#loc58, #loc59])
#loc349 = loc(fused[#loc60, #loc61])
#loc350 = loc(fused[#loc64, #loc62])
#loc351 = loc(fused[#loc68, #loc69])
#loc352 = loc(fused[#loc73, #loc74])
#loc353 = loc(fused[#loc75, #loc76])
#loc354 = loc(fused[#loc78, #loc79])
#loc355 = loc(fused[#loc80, #loc81])
#loc356 = loc(fused[#loc82, #loc83])
#loc357 = loc(fused[#loc84, #loc76])
#loc358 = loc(fused[#loc88, #loc89])
#loc359 = loc(fused[#loc92, #loc93])
#loc360 = loc(fused[#loc94, #loc95])
#loc361 = loc(fused[#loc96, #loc97])
#loc362 = loc(fused[#loc99, #loc100])
#loc363 = loc(fused[#loc101, #loc95])
#loc364 = loc(fused[#loc105, #loc103])
#loc365 = loc(fused[#loc108, #loc109])
#loc366 = loc(fused[#loc111, #loc112])
#loc367 = loc(fused[#loc113, #loc114])
#loc368 = loc(fused[#loc115, #loc112])
#loc369 = loc(fused[#loc119, #loc120])
#loc370 = loc(fused[#loc122, #loc123])
#loc371 = loc(fused[#loc124, #loc125])
#loc372 = loc(fused[#loc126, #loc127])
#loc373 = loc(fused[#loc128, #loc129])
#loc374 = loc(fused[#loc130, #loc131, #loc132, #loc127])
#loc375 = loc(fused[#loc138, #loc139])
#loc376 = loc(fused[#loc140, #loc141])
#loc377 = loc(fused[#loc142, #loc143])
#loc378 = loc(fused[#loc144, #loc145])
#loc379 = loc(fused[#loc146, #loc147])
#loc380 = loc(fused[#loc152, #loc153])
#loc383 = loc(fused[#loc163, #loc164])
#loc384 = loc(fused[#loc167, #loc168])
#loc385 = loc(fused[#loc171, #loc170])
#loc386 = loc(fused[#loc173, #loc174])
#loc387 = loc(fused[#loc175, #loc176])
#loc388 = loc(fused[#loc179, #loc177])
#loc389 = loc(fused[#loc180, #loc181])
#loc390 = loc(fused[#loc183, #loc184])
#loc391 = loc(fused[#loc185, #loc186])
#loc392 = loc(fused[#loc187, #loc188])
#loc393 = loc(fused[#loc189, #loc190])
#loc394 = loc(fused[#loc191, #loc192])
#loc395 = loc(fused[#loc193, #loc194])
#loc396 = loc(fused[#loc199, #loc200])
#loc397 = loc(fused[#loc201, #loc202])
#loc398 = loc(fused[#loc203, #loc204])
#loc399 = loc(fused[#loc205, #loc202])
#loc400 = loc(fused[#loc207, #loc208])
#loc401 = loc(fused[#loc210, #loc211])
#loc402 = loc(fused[#loc212, #loc213])
#loc403 = loc(fused[#loc215, #loc214])
#loc404 = loc(fused[#loc218, #loc219])
#loc405 = loc(fused[#loc222, #loc223])
#loc406 = loc(fused[#loc224, #loc225])
#loc407 = loc(fused[#loc227, #loc228])
#loc408 = loc(fused[#loc229, #loc230])
#loc409 = loc(fused[#loc231, #loc232])
#loc410 = loc(fused[#loc233, #loc225])
#loc411 = loc(fused[#loc237, #loc238])
#loc412 = loc(fused[#loc241, #loc242])
#loc413 = loc(fused[#loc243, #loc244])
#loc414 = loc(fused[#loc245, #loc246])
#loc415 = loc(fused[#loc248, #loc249])
#loc416 = loc(fused[#loc250, #loc244])
#loc417 = loc(fused[#loc254, #loc252])
#loc418 = loc(fused[#loc257, #loc258])
#loc419 = loc(fused[#loc260, #loc261])
#loc420 = loc(fused[#loc262, #loc263])
#loc421 = loc(fused[#loc264, #loc261])
#loc422 = loc(fused[#loc268, #loc269])
#loc423 = loc(fused[#loc271, #loc272])
#loc424 = loc(fused[#loc273, #loc274])
#loc425 = loc(fused[#loc275, #loc276])
#loc426 = loc(fused[#loc277, #loc278])
#loc427 = loc(fused[#loc280, #loc282])
#loc428 = loc(fused[#loc283, #loc284, #loc285, #loc276])
#loc429 = loc(fused[#loc291, #loc292])
#loc430 = loc(fused[#loc293, #loc294])
#loc431 = loc(fused[#loc297, #loc295])
#loc432 = loc(fused[#loc298, #loc299])
#loc433 = loc(fused[#loc302, #loc301])
#loc434 = loc(fused[#loc304, #loc305])
#loc435 = loc(fused[#loc307, #loc308])
#loc436 = loc(fused[#loc309, #loc310])
#loc437 = loc(fused[#loc311, #loc312])
#loc438 = loc(fused[#loc313, #loc314])
#loc439 = loc(fused[#loc315, #loc316, #loc317, #loc312])
