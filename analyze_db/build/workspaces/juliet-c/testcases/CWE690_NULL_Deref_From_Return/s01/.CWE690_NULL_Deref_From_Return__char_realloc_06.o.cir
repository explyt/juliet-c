!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc107)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_realloc_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc111)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc112)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.scope {
      %11 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %12 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc116)
      cir.if %13 {
        %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc28)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
        %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc32)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc11)
  } loc(#loc108)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_realloc_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc40)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc47)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc49)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc49)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc125)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.scope {
      %11 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %12 = cir.const #cir.int<5> : !s32i loc(#loc57)
      %13 = cir.cmp(ne, %11, %12) : !s32i, !cir.bool loc(#loc129)
      cir.if %13 {
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc40)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc40)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc132)
          cir.if %17 {
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc67)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc69)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc69)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc71)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc72)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
          } loc(#loc133)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc42)
  } loc(#loc121)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc82)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc82)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc137)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc138)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.scope {
      %11 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %12 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc142)
      cir.if %13 {
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
          cir.if %17 {
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc99)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc101)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc102)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
          } loc(#loc146)
        } loc(#loc144)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc75)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":37:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":28:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":41:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":30:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":30:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":31:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":31:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:28)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:34)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:37)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:48)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:49)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":33:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":34:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":40:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":34:8)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":34:27)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":35:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":37:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":37:16)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":38:19)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":38:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":39:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":39:14)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":90:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":94:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":92:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":92:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":93:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":93:14)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":57:19)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":48:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":69:1)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":50:5)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":50:12)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":51:12)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":51:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:20)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:28)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:34)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:37)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:48)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:49)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":53:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":54:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":68:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":54:8)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":54:27)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":55:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":58:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":60:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":57:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":62:9)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":67:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":62:13)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":62:21)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":63:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":64:13)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":64:20)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":64:26)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":65:23)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":65:13)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":66:13)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":66:18)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":72:1)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":88:1)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":74:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":74:12)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":75:12)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":75:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:20)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:28)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:34)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:37)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:48)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:49)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":77:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":78:5)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":87:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":78:8)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":78:27)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":79:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":81:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":86:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":81:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":81:21)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":82:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":83:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":83:20)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":83:26)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":84:23)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":84:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":85:13)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_realloc_06.c":85:18)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc6, #loc7])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc13])
#loc110 = loc(fused[#loc15, #loc14])
#loc111 = loc(fused[#loc19, #loc20])
#loc112 = loc(fused[#loc18, #loc20])
#loc113 = loc(fused[#loc16, #loc21])
#loc114 = loc(fused[#loc22, #loc21])
#loc115 = loc(fused[#loc23, #loc24])
#loc116 = loc(fused[#loc25, #loc26])
#loc117 = loc(fused[#loc27, #loc24])
#loc118 = loc(fused[#loc34, #loc35])
#loc119 = loc(fused[#loc36, #loc37])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc41, #loc42])
#loc122 = loc(fused[#loc43, #loc44])
#loc123 = loc(fused[#loc46, #loc45])
#loc124 = loc(fused[#loc50, #loc51])
#loc125 = loc(fused[#loc49, #loc51])
#loc126 = loc(fused[#loc47, #loc52])
#loc127 = loc(fused[#loc53, #loc52])
#loc128 = loc(fused[#loc54, #loc55])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc64, #loc65])
#loc133 = loc(fused[#loc66, #loc63])
#loc134 = loc(fused[#loc74, #loc75])
#loc135 = loc(fused[#loc76, #loc77])
#loc136 = loc(fused[#loc79, #loc78])
#loc137 = loc(fused[#loc83, #loc84])
#loc138 = loc(fused[#loc82, #loc84])
#loc139 = loc(fused[#loc80, #loc85])
#loc140 = loc(fused[#loc86, #loc85])
#loc141 = loc(fused[#loc87, #loc88])
#loc142 = loc(fused[#loc89, #loc90])
#loc143 = loc(fused[#loc91, #loc88])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc96, #loc93])
