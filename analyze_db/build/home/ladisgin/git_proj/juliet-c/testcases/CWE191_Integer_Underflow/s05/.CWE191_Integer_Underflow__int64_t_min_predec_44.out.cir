!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":22:21)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":22:29)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":109:10)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":109:14)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":109:20)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":109:32)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":49:25)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":49:33)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":70:25)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":70:33)
#loc124 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc46, #loc47])
#loc141 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc66, #loc67])
#loc156 = loc(fused[#loc93, #loc94])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int64_t_min_predec_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc122)
  cir.func internal private @badSink(%arg0: !s64i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc126)
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc12)
      %3 = cir.unary(dec, %2) : !s64i, !s64i loc(#loc12)
      cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc127)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc11)
      cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc126)
      %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc14)
      cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc15)
    } loc(#loc125)
    cir.return loc(#loc4)
  } loc(#loc123)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_predec_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc21)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc130)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc22)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc131)
    %4 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc24)
    %5 = cir.unary(minus, %4) : !s64i, !s64i loc(#loc24)
    %6 = cir.const #cir.int<1> : !s64i loc(#loc24)
    %7 = cir.binop(sub, %5, %6) nsw : !s64i loc(#loc24)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc26)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc27)
    cir.call %8(%9) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc26)
    cir.return loc(#loc17)
  } loc(#loc128)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_predec_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc133)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc53)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_predec_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE191_Integer_Underflow__int64_t_min_predec_44_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_predec_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE191_Integer_Underflow__int64_t_min_predec_44_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %17 : !s32i loc(#loc144)
  } loc(#loc139)
  cir.func internal private @goodG2BSink(%arg0: !s64i loc(fused[#loc66, #loc67])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc68)
    cir.scope {
      %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc148)
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc73)
      %3 = cir.unary(dec, %2) : !s64i, !s64i loc(#loc73)
      cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc149)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc72)
      cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc148)
      %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc75)
      cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc76)
    } loc(#loc147)
    cir.return loc(#loc65)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc82)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc152)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc83)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc153)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc86)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc86)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc154)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc88)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc89)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc88)
    cir.return loc(#loc78)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc90)
  cir.func internal private @goodB2GSink(%arg0: !s64i loc(fused[#loc93, #loc94])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc156)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc95)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc98)
      %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc99)
      %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc99)
      %4 = cir.const #cir.int<1> : !s64i loc(#loc99)
      %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc99)
      %6 = cir.cmp(gt, %1, %5) : !s64i, !cir.bool loc(#loc158)
      cir.if %6 {
        %7 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc160)
        %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc105)
        %9 = cir.unary(dec, %8) : !s64i, !s64i loc(#loc105)
        cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc161)
        %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc104)
        cir.store %10, %7 : !s64i, !cir.ptr<!s64i> loc(#loc160)
        %11 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc107)
        cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc108)
      } else {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc90)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } loc(#loc159)
    } loc(#loc157)
    cir.return loc(#loc92)
  } loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc115)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc164)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc116)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc165)
    %4 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc118)
    %5 = cir.unary(minus, %4) : !s64i, !s64i loc(#loc118)
    %6 = cir.const #cir.int<1> : !s64i loc(#loc118)
    %7 = cir.binop(sub, %5, %6) nsw : !s64i loc(#loc118)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc166)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc120)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.call %8(%9) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc120)
    cir.return loc(#loc111)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int64_t_min_predec_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":30:1)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":23:1)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":24:5)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":29:5)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":27:9)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":27:26)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":26:9)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":26:11)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":28:27)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":28:9)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":32:1)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":42:1)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":34:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":34:13)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":36:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":36:33)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":37:12)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":37:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":39:12)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":39:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":41:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":41:13)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":95:1)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":99:1)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":97:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":97:13)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":98:5)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":98:13)
#loc34 = loc("/usr/include/stdlib.h":575:1)
#loc35 = loc("/usr/include/stdlib.h":575:41)
#loc36 = loc("/usr/include/time.h":76:1)
#loc37 = loc("/usr/include/time.h":76:38)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":114:15)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":116:15)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":119:15)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":121:15)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":109:1)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":124:1)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":110:1)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":112:27)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":112:22)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":112:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":114:5)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":115:5)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":115:58)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":116:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":119:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":120:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":120:57)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":121:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":123:12)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":123:5)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":49:1)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":57:1)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":50:1)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":51:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":56:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":54:9)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":54:26)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":53:9)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":53:11)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":55:27)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":55:9)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":59:1)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":67:1)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":61:5)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":61:13)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":62:5)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":62:33)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":63:12)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":63:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":65:13)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":65:12)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":65:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":66:5)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":66:13)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":81:19)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":70:1)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":83:1)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":71:1)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":73:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":82:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":73:9)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":73:16)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":74:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":78:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":80:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":76:9)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":76:26)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":75:9)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":75:11)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":77:27)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":77:9)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":81:9)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":85:1)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":93:1)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":87:5)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":87:13)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":88:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":88:33)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":89:12)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":89:5)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":91:12)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":91:5)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":92:5)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_min_predec_44.c":92:13)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc8, #loc9])
#loc126 = loc(fused[#loc10, #loc11])
#loc127 = loc(fused[#loc12, #loc13])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc20, #loc21])
#loc131 = loc(fused[#loc23, #loc22])
#loc132 = loc(fused[#loc25, #loc24])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc30, #loc31])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc44, #loc45])
#loc142 = loc(fused[#loc55, #loc56])
#loc143 = loc(fused[#loc59, #loc60])
#loc144 = loc(fused[#loc63, #loc62])
#loc145 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc79, #loc80])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc84, #loc83])
#loc154 = loc(fused[#loc87, #loc85])
#loc155 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc98, #loc99])
#loc159 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc105, #loc106])
#loc162 = loc(fused[#loc110, #loc111])
#loc163 = loc(fused[#loc112, #loc113])
#loc164 = loc(fused[#loc114, #loc115])
#loc165 = loc(fused[#loc117, #loc116])
#loc166 = loc(fused[#loc119, #loc118])
