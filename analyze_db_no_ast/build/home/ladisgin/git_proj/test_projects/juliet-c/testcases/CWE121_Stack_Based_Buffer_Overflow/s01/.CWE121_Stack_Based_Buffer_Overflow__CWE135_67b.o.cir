!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":32:61)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":32:118)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":49:65)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":49:122)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":62:65)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":62:122)
#loc78 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc32, #loc33])
#loc93 = loc(fused[#loc56, #loc57])
!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType = !cir.struct<struct "_CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType" {!cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
  cir.func private  @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc75)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc76)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE135_67b_badSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
    cir.store %arg0, %0 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> loc(#loc13)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc79)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc81)
      %5 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc82)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc22)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
      cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc81)
      %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc20)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc20)
      %14 = cir.const #cir.int<4> : !u64i loc(#loc20)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc20)
      %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
      cir.store %17, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc82)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc23)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc23)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc24)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
      %22 = cir.call @wcscpy(%19, %21) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc25)
      %23 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc26)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    } loc(#loc80)
    cir.return loc(#loc8)
  } loc(#loc77)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE135_67b_goodG2BSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType loc(fused[#loc32, #loc33])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> loc(#loc36)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc35)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc86)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc88)
      %5 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc89)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc44)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc88)
      %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc42)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc42)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc42)
      %16 = cir.binop(mul, %13, %15) : !u64i loc(#loc42)
      %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc42)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc42)
      cir.store %18, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc89)
      %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
      %20 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc46)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
      %22 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc47)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
      %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %25 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc48)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    } loc(#loc87)
    cir.return loc(#loc31)
  } loc(#loc84)
  cir.func private  @wcslen(!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc90)
  cir.func private  @printWLine(!cir.ptr<!s32i>) loc(#loc91)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE135_67b_goodB2GSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType loc(fused[#loc56, #loc57])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> loc(#loc60)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc59)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc94)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc96)
      %5 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc97)
      %6 = cir.get_global @wcslen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s32i>)>> loc(#loc67)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc68)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc68)
      %9 = cir.call @wcslen(%8) : (!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc67)
      cir.store %9, %4 : !u64i, !cir.ptr<!u64i> loc(#loc96)
      %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc66)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc66)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc66)
      %14 = cir.const #cir.int<4> : !u64i loc(#loc66)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc66)
      %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc66)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc66)
      cir.store %17, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc69)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc69)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc70)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
      %22 = cir.call @wcscpy(%19, %21) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc71)
      %23 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc72)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc72)
      cir.call @printWLine(%24) : (!cir.ptr<!s32i>) -> () loc(#loc73)
    } loc(#loc95)
    cir.return loc(#loc55)
  } loc(#loc92)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/wchar.h":98:1)
#loc4 = loc("/usr/include/wchar.h":100:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":32:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":42:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":34:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":34:28)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":33:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":27:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":35:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":41:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":37:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":37:45)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":38:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":38:31)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":37:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":37:41)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":39:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":39:28)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":39:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":40:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":40:9)
#loc28 = loc("/usr/include/string.h":141:1)
#loc29 = loc("/usr/include/string.h":142:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":49:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":59:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":51:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":51:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":50:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":52:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":58:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":54:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":54:45)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":55:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":55:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":54:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":54:41)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":56:15)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":56:22)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":56:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":57:27)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":57:9)
#loc50 = loc("/usr/include/wchar.h":247:1)
#loc51 = loc("/usr/include/wchar.h":247:51)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":16:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":16:37)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":62:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":72:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":64:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":64:28)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":63:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":65:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":71:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":67:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":67:48)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":68:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":68:31)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":67:26)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":67:44)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":69:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":69:28)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":69:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":70:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_67b.c":70:9)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc11, #loc12])
#loc80 = loc(fused[#loc15, #loc16])
#loc81 = loc(fused[#loc17, #loc18])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc28, #loc29])
#loc84 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc34, #loc35])
#loc87 = loc(fused[#loc37, #loc38])
#loc88 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc41, #loc42])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc52, #loc53])
#loc92 = loc(fused[#loc54, #loc55])
#loc94 = loc(fused[#loc58, #loc59])
#loc95 = loc(fused[#loc61, #loc62])
#loc96 = loc(fused[#loc63, #loc64])
#loc97 = loc(fused[#loc65, #loc66])
