!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":28:64)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":28:81)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":53:68)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":53:85)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":73:68)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":73:85)
#loc127 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc125)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc129)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc127)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc16)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %13 = cir.call @__isoc99_sscanf(%10, %12, %1) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc23)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc134)
    cir.brcond %15 ^bb3, ^bb12 loc(#loc135)
  ^bb3:  // pred: ^bb2
    %16 = cir.const #cir.int<0> : !s32i loc(#loc27)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc139)
    cir.brcond %20 ^bb6, ^bb10 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc38)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc40)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb5 loc(#loc137)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc30)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc42)
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc20)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc7)
  } loc(#loc126)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc147)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc144)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc60)
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
    %13 = cir.call @__isoc99_sscanf(%10, %12, %1) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc60)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc151)
    cir.brcond %15 ^bb3, ^bb12 loc(#loc152)
  ^bb3:  // pred: ^bb2
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %20 ^bb6, ^bb10 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc76)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb8 loc(#loc68)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc78)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb5 loc(#loc154)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc68)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc80)
    cir.br ^bb12 loc(#loc59)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc59)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc57)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc44)
  } loc(#loc143)
  cir.func @CWE606_Unchecked_Loop_Condition__char_console_66b_goodB2GSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc164)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc161)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc98)
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
    %13 = cir.call @__isoc99_sscanf(%10, %12, %1) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc98)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %15 ^bb3, ^bb16 loc(#loc169)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc170)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %17 = cir.const #cir.int<10000> : !s32i loc(#loc106)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %18 ^bb5, ^bb14 loc(#loc172)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc176)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc116)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc119)
    cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb10 loc(#loc111)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc111)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc121)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb7 loc(#loc174)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc111)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc123)
    cir.br ^bb14 loc(#loc104)
  ^bb14:  // 2 preds: ^bb4, ^bb13
    cir.br ^bb15 loc(#loc104)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc97)
  ^bb16:  // 2 preds: ^bb2, ^bb15
    cir.br ^bb17 loc(#loc97)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc95)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc82)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_66b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":34:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":28:1)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":46:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":33:9)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":33:13)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":33:16)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":33:19)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":31:5)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":31:30)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":29:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":31:19)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":31:29)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":32:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":45:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":34:9)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":44:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":34:13)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":34:20)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":34:39)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":35:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":37:27)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":37:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:13)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":42:13)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:22)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:18)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:25)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:29)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:27)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":39:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":41:28)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":41:17)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:33)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":38:32)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":43:26)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":43:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":53:1)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":70:1)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":57:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":57:13)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":57:16)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":57:19)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":55:5)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":55:30)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":54:1)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":55:19)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":55:29)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":56:5)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":69:5)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":58:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":68:9)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":58:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":58:20)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":58:26)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":58:39)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":59:9)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":61:27)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":61:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:13)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":66:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:22)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:18)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:25)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:29)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:27)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":63:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":65:28)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":65:17)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:33)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":62:32)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":67:26)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":67:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":73:1)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":93:1)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":77:9)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":77:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":77:16)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":77:19)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":75:5)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":75:30)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":74:1)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":75:19)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":75:29)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":76:5)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":92:5)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":78:9)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":91:9)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":78:13)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":78:20)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":78:26)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":78:39)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":79:9)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":81:13)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":90:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":81:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":81:21)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":82:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":83:31)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":83:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":88:17)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:26)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:22)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:29)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:33)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:31)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":85:17)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":87:32)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":87:21)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:37)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":84:36)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":89:30)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_66b.c":89:17)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc4, #loc5])
#loc126 = loc(fused[#loc6, #loc7])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc10, #loc12])
#loc130 = loc(fused[#loc10, #loc13])
#loc131 = loc(fused[#loc14, #loc15])
#loc132 = loc(fused[#loc19, #loc20])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc25])
#loc135 = loc(fused[#loc26, #loc22])
#loc136 = loc(fused[#loc28, #loc27])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc32, #loc31])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc36, #loc30])
#loc141 = loc(fused[#loc38, #loc37])
#loc142 = loc(fused[#loc40, #loc39])
#loc143 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc47, #loc49])
#loc147 = loc(fused[#loc47, #loc50])
#loc148 = loc(fused[#loc51, #loc52])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc63])
#loc152 = loc(fused[#loc64, #loc59])
#loc153 = loc(fused[#loc66, #loc65])
#loc154 = loc(fused[#loc67, #loc68])
#loc155 = loc(fused[#loc70, #loc69])
#loc156 = loc(fused[#loc71, #loc72])
#loc157 = loc(fused[#loc74, #loc68])
#loc158 = loc(fused[#loc76, #loc75])
#loc159 = loc(fused[#loc78, #loc77])
#loc160 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc85, #loc87])
#loc164 = loc(fused[#loc85, #loc88])
#loc165 = loc(fused[#loc89, #loc90])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc96, #loc97])
#loc168 = loc(fused[#loc98, #loc101])
#loc169 = loc(fused[#loc102, #loc97])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc107, #loc104])
#loc173 = loc(fused[#loc109, #loc108])
#loc174 = loc(fused[#loc110, #loc111])
#loc175 = loc(fused[#loc113, #loc112])
#loc176 = loc(fused[#loc114, #loc115])
#loc177 = loc(fused[#loc117, #loc111])
#loc178 = loc(fused[#loc119, #loc118])
#loc179 = loc(fused[#loc121, #loc120])
