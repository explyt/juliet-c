!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":164:10)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":164:14)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":164:20)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":164:32)
#true = #cir.bool<true> : !cir.bool
#loc297 = loc(fused[#loc97, #loc98])
#loc298 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc260)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc262)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%4) loc(#loc23)
      } do {
        %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
        %4 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %5 = cir.binop(and, %3, %4) : !s32i loc(#loc24)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
        %7 = cir.ternary(%6, true {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc24)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc24)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc24)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc24)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc24)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc24)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc24)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc24)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc24)
          cir.yield %20 : !u32i loc(#loc24)
        }, false {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc24)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc24)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc24)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc24)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc24)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc24)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc24)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc24)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc24)
          %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc24)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc24)
          %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc24)
          cir.yield %24 : !u32i loc(#loc24)
        }) : (!cir.bool) -> !u32i loc(#loc24)
        %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc24)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
        cir.break loc(#loc26)
      } loc(#loc266)
    } loc(#loc266)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
        cir.condition(%4) loc(#loc29)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc270)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc271)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc272)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc270)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc35)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
          %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
          %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc37)
          cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc273)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc275)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc47)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
            } loc(#loc276)
          } loc(#loc274)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc50)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc50)
            cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc278)
            cir.for : cond {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc53)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc279)
              cir.condition(%21) loc(#loc54)
            } body {
              cir.scope {
                cir.scope {
                  %18 = cir.const #cir.int<50> : !u64i loc(#loc282)
                  %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc60)
                  %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                  %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                  %23 = cir.const #cir.int<1> : !u64i loc(#loc283)
                  %24 = cir.const #cir.int<50> : !u64i loc(#loc284)
                  %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
                  %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc60)
                  %27 = cir.cmp(ne, %18, %26) : !u64i, !cir.bool loc(#loc285)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc69)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
                  } loc(#loc286)
                } loc(#loc281)
              } loc(#loc280)
              cir.yield loc(#loc49)
            } step {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc70)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc71)
              cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc287)
              cir.yield loc(#loc277)
            } loc(#loc277)
          } loc(#loc277)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
            %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc74)
            cir.if %17 {
              %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
              %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc77)
            } loc(#loc289)
          } loc(#loc288)
        } loc(#loc269)
        cir.break loc(#loc78)
      } loc(#loc268)
    } loc(#loc268)
    cir.return loc(#loc15)
  } loc(#loc263)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc290)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc293)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc294)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc94)
  cir.func @main(%arg0: !s32i loc(fused[#loc97, #loc98]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc99, #loc100])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc298)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc101)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc102)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc103)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc103)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc104)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc91)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc299)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_16_good() : () -> () loc(#loc106)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc92)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc93)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_16_bad() : () -> () loc(#loc110)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc94)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    cir.return %17 : !s32i loc(#loc301)
  } loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc125)
        cir.condition(%4) loc(#loc125)
      } do {
        %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
        %4 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %5 = cir.binop(and, %3, %4) : !s32i loc(#loc126)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc126)
        %7 = cir.ternary(%6, true {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc126)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc126)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc126)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc126)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc126)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc126)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc126)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc126)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc126)
          cir.yield %20 : !u32i loc(#loc126)
        }, false {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc126)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc126)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc126)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc126)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc126)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc126)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc126)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc126)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc126)
          %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc126)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc126)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc126)
          %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc126)
          cir.yield %24 : !u32i loc(#loc126)
        }) : (!cir.bool) -> !u32i loc(#loc126)
        %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc126)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
        cir.break loc(#loc128)
      } loc(#loc305)
    } loc(#loc305)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc131)
        cir.condition(%4) loc(#loc131)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc309)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc310)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc311)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc135)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc309)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc137)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc310)
          %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc115)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc115)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc142)
            %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc313)
            %14 = cir.ternary(%13, true {
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %16 = cir.const #cir.int<20> : !s32i loc(#loc145)
              %17 = cir.cmp(le, %15, %16) : !s32i, !cir.bool loc(#loc314)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc143)
                cir.yield %19 : !cir.bool loc(#loc143)
              }, false {
                %19 = cir.const #false loc(#loc143)
                cir.yield %19 : !cir.bool loc(#loc143)
              }) : (!cir.bool) -> !cir.bool loc(#loc143)
              cir.yield %18 : !cir.bool loc(#loc143)
            }, false {
              %15 = cir.const #false loc(#loc143)
              cir.yield %15 : !cir.bool loc(#loc143)
            }) : (!cir.bool) -> !cir.bool loc(#loc143)
            cir.if %14 {
              %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc147)
              %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc149)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc149)
              %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc147)
              cir.store %19, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc316)
              cir.scope {
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc154)
                %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc155)
                %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc318)
                cir.if %23 {
                  %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
                  %25 = cir.const #cir.int<1> : !s32i loc(#loc158)
                  cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
                } loc(#loc319)
              } loc(#loc317)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc161)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc161)
                cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc321)
                cir.for : cond {
                  %22 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc163)
                  %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                  %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc164)
                  %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc322)
                  cir.condition(%25) loc(#loc165)
                } body {
                  cir.scope {
                    cir.scope {
                      %22 = cir.const #cir.int<50> : !u64i loc(#loc325)
                      %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc171)
                      %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc172)
                      %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc172)
                      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc172)
                      %27 = cir.const #cir.int<1> : !u64i loc(#loc326)
                      %28 = cir.const #cir.int<50> : !u64i loc(#loc327)
                      %29 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
                      %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc171)
                      %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc328)
                      cir.if %31 {
                        %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc179)
                        %33 = cir.const #cir.int<1> : !s32i loc(#loc180)
                        cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
                      } loc(#loc329)
                    } loc(#loc324)
                  } loc(#loc323)
                  cir.yield loc(#loc160)
                } step {
                  %22 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc181)
                  %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc182)
                  cir.store %23, %3 : !u64i, !cir.ptr<!u64i> loc(#loc330)
                  cir.yield loc(#loc320)
                } loc(#loc320)
              } loc(#loc320)
              cir.scope {
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
                %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc185)
                cir.if %21 {
                  %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
                  %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc188)
                } loc(#loc332)
              } loc(#loc331)
            } loc(#loc315)
          } loc(#loc312)
        } loc(#loc308)
        cir.break loc(#loc189)
      } loc(#loc307)
    } loc(#loc307)
    cir.return loc(#loc117)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc195)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc199)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc199)
        cir.condition(%4) loc(#loc199)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc200)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
        cir.break loc(#loc202)
      } loc(#loc336)
    } loc(#loc336)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc205)
        cir.condition(%4) loc(#loc205)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc340)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc341)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc342)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc209)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc209)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc340)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc211)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc213)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc213)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
          %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc214)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc216)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc216)
          %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc214)
          cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc343)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc221)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc222)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc345)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc224)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc225)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
            } loc(#loc346)
          } loc(#loc344)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc228)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc228)
            cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc348)
            cir.for : cond {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc230)
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc231)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc349)
              cir.condition(%21) loc(#loc232)
            } body {
              cir.scope {
                cir.scope {
                  %18 = cir.const #cir.int<50> : !u64i loc(#loc352)
                  %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc238)
                  %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc239)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc239)
                  %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc239)
                  %23 = cir.const #cir.int<1> : !u64i loc(#loc353)
                  %24 = cir.const #cir.int<50> : !u64i loc(#loc354)
                  %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc244)
                  %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc238)
                  %27 = cir.cmp(ne, %18, %26) : !u64i, !cir.bool loc(#loc355)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc247)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc248)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc247)
                  } loc(#loc356)
                } loc(#loc351)
              } loc(#loc350)
              cir.yield loc(#loc227)
            } step {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc249)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc250)
              cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc357)
              cir.yield loc(#loc347)
            } loc(#loc347)
          } loc(#loc347)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc253)
            %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc253)
            cir.if %17 {
              %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc255)
              %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc256)
            } loc(#loc359)
          } loc(#loc358)
        } loc(#loc339)
        cir.break loc(#loc257)
      } loc(#loc338)
    } loc(#loc338)
    cir.return loc(#loc191)
  } loc(#loc333)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":40:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":735:1)
#loc10 = loc("/usr/include/stdio.h":736:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":62:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":29:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":34:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":29:11)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":32:17)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":33:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":35:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":61:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":35:11)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":37:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":59:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":38:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":38:24)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":39:13)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":39:27)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":40:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:21)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:41)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":45:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:17)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:26)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":43:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":44:17)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":44:22)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":54:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:22)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:18)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:25)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:37)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:27)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":49:13)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:17)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":53:17)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:21)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:36)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:41)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:58)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:69)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:72)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:87)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:90)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:95)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":51:17)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":52:21)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":52:26)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:45)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:44)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":55:13)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":58:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":55:17)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":56:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":57:24)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":57:17)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":60:9)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":149:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":153:1)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":151:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":151:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":152:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":152:13)
#loc85 = loc("/usr/include/stdlib.h":575:1)
#loc86 = loc("/usr/include/stdlib.h":575:41)
#loc87 = loc("/usr/include/time.h":76:1)
#loc88 = loc("/usr/include/time.h":76:38)
#loc89 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc90 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":169:15)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":171:15)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":174:15)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":176:15)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":164:1)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":179:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":165:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":167:27)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":167:22)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":167:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":169:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":170:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":170:53)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":171:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":174:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":175:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":175:52)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":176:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":178:12)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":178:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":85:36)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":69:1)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":106:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":71:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":71:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:14)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":74:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":79:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":74:11)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":77:17)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":77:9)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":78:9)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":80:5)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":105:5)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":80:11)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":82:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":103:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":83:13)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":83:24)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":84:13)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":84:27)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":85:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":102:13)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:25)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:27)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:30)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:39)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":88:13)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:25)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:31)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:41)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:17)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:45)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:17)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":93:17)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:21)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:30)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":91:17)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":92:21)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":92:26)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:17)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":97:17)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:26)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:22)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:29)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:41)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:31)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":95:17)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:21)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:108)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:25)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:40)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:45)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:52)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:62)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:73)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:76)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:91)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:94)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:99)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:102)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:107)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:49)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:48)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":98:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":101:17)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":98:21)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":99:17)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":100:28)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":100:21)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":104:9)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":109:1)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":147:1)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":111:5)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":111:9)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:14)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:13)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:5)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":114:5)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":119:5)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":114:11)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":117:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":117:9)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":118:9)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":120:5)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":146:5)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":120:11)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":122:9)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":144:9)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":123:13)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":123:24)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":124:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":124:27)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":125:13)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":125:36)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:21)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:27)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:37)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:13)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:41)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:13)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":130:13)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:17)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:26)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":128:13)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":129:17)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":129:22)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:13)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":139:13)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:22)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:18)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:25)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:37)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:27)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":134:13)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:17)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":138:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:21)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:36)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:41)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:48)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:58)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:69)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:72)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:87)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:90)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:95)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":136:17)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":137:21)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":137:26)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:45)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:44)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":140:13)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":143:13)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":140:17)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":141:13)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":142:24)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":142:17)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":145:9)
#loc258 = loc(fused[#loc1, #loc2])
#loc259 = loc(fused[#loc4, #loc5])
#loc260 = loc(fused[#loc7, #loc8])
#loc261 = loc(fused[#loc9, #loc10])
#loc262 = loc(fused[#loc12, #loc13])
#loc263 = loc(fused[#loc14, #loc15])
#loc264 = loc(fused[#loc16, #loc17])
#loc265 = loc(fused[#loc20, #loc18])
#loc266 = loc(fused[#loc21, #loc22])
#loc267 = loc(fused[#loc25, #loc24])
#loc268 = loc(fused[#loc27, #loc28])
#loc269 = loc(fused[#loc30, #loc31])
#loc270 = loc(fused[#loc32, #loc33])
#loc271 = loc(fused[#loc34, #loc35])
#loc272 = loc(fused[#loc36, #loc3])
#loc273 = loc(fused[#loc39, #loc40])
#loc274 = loc(fused[#loc41, #loc42])
#loc275 = loc(fused[#loc43, #loc44])
#loc276 = loc(fused[#loc45, #loc42])
#loc277 = loc(fused[#loc48, #loc49])
#loc278 = loc(fused[#loc51, #loc50])
#loc279 = loc(fused[#loc52, #loc53])
#loc280 = loc(fused[#loc55, #loc49])
#loc281 = loc(fused[#loc56, #loc57])
#loc282 = loc(fused[#loc58, #loc59])
#loc283 = loc(fused[#loc61, #loc62])
#loc284 = loc(fused[#loc63, #loc64])
#loc285 = loc(fused[#loc58, #loc66])
#loc286 = loc(fused[#loc67, #loc57])
#loc287 = loc(fused[#loc71, #loc70])
#loc288 = loc(fused[#loc72, #loc73])
#loc289 = loc(fused[#loc75, #loc73])
#loc290 = loc(fused[#loc79, #loc80])
#loc291 = loc(fused[#loc81, #loc82])
#loc292 = loc(fused[#loc83, #loc84])
#loc293 = loc(fused[#loc85, #loc86])
#loc294 = loc(fused[#loc87, #loc88])
#loc295 = loc(fused[#loc89, #loc90])
#loc296 = loc(fused[#loc95, #loc96])
#loc299 = loc(fused[#loc106, #loc107])
#loc300 = loc(fused[#loc110, #loc111])
#loc301 = loc(fused[#loc114, #loc113])
#loc302 = loc(fused[#loc116, #loc117])
#loc303 = loc(fused[#loc118, #loc119])
#loc304 = loc(fused[#loc122, #loc120])
#loc305 = loc(fused[#loc123, #loc124])
#loc306 = loc(fused[#loc127, #loc126])
#loc307 = loc(fused[#loc129, #loc130])
#loc308 = loc(fused[#loc132, #loc133])
#loc309 = loc(fused[#loc134, #loc135])
#loc310 = loc(fused[#loc136, #loc137])
#loc311 = loc(fused[#loc138, #loc115])
#loc312 = loc(fused[#loc139, #loc140])
#loc313 = loc(fused[#loc141, #loc142])
#loc314 = loc(fused[#loc144, #loc145])
#loc315 = loc(fused[#loc146, #loc140])
#loc316 = loc(fused[#loc150, #loc151])
#loc317 = loc(fused[#loc152, #loc153])
#loc318 = loc(fused[#loc154, #loc155])
#loc319 = loc(fused[#loc156, #loc153])
#loc320 = loc(fused[#loc159, #loc160])
#loc321 = loc(fused[#loc162, #loc161])
#loc322 = loc(fused[#loc163, #loc164])
#loc323 = loc(fused[#loc166, #loc160])
#loc324 = loc(fused[#loc167, #loc168])
#loc325 = loc(fused[#loc169, #loc170])
#loc326 = loc(fused[#loc173, #loc174])
#loc327 = loc(fused[#loc175, #loc176])
#loc328 = loc(fused[#loc169, #loc178])
#loc329 = loc(fused[#loc179, #loc168])
#loc330 = loc(fused[#loc182, #loc181])
#loc331 = loc(fused[#loc183, #loc184])
#loc332 = loc(fused[#loc186, #loc184])
#loc333 = loc(fused[#loc190, #loc191])
#loc334 = loc(fused[#loc192, #loc193])
#loc335 = loc(fused[#loc196, #loc194])
#loc336 = loc(fused[#loc197, #loc198])
#loc337 = loc(fused[#loc201, #loc200])
#loc338 = loc(fused[#loc203, #loc204])
#loc339 = loc(fused[#loc206, #loc207])
#loc340 = loc(fused[#loc208, #loc209])
#loc341 = loc(fused[#loc210, #loc211])
#loc342 = loc(fused[#loc212, #loc213])
#loc343 = loc(fused[#loc217, #loc218])
#loc344 = loc(fused[#loc219, #loc220])
#loc345 = loc(fused[#loc221, #loc222])
#loc346 = loc(fused[#loc223, #loc220])
#loc347 = loc(fused[#loc226, #loc227])
#loc348 = loc(fused[#loc229, #loc228])
#loc349 = loc(fused[#loc230, #loc231])
#loc350 = loc(fused[#loc233, #loc227])
#loc351 = loc(fused[#loc234, #loc235])
#loc352 = loc(fused[#loc236, #loc237])
#loc353 = loc(fused[#loc240, #loc241])
#loc354 = loc(fused[#loc242, #loc243])
#loc355 = loc(fused[#loc236, #loc245])
#loc356 = loc(fused[#loc246, #loc235])
#loc357 = loc(fused[#loc250, #loc249])
#loc358 = loc(fused[#loc251, #loc252])
#loc359 = loc(fused[#loc254, #loc252])
