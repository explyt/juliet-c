!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":114:10)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":114:14)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":114:20)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":114:32)
#loc143 = loc(fused[#loc47, #loc48])
#loc144 = loc(fused[#loc49, #loc50])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc127)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %5 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc20)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc25)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %15 = cir.call @fread(%7, %8, %12, %14) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc20)
    cir.br ^bb6 loc(#loc19)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc28)
  ^bb7:  // pred: ^bb2
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc130)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_15_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_15_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.return %17 : !s32i loc(#loc147)
  } loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc74)
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc72)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb12 loc(#loc78)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc149)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc149)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.br ^bb7 loc(#loc153)
  ^bb7:  // pred: ^bb6
    %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc83)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc155)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc88)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc88)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
    %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc83)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc91)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc91)
    %22 = cir.cmp(ne, %17, %21) : !u64i, !cir.bool loc(#loc156)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc157)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc65)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc95)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc73)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc67)
  } loc(#loc148)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc104)
    cir.br ^bb2 loc(#loc102)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc102)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc159)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb6 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc110)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc165)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc115)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc115)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
    %15 = cir.call @fread(%7, %8, %12, %14) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc110)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc118)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc118)
    %20 = cir.cmp(ne, %15, %19) : !u64i, !cir.bool loc(#loc166)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc167)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc121)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc109)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc107)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc123)
  ^bb11:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc103)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc97)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":728:1)
#loc2 = loc("/usr/include/stdio.h":730:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":40:19)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":24:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":43:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":32:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":32:32)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":33:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":33:23)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":26:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":42:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":26:12)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":28:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":29:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":36:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:23)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:15)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:29)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:40)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:52)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:56)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":35:60)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":37:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":40:9)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":41:9)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":99:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":103:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":101:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":101:11)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":102:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":102:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":119:15)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":121:15)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":124:15)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":126:15)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":114:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":129:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":115:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":117:27)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":117:22)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":117:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":119:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":120:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":120:55)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":121:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":124:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":125:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":125:54)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":126:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":128:12)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":128:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":67:23)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":50:1)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":72:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":62:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":62:32)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":63:9)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":63:23)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":52:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":71:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":52:12)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":54:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":56:19)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":56:9)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":57:9)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":59:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":69:5)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:9)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":68:9)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:13)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:27)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:19)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:33)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:44)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:56)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:60)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:64)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:74)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":65:78)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":66:9)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":67:13)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":70:5)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":75:1)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":97:1)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":83:9)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":83:32)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":84:9)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":84:23)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":77:5)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":96:5)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":77:12)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":79:5)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":80:5)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":90:5)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:9)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":89:9)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:13)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:27)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:19)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:33)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:44)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:56)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:60)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:64)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:74)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":86:78)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":87:9)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":88:23)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":88:13)
#loc123 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":91:5)
#loc124 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":94:19)
#loc125 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":94:9)
#loc126 = loc("CWE252_Unchecked_Return_Value__char_fread_15.c":95:9)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc8, #loc9])
#loc131 = loc(fused[#loc10, #loc11])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc14, #loc15])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc22, #loc21])
#loc136 = loc(fused[#loc23, #loc24])
#loc137 = loc(fused[#loc31, #loc32])
#loc138 = loc(fused[#loc33, #loc34])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc60, #loc61])
#loc147 = loc(fused[#loc64, #loc63])
#loc148 = loc(fused[#loc66, #loc67])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc72, #loc73])
#loc152 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc81, #loc82])
#loc154 = loc(fused[#loc85, #loc84])
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc83, #loc92])
#loc157 = loc(fused[#loc93, #loc82])
#loc158 = loc(fused[#loc96, #loc97])
#loc159 = loc(fused[#loc98, #loc99])
#loc160 = loc(fused[#loc100, #loc101])
#loc161 = loc(fused[#loc102, #loc103])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc108, #loc109])
#loc164 = loc(fused[#loc112, #loc111])
#loc165 = loc(fused[#loc113, #loc114])
#loc166 = loc(fused[#loc110, #loc119])
#loc167 = loc(fused[#loc120, #loc109])
