!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc124)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc125)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc126)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc127)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc132)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc135)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc135)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc28)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
    %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc38)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc140)
    %25 = cir.const #cir.int<1> : !u64i loc(#loc141)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc142)
    cir.libc.memmove %26 bytes from %18 to %16 : !cir.ptr<!void>, !u64i loc(#loc143)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc14)
  } loc(#loc130)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc144)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc150)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc153)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc153)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc65)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb4 loc(#loc68)
  ^bb3:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc73)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc64)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    cir.copy %16 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc80)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc81)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc81)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc83)
    %26 = cir.binop(add, %23, %25) : !u64i loc(#loc158)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc159)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc160)
    cir.libc.memmove %28 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc161)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc56)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc164)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc167)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc167)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc106)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.br ^bb3 loc(#loc100)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc124)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc124)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc113)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc114)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc115)
    %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc116)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc172)
    %25 = cir.const #cir.int<1> : !u64i loc(#loc173)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc174)
    cir.libc.memmove %26 bytes from %18 to %16 : !cir.ptr<!void>, !u64i loc(#loc175)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc92)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":94:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":94:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":72:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":72:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":41:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":41:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":28:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":47:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":30:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":31:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":31:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":32:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":32:29)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":39:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":33:8)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":33:26)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":34:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":37:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":37:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":38:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":38:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":38:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":38:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":40:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":46:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:32)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:39)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:49)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:54)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:65)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":44:66)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":45:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":45:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":102:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":106:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":104:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":104:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":105:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":105:14)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":62:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":54:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":78:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":56:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":56:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":57:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":57:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":58:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":58:29)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":59:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":70:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":59:8)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":59:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":60:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":63:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":65:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":62:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":68:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":68:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":69:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":69:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":69:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":69:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":71:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":77:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:32)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:39)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:49)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:54)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:65)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":75:66)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":76:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":76:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":81:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":100:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":83:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":83:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":84:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":84:26)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":85:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":85:29)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":86:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":92:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":86:8)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":86:26)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":87:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":90:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":90:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":91:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":91:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":91:14)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":91:15)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":93:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":99:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:32)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:39)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:49)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:54)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:65)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":97:66)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":98:19)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_11.c":98:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc13, #loc14])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc19, #loc20])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc22])
#loc137 = loc(fused[#loc27, #loc26])
#loc138 = loc(fused[#loc29, #loc28])
#loc139 = loc(fused[#loc32, #loc33])
#loc140 = loc(fused[#loc36, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc41, #loc40])
#loc143 = loc(fused[#loc42, #loc43])
#loc144 = loc(fused[#loc46, #loc47])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc55, #loc56])
#loc149 = loc(fused[#loc57, #loc58])
#loc150 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc61, #loc62])
#loc152 = loc(fused[#loc63, #loc64])
#loc153 = loc(fused[#loc65, #loc66])
#loc154 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc155 = loc(fused[#loc72, #loc71])
#loc156 = loc(fused[#loc74, #loc73])
#loc157 = loc(fused[#loc77, #loc78])
#loc158 = loc(fused[#loc81, #loc83])
#loc159 = loc(fused[#loc84, #loc85])
#loc160 = loc(fused[#loc86, #loc85])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc91, #loc92])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc100])
#loc169 = loc(fused[#loc105, #loc104])
#loc170 = loc(fused[#loc107, #loc106])
#loc171 = loc(fused[#loc110, #loc111])
#loc172 = loc(fused[#loc114, #loc116])
#loc173 = loc(fused[#loc117, #loc118])
#loc174 = loc(fused[#loc119, #loc118])
#loc175 = loc(fused[#loc120, #loc121])
