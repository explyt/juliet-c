!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc133)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc15)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc141)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%13) loc(#loc19)
      } body {
        cir.scope {
          cir.scope {
            %10 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
            cir.scope {
              %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc146)
              cir.scope {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc31)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc31)
                cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc148)
                cir.for : cond {
                  %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc33)
                  %16 = cir.const #cir.int<100> : !s32i loc(#loc34)
                  %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
                  %18 = cir.cmp(lt, %15, %17) : !u64i, !s32i loc(#loc149)
                  %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc35)
                  cir.condition(%19) loc(#loc35)
                } body {
                  cir.scope {
                    %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
                    %16 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                    %17 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc151)
                    %20 = cir.const #cir.int<1> : !s32i loc(#loc41)
                    %21 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc42)
                    %22 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
                    %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
                    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
                    cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc152)
                  } loc(#loc150)
                  cir.yield loc(#loc30)
                } step {
                  %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                  %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc46)
                  cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc153)
                  cir.yield loc(#loc147)
                } loc(#loc147)
              } loc(#loc147)
            } loc(#loc145)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
            cir.store %11, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
          } loc(#loc143)
        } loc(#loc142)
        cir.yield loc(#loc14)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc50)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
        cir.yield loc(#loc139)
      } loc(#loc139)
    } loc(#loc139)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc55)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc56)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.return loc(#loc6)
  } loc(#loc135)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc156)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc78)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc167)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc82)
        cir.condition(%13) loc(#loc82)
      } body {
        cir.scope {
          cir.scope {
            %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc170)
            %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc88)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc89)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc89)
            %14 = cir.const #cir.int<8> : !u64i loc(#loc171)
            %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc172)
            %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
            cir.store %17, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
            cir.scope {
              %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc175)
              %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc96)
              cir.if %23 {
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
                cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc98)
                %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
                %27 = cir.const #cir.int<1> : !s32i loc(#loc100)
                cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
              } loc(#loc176)
            } loc(#loc174)
            cir.scope {
              %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc107)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc107)
                cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc180)
                cir.for : cond {
                  %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc109)
                  %23 = cir.const #cir.int<100> : !s32i loc(#loc110)
                  %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc110)
                  %25 = cir.cmp(lt, %22, %24) : !u64i, !s32i loc(#loc181)
                  %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc111)
                  cir.condition(%26) loc(#loc111)
                } body {
                  cir.scope {
                    %22 = cir.const #cir.int<1> : !s32i loc(#loc113)
                    %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
                    %24 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc115)
                    %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
                    %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc183)
                    %27 = cir.const #cir.int<1> : !s32i loc(#loc117)
                    %28 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
                    %29 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc119)
                    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
                    %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
                    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc184)
                  } loc(#loc182)
                  cir.yield loc(#loc106)
                } step {
                  %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                  %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc122)
                  cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc185)
                  cir.yield loc(#loc179)
                } loc(#loc179)
              } loc(#loc179)
            } loc(#loc177)
            %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            cir.store %18, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc186)
          } loc(#loc169)
        } loc(#loc168)
        cir.yield loc(#loc77)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc126)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc165)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc130)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc132)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.return loc(#loc69)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":47:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":25:9)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":26:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":26:21)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":27:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":43:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:16)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":29:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":30:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":42:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":32:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":32:41)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":33:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":40:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":34:17)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":34:24)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":39:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:26)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:22)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:29)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:33)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:31)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":36:17)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":37:44)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":37:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":37:21)
#loc40 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":38:44)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":38:32)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":38:21)
#loc44 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:39)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":35:38)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":41:20)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":41:13)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:24)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":28:23)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":44:22)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":44:27)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":44:28)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":44:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":46:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":46:10)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":85:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":88:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":87:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":87:13)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":66:27)
#loc66 = loc("/usr/include/stdlib.h":756:1)
#loc67 = loc("/usr/include/stdlib.h":756:70)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":54:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":83:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":56:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":56:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":57:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":57:21)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":58:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":58:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":79:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:16)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:20)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:18)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":60:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":61:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":78:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:91)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:59)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:66)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:70)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":63:90)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":64:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":68:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":64:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":64:31)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":64:28)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":65:13)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":66:17)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":67:17)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":67:22)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":69:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":76:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":70:17)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":70:24)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:17)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":75:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:26)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:22)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:29)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:33)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:31)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":72:17)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":73:44)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":73:21)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":73:32)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":73:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":74:44)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":74:21)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":74:32)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":74:33)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:39)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":71:38)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":77:20)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":77:13)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:24)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":59:23)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":80:22)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":80:27)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":80:28)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":80:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":82:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_17.c":82:10)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc12, #loc11])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc16, #loc15])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc20, #loc14])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc32, #loc31])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc36, #loc30])
#loc151 = loc(fused[#loc39, #loc37])
#loc152 = loc(fused[#loc43, #loc41])
#loc153 = loc(fused[#loc46, #loc45])
#loc154 = loc(fused[#loc48, #loc47])
#loc155 = loc(fused[#loc50, #loc49])
#loc156 = loc(fused[#loc57, #loc58])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc66, #loc67])
#loc161 = loc(fused[#loc68, #loc69])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc75, #loc74])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc79, #loc78])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc83, #loc77])
#loc169 = loc(fused[#loc84, #loc85])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc89, #loc91])
#loc173 = loc(fused[#loc88, #loc87])
#loc174 = loc(fused[#loc92, #loc93])
#loc175 = loc(fused[#loc94, #loc95])
#loc176 = loc(fused[#loc97, #loc93])
#loc177 = loc(fused[#loc101, #loc102])
#loc178 = loc(fused[#loc103, #loc104])
#loc179 = loc(fused[#loc105, #loc106])
#loc180 = loc(fused[#loc108, #loc107])
#loc181 = loc(fused[#loc109, #loc110])
#loc182 = loc(fused[#loc112, #loc106])
#loc183 = loc(fused[#loc114, #loc113])
#loc184 = loc(fused[#loc118, #loc117])
#loc185 = loc(fused[#loc122, #loc121])
#loc186 = loc(fused[#loc124, #loc123])
#loc187 = loc(fused[#loc126, #loc125])
