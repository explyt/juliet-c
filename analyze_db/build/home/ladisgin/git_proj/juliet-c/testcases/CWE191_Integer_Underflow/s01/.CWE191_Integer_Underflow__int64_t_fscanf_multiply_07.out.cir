!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:10)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:14)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:20)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:32)
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc227)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc228)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc230)
  cir.func private @printLongLongLine(!s64i) loc(#loc231)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc234)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc236)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc230)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc230)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc22)
      } loc(#loc237)
    } loc(#loc235)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc239)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc32)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc242)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc244)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc36)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc35)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc36)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc244)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc37)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc38)
          } loc(#loc243)
        } loc(#loc241)
      } loc(#loc240)
    } loc(#loc238)
    cir.return loc(#loc12)
  } loc(#loc232)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc40)
  } loc(#loc245)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc250)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %17 : !s32i loc(#loc258)
  } loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc260)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc85)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc261)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc263)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc92)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc265)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc265)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc92)
      } loc(#loc264)
    } loc(#loc262)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc99)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc267)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc106)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc107)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc270)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc111)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc112)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc112)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc112)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc112)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc113)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc113)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc273)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc274)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc276)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc120)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc119)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc119)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc120)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc276)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc121)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc122)
              } else {
                %19 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc80)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc80)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc123)
              } loc(#loc275)
            } loc(#loc272)
          } loc(#loc271)
        } loc(#loc269)
      } loc(#loc268)
    } loc(#loc266)
    cir.return loc(#loc82)
  } loc(#loc259)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc278)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc128)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc279)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc133)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc281)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc135)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc136)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc283)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc283)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc135)
      } loc(#loc282)
    } loc(#loc280)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc142)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc285)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc146)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc147)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc147)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc288)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc151)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc152)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc152)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc152)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc152)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc153)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc153)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc291)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !cir.bool loc(#loc292)
              cir.if %18 {
                %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc294)
                %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc160)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc159)
                %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc159)
                %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc160)
                cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc294)
                %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc161)
                cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc162)
              } else {
                %19 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc163)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc163)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc164)
              } loc(#loc293)
            } loc(#loc290)
          } loc(#loc289)
        } loc(#loc287)
      } loc(#loc286)
    } loc(#loc284)
    cir.return loc(#loc125)
  } loc(#loc277)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc169)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc297)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc299)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc179)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc180)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc181)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc181)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc186)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc303)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc190)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc191)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc191)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc306)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc308)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc195)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc194)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc194)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc195)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc308)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc196)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc197)
          } loc(#loc307)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc302)
    cir.return loc(#loc166)
  } loc(#loc295)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc202)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc311)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc207)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc313)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc209)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc210)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc210)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc315)
      } loc(#loc314)
    } loc(#loc312)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc215)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc317)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc219)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc220)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc220)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !cir.bool loc(#loc320)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc322)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc224)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc223)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc223)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc224)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc322)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc225)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc226)
          } loc(#loc321)
        } loc(#loc319)
      } loc(#loc318)
    } loc(#loc316)
    cir.return loc(#loc199)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":28:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":46:1)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:13)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:12)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":36:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:8)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:20)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":33:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:9)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:17)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":45:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:8)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:20)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":38:5)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:9)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":44:9)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:12)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:19)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":40:9)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:13)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:37)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:30)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:31)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:13)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":160:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":166:1)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:14)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:5)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:14)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:14)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":182:15)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":184:15)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":187:15)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":189:15)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:1)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":192:1)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":178:1)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:27)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:22)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":182:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":183:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":183:63)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":184:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":187:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":188:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":188:62)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":189:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":191:12)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":191:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:19)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:27)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":53:1)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":83:1)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:13)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:12)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":61:5)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:8)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:20)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":58:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:17)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:24)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:28)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":82:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:8)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:20)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":63:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":66:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":68:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:9)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:9)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":81:9)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:12)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:19)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":70:9)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:13)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":80:13)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:17)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:25)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:35)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:36)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":73:13)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":76:13)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":78:13)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:17)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:41)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:34)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:35)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:17)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":86:1)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":111:1)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:5)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:13)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:12)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:5)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:5)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":94:5)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:8)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:20)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":91:5)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:9)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:17)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:24)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:28)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:5)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":110:5)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:8)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:20)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":96:5)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:9)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":109:9)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:12)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:19)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":98:9)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:13)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":108:13)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:17)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:25)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:35)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:36)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":101:13)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":104:13)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":106:13)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:17)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:41)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:34)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:35)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:17)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:27)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:17)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":114:1)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":137:1)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:5)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:13)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:12)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:5)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:5)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":127:5)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:8)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:20)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":119:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":122:5)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":124:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:19)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:9)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:17)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:16)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:9)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:5)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":136:5)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:8)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:20)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":129:5)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:9)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":135:9)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:12)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:19)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":131:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:13)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:37)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:30)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:31)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:13)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":140:1)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":158:1)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:5)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:13)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:12)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:5)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:5)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":148:5)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:8)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:20)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":145:5)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:17)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:16)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:9)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:5)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":157:5)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:8)
#loc215 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:20)
#loc216 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":150:5)
#loc217 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:9)
#loc218 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":156:9)
#loc219 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:12)
#loc220 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:19)
#loc221 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":152:9)
#loc222 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:13)
#loc223 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:37)
#loc224 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:30)
#loc225 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:31)
#loc226 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:13)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc232 = loc(fused[#loc11, #loc12])
#loc233 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc16, #loc15])
#loc235 = loc(fused[#loc17, #loc18])
#loc236 = loc(fused[#loc19, #loc20])
#loc237 = loc(fused[#loc21, #loc18])
#loc238 = loc(fused[#loc24, #loc25])
#loc239 = loc(fused[#loc26, #loc27])
#loc240 = loc(fused[#loc28, #loc25])
#loc241 = loc(fused[#loc29, #loc30])
#loc242 = loc(fused[#loc31, #loc32])
#loc243 = loc(fused[#loc33, #loc30])
#loc244 = loc(fused[#loc34, #loc35])
#loc245 = loc(fused[#loc39, #loc40])
#loc246 = loc(fused[#loc41, #loc42])
#loc247 = loc(fused[#loc43, #loc44])
#loc248 = loc(fused[#loc45, #loc46])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc51, #loc52])
#loc252 = loc(fused[#loc53, #loc54])
#loc253 = loc(fused[#loc59, #loc60])
#loc256 = loc(fused[#loc70, #loc71])
#loc257 = loc(fused[#loc74, #loc75])
#loc258 = loc(fused[#loc78, #loc77])
#loc259 = loc(fused[#loc81, #loc82])
#loc260 = loc(fused[#loc83, #loc84])
#loc261 = loc(fused[#loc86, #loc85])
#loc262 = loc(fused[#loc87, #loc88])
#loc263 = loc(fused[#loc89, #loc90])
#loc264 = loc(fused[#loc91, #loc88])
#loc265 = loc(fused[#loc94, #loc95])
#loc266 = loc(fused[#loc96, #loc97])
#loc267 = loc(fused[#loc98, #loc99])
#loc268 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc269 = loc(fused[#loc104, #loc105])
#loc270 = loc(fused[#loc106, #loc107])
#loc271 = loc(fused[#loc108, #loc105])
#loc272 = loc(fused[#loc109, #loc110])
#loc273 = loc(fused[#loc112, #loc113])
#loc274 = loc(fused[#loc111, #loc114])
#loc275 = loc(fused[#loc115, #loc116, #loc117, #loc110])
#loc276 = loc(fused[#loc118, #loc119])
#loc277 = loc(fused[#loc124, #loc125])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc129, #loc128])
#loc280 = loc(fused[#loc130, #loc131])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc134, #loc131])
#loc283 = loc(fused[#loc137, #loc138])
#loc284 = loc(fused[#loc139, #loc140])
#loc285 = loc(fused[#loc141, #loc142])
#loc286 = loc(fused[#loc143, #loc140])
#loc287 = loc(fused[#loc144, #loc145])
#loc288 = loc(fused[#loc146, #loc147])
#loc289 = loc(fused[#loc148, #loc145])
#loc290 = loc(fused[#loc149, #loc150])
#loc291 = loc(fused[#loc152, #loc153])
#loc292 = loc(fused[#loc151, #loc154])
#loc293 = loc(fused[#loc155, #loc156, #loc157, #loc150])
#loc294 = loc(fused[#loc158, #loc159])
#loc295 = loc(fused[#loc165, #loc166])
#loc296 = loc(fused[#loc167, #loc168])
#loc297 = loc(fused[#loc170, #loc169])
#loc298 = loc(fused[#loc171, #loc172])
#loc299 = loc(fused[#loc173, #loc174])
#loc300 = loc(fused[#loc175, #loc176, #loc177, #loc172])
#loc301 = loc(fused[#loc182, #loc180])
#loc302 = loc(fused[#loc183, #loc184])
#loc303 = loc(fused[#loc185, #loc186])
#loc304 = loc(fused[#loc187, #loc184])
#loc305 = loc(fused[#loc188, #loc189])
#loc306 = loc(fused[#loc190, #loc191])
#loc307 = loc(fused[#loc192, #loc189])
#loc308 = loc(fused[#loc193, #loc194])
#loc309 = loc(fused[#loc198, #loc199])
#loc310 = loc(fused[#loc200, #loc201])
#loc311 = loc(fused[#loc203, #loc202])
#loc312 = loc(fused[#loc204, #loc205])
#loc313 = loc(fused[#loc206, #loc207])
#loc314 = loc(fused[#loc208, #loc205])
#loc315 = loc(fused[#loc211, #loc209])
#loc316 = loc(fused[#loc212, #loc213])
#loc317 = loc(fused[#loc214, #loc215])
#loc318 = loc(fused[#loc216, #loc213])
#loc319 = loc(fused[#loc217, #loc218])
#loc320 = loc(fused[#loc219, #loc220])
#loc321 = loc(fused[#loc221, #loc218])
#loc322 = loc(fused[#loc222, #loc223])
