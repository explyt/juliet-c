!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":101:10)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":101:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":101:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":101:32)
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc67])
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc130)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc131)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc18)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc138)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        %18 = cir.const #cir.int<67> : !s32i loc(#loc35)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc36)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc36)
        cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc40)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc41)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc41)
        %28 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
        %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc43)
        cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc140)
        %30 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc44)
        %31 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc46)
        %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
        %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
        %36 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %37 = cir.call @snprintf(%31, %33, %35, %36) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
        %38 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      } loc(#loc137)
    } loc(#loc135)
    cir.return loc(#loc7)
  } loc(#loc127)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc154)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc155)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc94)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc162)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
        %18 = cir.const #cir.int<67> : !s32i loc(#loc109)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc110)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc110)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc110)
        cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc114)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc115)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc115)
        %28 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
        %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc117)
        cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc164)
        %30 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc118)
        %31 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc120)
        %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc121)
        %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc121)
        %36 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
        %37 = cir.call @snprintf(%31, %33, %35, %36) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
        %38 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } loc(#loc161)
    } loc(#loc159)
    cir.return loc(#loc83)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":53:33)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":35:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":57:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":37:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":37:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":38:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":38:83)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":39:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":39:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":40:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":40:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":43:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":43:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":44:15)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":44:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":44:10)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":44:11)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":45:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":29:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":45:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":46:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":56:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":47:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":47:31)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":30:12)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":48:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":55:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":49:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":49:28)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:33)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:37)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":50:38)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":51:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":51:20)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":51:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":51:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":53:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":53:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":53:28)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":53:39)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":54:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":54:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":87:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":90:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":89:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":89:13)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":106:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":108:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":111:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":113:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":101:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":116:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":102:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":104:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":104:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":104:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":106:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":107:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":107:78)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":108:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":111:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":112:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":112:77)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":113:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":115:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":115:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":64:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":85:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":66:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":66:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":67:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":67:83)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":68:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":68:26)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":69:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":69:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":71:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":71:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":72:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":72:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":72:10)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":72:11)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":73:26)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":73:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":74:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":84:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":75:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":75:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":76:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":83:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":77:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":77:28)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:28)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:33)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:37)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":78:38)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":79:29)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":79:20)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":79:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":79:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":81:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":81:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":81:28)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":81:33)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":81:39)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":82:23)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_34.c":82:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc4, #loc5])
#loc127 = loc(fused[#loc6, #loc7])
#loc128 = loc(fused[#loc8, #loc9])
#loc129 = loc(fused[#loc10, #loc11])
#loc130 = loc(fused[#loc12, #loc13])
#loc131 = loc(fused[#loc14, #loc15])
#loc132 = loc(fused[#loc17, #loc16])
#loc133 = loc(fused[#loc19, #loc18])
#loc134 = loc(fused[#loc24, #loc22])
#loc135 = loc(fused[#loc25, #loc26])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc30, #loc31])
#loc138 = loc(fused[#loc32, #loc33])
#loc139 = loc(fused[#loc38, #loc39])
#loc140 = loc(fused[#loc43, #loc40])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc62, #loc63])
#loc148 = loc(fused[#loc73, #loc74])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc81, #loc80])
#loc151 = loc(fused[#loc82, #loc83])
#loc152 = loc(fused[#loc84, #loc85])
#loc153 = loc(fused[#loc86, #loc87])
#loc154 = loc(fused[#loc88, #loc89])
#loc155 = loc(fused[#loc90, #loc91])
#loc156 = loc(fused[#loc93, #loc92])
#loc157 = loc(fused[#loc95, #loc94])
#loc158 = loc(fused[#loc99, #loc98])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc112, #loc113])
#loc164 = loc(fused[#loc117, #loc114])
