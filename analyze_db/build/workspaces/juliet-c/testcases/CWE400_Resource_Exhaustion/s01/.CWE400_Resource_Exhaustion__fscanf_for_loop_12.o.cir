!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_for_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc213)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc214)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_for_loop_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc221)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc221)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc20)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc20)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc25)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc25)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc27)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
      } loc(#loc222)
    } loc(#loc220)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc225)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc225)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc31)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc31)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc228)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc39)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc39)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc228)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc42)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc230)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc44)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc45)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc231)
              cir.condition(%15) loc(#loc46)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc10)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc10)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc48)
              } loc(#loc232)
              cir.yield loc(#loc41)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc50)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc233)
              cir.yield loc(#loc229)
            } loc(#loc229)
          } loc(#loc229)
        } loc(#loc227)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc235)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc54)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc235)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc237)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc61)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc238)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc59)
                cir.yield %18 : !cir.bool loc(#loc59)
              }, false {
                %18 = cir.const #false loc(#loc59)
                cir.yield %18 : !cir.bool loc(#loc59)
              }) : (!cir.bool) -> !cir.bool loc(#loc59)
              cir.yield %17 : !cir.bool loc(#loc59)
            }, false {
              %14 = cir.const #false loc(#loc59)
              cir.yield %14 : !cir.bool loc(#loc59)
            }) : (!cir.bool) -> !cir.bool loc(#loc59)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc65)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc241)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc68)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc242)
                  cir.condition(%19) loc(#loc69)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc71)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc71)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc72)
                  } loc(#loc243)
                  cir.yield loc(#loc64)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc74)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc244)
                  cir.yield loc(#loc240)
                } loc(#loc240)
              } loc(#loc240)
            } loc(#loc239)
          } loc(#loc236)
        } loc(#loc234)
      } loc(#loc226)
    } loc(#loc224)
    cir.return loc(#loc12)
  } loc(#loc217)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_for_loop_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc245)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc86)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc252)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc252)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc90)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc90)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc95)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc97)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc97)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc95)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc98)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc98)
      } loc(#loc253)
    } loc(#loc251)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc255)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc255)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc103)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc103)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc258)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc111)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc258)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc260)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc118)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc261)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc116)
                cir.yield %18 : !cir.bool loc(#loc116)
              }, false {
                %18 = cir.const #false loc(#loc116)
                cir.yield %18 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.yield %17 : !cir.bool loc(#loc116)
            }, false {
              %14 = cir.const #false loc(#loc116)
              cir.yield %14 : !cir.bool loc(#loc116)
            }) : (!cir.bool) -> !cir.bool loc(#loc116)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc122)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc264)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc125)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc265)
                  cir.condition(%19) loc(#loc126)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc128)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc128)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc129)
                  } loc(#loc266)
                  cir.yield loc(#loc121)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc131)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc267)
                  cir.yield loc(#loc263)
                } loc(#loc263)
              } loc(#loc263)
            } loc(#loc262)
          } loc(#loc259)
        } loc(#loc257)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc269)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc135)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc269)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc139)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc271)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc142)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc272)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc140)
                cir.yield %18 : !cir.bool loc(#loc140)
              }, false {
                %18 = cir.const #false loc(#loc140)
                cir.yield %18 : !cir.bool loc(#loc140)
              }) : (!cir.bool) -> !cir.bool loc(#loc140)
              cir.yield %17 : !cir.bool loc(#loc140)
            }, false {
              %14 = cir.const #false loc(#loc140)
              cir.yield %14 : !cir.bool loc(#loc140)
            }) : (!cir.bool) -> !cir.bool loc(#loc140)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc146)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc146)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc275)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc148)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc149)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc276)
                  cir.condition(%19) loc(#loc150)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc152)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc152)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc153)
                  } loc(#loc277)
                  cir.yield loc(#loc145)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc154)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc155)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc278)
                  cir.yield loc(#loc274)
                } loc(#loc274)
              } loc(#loc274)
            } loc(#loc273)
          } loc(#loc270)
        } loc(#loc268)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc82)
  } loc(#loc248)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc161)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc283)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc283)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc165)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc165)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc170)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc172)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
      } loc(#loc284)
    } loc(#loc282)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc288)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc288)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc176)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc176)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc291)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc184)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc184)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc291)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc187)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc187)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc293)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc189)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc190)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc294)
              cir.condition(%15) loc(#loc191)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc193)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc193)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc194)
              } loc(#loc295)
              cir.yield loc(#loc186)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc195)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc196)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc296)
              cir.yield loc(#loc292)
            } loc(#loc292)
          } loc(#loc292)
        } loc(#loc290)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc298)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc200)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc200)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc298)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc203)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc203)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc300)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc205)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc206)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc301)
              cir.condition(%15) loc(#loc207)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc209)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc209)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc210)
              } loc(#loc302)
              cir.yield loc(#loc202)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc211)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc212)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc303)
              cir.yield loc(#loc299)
            } loc(#loc299)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc289)
    } loc(#loc287)
    cir.return loc(#loc157)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":44:27)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":22:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":62:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":24:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":24:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":26:14)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":26:13)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":26:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":27:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":36:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":27:8)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":27:33)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":28:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":31:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":33:5)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":30:9)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":30:16)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":35:17)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":35:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":37:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":61:5)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":37:8)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":37:33)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":38:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":47:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":49:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":39:9)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":46:9)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":40:13)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":40:24)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:13)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":45:13)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:22)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:18)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:25)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:37)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:27)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":43:13)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":44:17)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:45)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":42:44)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":50:9)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":60:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":51:13)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":51:24)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:13)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":59:13)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:17)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:25)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:27)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:30)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":53:39)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":54:13)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:17)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":58:17)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:26)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:22)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:29)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:41)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:31)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":56:17)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":57:31)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":57:21)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:49)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":55:48)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":158:1)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":162:1)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":160:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":160:13)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":161:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":161:13)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":71:1)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":114:1)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":73:5)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":73:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":75:14)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":75:13)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":75:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":76:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":85:5)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":76:8)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":76:33)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":77:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":80:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":82:5)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":79:9)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":79:16)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":79:23)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":84:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":84:16)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":84:23)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":86:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":113:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":86:8)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":86:33)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":87:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":99:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":101:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":88:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":98:9)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":89:13)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":89:24)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:13)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":97:13)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:17)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:25)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:27)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:30)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":91:39)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":92:13)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:17)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":96:17)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:26)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:22)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:29)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:41)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:31)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":94:17)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":95:31)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":95:21)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:49)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":93:48)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":102:9)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":112:9)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":103:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":103:24)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:13)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":111:13)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:17)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:25)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:27)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:30)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":105:39)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":106:13)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:17)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":110:17)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:26)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:22)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:29)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:41)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:31)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":108:17)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":109:31)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":109:21)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:49)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":107:48)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":119:1)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":156:1)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":121:5)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":121:9)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":123:14)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":123:13)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":123:5)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":124:5)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":133:5)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":124:8)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":124:33)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":125:5)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":128:5)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":130:5)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":127:17)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":127:9)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":132:17)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":132:9)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":134:5)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":155:5)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":134:8)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":134:33)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":135:5)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":144:5)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":146:5)
#loc181 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":136:9)
#loc182 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":143:9)
#loc183 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":137:13)
#loc184 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":137:24)
#loc185 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:13)
#loc186 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":142:13)
#loc187 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:22)
#loc188 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:18)
#loc189 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:25)
#loc190 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:37)
#loc191 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:27)
#loc192 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":140:13)
#loc193 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":141:27)
#loc194 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":141:17)
#loc195 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:45)
#loc196 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":139:44)
#loc197 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":147:9)
#loc198 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":154:9)
#loc199 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":148:13)
#loc200 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":148:24)
#loc201 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:13)
#loc202 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":153:13)
#loc203 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:22)
#loc204 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:18)
#loc205 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:25)
#loc206 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:37)
#loc207 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:27)
#loc208 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":151:13)
#loc209 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":152:27)
#loc210 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":152:17)
#loc211 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:45)
#loc212 = loc("CWE400_Resource_Exhaustion__fscanf_for_loop_12.c":150:44)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc5, #loc6])
#loc216 = loc(fused[#loc8, #loc9])
#loc217 = loc(fused[#loc11, #loc12])
#loc218 = loc(fused[#loc13, #loc14])
#loc219 = loc(fused[#loc17, #loc15])
#loc220 = loc(fused[#loc18, #loc19])
#loc221 = loc(fused[#loc20, #loc21])
#loc222 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc223 = loc(fused[#loc28, #loc27])
#loc224 = loc(fused[#loc29, #loc30])
#loc225 = loc(fused[#loc31, #loc32])
#loc226 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc227 = loc(fused[#loc36, #loc37])
#loc228 = loc(fused[#loc38, #loc39])
#loc229 = loc(fused[#loc40, #loc41])
#loc230 = loc(fused[#loc43, #loc42])
#loc231 = loc(fused[#loc44, #loc45])
#loc232 = loc(fused[#loc47, #loc41])
#loc233 = loc(fused[#loc50, #loc49])
#loc234 = loc(fused[#loc51, #loc52])
#loc235 = loc(fused[#loc53, #loc54])
#loc236 = loc(fused[#loc55, #loc56])
#loc237 = loc(fused[#loc57, #loc58])
#loc238 = loc(fused[#loc60, #loc61])
#loc239 = loc(fused[#loc62, #loc56])
#loc240 = loc(fused[#loc63, #loc64])
#loc241 = loc(fused[#loc66, #loc65])
#loc242 = loc(fused[#loc67, #loc68])
#loc243 = loc(fused[#loc70, #loc64])
#loc244 = loc(fused[#loc74, #loc73])
#loc245 = loc(fused[#loc75, #loc76])
#loc246 = loc(fused[#loc77, #loc78])
#loc247 = loc(fused[#loc79, #loc80])
#loc248 = loc(fused[#loc81, #loc82])
#loc249 = loc(fused[#loc83, #loc84])
#loc250 = loc(fused[#loc87, #loc85])
#loc251 = loc(fused[#loc88, #loc89])
#loc252 = loc(fused[#loc90, #loc91])
#loc253 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc254 = loc(fused[#loc101, #loc102])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc112, #loc113])
#loc260 = loc(fused[#loc114, #loc115])
#loc261 = loc(fused[#loc117, #loc118])
#loc262 = loc(fused[#loc119, #loc113])
#loc263 = loc(fused[#loc120, #loc121])
#loc264 = loc(fused[#loc123, #loc122])
#loc265 = loc(fused[#loc124, #loc125])
#loc266 = loc(fused[#loc127, #loc121])
#loc267 = loc(fused[#loc131, #loc130])
#loc268 = loc(fused[#loc132, #loc133])
#loc269 = loc(fused[#loc134, #loc135])
#loc270 = loc(fused[#loc136, #loc137])
#loc271 = loc(fused[#loc138, #loc139])
#loc272 = loc(fused[#loc141, #loc142])
#loc273 = loc(fused[#loc143, #loc137])
#loc274 = loc(fused[#loc144, #loc145])
#loc275 = loc(fused[#loc147, #loc146])
#loc276 = loc(fused[#loc148, #loc149])
#loc277 = loc(fused[#loc151, #loc145])
#loc278 = loc(fused[#loc155, #loc154])
#loc279 = loc(fused[#loc156, #loc157])
#loc280 = loc(fused[#loc158, #loc159])
#loc281 = loc(fused[#loc162, #loc160])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc168, #loc169, #loc164])
#loc285 = loc(fused[#loc171, #loc170])
#loc286 = loc(fused[#loc173, #loc172])
#loc287 = loc(fused[#loc174, #loc175])
#loc288 = loc(fused[#loc176, #loc177])
#loc289 = loc(fused[#loc178, #loc179, #loc180, #loc175])
#loc290 = loc(fused[#loc181, #loc182])
#loc291 = loc(fused[#loc183, #loc184])
#loc292 = loc(fused[#loc185, #loc186])
#loc293 = loc(fused[#loc188, #loc187])
#loc294 = loc(fused[#loc189, #loc190])
#loc295 = loc(fused[#loc192, #loc186])
#loc296 = loc(fused[#loc196, #loc195])
#loc297 = loc(fused[#loc197, #loc198])
#loc298 = loc(fused[#loc199, #loc200])
#loc299 = loc(fused[#loc201, #loc202])
#loc300 = loc(fused[#loc204, #loc203])
#loc301 = loc(fused[#loc205, #loc206])
#loc302 = loc(fused[#loc208, #loc202])
#loc303 = loc(fused[#loc212, #loc211])
