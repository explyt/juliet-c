!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc78)
  cir.func private @printHexCharLine(!s8i) loc(#loc79)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc83)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    %7 = cir.const #cir.int<65> : !s8i loc(#loc19)
    %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %8 : !s8i, !cir.ptr<!s8i> loc(#loc87)
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc23)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc24)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc80)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc92)
    %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc93)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc34)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    %5 = cir.const #cir.int<65> : !s8i loc(#loc41)
    %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc96)
    %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc45)
    cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc46)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    cir.br ^bb2 loc(#loc48)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc28)
  } loc(#loc89)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc98)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc59)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc63)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %7 = cir.const #cir.int<65> : !s8i loc(#loc65)
    %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %7, %8 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc69)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc70)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc63)
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc52)
  } loc(#loc99)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_334goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_33L7goodG2BEv() : () -> () loc(#loc76)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_33L7goodB2GEv() : () -> () loc(#loc77)
    cir.return loc(#loc75)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE401_Memory_Leak__new_char_33.cpp":29:1)
#loc6 = loc("CWE401_Memory_Leak__new_char_33.cpp":44:1)
#loc7 = loc("CWE401_Memory_Leak__new_char_33.cpp":40:9)
#loc8 = loc("CWE401_Memory_Leak__new_char_33.cpp":40:23)
#loc9 = loc("CWE401_Memory_Leak__new_char_33.cpp":31:5)
#loc10 = loc("CWE401_Memory_Leak__new_char_33.cpp":31:12)
#loc11 = loc("CWE401_Memory_Leak__new_char_33.cpp":32:5)
#loc12 = loc("CWE401_Memory_Leak__new_char_33.cpp":32:23)
#loc13 = loc("CWE401_Memory_Leak__new_char_33.cpp":33:12)
#loc14 = loc("CWE401_Memory_Leak__new_char_33.cpp":33:5)
#loc15 = loc("CWE401_Memory_Leak__new_char_33.cpp":35:12)
#loc16 = loc("CWE401_Memory_Leak__new_char_33.cpp":35:16)
#loc17 = loc("CWE401_Memory_Leak__new_char_33.cpp":29:6)
#loc18 = loc("CWE401_Memory_Leak__new_char_33.cpp":35:5)
#loc19 = loc("CWE401_Memory_Leak__new_char_33.cpp":37:13)
#loc20 = loc("CWE401_Memory_Leak__new_char_33.cpp":37:6)
#loc21 = loc("CWE401_Memory_Leak__new_char_33.cpp":37:5)
#loc22 = loc("CWE401_Memory_Leak__new_char_33.cpp":38:23)
#loc23 = loc("CWE401_Memory_Leak__new_char_33.cpp":38:22)
#loc24 = loc("CWE401_Memory_Leak__new_char_33.cpp":38:5)
#loc25 = loc("CWE401_Memory_Leak__new_char_33.cpp":39:5)
#loc26 = loc("CWE401_Memory_Leak__new_char_33.cpp":43:5)
#loc27 = loc("CWE401_Memory_Leak__new_char_33.cpp":51:1)
#loc28 = loc("CWE401_Memory_Leak__new_char_33.cpp":67:1)
#loc29 = loc("CWE401_Memory_Leak__new_char_33.cpp":63:9)
#loc30 = loc("CWE401_Memory_Leak__new_char_33.cpp":63:23)
#loc31 = loc("CWE401_Memory_Leak__new_char_33.cpp":53:5)
#loc32 = loc("CWE401_Memory_Leak__new_char_33.cpp":53:12)
#loc33 = loc("CWE401_Memory_Leak__new_char_33.cpp":54:5)
#loc34 = loc("CWE401_Memory_Leak__new_char_33.cpp":54:23)
#loc35 = loc("CWE401_Memory_Leak__new_char_33.cpp":57:5)
#loc36 = loc("CWE401_Memory_Leak__new_char_33.cpp":57:10)
#loc37 = loc("CWE401_Memory_Leak__new_char_33.cpp":55:12)
#loc38 = loc("CWE401_Memory_Leak__new_char_33.cpp":55:5)
#loc39 = loc("CWE401_Memory_Leak__new_char_33.cpp":58:5)
#loc40 = loc("CWE401_Memory_Leak__new_char_33.cpp":58:13)
#loc41 = loc("CWE401_Memory_Leak__new_char_33.cpp":60:13)
#loc42 = loc("CWE401_Memory_Leak__new_char_33.cpp":60:6)
#loc43 = loc("CWE401_Memory_Leak__new_char_33.cpp":60:5)
#loc44 = loc("CWE401_Memory_Leak__new_char_33.cpp":61:23)
#loc45 = loc("CWE401_Memory_Leak__new_char_33.cpp":61:22)
#loc46 = loc("CWE401_Memory_Leak__new_char_33.cpp":61:5)
#loc47 = loc("CWE401_Memory_Leak__new_char_33.cpp":62:5)
#loc48 = loc("CWE401_Memory_Leak__new_char_33.cpp":66:5)
#loc49 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc50 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc51 = loc("CWE401_Memory_Leak__new_char_33.cpp":70:1)
#loc52 = loc("CWE401_Memory_Leak__new_char_33.cpp":85:1)
#loc53 = loc("CWE401_Memory_Leak__new_char_33.cpp":81:9)
#loc54 = loc("CWE401_Memory_Leak__new_char_33.cpp":81:23)
#loc55 = loc("CWE401_Memory_Leak__new_char_33.cpp":72:5)
#loc56 = loc("CWE401_Memory_Leak__new_char_33.cpp":72:12)
#loc57 = loc("CWE401_Memory_Leak__new_char_33.cpp":73:5)
#loc58 = loc("CWE401_Memory_Leak__new_char_33.cpp":73:23)
#loc59 = loc("CWE401_Memory_Leak__new_char_33.cpp":74:12)
#loc60 = loc("CWE401_Memory_Leak__new_char_33.cpp":74:5)
#loc61 = loc("CWE401_Memory_Leak__new_char_33.cpp":76:12)
#loc62 = loc("CWE401_Memory_Leak__new_char_33.cpp":76:16)
#loc63 = loc("CWE401_Memory_Leak__new_char_33.cpp":70:13)
#loc64 = loc("CWE401_Memory_Leak__new_char_33.cpp":76:5)
#loc65 = loc("CWE401_Memory_Leak__new_char_33.cpp":78:13)
#loc66 = loc("CWE401_Memory_Leak__new_char_33.cpp":78:6)
#loc67 = loc("CWE401_Memory_Leak__new_char_33.cpp":78:5)
#loc68 = loc("CWE401_Memory_Leak__new_char_33.cpp":79:23)
#loc69 = loc("CWE401_Memory_Leak__new_char_33.cpp":79:22)
#loc70 = loc("CWE401_Memory_Leak__new_char_33.cpp":79:5)
#loc71 = loc("CWE401_Memory_Leak__new_char_33.cpp":80:5)
#loc72 = loc("CWE401_Memory_Leak__new_char_33.cpp":84:5)
#loc73 = loc("CWE401_Memory_Leak__new_char_33.cpp":83:16)
#loc74 = loc("CWE401_Memory_Leak__new_char_33.cpp":87:1)
#loc75 = loc("CWE401_Memory_Leak__new_char_33.cpp":91:1)
#loc76 = loc("CWE401_Memory_Leak__new_char_33.cpp":89:5)
#loc77 = loc("CWE401_Memory_Leak__new_char_33.cpp":90:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc9, #loc10])
#loc83 = loc(fused[#loc11, #loc12])
#loc84 = loc(fused[#loc14, #loc13])
#loc85 = loc(fused[#loc15, #loc16])
#loc86 = loc(fused[#loc18, #loc16])
#loc87 = loc(fused[#loc21, #loc19])
#loc88 = loc(fused[#loc25, #loc26])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc29, #loc30])
#loc91 = loc(fused[#loc31, #loc32])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc38, #loc37])
#loc95 = loc(fused[#loc39, #loc40])
#loc96 = loc(fused[#loc43, #loc41])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc49, #loc50])
#loc99 = loc(fused[#loc51, #loc52])
#loc100 = loc(fused[#loc53, #loc54])
#loc101 = loc(fused[#loc55, #loc56])
#loc102 = loc(fused[#loc57, #loc58])
#loc103 = loc(fused[#loc60, #loc59])
#loc104 = loc(fused[#loc61, #loc62])
#loc105 = loc(fused[#loc64, #loc62])
#loc106 = loc(fused[#loc67, #loc65])
#loc107 = loc(fused[#loc71, #loc72])
#loc108 = loc(fused[#loc74, #loc75])
