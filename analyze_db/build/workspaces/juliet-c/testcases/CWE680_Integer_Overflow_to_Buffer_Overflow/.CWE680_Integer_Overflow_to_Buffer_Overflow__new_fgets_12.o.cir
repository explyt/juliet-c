!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc140)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc142)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc145)
  cir.func private @printIntLine(!s32i) loc(#loc146)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc25)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc151)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc154)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc154)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc154)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc37)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc37)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc37)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
            %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc157)
          } loc(#loc155)
        } loc(#loc153)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc49)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
      } loc(#loc152)
    } loc(#loc150)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc161)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc162)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc163)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc58)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc164)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc165)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc166)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc62)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc63)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc167)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc69)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc170)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc72)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc171)
          cir.condition(%24) loc(#loc171)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc74)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc77)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc173)
          } loc(#loc172)
          cir.yield loc(#loc68)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc79)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc174)
          cir.yield loc(#loc169)
        } loc(#loc169)
      } loc(#loc169)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc82)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc83)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
      cir.delete.array %18 : <!s32i> loc(#loc84)
    } loc(#loc160)
    cir.return loc(#loc17)
  } loc(#loc147)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc90)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc94)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc179)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc99)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc101)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
      } loc(#loc180)
    } loc(#loc178)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc184)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc185)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc186)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc110)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc187)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc188)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc189)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc114)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc190)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc121)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc193)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc124)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc194)
          cir.condition(%24) loc(#loc194)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc129)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          } loc(#loc195)
          cir.yield loc(#loc120)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc131)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc197)
          cir.yield loc(#loc192)
        } loc(#loc192)
      } loc(#loc192)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc133)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc134)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc135)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
      cir.delete.array %18 : <!s32i> loc(#loc136)
    } loc(#loc183)
    cir.return loc(#loc86)
  } loc(#loc175)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12L7goodG2BEv() : () -> () loc(#loc139)
    cir.return loc(#loc138)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":43:27)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":26:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":65:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":28:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":28:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":30:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":30:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":30:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":31:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":51:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":31:8)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":31:33)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":32:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":46:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":48:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":33:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":45:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":34:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":34:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":44:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:23)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:36)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":36:63)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":37:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":40:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":42:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":39:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":39:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":39:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":39:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":43:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":50:16)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":50:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":52:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":64:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":53:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":53:16)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":53:26)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":54:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":54:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":56:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":56:28)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":56:38)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":56:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":57:37)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":26:6)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":57:28)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":57:46)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":57:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":61:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:18)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:21)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:33)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":59:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":60:29)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":60:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":60:24)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":60:25)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:40)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":58:39)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":62:22)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":62:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":62:34)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":62:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":63:19)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":73:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":101:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":75:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":75:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":77:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":77:12)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":77:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":78:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":87:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":78:8)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":78:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":79:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":82:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":84:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":81:16)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":81:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":86:16)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":86:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":88:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":100:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":89:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":89:16)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":89:26)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":90:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":90:14)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":92:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":92:28)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":92:38)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":92:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":93:37)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":73:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":93:28)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":93:46)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":93:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":97:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:18)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:14)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:21)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:33)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":95:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":96:29)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":96:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":96:24)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":96:25)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:40)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":94:39)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":98:22)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":98:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":98:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":98:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":99:19)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":103:1)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":106:1)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_12.cpp":105:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc12, #loc13])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc22, #loc20])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc32, #loc33])
#loc155 = loc(fused[#loc34, #loc35])
#loc156 = loc(fused[#loc39, #loc40])
#loc157 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc50, #loc49])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc53, #loc55])
#loc163 = loc(fused[#loc56, #loc57])
#loc164 = loc(fused[#loc59, #loc60])
#loc165 = loc(fused[#loc58, #loc60])
#loc166 = loc(fused[#loc61, #loc60])
#loc167 = loc(fused[#loc64, #loc65])
#loc168 = loc(fused[#loc66, #loc65])
#loc169 = loc(fused[#loc67, #loc68])
#loc170 = loc(fused[#loc70, #loc69])
#loc171 = loc(fused[#loc71, #loc72])
#loc172 = loc(fused[#loc73, #loc68])
#loc173 = loc(fused[#loc75, #loc74])
#loc174 = loc(fused[#loc79, #loc78])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc91, #loc89])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc181 = loc(fused[#loc100, #loc99])
#loc182 = loc(fused[#loc102, #loc101])
#loc183 = loc(fused[#loc103, #loc104])
#loc184 = loc(fused[#loc105, #loc106])
#loc185 = loc(fused[#loc105, #loc107])
#loc186 = loc(fused[#loc108, #loc109])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc110, #loc112])
#loc189 = loc(fused[#loc113, #loc112])
#loc190 = loc(fused[#loc116, #loc117])
#loc191 = loc(fused[#loc118, #loc117])
#loc192 = loc(fused[#loc119, #loc120])
#loc193 = loc(fused[#loc122, #loc121])
#loc194 = loc(fused[#loc123, #loc124])
#loc195 = loc(fused[#loc125, #loc120])
#loc196 = loc(fused[#loc127, #loc126])
#loc197 = loc(fused[#loc131, #loc130])
#loc198 = loc(fused[#loc137, #loc138])
