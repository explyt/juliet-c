!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":110:10)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":110:14)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":110:20)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":110:32)
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc103)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execl_18_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc104)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc105)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc111)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc112)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execl_18_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
    cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.goto "source" loc(#loc114)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc28)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc111)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
    %11 = cir.call @getenv(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    cir.scope {
      %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
      %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc116)
      cir.if %24 {
        %25 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc37)
        %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc39)
        %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc40)
        %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        %30 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc42)
        %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc43)
        %33 = cir.binop(sub, %31, %32) : !u64i loc(#loc118)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc44)
        %36 = cir.binop(sub, %33, %35) : !u64i loc(#loc119)
        %37 = cir.call @strncat(%28, %29, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
      } loc(#loc117)
    } loc(#loc115)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc14)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc14)
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc45)
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc15)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc15)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %20 = cir.call @execl(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.return loc(#loc17)
  } loc(#loc109)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc122)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execl_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE78_OS_Command_Injection__char_environment_execl_18_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execl_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE78_OS_Command_Injection__char_environment_execl_18_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %17 : !s32i loc(#loc130)
  } loc(#loc125)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc103)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc103)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc103)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.goto "source" loc(#loc135)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc94)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc95)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc97)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc98)
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc99)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc99)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc102)
    cir.return loc(#loc87)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":84:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":84:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":56:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":56:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":63:37)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("/usr/include/unistd.h":594:1)
#loc13 = loc("/usr/include/unistd.h":595:14)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:11)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:47)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":53:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":74:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":55:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":55:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":62:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":62:37)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":63:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":63:49)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":57:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":57:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":58:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":58:10)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":59:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":62:26)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":62:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":63:30)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":65:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":69:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":65:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":65:28)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":66:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:21)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:26)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:25)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:35)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:48)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:52)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":68:60)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:29)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:61)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:75)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":73:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":95:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":98:1)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":97:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":97:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":115:15)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":117:15)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":120:15)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":122:15)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":110:1)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":125:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":111:1)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":113:27)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":113:22)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":113:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":115:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":116:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":116:64)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":117:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":120:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":121:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":121:63)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":122:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":124:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":124:5)
#loc83 = loc("/usr/include/string.h":149:1)
#loc84 = loc("/usr/include/string.h":150:14)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":89:18)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":81:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":93:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":83:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":83:12)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":85:12)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":85:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":86:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":86:10)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":87:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":89:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":89:12)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:11)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:29)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:47)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:61)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:75)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execl_18.c":92:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc16, #loc17])
#loc110 = loc(fused[#loc18, #loc19])
#loc111 = loc(fused[#loc20, #loc21])
#loc112 = loc(fused[#loc22, #loc23])
#loc113 = loc(fused[#loc25, #loc24])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc32, #loc33])
#loc116 = loc(fused[#loc34, #loc35])
#loc117 = loc(fused[#loc36, #loc33])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc42, #loc44])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc63, #loc64])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc82, #loc81])
#loc131 = loc(fused[#loc83, #loc84])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc88, #loc89])
#loc134 = loc(fused[#loc91, #loc90])
#loc135 = loc(fused[#loc92, #loc93])
