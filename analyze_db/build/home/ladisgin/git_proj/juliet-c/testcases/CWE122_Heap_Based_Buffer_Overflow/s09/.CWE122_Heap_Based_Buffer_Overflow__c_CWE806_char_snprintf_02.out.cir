!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":116:10)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":116:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":116:20)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":116:32)
#loc219 = loc(fused[#loc76, #loc77])
#loc220 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc192)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc193)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc194)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc197)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc21)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc201)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc202)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc206)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc39)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc40)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc40)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc210)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc44)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc46)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc212)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc199)
    cir.store %32, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc199)
    %33 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc51)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc52)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
    %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc9)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc9)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %41 = cir.call @snprintf(%34, %37, %39, %40) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc51)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc58)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb10 loc(#loc50)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc15)
  } loc(#loc198)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc213)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc216)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.return %17 : !s32i loc(#loc223)
  } loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc102)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc227)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc228)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc114)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc234)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc117)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb8 loc(#loc119)
  ^bb7:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc123)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc124)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc124)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc124)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc128)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc130)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    cir.br ^bb8 loc(#loc116)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc116)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    %34 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc225)
    cir.store %34, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc225)
    %35 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc135)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc136)
    %37 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc137)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %39 = cir.call @strlen(%38) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc139)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc139)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %43 = cir.call @snprintf(%36, %39, %41, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc135)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc143)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb11 loc(#loc134)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc96)
  } loc(#loc224)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc151)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc152)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc242)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc243)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc244)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc247)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc164)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc249)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc250)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc170)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc171)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc171)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc171)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc175)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc177)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc177)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc179)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc252)
    cir.br ^bb7 loc(#loc166)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc166)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc240)
    cir.store %32, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc240)
    %33 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc182)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc183)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc184)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc184)
    %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc186)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc186)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %41 = cir.call @snprintf(%34, %37, %39, %40) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc182)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc190)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc191)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc190)
    cir.br ^bb10 loc(#loc181)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc146)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdio.h":385:1)
#loc6 = loc("/usr/include/stdio.h":387:62)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:38)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":29:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":47:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":41:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":41:25)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":31:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":31:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:20)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:27)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:31)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:42)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:43)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:33)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:17)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:23)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:30)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":33:29)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":34:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":39:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":34:8)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":35:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:16)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:22)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":37:32)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":38:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":38:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":38:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":38:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":38:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":40:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":46:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:24)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:31)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":43:44)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":44:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":44:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":45:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":45:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":100:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":104:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":102:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":102:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":103:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":103:14)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":121:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":123:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":126:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":128:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":116:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":131:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":117:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":119:27)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":119:22)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":119:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":121:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":122:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":122:71)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":123:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":126:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":127:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":127:70)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":128:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":130:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":130:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":62:19)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":54:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":77:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":71:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":71:25)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":56:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":56:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:20)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:27)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:31)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:42)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:43)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":57:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:33)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:23)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:24)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:30)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":58:29)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":59:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":69:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":59:8)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":60:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":63:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":65:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":62:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:16)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:22)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:30)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":67:31)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":68:22)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":68:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":68:14)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":68:17)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":68:18)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":70:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":76:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:18)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:24)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:38)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":73:44)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":74:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":74:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":75:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":75:14)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":80:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":98:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":92:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":92:25)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":82:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":82:12)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:20)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:27)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:31)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:42)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:43)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":83:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:33)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:17)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:23)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:30)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":84:29)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":85:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":90:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":85:8)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":86:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:16)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:22)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:27)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:30)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":88:31)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":89:22)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":89:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":89:14)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":89:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":89:18)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":91:5)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":97:5)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:18)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:24)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:31)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:38)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":94:44)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":95:19)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":95:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":96:9)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_02.c":96:14)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc3, #loc4])
#loc194 = loc(fused[#loc5, #loc6])
#loc195 = loc(fused[#loc7, #loc8])
#loc196 = loc(fused[#loc10, #loc11])
#loc197 = loc(fused[#loc12, #loc13])
#loc198 = loc(fused[#loc14, #loc15])
#loc199 = loc(fused[#loc16, #loc17])
#loc200 = loc(fused[#loc18, #loc19])
#loc201 = loc(fused[#loc22, #loc23])
#loc202 = loc(fused[#loc21, #loc23])
#loc203 = loc(fused[#loc20, #loc24])
#loc204 = loc(fused[#loc25, #loc24])
#loc205 = loc(fused[#loc26, #loc27])
#loc206 = loc(fused[#loc28, #loc29])
#loc207 = loc(fused[#loc30, #loc27])
#loc208 = loc(fused[#loc34, #loc35])
#loc209 = loc(fused[#loc37, #loc35])
#loc210 = loc(fused[#loc42, #loc43])
#loc211 = loc(fused[#loc45, #loc44])
#loc212 = loc(fused[#loc49, #loc50])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc62, #loc63])
#loc215 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc66, #loc67])
#loc217 = loc(fused[#loc68, #loc69])
#loc218 = loc(fused[#loc74, #loc75])
#loc221 = loc(fused[#loc85, #loc86])
#loc222 = loc(fused[#loc89, #loc90])
#loc223 = loc(fused[#loc93, #loc92])
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc103, #loc104])
#loc228 = loc(fused[#loc102, #loc104])
#loc229 = loc(fused[#loc101, #loc105])
#loc230 = loc(fused[#loc106, #loc105])
#loc231 = loc(fused[#loc107, #loc108])
#loc232 = loc(fused[#loc109, #loc110])
#loc233 = loc(fused[#loc111, #loc108])
#loc234 = loc(fused[#loc115, #loc116])
#loc235 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc236 = loc(fused[#loc126, #loc127])
#loc237 = loc(fused[#loc129, #loc128])
#loc238 = loc(fused[#loc133, #loc134])
#loc239 = loc(fused[#loc145, #loc146])
#loc240 = loc(fused[#loc147, #loc148])
#loc241 = loc(fused[#loc149, #loc150])
#loc242 = loc(fused[#loc153, #loc154])
#loc243 = loc(fused[#loc152, #loc154])
#loc244 = loc(fused[#loc151, #loc155])
#loc245 = loc(fused[#loc156, #loc155])
#loc246 = loc(fused[#loc157, #loc158])
#loc247 = loc(fused[#loc159, #loc160])
#loc248 = loc(fused[#loc161, #loc158])
#loc249 = loc(fused[#loc165, #loc166])
#loc250 = loc(fused[#loc168, #loc166])
#loc251 = loc(fused[#loc173, #loc174])
#loc252 = loc(fused[#loc176, #loc175])
#loc253 = loc(fused[#loc180, #loc181])
