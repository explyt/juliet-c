!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_62L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc70)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_623badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc71)
  cir.func private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc72)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc73)
  cir.func private @close(!s32i) -> !s32i loc(#loc74)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc71)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_623badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc71)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc71)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_629badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc19)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc24)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc80)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc25)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc26)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc81)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc27)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.br ^bb2 loc(#loc83)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc34)
    %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc84)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc85)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc37)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc12)
  } loc(#loc75)
  cir.func private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc86)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc70)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_62L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc70)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc70)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc46)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_6213goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc48)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc53)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc92)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc54)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc55)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc93)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc56)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc63)
    %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc66)
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc50)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc41)
  } loc(#loc87)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_624goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_62L7goodG2BEv() : () -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":70:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":70:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":46:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":46:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":41:1)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":41:28)
#loc7 = loc("/usr/include/fcntl.h":209:1)
#loc8 = loc("/usr/include/fcntl.h":209:56)
#loc9 = loc("/usr/include/unistd.h":358:1)
#loc10 = loc("/usr/include/unistd.h":358:27)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":43:1)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":58:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":50:9)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":50:13)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":45:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":45:12)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":47:12)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":47:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":48:5)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":49:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":57:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:25)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:31)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:38)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:47)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:55)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:20)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":52:63)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":53:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":56:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":53:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":53:26)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":53:25)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":54:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":55:19)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":55:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":65:1)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":65:32)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":67:1)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":82:1)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":74:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":74:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":69:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":69:12)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":71:12)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":71:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":72:5)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":73:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":81:5)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:25)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:31)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:38)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:47)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:55)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:20)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":76:63)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":77:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":80:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":77:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":77:26)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":77:25)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":78:9)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":79:19)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":79:13)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":84:1)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":87:1)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_62a.cpp":86:5)
#loc70 = loc(fused[#loc1, #loc2])
#loc71 = loc(fused[#loc3, #loc4])
#loc72 = loc(fused[#loc5, #loc6])
#loc73 = loc(fused[#loc7, #loc8])
#loc74 = loc(fused[#loc9, #loc10])
#loc75 = loc(fused[#loc11, #loc12])
#loc76 = loc(fused[#loc13, #loc14])
#loc77 = loc(fused[#loc15, #loc16])
#loc78 = loc(fused[#loc18, #loc17])
#loc79 = loc(fused[#loc20, #loc21])
#loc80 = loc(fused[#loc23, #loc24])
#loc81 = loc(fused[#loc25, #loc26])
#loc82 = loc(fused[#loc28, #loc29])
#loc83 = loc(fused[#loc30, #loc31])
#loc84 = loc(fused[#loc32, #loc33])
#loc85 = loc(fused[#loc35, #loc31])
#loc86 = loc(fused[#loc38, #loc39])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc42, #loc43])
#loc89 = loc(fused[#loc44, #loc45])
#loc90 = loc(fused[#loc47, #loc46])
#loc91 = loc(fused[#loc49, #loc50])
#loc92 = loc(fused[#loc52, #loc53])
#loc93 = loc(fused[#loc54, #loc55])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc59, #loc60])
#loc96 = loc(fused[#loc61, #loc62])
#loc97 = loc(fused[#loc64, #loc60])
#loc98 = loc(fused[#loc67, #loc68])
