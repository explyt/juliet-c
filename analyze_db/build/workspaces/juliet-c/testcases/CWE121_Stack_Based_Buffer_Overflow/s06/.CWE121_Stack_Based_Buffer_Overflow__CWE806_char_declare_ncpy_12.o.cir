!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc117)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc126)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc126)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
        %9 = cir.const #cir.int<65> : !s32i loc(#loc25)
        %10 = cir.const #cir.int<100> : !s32i loc(#loc26)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc26)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc128)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc30)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc32)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc32)
        %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc34)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc129)
      } else {
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        %9 = cir.const #cir.int<65> : !s32i loc(#loc36)
        %10 = cir.const #cir.int<50> : !s32i loc(#loc37)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc37)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc41)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        %17 = cir.const #cir.int<50> : !s32i loc(#loc43)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc43)
        %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc131)
      } loc(#loc127)
    } loc(#loc125)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc133)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc133)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc133)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc50)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
      %11 = cir.call @strncpy(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc55)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc56)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc56)
      %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc134)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    } loc(#loc132)
    cir.return loc(#loc10)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc142)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc142)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc75)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc75)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
        %9 = cir.const #cir.int<65> : !s32i loc(#loc81)
        %10 = cir.const #cir.int<50> : !s32i loc(#loc82)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc82)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc82)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc144)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc86)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %17 = cir.const #cir.int<50> : !s32i loc(#loc88)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc88)
        %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc90)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc145)
      } else {
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
        %9 = cir.const #cir.int<65> : !s32i loc(#loc92)
        %10 = cir.const #cir.int<50> : !s32i loc(#loc93)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc93)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc93)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc97)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc97)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %17 = cir.const #cir.int<50> : !s32i loc(#loc99)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc99)
        %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc101)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc147)
      } loc(#loc143)
    } loc(#loc141)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc149)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc149)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc106)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc107)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc109)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc109)
      %11 = cir.call @strncpy(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc111)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc111)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc112)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc113)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc112)
      %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc114)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc114)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc150)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    } loc(#loc148)
    cir.return loc(#loc66)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":23:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":47:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":26:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":27:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":27:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":39:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":28:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":28:33)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":29:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":33:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":31:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":32:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":32:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":32:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":32:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":32:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":37:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":38:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":38:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":38:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":38:17)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":38:18)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":40:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":46:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":41:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":41:25)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":43:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":43:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":43:23)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":43:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":43:36)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":44:22)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":44:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":44:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":44:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":45:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":45:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":81:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":84:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":83:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":83:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":55:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":79:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":57:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":57:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":58:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":58:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":59:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":59:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":60:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":71:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":60:8)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":60:33)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":61:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":65:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":67:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:27)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:30)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":63:31)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":64:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":64:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":64:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":64:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":64:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:16)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:27)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:30)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":69:31)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":70:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":70:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":70:14)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":70:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":70:18)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":72:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":78:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":73:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":73:25)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":75:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":75:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":75:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":75:29)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":75:36)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":76:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":76:14)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":76:17)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":76:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":77:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_12.c":77:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc16, #loc15])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc128 = loc(fused[#loc28, #loc29])
#loc129 = loc(fused[#loc31, #loc30])
#loc130 = loc(fused[#loc39, #loc40])
#loc131 = loc(fused[#loc42, #loc41])
#loc132 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc48, #loc49])
#loc134 = loc(fused[#loc58, #loc55])
#loc135 = loc(fused[#loc61, #loc62])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc67, #loc68])
#loc139 = loc(fused[#loc69, #loc70])
#loc140 = loc(fused[#loc72, #loc71])
#loc141 = loc(fused[#loc73, #loc74])
#loc142 = loc(fused[#loc75, #loc76])
#loc143 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc144 = loc(fused[#loc84, #loc85])
#loc145 = loc(fused[#loc87, #loc86])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc98, #loc97])
#loc148 = loc(fused[#loc102, #loc103])
#loc149 = loc(fused[#loc104, #loc105])
#loc150 = loc(fused[#loc114, #loc111])
