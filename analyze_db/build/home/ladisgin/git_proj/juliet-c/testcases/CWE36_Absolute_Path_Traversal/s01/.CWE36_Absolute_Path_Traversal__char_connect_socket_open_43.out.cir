!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":57:16)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":57:24)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":150:27)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":150:35)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":196:10)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":196:14)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":196:20)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":196:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc256 = loc(fused[#loc20, #loc21])
#loc319 = loc(fused[#loc182, #loc183])
#loc337 = loc(fused[#loc231, #loc232])
#loc338 = loc(fused[#loc233, #loc234])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc250)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc251)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc253)
  cir.func private @close(!s32i) -> !s32i loc(#loc254)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_439badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc20, #loc21])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc256)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc22)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc258)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc259)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc260)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc261)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc262)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc32)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc261)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
      cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc262)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %13 = cir.const #cir.int<1> : !u32i loc(#loc40)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc40)
          %15 = cir.const #cir.int<6> : !u32i loc(#loc41)
          %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc41)
          %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
          cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc264)
          cir.scope {
            %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
            %72 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc48)
            %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc266)
            cir.if %74 {
              cir.break loc(#loc50)
            } loc(#loc267)
          } loc(#loc265)
          %18 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc53)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc269)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc58)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc58)
          %23 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc271)
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
          %27 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc272)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc66)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc66)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
          %32 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc273)
          cir.scope {
            %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %72 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
            %73 = cir.const #cir.int<16> : !u64i loc(#loc276)
            %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc276)
            %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
            %76 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc79)
            %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc277)
            cir.if %78 {
              cir.break loc(#loc81)
            } loc(#loc278)
          } loc(#loc274)
          %33 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc82)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
          %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
          %36 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc84)
          %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc85)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
          %39 = cir.const #cir.int<1> : !u64i loc(#loc280)
          %40 = cir.const #cir.int<4096> : !s32i loc(#loc90)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc90)
          %42 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc281)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc92)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc282)
          %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc283)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc94)
          %49 = cir.call @recv(%33, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc95)
          cir.store %50, %1 : !s32i, !cir.ptr<!s32i> loc(#loc284)
          cir.scope {
            %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %72 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc101)
            %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc286)
            %75 = cir.ternary(%74, true {
              %76 = cir.const #true loc(#loc102)
              cir.yield %76 : !cir.bool loc(#loc102)
            }, false {
              %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %77 = cir.const #cir.int<0> : !s32i loc(#loc104)
              %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc287)
              %79 = cir.ternary(%78, true {
                %80 = cir.const #true loc(#loc102)
                cir.yield %80 : !cir.bool loc(#loc102)
              }, false {
                %80 = cir.const #false loc(#loc102)
                cir.yield %80 : !cir.bool loc(#loc102)
              }) : (!cir.bool) -> !cir.bool loc(#loc102)
              cir.yield %79 : !cir.bool loc(#loc102)
            }) : (!cir.bool) -> !cir.bool loc(#loc102)
            cir.if %75 {
              cir.break loc(#loc106)
            } loc(#loc288)
          } loc(#loc285)
          %51 = cir.const #cir.int<0> : !s8i loc(#loc107)
          %52 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
          %53 = cir.load %52 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %54 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc109)
          %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc110)
          %57 = cir.const #cir.int<1> : !u64i loc(#loc289)
          %58 = cir.binop(div, %56, %57) : !u64i loc(#loc290)
          %59 = cir.binop(add, %54, %58) : !u64i loc(#loc291)
          %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc113)
          cir.store %51, %60 : !s8i, !cir.ptr<!s8i> loc(#loc292)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
          %62 = cir.load %61 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          %63 = cir.const #cir.int<13> : !s8i loc(#loc115)
          %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc115)
          %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
          cir.store %65, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
          cir.scope {
            %71 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
            %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc121)
            cir.if %72 {
              %73 = cir.const #cir.int<0> : !s8i loc(#loc123)
              %74 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
              cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc296)
            } loc(#loc295)
          } loc(#loc294)
          %66 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
          %67 = cir.load %66 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %68 = cir.const #cir.int<10> : !s8i loc(#loc127)
          %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc127)
          %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
          cir.store %70, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
          cir.scope {
            %71 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
            %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc133)
            cir.if %72 {
              %73 = cir.const #cir.int<0> : !s8i loc(#loc135)
              %74 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
              cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc300)
            } loc(#loc299)
          } loc(#loc298)
          cir.yield loc(#loc38)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc138)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc138)
          cir.condition(%13) loc(#loc138)
        } loc(#loc263)
      } loc(#loc263)
      cir.scope {
        %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc142)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc302)
        cir.if %15 {
          %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc145)
        } loc(#loc303)
      } loc(#loc301)
    } loc(#loc257)
    cir.return loc(#loc19)
  } loc(#loc255)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc304)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc307)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc307)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc307)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc154)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_439badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc156)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc310)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc163)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc311)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc164)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc165)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc312)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc166)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc173)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc315)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc316)
      } loc(#loc314)
    } loc(#loc309)
    cir.return loc(#loc149)
  } loc(#loc305)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc179)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc182, #loc183])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc319)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc184)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc185)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc179)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc179)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc185)
    cir.return loc(#loc181)
  } loc(#loc318)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc322)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc322)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc322)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc195)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc325)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc201)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc202)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc326)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc203)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc204)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc327)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc205)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc328)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc210)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc211)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc212)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc330)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc215)
        } loc(#loc331)
      } loc(#loc329)
    } loc(#loc324)
    cir.return loc(#loc188)
  } loc(#loc320)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_43L7goodG2BEv() : () -> () loc(#loc218)
    cir.return loc(#loc217)
  } loc(#loc332)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc333)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc334)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc228)
  cir.func @main(%arg0: !s32i loc(fused[#loc231, #loc232]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc233, #loc234])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc338)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc230)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc235)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc236)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc237)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc237)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc238)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc225)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc225)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_434goodEv() : () -> () loc(#loc240)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc226)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc226)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc227)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_433badEv() : () -> () loc(#loc243)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc228)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc244)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc245)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    cir.return %15 : !s32i loc(#loc339)
  } loc(#loc336)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":86:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":57:1)
#loc19 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":126:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":58:1)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":59:5)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":125:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":64:9)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":64:13)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":65:9)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":65:28)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":66:9)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":66:15)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":67:9)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":67:32)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":68:9)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":68:37)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":68:26)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":68:33)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":69:9)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":114:17)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:36)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:45)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:58)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:29)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":79:69)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":80:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":83:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":80:17)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":80:34)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":81:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":82:17)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:20)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:21)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:30)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:33)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:47)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:13)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":84:48)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":85:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":85:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":86:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":86:13)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":86:59)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":87:38)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":87:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":87:13)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":87:46)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:13)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":91:13)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:25)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:58)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:59)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:68)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:82)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":88:88)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":89:13)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":90:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:31)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:55)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:62)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:60)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:46)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:69)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:72)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:83)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:88)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:103)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:113)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:114)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:117)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:26)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:13)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":95:118)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:13)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":99:13)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:17)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:31)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:44)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:47)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":96:61)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":97:13)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":98:17)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:57)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:13)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:18)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:28)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:41)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:52)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":101:53)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":103:30)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":103:36)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":103:23)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":103:13)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":103:40)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":104:13)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":107:13)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":104:17)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":105:13)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":106:28)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":106:18)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":106:17)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":108:30)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":108:36)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":108:23)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":108:13)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":108:40)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":109:13)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":112:13)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":109:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":110:13)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":111:28)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":111:18)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":111:17)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":114:16)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":115:9)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":118:9)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":115:13)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":115:30)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":116:9)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":117:26)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":117:13)
#loc146 = loc("/usr/include/fcntl.h":209:1)
#loc147 = loc("/usr/include/fcntl.h":209:56)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":128:1)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":143:1)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":130:5)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":130:12)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":131:5)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":131:37)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":132:12)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":132:5)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":133:5)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":134:5)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":142:5)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":135:9)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":135:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:25)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:31)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:38)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:47)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:55)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:20)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":137:63)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":138:9)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":141:9)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":138:13)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":138:26)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":138:25)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":139:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":140:19)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":140:13)
#loc177 = loc("/usr/include/string.h":149:1)
#loc178 = loc("/usr/include/string.h":150:14)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":157:18)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":150:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":159:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":151:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":157:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":157:12)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":161:1)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":176:1)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":163:5)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":163:12)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":164:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":164:37)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":165:12)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":165:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":166:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":167:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":175:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":168:9)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":168:13)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:25)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:31)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:38)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:47)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:55)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:20)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":170:63)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":171:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":174:9)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":171:13)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":171:26)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":171:25)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":172:9)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":173:19)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":173:13)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":178:1)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":181:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":180:5)
#loc219 = loc("/usr/include/stdlib.h":575:1)
#loc220 = loc("/usr/include/stdlib.h":575:41)
#loc221 = loc("/usr/include/time.h":76:1)
#loc222 = loc("/usr/include/time.h":76:38)
#loc223 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc224 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":201:15)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":203:15)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":206:15)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":208:15)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":196:1)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":211:1)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":197:1)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":199:27)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":199:22)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":199:5)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":201:5)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":202:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":203:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":206:5)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":207:5)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":208:5)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":210:12)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_43.cpp":210:5)
#loc247 = loc(fused[#loc1, #loc2])
#loc248 = loc(fused[#loc3, #loc4])
#loc249 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc8, #loc9])
#loc251 = loc(fused[#loc10, #loc11])
#loc252 = loc(fused[#loc12, #loc13])
#loc253 = loc(fused[#loc14, #loc15])
#loc254 = loc(fused[#loc16, #loc17])
#loc255 = loc(fused[#loc18, #loc19])
#loc257 = loc(fused[#loc23, #loc24])
#loc258 = loc(fused[#loc25, #loc26])
#loc259 = loc(fused[#loc27, #loc28])
#loc260 = loc(fused[#loc29, #loc30])
#loc261 = loc(fused[#loc31, #loc32])
#loc262 = loc(fused[#loc33, #loc34])
#loc263 = loc(fused[#loc37, #loc38])
#loc264 = loc(fused[#loc43, #loc44])
#loc265 = loc(fused[#loc45, #loc46])
#loc266 = loc(fused[#loc47, #loc48])
#loc267 = loc(fused[#loc49, #loc46])
#loc268 = loc(fused[#loc51, #loc52])
#loc269 = loc(fused[#loc54, #loc55])
#loc270 = loc(fused[#loc56, #loc57])
#loc271 = loc(fused[#loc60, #loc58])
#loc272 = loc(fused[#loc64, #loc65])
#loc273 = loc(fused[#loc69, #loc70])
#loc274 = loc(fused[#loc71, #loc72])
#loc275 = loc(fused[#loc74, #loc75])
#loc276 = loc(fused[#loc76, #loc77])
#loc277 = loc(fused[#loc78, #loc79])
#loc278 = loc(fused[#loc80, #loc72])
#loc279 = loc(fused[#loc86, #loc87])
#loc280 = loc(fused[#loc88, #loc89])
#loc281 = loc(fused[#loc90, #loc91])
#loc282 = loc(fused[#loc90, #loc92])
#loc283 = loc(fused[#loc88, #loc93])
#loc284 = loc(fused[#loc96, #loc97])
#loc285 = loc(fused[#loc98, #loc99])
#loc286 = loc(fused[#loc100, #loc101])
#loc287 = loc(fused[#loc103, #loc104])
#loc288 = loc(fused[#loc105, #loc99])
#loc289 = loc(fused[#loc111, #loc112])
#loc290 = loc(fused[#loc110, #loc112])
#loc291 = loc(fused[#loc109, #loc112])
#loc292 = loc(fused[#loc108, #loc107])
#loc293 = loc(fused[#loc117, #loc118])
#loc294 = loc(fused[#loc119, #loc120])
#loc295 = loc(fused[#loc122, #loc120])
#loc296 = loc(fused[#loc125, #loc123])
#loc297 = loc(fused[#loc129, #loc130])
#loc298 = loc(fused[#loc131, #loc132])
#loc299 = loc(fused[#loc134, #loc132])
#loc300 = loc(fused[#loc137, #loc135])
#loc301 = loc(fused[#loc139, #loc140])
#loc302 = loc(fused[#loc141, #loc142])
#loc303 = loc(fused[#loc143, #loc140])
#loc304 = loc(fused[#loc146, #loc147])
#loc305 = loc(fused[#loc148, #loc149])
#loc306 = loc(fused[#loc150, #loc151])
#loc307 = loc(fused[#loc152, #loc153])
#loc308 = loc(fused[#loc155, #loc154])
#loc309 = loc(fused[#loc157, #loc158])
#loc310 = loc(fused[#loc159, #loc160])
#loc311 = loc(fused[#loc162, #loc163])
#loc312 = loc(fused[#loc164, #loc165])
#loc313 = loc(fused[#loc167, #loc168])
#loc314 = loc(fused[#loc169, #loc170])
#loc315 = loc(fused[#loc171, #loc172])
#loc316 = loc(fused[#loc174, #loc170])
#loc317 = loc(fused[#loc177, #loc178])
#loc318 = loc(fused[#loc180, #loc181])
#loc320 = loc(fused[#loc187, #loc188])
#loc321 = loc(fused[#loc189, #loc190])
#loc322 = loc(fused[#loc191, #loc192])
#loc323 = loc(fused[#loc194, #loc193])
#loc324 = loc(fused[#loc196, #loc197])
#loc325 = loc(fused[#loc198, #loc199])
#loc326 = loc(fused[#loc201, #loc202])
#loc327 = loc(fused[#loc203, #loc204])
#loc328 = loc(fused[#loc206, #loc207])
#loc329 = loc(fused[#loc208, #loc209])
#loc330 = loc(fused[#loc210, #loc211])
#loc331 = loc(fused[#loc213, #loc209])
#loc332 = loc(fused[#loc216, #loc217])
#loc333 = loc(fused[#loc219, #loc220])
#loc334 = loc(fused[#loc221, #loc222])
#loc335 = loc(fused[#loc223, #loc224])
#loc336 = loc(fused[#loc229, #loc230])
#loc339 = loc(fused[#loc246, #loc245])
