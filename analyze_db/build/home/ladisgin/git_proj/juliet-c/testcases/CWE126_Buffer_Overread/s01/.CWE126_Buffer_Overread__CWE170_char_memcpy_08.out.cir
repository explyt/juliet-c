!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":109:10)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":109:14)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":109:20)
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":109:32)
#loc161 = loc(fused[#loc48, #loc49])
#loc162 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_memcpy_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc145)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc7)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc7)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc148)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc15)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc16)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc17)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc17)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc21)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc22)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc22)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc151)
          %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
          %19 = cir.const #cir.int<99> : !s32i loc(#loc25)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc25)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc152)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc153)
          cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc154)
          %23 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc147)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc4)
  } loc(#loc143)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_memcpy_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc155)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc55)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_memcpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE126_Buffer_Overread__CWE170_char_memcpy_08_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_memcpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE126_Buffer_Overread__CWE170_char_memcpy_08_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %17 : !s32i loc(#loc165)
  } loc(#loc160)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc68)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %2 : !s32i loc(#loc167)
  } loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc170)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc75)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc75)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc80)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc173)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc174)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc86)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc87)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc88)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc88)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc91)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc91)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc92)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc93)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc93)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc176)
          %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc95)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          %19 = cir.const #cir.int<99> : !s32i loc(#loc96)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc96)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc177)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc178)
          cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc179)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc101)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc101)
          %25 = cir.const #cir.int<99> : !s32i loc(#loc102)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
          %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc103)
          cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc180)
          %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc105)
        } loc(#loc172)
      } loc(#loc171)
    } loc(#loc169)
    cir.return loc(#loc72)
  } loc(#loc168)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %2 : !s32i loc(#loc182)
  } loc(#loc181)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc185)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc114)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc114)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc188)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc189)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc122)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc123)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc124)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc124)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc127)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc128)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc129)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc129)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc191)
          %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc131)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
          %19 = cir.const #cir.int<99> : !s32i loc(#loc132)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc132)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc192)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc193)
          cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc194)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc137)
          %25 = cir.const #cir.int<99> : !s32i loc(#loc138)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
          %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc139)
          cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc195)
          %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
          cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc141)
        } loc(#loc187)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc111)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":35:1)
#loc4 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":49:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":37:5)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":48:5)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":37:8)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":37:26)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":38:5)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":39:9)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":47:9)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":40:13)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":40:26)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":40:37)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":42:20)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":42:26)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":42:31)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":42:13)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":42:34)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":43:25)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":43:18)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":43:13)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:20)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:26)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:32)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:35)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:46)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":44:47)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":46:23)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":46:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":94:1)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":98:1)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":96:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":96:11)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":97:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":97:11)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":114:15)
#loc43 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":116:15)
#loc44 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":119:15)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":121:15)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":109:1)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":124:1)
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":110:1)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":112:27)
#loc54 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":112:22)
#loc55 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":112:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":114:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":115:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":115:56)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":116:5)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":119:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":120:5)
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":120:55)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":121:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":123:12)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":123:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":23:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":26:1)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":25:12)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":25:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":61:19)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":56:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":75:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":58:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":74:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":58:8)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":58:27)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":59:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":62:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":64:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":61:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":65:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":73:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":66:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":66:26)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":66:37)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":68:20)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":68:26)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":68:31)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":68:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":68:34)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":69:25)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":69:18)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":69:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:20)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:26)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:32)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:35)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:46)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":70:47)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":71:24)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":71:18)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":71:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":72:23)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":72:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":28:1)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":31:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":30:12)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":30:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":78:1)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":92:1)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":80:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":91:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":80:8)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":80:26)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":81:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":82:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":90:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":83:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":83:26)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":83:37)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":85:20)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":85:26)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":85:31)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":85:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":85:34)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":86:25)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":86:18)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":86:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:20)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:26)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:32)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:35)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:46)
#loc135 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":87:47)
#loc137 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":88:24)
#loc138 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":88:18)
#loc139 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":88:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":89:23)
#loc141 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_08.c":89:13)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc6])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc12, #loc14])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc22, #loc20])
#loc152 = loc(fused[#loc26, #loc27])
#loc153 = loc(fused[#loc25, #loc27])
#loc154 = loc(fused[#loc28, #loc29])
#loc155 = loc(fused[#loc32, #loc33])
#loc156 = loc(fused[#loc34, #loc35])
#loc157 = loc(fused[#loc36, #loc37])
#loc158 = loc(fused[#loc38, #loc39])
#loc159 = loc(fused[#loc40, #loc41])
#loc160 = loc(fused[#loc46, #loc47])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc61, #loc62])
#loc165 = loc(fused[#loc65, #loc64])
#loc166 = loc(fused[#loc66, #loc67])
#loc167 = loc(fused[#loc69, #loc68])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc83, #loc85])
#loc175 = loc(fused[#loc89, #loc90])
#loc176 = loc(fused[#loc93, #loc91])
#loc177 = loc(fused[#loc97, #loc98])
#loc178 = loc(fused[#loc96, #loc98])
#loc179 = loc(fused[#loc99, #loc100])
#loc180 = loc(fused[#loc103, #loc101])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc109, #loc108])
#loc183 = loc(fused[#loc110, #loc111])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc114, #loc115])
#loc186 = loc(fused[#loc116, #loc113])
#loc187 = loc(fused[#loc117, #loc118])
#loc188 = loc(fused[#loc119, #loc120])
#loc189 = loc(fused[#loc119, #loc121])
#loc190 = loc(fused[#loc125, #loc126])
#loc191 = loc(fused[#loc129, #loc127])
#loc192 = loc(fused[#loc133, #loc134])
#loc193 = loc(fused[#loc132, #loc134])
#loc194 = loc(fused[#loc135, #loc136])
#loc195 = loc(fused[#loc139, #loc137])
