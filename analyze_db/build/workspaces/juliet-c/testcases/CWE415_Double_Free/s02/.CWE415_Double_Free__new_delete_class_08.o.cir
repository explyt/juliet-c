!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_class_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %2 : !s32i loc(#loc137)
  } loc(#loc136)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc138)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc139)
  cir.func @_ZN39CWE415_Double_Free__new_delete_class_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc18)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc146)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc22)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc147)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc25)
    cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc23)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc28)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc31)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc23)
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc11)
  } loc(#loc140)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc33)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc34)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %2 : !s32i loc(#loc152)
  } loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.func internal private @_ZN39CWE415_Double_Free__new_delete_class_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc47)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc158)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc160)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc52)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc160)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc51)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc161)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc54)
    cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc52)
    cir.br ^bb3 loc(#loc46)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc57)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc163)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb8 loc(#loc60)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc40)
  } loc(#loc154)
  cir.func internal private @_ZN39CWE415_Double_Free__new_delete_class_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc167)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc71)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc171)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc76)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc171)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc75)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc172)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc78)
    cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc76)
    cir.br ^bb3 loc(#loc70)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc81)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc175)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc64)
  } loc(#loc165)
  cir.func internal private @_ZN39CWE415_Double_Free__new_delete_class_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc92)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %6 = cir.const #cir.int<8> : !u64i loc(#loc182)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc182)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc100)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc183)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc184)
  ^bb6:  // pred: ^bb5
    %9 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc105)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc185)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc186)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc108)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc108)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc101)
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc85)
  } loc(#loc176)
  cir.func internal private @_ZN39CWE415_Double_Free__new_delete_class_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc117)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc191)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc193)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc193)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc121)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc194)
    cir.br ^bb3 loc(#loc116)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc126)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc196)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc197)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc129)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc122)
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc125)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc110)
  } loc(#loc187)
  cir.func @_ZN39CWE415_Double_Free__new_delete_class_084goodEv() extra(#fn_attr) {
    cir.call @_ZN39CWE415_Double_Free__new_delete_class_08L8goodB2G1Ev() : () -> () loc(#loc132)
    cir.call @_ZN39CWE415_Double_Free__new_delete_class_08L8goodB2G2Ev() : () -> () loc(#loc133)
    cir.call @_ZN39CWE415_Double_Free__new_delete_class_08L8goodG2B1Ev() : () -> () loc(#loc134)
    cir.call @_ZN39CWE415_Double_Free__new_delete_class_08L8goodG2B2Ev() : () -> () loc(#loc135)
    cir.return loc(#loc131)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_class_08.cpp":0:0)
#loc1 = loc("CWE415_Double_Free__new_delete_class_08.cpp":25:1)
#loc2 = loc("CWE415_Double_Free__new_delete_class_08.cpp":28:1)
#loc3 = loc("CWE415_Double_Free__new_delete_class_08.cpp":27:12)
#loc4 = loc("CWE415_Double_Free__new_delete_class_08.cpp":27:5)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc10 = loc("CWE415_Double_Free__new_delete_class_08.cpp":40:1)
#loc11 = loc("CWE415_Double_Free__new_delete_class_08.cpp":56:1)
#loc12 = loc("CWE415_Double_Free__new_delete_class_08.cpp":42:5)
#loc13 = loc("CWE415_Double_Free__new_delete_class_08.cpp":42:20)
#loc14 = loc("CWE415_Double_Free__new_delete_class_08.cpp":44:12)
#loc15 = loc("CWE415_Double_Free__new_delete_class_08.cpp":44:5)
#loc16 = loc("CWE415_Double_Free__new_delete_class_08.cpp":45:5)
#loc17 = loc("CWE415_Double_Free__new_delete_class_08.cpp":50:5)
#loc18 = loc("CWE415_Double_Free__new_delete_class_08.cpp":45:8)
#loc19 = loc("CWE415_Double_Free__new_delete_class_08.cpp":45:26)
#loc20 = loc("CWE415_Double_Free__new_delete_class_08.cpp":46:5)
#loc21 = loc("CWE415_Double_Free__new_delete_class_08.cpp":47:16)
#loc22 = loc("CWE415_Double_Free__new_delete_class_08.cpp":47:20)
#loc23 = loc("CWE415_Double_Free__new_delete_class_08.cpp":40:6)
#loc24 = loc("CWE415_Double_Free__new_delete_class_08.cpp":47:9)
#loc25 = loc("CWE415_Double_Free__new_delete_class_08.cpp":49:16)
#loc26 = loc("CWE415_Double_Free__new_delete_class_08.cpp":51:5)
#loc27 = loc("CWE415_Double_Free__new_delete_class_08.cpp":55:5)
#loc28 = loc("CWE415_Double_Free__new_delete_class_08.cpp":51:8)
#loc29 = loc("CWE415_Double_Free__new_delete_class_08.cpp":51:26)
#loc30 = loc("CWE415_Double_Free__new_delete_class_08.cpp":52:5)
#loc31 = loc("CWE415_Double_Free__new_delete_class_08.cpp":54:16)
#loc32 = loc("CWE415_Double_Free__new_delete_class_08.cpp":30:1)
#loc33 = loc("CWE415_Double_Free__new_delete_class_08.cpp":33:1)
#loc34 = loc("CWE415_Double_Free__new_delete_class_08.cpp":32:12)
#loc35 = loc("CWE415_Double_Free__new_delete_class_08.cpp":32:5)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE415_Double_Free__new_delete_class_08.cpp":77:19)
#loc39 = loc("CWE415_Double_Free__new_delete_class_08.cpp":63:1)
#loc40 = loc("CWE415_Double_Free__new_delete_class_08.cpp":85:1)
#loc41 = loc("CWE415_Double_Free__new_delete_class_08.cpp":65:5)
#loc42 = loc("CWE415_Double_Free__new_delete_class_08.cpp":65:20)
#loc43 = loc("CWE415_Double_Free__new_delete_class_08.cpp":67:12)
#loc44 = loc("CWE415_Double_Free__new_delete_class_08.cpp":67:5)
#loc45 = loc("CWE415_Double_Free__new_delete_class_08.cpp":68:5)
#loc46 = loc("CWE415_Double_Free__new_delete_class_08.cpp":73:5)
#loc47 = loc("CWE415_Double_Free__new_delete_class_08.cpp":68:8)
#loc48 = loc("CWE415_Double_Free__new_delete_class_08.cpp":68:26)
#loc49 = loc("CWE415_Double_Free__new_delete_class_08.cpp":69:5)
#loc50 = loc("CWE415_Double_Free__new_delete_class_08.cpp":70:16)
#loc51 = loc("CWE415_Double_Free__new_delete_class_08.cpp":70:20)
#loc52 = loc("CWE415_Double_Free__new_delete_class_08.cpp":63:13)
#loc53 = loc("CWE415_Double_Free__new_delete_class_08.cpp":70:9)
#loc54 = loc("CWE415_Double_Free__new_delete_class_08.cpp":72:16)
#loc55 = loc("CWE415_Double_Free__new_delete_class_08.cpp":74:5)
#loc56 = loc("CWE415_Double_Free__new_delete_class_08.cpp":84:5)
#loc57 = loc("CWE415_Double_Free__new_delete_class_08.cpp":74:8)
#loc58 = loc("CWE415_Double_Free__new_delete_class_08.cpp":74:27)
#loc59 = loc("CWE415_Double_Free__new_delete_class_08.cpp":75:5)
#loc60 = loc("CWE415_Double_Free__new_delete_class_08.cpp":78:5)
#loc61 = loc("CWE415_Double_Free__new_delete_class_08.cpp":80:5)
#loc62 = loc("CWE415_Double_Free__new_delete_class_08.cpp":77:9)
#loc63 = loc("CWE415_Double_Free__new_delete_class_08.cpp":88:1)
#loc64 = loc("CWE415_Double_Free__new_delete_class_08.cpp":105:1)
#loc65 = loc("CWE415_Double_Free__new_delete_class_08.cpp":90:5)
#loc66 = loc("CWE415_Double_Free__new_delete_class_08.cpp":90:20)
#loc67 = loc("CWE415_Double_Free__new_delete_class_08.cpp":92:12)
#loc68 = loc("CWE415_Double_Free__new_delete_class_08.cpp":92:5)
#loc69 = loc("CWE415_Double_Free__new_delete_class_08.cpp":93:5)
#loc70 = loc("CWE415_Double_Free__new_delete_class_08.cpp":98:5)
#loc71 = loc("CWE415_Double_Free__new_delete_class_08.cpp":93:8)
#loc72 = loc("CWE415_Double_Free__new_delete_class_08.cpp":93:26)
#loc73 = loc("CWE415_Double_Free__new_delete_class_08.cpp":94:5)
#loc74 = loc("CWE415_Double_Free__new_delete_class_08.cpp":95:16)
#loc75 = loc("CWE415_Double_Free__new_delete_class_08.cpp":95:20)
#loc76 = loc("CWE415_Double_Free__new_delete_class_08.cpp":88:13)
#loc77 = loc("CWE415_Double_Free__new_delete_class_08.cpp":95:9)
#loc78 = loc("CWE415_Double_Free__new_delete_class_08.cpp":97:16)
#loc79 = loc("CWE415_Double_Free__new_delete_class_08.cpp":99:5)
#loc80 = loc("CWE415_Double_Free__new_delete_class_08.cpp":104:5)
#loc81 = loc("CWE415_Double_Free__new_delete_class_08.cpp":99:8)
#loc82 = loc("CWE415_Double_Free__new_delete_class_08.cpp":99:26)
#loc83 = loc("CWE415_Double_Free__new_delete_class_08.cpp":100:5)
#loc84 = loc("CWE415_Double_Free__new_delete_class_08.cpp":108:1)
#loc85 = loc("CWE415_Double_Free__new_delete_class_08.cpp":128:1)
#loc86 = loc("CWE415_Double_Free__new_delete_class_08.cpp":110:5)
#loc87 = loc("CWE415_Double_Free__new_delete_class_08.cpp":110:20)
#loc88 = loc("CWE415_Double_Free__new_delete_class_08.cpp":112:12)
#loc89 = loc("CWE415_Double_Free__new_delete_class_08.cpp":112:5)
#loc90 = loc("CWE415_Double_Free__new_delete_class_08.cpp":113:5)
#loc91 = loc("CWE415_Double_Free__new_delete_class_08.cpp":122:5)
#loc92 = loc("CWE415_Double_Free__new_delete_class_08.cpp":113:8)
#loc93 = loc("CWE415_Double_Free__new_delete_class_08.cpp":113:27)
#loc94 = loc("CWE415_Double_Free__new_delete_class_08.cpp":114:5)
#loc95 = loc("CWE415_Double_Free__new_delete_class_08.cpp":117:5)
#loc96 = loc("CWE415_Double_Free__new_delete_class_08.cpp":119:5)
#loc97 = loc("CWE415_Double_Free__new_delete_class_08.cpp":116:19)
#loc98 = loc("CWE415_Double_Free__new_delete_class_08.cpp":116:9)
#loc99 = loc("CWE415_Double_Free__new_delete_class_08.cpp":120:16)
#loc100 = loc("CWE415_Double_Free__new_delete_class_08.cpp":120:20)
#loc101 = loc("CWE415_Double_Free__new_delete_class_08.cpp":108:13)
#loc102 = loc("CWE415_Double_Free__new_delete_class_08.cpp":120:9)
#loc103 = loc("CWE415_Double_Free__new_delete_class_08.cpp":123:5)
#loc104 = loc("CWE415_Double_Free__new_delete_class_08.cpp":127:5)
#loc105 = loc("CWE415_Double_Free__new_delete_class_08.cpp":123:8)
#loc106 = loc("CWE415_Double_Free__new_delete_class_08.cpp":123:26)
#loc107 = loc("CWE415_Double_Free__new_delete_class_08.cpp":124:5)
#loc108 = loc("CWE415_Double_Free__new_delete_class_08.cpp":126:16)
#loc109 = loc("CWE415_Double_Free__new_delete_class_08.cpp":131:1)
#loc110 = loc("CWE415_Double_Free__new_delete_class_08.cpp":146:1)
#loc111 = loc("CWE415_Double_Free__new_delete_class_08.cpp":133:5)
#loc112 = loc("CWE415_Double_Free__new_delete_class_08.cpp":133:20)
#loc113 = loc("CWE415_Double_Free__new_delete_class_08.cpp":135:12)
#loc114 = loc("CWE415_Double_Free__new_delete_class_08.cpp":135:5)
#loc115 = loc("CWE415_Double_Free__new_delete_class_08.cpp":136:5)
#loc116 = loc("CWE415_Double_Free__new_delete_class_08.cpp":140:5)
#loc117 = loc("CWE415_Double_Free__new_delete_class_08.cpp":136:8)
#loc118 = loc("CWE415_Double_Free__new_delete_class_08.cpp":136:26)
#loc119 = loc("CWE415_Double_Free__new_delete_class_08.cpp":137:5)
#loc120 = loc("CWE415_Double_Free__new_delete_class_08.cpp":138:16)
#loc121 = loc("CWE415_Double_Free__new_delete_class_08.cpp":138:20)
#loc122 = loc("CWE415_Double_Free__new_delete_class_08.cpp":131:13)
#loc123 = loc("CWE415_Double_Free__new_delete_class_08.cpp":138:9)
#loc124 = loc("CWE415_Double_Free__new_delete_class_08.cpp":141:5)
#loc125 = loc("CWE415_Double_Free__new_delete_class_08.cpp":145:5)
#loc126 = loc("CWE415_Double_Free__new_delete_class_08.cpp":141:8)
#loc127 = loc("CWE415_Double_Free__new_delete_class_08.cpp":141:26)
#loc128 = loc("CWE415_Double_Free__new_delete_class_08.cpp":142:5)
#loc129 = loc("CWE415_Double_Free__new_delete_class_08.cpp":144:16)
#loc130 = loc("CWE415_Double_Free__new_delete_class_08.cpp":148:1)
#loc131 = loc("CWE415_Double_Free__new_delete_class_08.cpp":154:1)
#loc132 = loc("CWE415_Double_Free__new_delete_class_08.cpp":150:5)
#loc133 = loc("CWE415_Double_Free__new_delete_class_08.cpp":151:5)
#loc134 = loc("CWE415_Double_Free__new_delete_class_08.cpp":152:5)
#loc135 = loc("CWE415_Double_Free__new_delete_class_08.cpp":153:5)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc4, #loc3])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc8, #loc9])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc15, #loc14])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc20, #loc17])
#loc146 = loc(fused[#loc21, #loc22])
#loc147 = loc(fused[#loc24, #loc22])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc30, #loc27])
#loc151 = loc(fused[#loc32, #loc33])
#loc152 = loc(fused[#loc35, #loc34])
#loc153 = loc(fused[#loc36, #loc37])
#loc154 = loc(fused[#loc39, #loc40])
#loc155 = loc(fused[#loc41, #loc42])
#loc156 = loc(fused[#loc44, #loc43])
#loc157 = loc(fused[#loc45, #loc46])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc46])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc51])
#loc162 = loc(fused[#loc55, #loc56])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc165 = loc(fused[#loc63, #loc64])
#loc166 = loc(fused[#loc65, #loc66])
#loc167 = loc(fused[#loc68, #loc67])
#loc168 = loc(fused[#loc69, #loc70])
#loc169 = loc(fused[#loc71, #loc72])
#loc170 = loc(fused[#loc73, #loc70])
#loc171 = loc(fused[#loc74, #loc75])
#loc172 = loc(fused[#loc77, #loc75])
#loc173 = loc(fused[#loc79, #loc80])
#loc174 = loc(fused[#loc81, #loc82])
#loc175 = loc(fused[#loc83, #loc80])
#loc176 = loc(fused[#loc84, #loc85])
#loc177 = loc(fused[#loc86, #loc87])
#loc178 = loc(fused[#loc89, #loc88])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc92, #loc93])
#loc181 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc102, #loc100])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc105, #loc106])
#loc186 = loc(fused[#loc107, #loc104])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc114, #loc113])
#loc190 = loc(fused[#loc115, #loc116])
#loc191 = loc(fused[#loc117, #loc118])
#loc192 = loc(fused[#loc119, #loc116])
#loc193 = loc(fused[#loc120, #loc121])
#loc194 = loc(fused[#loc123, #loc121])
#loc195 = loc(fused[#loc124, #loc125])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc128, #loc125])
#loc198 = loc(fused[#loc130, #loc131])
