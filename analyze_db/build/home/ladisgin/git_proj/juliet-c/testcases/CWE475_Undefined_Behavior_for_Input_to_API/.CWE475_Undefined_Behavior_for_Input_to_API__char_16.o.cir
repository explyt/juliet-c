!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc70)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc14)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc68)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc68)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc17)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc3)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc3)
    %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc17)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc20)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.const #cir.int<4> : !s32i loc(#loc23)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc25)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc74)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc75)
    cir.libc.memcpy %22 bytes from %18 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc76)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc7)
  } loc(#loc67)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc77)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc80)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc82)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc45)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc80)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc80)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc50)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc50)
    %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc52)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc53)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %16 = cir.const #cir.int<4> : !s32i loc(#loc55)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc56)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc57)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc87)
    cir.libc.memmove %22 bytes from %18 to %14 : !cir.ptr<!void>, !u64i loc(#loc88)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb5 loc(#loc47)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc64)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc38)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":29:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":22:1)
#loc7 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":36:1)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":27:13)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":27:36)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":28:13)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":28:27)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":24:5)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":35:5)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":24:11)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":26:9)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":33:9)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":29:13)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":29:20)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:20)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:27)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:25)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:30)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:37)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:35)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:40)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:43)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:54)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:13)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":31:55)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":32:23)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":32:13)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":34:9)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":59:1)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":62:1)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":61:5)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":61:11)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":43:1)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":57:1)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":48:13)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":48:36)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":49:13)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":49:27)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":45:5)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":56:5)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":45:11)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":47:9)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":54:9)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":50:13)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":50:20)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":50:26)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:21)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:28)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:26)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:31)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:38)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:36)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:41)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:44)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:55)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:13)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":52:56)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":53:23)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":53:13)
#loc64 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_16.c":55:9)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc4, #loc5])
#loc67 = loc(fused[#loc6, #loc7])
#loc68 = loc(fused[#loc8, #loc9])
#loc69 = loc(fused[#loc10, #loc11])
#loc70 = loc(fused[#loc12, #loc13])
#loc71 = loc(fused[#loc15, #loc16])
#loc72 = loc(fused[#loc19, #loc20])
#loc73 = loc(fused[#loc22, #loc23])
#loc74 = loc(fused[#loc26, #loc27])
#loc75 = loc(fused[#loc25, #loc27])
#loc76 = loc(fused[#loc28, #loc29])
#loc77 = loc(fused[#loc33, #loc34])
#loc78 = loc(fused[#loc35, #loc36])
#loc79 = loc(fused[#loc37, #loc38])
#loc80 = loc(fused[#loc39, #loc40])
#loc81 = loc(fused[#loc41, #loc42])
#loc82 = loc(fused[#loc43, #loc44])
#loc83 = loc(fused[#loc46, #loc47])
#loc84 = loc(fused[#loc51, #loc52])
#loc85 = loc(fused[#loc54, #loc55])
#loc86 = loc(fused[#loc58, #loc59])
#loc87 = loc(fused[#loc57, #loc59])
#loc88 = loc(fused[#loc60, #loc61])
