!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":35:21)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":35:25)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":77:26)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":77:30)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":122:26)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":122:30)
#loc196 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":162:25)
#loc197 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":162:29)
#true = #cir.bool<true> : !cir.bool
#loc227 = loc(fused[#loc17, #loc18])
#loc246 = loc(fused[#loc73, #loc74])
#loc265 = loc(fused[#loc135, #loc136])
#loc284 = loc(fused[#loc196, #loc197])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc220)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc221)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc222)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc223)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc224)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc225)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc14)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc227)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc224)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc24)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc25)
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc14)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc26)
      } loc(#loc229)
    } loc(#loc228)
    cir.return loc(#loc16)
  } loc(#loc226)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc234)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc234)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc234)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc41)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc41)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc41)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc41)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc41)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc41)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc41)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc41)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc236)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc45)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc49)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc50)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc237)
      } loc(#loc235)
    } loc(#loc233)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc224)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc57)
    cir.return loc(#loc28)
  } loc(#loc230)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc59)
  } loc(#loc240)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc244)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc69)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc70)
  cir.func internal private  @goodB2G1Sink(%arg0: !s32i loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc246)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc244)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc82)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc86)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc250)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc87)
          %8 = cir.ternary(%7, true {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %10 = cir.const #cir.int<2000> : !s32i loc(#loc90)
            %11 = cir.cmp(le, %9, %10) : !s32i, !s32i loc(#loc251)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc91)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc88)
              cir.yield %14 : !cir.bool loc(#loc88)
            }, false {
              %14 = cir.const #false loc(#loc88)
              cir.yield %14 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.yield %13 : !cir.bool loc(#loc88)
          }, false {
            %9 = cir.const #false loc(#loc88)
            cir.yield %9 : !cir.bool loc(#loc88)
          }) : (!cir.bool) -> !cir.bool loc(#loc88)
          cir.if %8 {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc95)
            %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc96)
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc69)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc69)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
          } else {
            %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc70)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc70)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          } loc(#loc252)
        } loc(#loc249)
      } loc(#loc248)
    } loc(#loc247)
    cir.return loc(#loc72)
  } loc(#loc245)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc257)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc257)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc257)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc113)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc113)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc113)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc113)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc113)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc113)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc113)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc113)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc259)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc117)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc126)
        } loc(#loc260)
      } loc(#loc258)
    } loc(#loc256)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc244)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc130)
    cir.return loc(#loc100)
  } loc(#loc253)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc263)
  cir.func internal private  @goodB2G2Sink(%arg0: !s32i loc(fused[#loc135, #loc136])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc263)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc140)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc269)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc146)
          %8 = cir.ternary(%7, true {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %10 = cir.const #cir.int<2000> : !s32i loc(#loc149)
            %11 = cir.cmp(le, %9, %10) : !s32i, !s32i loc(#loc270)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc150)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc147)
              cir.yield %14 : !cir.bool loc(#loc147)
            }, false {
              %14 = cir.const #false loc(#loc147)
              cir.yield %14 : !cir.bool loc(#loc147)
            }) : (!cir.bool) -> !cir.bool loc(#loc147)
            cir.yield %13 : !cir.bool loc(#loc147)
          }, false {
            %9 = cir.const #false loc(#loc147)
            cir.yield %9 : !cir.bool loc(#loc147)
          }) : (!cir.bool) -> !cir.bool loc(#loc147)
          cir.if %8 {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc154)
            %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc155)
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc156)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc156)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc157)
          } else {
            %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc158)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc158)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc159)
          } loc(#loc271)
        } loc(#loc268)
      } loc(#loc267)
    } loc(#loc266)
    cir.return loc(#loc134)
  } loc(#loc264)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc165)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc276)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc276)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc276)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc173)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc174)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc174)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc174)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc174)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc174)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc174)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc174)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc174)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc175)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc176)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc177)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc278)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc178)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc183)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc186)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc186)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc187)
        } loc(#loc279)
      } loc(#loc277)
    } loc(#loc275)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc263)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc191)
    cir.return loc(#loc161)
  } loc(#loc272)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc282)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc196, #loc197])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc284)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc282)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc201)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc203)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc204)
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc205)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc205)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc206)
      } loc(#loc286)
    } loc(#loc285)
    cir.return loc(#loc195)
  } loc(#loc283)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc212)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc214)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc282)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc219)
    cir.return loc(#loc208)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":60:23)
#loc10 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":33:1)
#loc11 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":33:24)
#loc12 = loc("/usr/include/unistd.h":480:1)
#loc13 = loc("/usr/include/unistd.h":480:43)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":41:19)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":35:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":43:1)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":36:1)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":37:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":42:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":37:8)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":38:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":40:15)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":40:9)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":41:9)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":45:1)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":65:1)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":47:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":47:9)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":49:14)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":49:13)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":49:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":50:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":62:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":51:9)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":51:45)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:9)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":61:9)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:19)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:32)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:49)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:13)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:59)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":53:56)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":54:9)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":57:9)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":59:9)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":56:26)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":56:21)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":56:13)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":56:37)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":60:13)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":63:17)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":63:5)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":64:13)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":64:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":183:1)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":188:1)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":185:5)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":185:14)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":186:5)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":186:14)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":187:5)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":187:13)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":72:1)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":72:29)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":82:19)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":90:23)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":94:23)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":77:1)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":97:1)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":78:1)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":79:5)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":96:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":79:8)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":80:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":83:5)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":85:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":82:9)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:9)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":95:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:13)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:21)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:19)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:23)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:26)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:35)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":87:32)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":88:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":91:9)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":93:9)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":89:19)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":89:13)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":90:13)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":94:13)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":99:1)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":119:1)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":101:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":101:9)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":103:14)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":103:13)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":103:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":104:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":116:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":105:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":105:45)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:9)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":115:9)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:19)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:32)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:49)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:13)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:59)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":107:56)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":108:9)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":111:9)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":113:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":110:26)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":110:21)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":110:13)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":110:37)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":114:23)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":114:13)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":117:22)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":117:5)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":118:18)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":118:5)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":73:1)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":73:29)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":122:1)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":137:1)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":123:1)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":124:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":136:5)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":124:8)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":125:5)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:9)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":135:9)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:13)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:21)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:19)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:23)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:26)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:35)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":127:32)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":128:9)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":131:9)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":133:9)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":129:19)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":129:13)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":130:23)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":130:13)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":134:23)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":134:13)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":139:1)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":159:1)
#loc162 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":141:5)
#loc163 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":141:9)
#loc164 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":143:14)
#loc165 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":143:13)
#loc166 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":143:5)
#loc167 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":144:5)
#loc168 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":156:5)
#loc169 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":145:9)
#loc170 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":145:45)
#loc171 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:9)
#loc172 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":155:9)
#loc173 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:19)
#loc174 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:32)
#loc175 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:49)
#loc176 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:13)
#loc177 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:59)
#loc178 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":147:56)
#loc179 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":148:9)
#loc180 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":151:9)
#loc181 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":153:9)
#loc182 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":150:26)
#loc183 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":150:21)
#loc184 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":150:13)
#loc185 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":150:37)
#loc186 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":154:23)
#loc187 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":154:13)
#loc188 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":157:22)
#loc189 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":157:5)
#loc190 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":158:18)
#loc191 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":158:5)
#loc192 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":74:1)
#loc193 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":74:28)
#loc194 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":162:1)
#loc195 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":170:1)
#loc198 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":163:1)
#loc199 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":164:5)
#loc200 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":169:5)
#loc201 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":164:8)
#loc202 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":165:5)
#loc203 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":167:15)
#loc204 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":167:9)
#loc205 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":168:19)
#loc206 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":168:9)
#loc207 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":172:1)
#loc208 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":181:1)
#loc209 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":174:5)
#loc210 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":174:9)
#loc211 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":176:14)
#loc212 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":176:13)
#loc213 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":176:5)
#loc214 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":178:13)
#loc215 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":178:5)
#loc216 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":179:21)
#loc217 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":179:5)
#loc218 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":180:17)
#loc219 = loc("CWE400_Resource_Exhaustion__fgets_sleep_21.c":180:5)
#loc220 = loc(fused[#loc1, #loc2])
#loc221 = loc(fused[#loc3, #loc4])
#loc222 = loc(fused[#loc5, #loc6])
#loc223 = loc(fused[#loc7, #loc8])
#loc224 = loc(fused[#loc10, #loc11])
#loc225 = loc(fused[#loc12, #loc13])
#loc226 = loc(fused[#loc15, #loc16])
#loc228 = loc(fused[#loc20, #loc21])
#loc229 = loc(fused[#loc23, #loc21])
#loc230 = loc(fused[#loc27, #loc28])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc33, #loc31])
#loc233 = loc(fused[#loc34, #loc35])
#loc234 = loc(fused[#loc36, #loc37])
#loc235 = loc(fused[#loc38, #loc39])
#loc236 = loc(fused[#loc43, #loc44])
#loc237 = loc(fused[#loc46, #loc47, #loc48, #loc39])
#loc238 = loc(fused[#loc51, #loc52])
#loc239 = loc(fused[#loc55, #loc54])
#loc240 = loc(fused[#loc58, #loc59])
#loc241 = loc(fused[#loc60, #loc61])
#loc242 = loc(fused[#loc62, #loc63])
#loc243 = loc(fused[#loc64, #loc65])
#loc244 = loc(fused[#loc66, #loc67])
#loc245 = loc(fused[#loc71, #loc72])
#loc247 = loc(fused[#loc76, #loc77])
#loc248 = loc(fused[#loc79, #loc80, #loc81, #loc77])
#loc249 = loc(fused[#loc83, #loc84])
#loc250 = loc(fused[#loc85, #loc86])
#loc251 = loc(fused[#loc89, #loc90])
#loc252 = loc(fused[#loc92, #loc93, #loc94, #loc84])
#loc253 = loc(fused[#loc99, #loc100])
#loc254 = loc(fused[#loc101, #loc102])
#loc255 = loc(fused[#loc105, #loc103])
#loc256 = loc(fused[#loc106, #loc107])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc115, #loc116])
#loc260 = loc(fused[#loc118, #loc119, #loc120, #loc111])
#loc261 = loc(fused[#loc123, #loc124])
#loc262 = loc(fused[#loc128, #loc127])
#loc263 = loc(fused[#loc131, #loc132])
#loc264 = loc(fused[#loc133, #loc134])
#loc266 = loc(fused[#loc138, #loc139])
#loc267 = loc(fused[#loc141, #loc139])
#loc268 = loc(fused[#loc142, #loc143])
#loc269 = loc(fused[#loc144, #loc145])
#loc270 = loc(fused[#loc148, #loc149])
#loc271 = loc(fused[#loc151, #loc152, #loc153, #loc143])
#loc272 = loc(fused[#loc160, #loc161])
#loc273 = loc(fused[#loc162, #loc163])
#loc274 = loc(fused[#loc166, #loc164])
#loc275 = loc(fused[#loc167, #loc168])
#loc276 = loc(fused[#loc169, #loc170])
#loc277 = loc(fused[#loc171, #loc172])
#loc278 = loc(fused[#loc176, #loc177])
#loc279 = loc(fused[#loc179, #loc180, #loc181, #loc172])
#loc280 = loc(fused[#loc184, #loc185])
#loc281 = loc(fused[#loc189, #loc188])
#loc282 = loc(fused[#loc192, #loc193])
#loc283 = loc(fused[#loc194, #loc195])
#loc285 = loc(fused[#loc199, #loc200])
#loc286 = loc(fused[#loc202, #loc200])
#loc287 = loc(fused[#loc207, #loc208])
#loc288 = loc(fused[#loc209, #loc210])
#loc289 = loc(fused[#loc213, #loc211])
#loc290 = loc(fused[#loc215, #loc214])
#loc291 = loc(fused[#loc217, #loc216])
