!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":121:10)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":121:14)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":121:20)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":121:32)
#loc195 = loc(fused[#loc58, #loc59])
#loc196 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_loop_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc174)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc178)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc12)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %5 ^bb2, ^bb13 loc(#loc179)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc18)
    %9 = cir.const #cir.int<149> : !s32i loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %10 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc22)
    %13 = cir.const #cir.int<149> : !s32i loc(#loc23)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc182)
    cir.br ^bb4 loc(#loc183)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc27)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %18 = cir.const #cir.int<99> : !s32i loc(#loc30)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %19 ^bb6, ^bb10 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc34)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    %23 = cir.load %22 : !cir.ptr<!s8i>, !s8i loc(#loc34)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc39)
    cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.br ^bb5 loc(#loc183)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb12 loc(#loc16)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc11)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc11)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc4)
  } loc(#loc173)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_loop_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc189)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc192)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_loop_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call @CWE126_Buffer_Overread__CWE170_char_loop_08_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_loop_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call @CWE126_Buffer_Overread__CWE170_char_loop_08_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %17 : !s32i loc(#loc199)
  } loc(#loc194)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %2 : !s32i loc(#loc201)
  } loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc203)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc90)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc208)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb14 loc(#loc93)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc209)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc98)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc99)
    %11 = cir.const #cir.int<149> : !s32i loc(#loc100)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %12 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc210)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc103)
    %15 = cir.const #cir.int<149> : !s32i loc(#loc104)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc105)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %20 = cir.const #cir.int<99> : !s32i loc(#loc111)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %21 ^bb7, ^bb11 loc(#loc112)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc215)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc115)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc115)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    cir.br ^bb9 loc(#loc107)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc107)
  ^bb10:  // pred: ^bb9
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc120)
    cir.store %30, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb6 loc(#loc212)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc107)
  ^bb12:  // pred: ^bb11
    %31 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc121)
    %33 = cir.const #cir.int<99> : !s32i loc(#loc122)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb13 loc(#loc97)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc89)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc82)
  } loc(#loc202)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %2 : !s32i loc(#loc220)
  } loc(#loc219)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc222)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc226)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc139)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc139)
    cir.brcond %5 ^bb2, ^bb13 loc(#loc227)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc228)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc144)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc145)
    %9 = cir.const #cir.int<149> : !s32i loc(#loc146)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc146)
    cir.libc.memset %10 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc149)
    %13 = cir.const #cir.int<149> : !s32i loc(#loc150)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc151)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb4 loc(#loc231)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc154)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %18 = cir.const #cir.int<99> : !s32i loc(#loc157)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %19 ^bb6, ^bb10 loc(#loc158)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc234)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc161)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc161)
    %23 = cir.load %22 : !cir.ptr<!s8i>, !s8i loc(#loc161)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc166)
    cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb5 loc(#loc231)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc153)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc167)
    %31 = cir.const #cir.int<99> : !s32i loc(#loc168)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc169)
    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    cir.br ^bb12 loc(#loc143)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc138)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc138)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc131)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_loop_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":35:1)
#loc4 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":53:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":40:13)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":40:25)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":40:36)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":41:13)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":41:17)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":37:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":52:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":37:8)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":37:26)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":38:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":39:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":51:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":43:20)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":43:25)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":43:30)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":43:13)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":43:33)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":44:24)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":44:17)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":44:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":48:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:19)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:17)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:22)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:26)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:24)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":46:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":47:31)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":47:27)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":47:22)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":47:17)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":47:32)
#loc38 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:31)
#loc39 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":45:30)
#loc40 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":50:23)
#loc41 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":50:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":106:1)
#loc43 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":110:1)
#loc44 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":108:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":108:11)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":109:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":109:11)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":126:15)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":128:15)
#loc54 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":131:15)
#loc55 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":133:15)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":121:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":136:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":122:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":124:27)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":124:22)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":124:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":126:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":127:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":127:54)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":128:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":131:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":132:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":132:53)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":133:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":135:12)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":135:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":23:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":26:1)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":25:12)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":25:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":65:19)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":60:1)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":83:1)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":70:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":70:25)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":70:36)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":71:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":71:17)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":62:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":82:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":62:8)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":62:27)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":63:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":66:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":68:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":65:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":69:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":81:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":73:20)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":73:25)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":73:30)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":73:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":73:33)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":74:24)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":74:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":74:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:13)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":78:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:19)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:22)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:26)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:24)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":76:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":77:31)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":77:27)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":77:22)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":77:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":77:32)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:31)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":75:30)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":79:24)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":79:18)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":79:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":80:23)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":80:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":28:1)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":31:1)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":30:12)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":30:5)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":86:1)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":104:1)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":91:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":91:25)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":91:36)
#loc135 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":92:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":92:17)
#loc137 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":88:5)
#loc138 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":103:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":88:8)
#loc140 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":88:26)
#loc141 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":89:5)
#loc142 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":90:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":102:9)
#loc144 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":94:20)
#loc145 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":94:25)
#loc146 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":94:30)
#loc147 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":94:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":94:33)
#loc149 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":95:24)
#loc150 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":95:17)
#loc151 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":95:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:13)
#loc153 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":99:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:19)
#loc155 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:17)
#loc156 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:22)
#loc157 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:26)
#loc158 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:24)
#loc159 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":97:13)
#loc160 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":98:31)
#loc161 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":98:27)
#loc162 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":98:22)
#loc163 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":98:17)
#loc164 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":98:32)
#loc165 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:31)
#loc166 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":96:30)
#loc167 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":100:24)
#loc168 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":100:18)
#loc169 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":100:13)
#loc170 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":101:23)
#loc171 = loc("CWE126_Buffer_Overread__CWE170_char_loop_08.c":101:13)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc3, #loc4])
#loc174 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc5, #loc7])
#loc176 = loc(fused[#loc8, #loc9])
#loc177 = loc(fused[#loc10, #loc11])
#loc178 = loc(fused[#loc12, #loc13])
#loc179 = loc(fused[#loc14, #loc11])
#loc180 = loc(fused[#loc15, #loc16])
#loc181 = loc(fused[#loc20, #loc21])
#loc182 = loc(fused[#loc24, #loc22])
#loc183 = loc(fused[#loc25, #loc26])
#loc184 = loc(fused[#loc28, #loc27])
#loc185 = loc(fused[#loc29, #loc30])
#loc186 = loc(fused[#loc32, #loc26])
#loc187 = loc(fused[#loc36, #loc37])
#loc188 = loc(fused[#loc39, #loc38])
#loc189 = loc(fused[#loc42, #loc43])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc46, #loc47])
#loc192 = loc(fused[#loc48, #loc49])
#loc193 = loc(fused[#loc50, #loc51])
#loc194 = loc(fused[#loc56, #loc57])
#loc197 = loc(fused[#loc67, #loc68])
#loc198 = loc(fused[#loc71, #loc72])
#loc199 = loc(fused[#loc75, #loc74])
#loc200 = loc(fused[#loc76, #loc77])
#loc201 = loc(fused[#loc79, #loc78])
#loc202 = loc(fused[#loc81, #loc82])
#loc203 = loc(fused[#loc83, #loc84])
#loc204 = loc(fused[#loc83, #loc85])
#loc205 = loc(fused[#loc86, #loc87])
#loc206 = loc(fused[#loc88, #loc89])
#loc207 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc209 = loc(fused[#loc96, #loc97])
#loc210 = loc(fused[#loc101, #loc102])
#loc211 = loc(fused[#loc105, #loc103])
#loc212 = loc(fused[#loc106, #loc107])
#loc213 = loc(fused[#loc109, #loc108])
#loc214 = loc(fused[#loc110, #loc111])
#loc215 = loc(fused[#loc113, #loc107])
#loc216 = loc(fused[#loc117, #loc118])
#loc217 = loc(fused[#loc120, #loc119])
#loc218 = loc(fused[#loc123, #loc121])
#loc219 = loc(fused[#loc126, #loc127])
#loc220 = loc(fused[#loc129, #loc128])
#loc221 = loc(fused[#loc130, #loc131])
#loc222 = loc(fused[#loc132, #loc133])
#loc223 = loc(fused[#loc132, #loc134])
#loc224 = loc(fused[#loc135, #loc136])
#loc225 = loc(fused[#loc137, #loc138])
#loc226 = loc(fused[#loc139, #loc140])
#loc227 = loc(fused[#loc141, #loc138])
#loc228 = loc(fused[#loc142, #loc143])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc151, #loc149])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc155, #loc154])
#loc233 = loc(fused[#loc156, #loc157])
#loc234 = loc(fused[#loc159, #loc153])
#loc235 = loc(fused[#loc163, #loc164])
#loc236 = loc(fused[#loc166, #loc165])
#loc237 = loc(fused[#loc169, #loc167])
