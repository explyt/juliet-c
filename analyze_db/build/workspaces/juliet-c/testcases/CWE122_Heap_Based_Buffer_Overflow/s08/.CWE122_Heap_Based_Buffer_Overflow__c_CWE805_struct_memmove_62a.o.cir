!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_629badSourceERP14_twoIntsStruct(!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) loc(#loc100)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc101)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc102)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_629badSourceERP14_twoIntsStruct(%0) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc13)
    cir.scope {
      %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc107)
      cir.scope {
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc109)
        cir.scope {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc24)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc24)
          cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc111)
          cir.for : cond {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc26)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc27)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc27)
            %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc112)
            cir.condition(%23) loc(#loc112)
          } body {
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %21 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc30)
              %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc114)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc33)
              %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc115)
            } loc(#loc113)
            cir.yield loc(#loc23)
          } step {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc38)
            cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc116)
            cir.yield loc(#loc110)
          } loc(#loc110)
        } loc(#loc110)
      } loc(#loc108)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc40)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc41)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc117)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc118)
      cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc119)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
      cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    } loc(#loc106)
    cir.return loc(#loc8)
  } loc(#loc103)
  cir.func private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_6213goodG2BSourceERP14_twoIntsStruct(!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) loc(#loc120)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc123)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_6213goodG2BSourceERP14_twoIntsStruct(%0) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc60)
    cir.scope {
      %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc125)
      cir.scope {
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
        cir.scope {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc71)
          cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc129)
          cir.for : cond {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc74)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc74)
            %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc130)
            cir.condition(%23) loc(#loc130)
          } body {
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc76)
              %21 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
              %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc132)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc79)
              %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc80)
              %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
              %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc133)
            } loc(#loc131)
            cir.yield loc(#loc70)
          } step {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc83)
            cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc134)
            cir.yield loc(#loc128)
          } loc(#loc128)
        } loc(#loc128)
      } loc(#loc126)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc84)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc85)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc86)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc86)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc135)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc136)
      cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc137)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc92)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
      cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc94)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc95)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc96)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    } loc(#loc124)
    cir.return loc(#loc55)
  } loc(#loc121)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62L7goodG2BEv() : () -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":25:37)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":48:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":29:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":29:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":30:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":30:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":47:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":33:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":33:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":34:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":42:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":35:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":35:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":41:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:22)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":38:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:36)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":39:17)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:36)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":40:17)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:35)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":37:34)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:55)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":44:56)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:26)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:31)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:32)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":45:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":46:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":46:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":55:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":55:41)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":57:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":78:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":59:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":59:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":60:12)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":60:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":61:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":62:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":77:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":63:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":63:33)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":64:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":72:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":65:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":65:20)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":71:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:22)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:25)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:29)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":68:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:36)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":69:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:36)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":70:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:35)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":67:34)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:31)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:35)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:55)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":74:56)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:26)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:31)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:32)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":75:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":76:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":76:14)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":80:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":83:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_62a.cpp":82:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc9, #loc10])
#loc105 = loc(fused[#loc12, #loc11])
#loc106 = loc(fused[#loc14, #loc15])
#loc107 = loc(fused[#loc16, #loc17])
#loc108 = loc(fused[#loc18, #loc19])
#loc109 = loc(fused[#loc20, #loc21])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc25, #loc24])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc28, #loc23])
#loc114 = loc(fused[#loc31, #loc29])
#loc115 = loc(fused[#loc35, #loc33])
#loc116 = loc(fused[#loc38, #loc37])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc41, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc59, #loc58])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc67, #loc68])
#loc128 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc72, #loc71])
#loc130 = loc(fused[#loc73, #loc74])
#loc131 = loc(fused[#loc75, #loc70])
#loc132 = loc(fused[#loc78, #loc76])
#loc133 = loc(fused[#loc81, #loc79])
#loc134 = loc(fused[#loc83, #loc82])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc86, #loc88])
#loc137 = loc(fused[#loc89, #loc90])
#loc138 = loc(fused[#loc97, #loc98])
