!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc182)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc184)
  cir.func private @printIntLine(!s32i) loc(#loc185)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc191)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc191)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc24)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc193)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc194)
    %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc195)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
    cir.br ^bb3 loc(#loc197)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc34)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc198)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc199)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc38)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc45)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc46)
    cir.br ^bb8 loc(#loc22)
  ^bb7:  // pred: ^bb1
    %30 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc47)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc47)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc47)
    %34 = cir.alloca !u8i, !cir.ptr<!u8i>, %33 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc47)
    cir.store %36, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc201)
    %37 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc52)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc56)
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc203)
  ^bb10:  // pred: ^bb9
    %45 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc204)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc204)
    %47 = cir.call %46() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc59)
    %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %48 ^bb11, ^bb12 loc(#loc205)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc62)
  ^bb12:  // pred: ^bb10
    %49 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc64)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc65)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    cir.br ^bb13 loc(#loc58)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc58)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc187)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc206)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc213)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc213)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc80)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc214)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc86)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc87)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc215)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc216)
    %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc95)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc221)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc99)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc103)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc106)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc107)
    cir.br ^bb12 loc(#loc83)
  ^bb7:  // pred: ^bb1
    %30 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc108)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc109)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc110)
    %35 = cir.const #cir.int<4> : !u64i loc(#loc223)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc224)
    %37 = cir.call @realloc(%32, %36) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc225)
    cir.store %38, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc118)
    %42 = cir.cmp(eq, %39, %41) : !cir.ptr<!s32i>, !cir.bool loc(#loc228)
    cir.brcond %42 ^bb9, ^bb10 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc122)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb10 loc(#loc116)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc116)
  ^bb11:  // pred: ^bb10
    %46 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc126)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !s32i), !cir.ptr<!s32i> loc(#loc129)
    %53 = cir.load %52 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc130)
    cir.br ^bb12 loc(#loc79)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc79)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc231)
  ^bb14:  // pred: ^bb13
    %54 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc232)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc232)
    %56 = cir.call %55() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc133)
    %57 = cir.cast(int_to_bool, %56 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %57 ^bb15, ^bb16 loc(#loc233)
  ^bb15:  // pred: ^bb14
    %58 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc138)
    %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb17 loc(#loc136)
  ^bb16:  // pred: ^bb14
    %61 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc140)
    %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc141)
    cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
    cir.br ^bb17 loc(#loc132)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc132)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc73)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc146)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc238)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc238)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc150)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc155)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc155)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc155)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc155)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc155)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc155)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc240)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc157)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc160)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc164)
    cir.br ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb1
    %21 = cir.const #cir.int<100> : !s32i loc(#loc165)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc165)
    %23 = cir.const #cir.int<4> : !u64i loc(#loc165)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc165)
    %25 = cir.alloca !u8i, !cir.ptr<!u8i>, %24 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc165)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc165)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc165)
    cir.store %27, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc242)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc167)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc170)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc173)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc174)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %36 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc245)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc245)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc177)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc177)
    cir.brcond %39 ^bb7, ^bb8 loc(#loc246)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc180)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc176)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc176)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc143)
  } loc(#loc234)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":683:1)
#loc4 = loc("/usr/include/stdlib.h":684:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_12.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_12.c":55:1)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_12.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_12.c":26:11)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_12.c":27:12)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_12.c":27:5)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_12.c":28:5)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_12.c":44:5)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_12.c":28:8)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_12.c":28:33)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_12.c":29:5)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_12.c":36:5)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_12.c":38:5)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:23)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:31)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:37)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:41)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:51)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:52)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_12.c":31:9)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:9)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:37)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:13)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:21)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:27)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:28)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:34)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_12.c":32:33)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_12.c":34:19)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_12.c":34:9)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_12.c":34:14)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_12.c":34:15)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_12.c":35:22)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_12.c":35:27)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_12.c":35:28)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_12.c":35:9)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_12.c":40:23)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_12.c":40:9)
#loc49 = loc("CWE401_Memory_Leak__int_realloc_12.c":42:19)
#loc50 = loc("CWE401_Memory_Leak__int_realloc_12.c":42:9)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_12.c":42:14)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_12.c":42:15)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_12.c":43:22)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_12.c":43:27)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_12.c":43:28)
#loc56 = loc("CWE401_Memory_Leak__int_realloc_12.c":43:9)
#loc57 = loc("CWE401_Memory_Leak__int_realloc_12.c":45:5)
#loc58 = loc("CWE401_Memory_Leak__int_realloc_12.c":54:5)
#loc59 = loc("CWE401_Memory_Leak__int_realloc_12.c":45:8)
#loc60 = loc("CWE401_Memory_Leak__int_realloc_12.c":45:33)
#loc61 = loc("CWE401_Memory_Leak__int_realloc_12.c":46:5)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_12.c":49:5)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_12.c":51:5)
#loc64 = loc("CWE401_Memory_Leak__int_realloc_12.c":53:9)
#loc65 = loc("CWE401_Memory_Leak__int_realloc_12.c":53:14)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_12.c":133:1)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_12.c":137:1)
#loc68 = loc("CWE401_Memory_Leak__int_realloc_12.c":135:5)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_12.c":135:13)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_12.c":136:5)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_12.c":136:13)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_12.c":64:1)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_12.c":96:1)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_12.c":66:5)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_12.c":66:11)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_12.c":67:12)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_12.c":67:5)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_12.c":68:5)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_12.c":85:5)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_12.c":68:8)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_12.c":68:33)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_12.c":69:5)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_12.c":76:5)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_12.c":78:5)
#loc85 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:23)
#loc86 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:31)
#loc87 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:37)
#loc88 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:41)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:51)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:52)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_12.c":71:9)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:9)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:37)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:13)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:21)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:27)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:28)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:34)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_12.c":72:33)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_12.c":74:19)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_12.c":74:9)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_12.c":74:14)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_12.c":74:15)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_12.c":75:22)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_12.c":75:27)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_12.c":75:28)
#loc107 = loc("CWE401_Memory_Leak__int_realloc_12.c":75:9)
#loc108 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:23)
#loc109 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:31)
#loc110 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:37)
#loc111 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:41)
#loc112 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:51)
#loc113 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:52)
#loc114 = loc("CWE401_Memory_Leak__int_realloc_12.c":80:9)
#loc115 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:9)
#loc116 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:37)
#loc117 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:13)
#loc118 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:21)
#loc119 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:27)
#loc120 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:28)
#loc121 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:34)
#loc122 = loc("CWE401_Memory_Leak__int_realloc_12.c":81:33)
#loc123 = loc("CWE401_Memory_Leak__int_realloc_12.c":83:19)
#loc124 = loc("CWE401_Memory_Leak__int_realloc_12.c":83:9)
#loc125 = loc("CWE401_Memory_Leak__int_realloc_12.c":83:14)
#loc126 = loc("CWE401_Memory_Leak__int_realloc_12.c":83:15)
#loc127 = loc("CWE401_Memory_Leak__int_realloc_12.c":84:22)
#loc128 = loc("CWE401_Memory_Leak__int_realloc_12.c":84:27)
#loc129 = loc("CWE401_Memory_Leak__int_realloc_12.c":84:28)
#loc130 = loc("CWE401_Memory_Leak__int_realloc_12.c":84:9)
#loc131 = loc("CWE401_Memory_Leak__int_realloc_12.c":86:5)
#loc132 = loc("CWE401_Memory_Leak__int_realloc_12.c":95:5)
#loc133 = loc("CWE401_Memory_Leak__int_realloc_12.c":86:8)
#loc134 = loc("CWE401_Memory_Leak__int_realloc_12.c":86:33)
#loc135 = loc("CWE401_Memory_Leak__int_realloc_12.c":87:5)
#loc136 = loc("CWE401_Memory_Leak__int_realloc_12.c":90:5)
#loc137 = loc("CWE401_Memory_Leak__int_realloc_12.c":92:5)
#loc138 = loc("CWE401_Memory_Leak__int_realloc_12.c":89:9)
#loc139 = loc("CWE401_Memory_Leak__int_realloc_12.c":89:14)
#loc140 = loc("CWE401_Memory_Leak__int_realloc_12.c":94:9)
#loc141 = loc("CWE401_Memory_Leak__int_realloc_12.c":94:14)
#loc142 = loc("CWE401_Memory_Leak__int_realloc_12.c":101:1)
#loc143 = loc("CWE401_Memory_Leak__int_realloc_12.c":131:1)
#loc144 = loc("CWE401_Memory_Leak__int_realloc_12.c":103:5)
#loc145 = loc("CWE401_Memory_Leak__int_realloc_12.c":103:11)
#loc146 = loc("CWE401_Memory_Leak__int_realloc_12.c":104:12)
#loc147 = loc("CWE401_Memory_Leak__int_realloc_12.c":104:5)
#loc148 = loc("CWE401_Memory_Leak__int_realloc_12.c":105:5)
#loc149 = loc("CWE401_Memory_Leak__int_realloc_12.c":120:5)
#loc150 = loc("CWE401_Memory_Leak__int_realloc_12.c":105:8)
#loc151 = loc("CWE401_Memory_Leak__int_realloc_12.c":105:33)
#loc152 = loc("CWE401_Memory_Leak__int_realloc_12.c":106:5)
#loc153 = loc("CWE401_Memory_Leak__int_realloc_12.c":112:5)
#loc154 = loc("CWE401_Memory_Leak__int_realloc_12.c":114:5)
#loc155 = loc("CWE401_Memory_Leak__int_realloc_12.c":108:23)
#loc156 = loc("CWE401_Memory_Leak__int_realloc_12.c":108:9)
#loc157 = loc("CWE401_Memory_Leak__int_realloc_12.c":110:19)
#loc158 = loc("CWE401_Memory_Leak__int_realloc_12.c":110:9)
#loc159 = loc("CWE401_Memory_Leak__int_realloc_12.c":110:14)
#loc160 = loc("CWE401_Memory_Leak__int_realloc_12.c":110:15)
#loc161 = loc("CWE401_Memory_Leak__int_realloc_12.c":111:22)
#loc162 = loc("CWE401_Memory_Leak__int_realloc_12.c":111:27)
#loc163 = loc("CWE401_Memory_Leak__int_realloc_12.c":111:28)
#loc164 = loc("CWE401_Memory_Leak__int_realloc_12.c":111:9)
#loc165 = loc("CWE401_Memory_Leak__int_realloc_12.c":116:23)
#loc166 = loc("CWE401_Memory_Leak__int_realloc_12.c":116:9)
#loc167 = loc("CWE401_Memory_Leak__int_realloc_12.c":118:19)
#loc168 = loc("CWE401_Memory_Leak__int_realloc_12.c":118:9)
#loc169 = loc("CWE401_Memory_Leak__int_realloc_12.c":118:14)
#loc170 = loc("CWE401_Memory_Leak__int_realloc_12.c":118:15)
#loc171 = loc("CWE401_Memory_Leak__int_realloc_12.c":119:22)
#loc172 = loc("CWE401_Memory_Leak__int_realloc_12.c":119:27)
#loc173 = loc("CWE401_Memory_Leak__int_realloc_12.c":119:28)
#loc174 = loc("CWE401_Memory_Leak__int_realloc_12.c":119:9)
#loc175 = loc("CWE401_Memory_Leak__int_realloc_12.c":121:5)
#loc176 = loc("CWE401_Memory_Leak__int_realloc_12.c":130:5)
#loc177 = loc("CWE401_Memory_Leak__int_realloc_12.c":121:8)
#loc178 = loc("CWE401_Memory_Leak__int_realloc_12.c":121:33)
#loc179 = loc("CWE401_Memory_Leak__int_realloc_12.c":122:5)
#loc180 = loc("CWE401_Memory_Leak__int_realloc_12.c":125:5)
#loc181 = loc("CWE401_Memory_Leak__int_realloc_12.c":127:5)
#loc182 = loc(fused[#loc1, #loc2])
#loc183 = loc(fused[#loc3, #loc4])
#loc184 = loc(fused[#loc5, #loc6])
#loc185 = loc(fused[#loc7, #loc8])
#loc186 = loc(fused[#loc9, #loc10])
#loc187 = loc(fused[#loc11, #loc12])
#loc188 = loc(fused[#loc13, #loc14])
#loc189 = loc(fused[#loc16, #loc15])
#loc190 = loc(fused[#loc17, #loc18])
#loc191 = loc(fused[#loc19, #loc20])
#loc192 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc193 = loc(fused[#loc27, #loc28])
#loc194 = loc(fused[#loc26, #loc28])
#loc195 = loc(fused[#loc24, #loc29])
#loc196 = loc(fused[#loc30, #loc29])
#loc197 = loc(fused[#loc31, #loc32])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc35, #loc32])
#loc200 = loc(fused[#loc40, #loc39])
#loc201 = loc(fused[#loc48, #loc47])
#loc202 = loc(fused[#loc50, #loc49])
#loc203 = loc(fused[#loc57, #loc58])
#loc204 = loc(fused[#loc59, #loc60])
#loc205 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc206 = loc(fused[#loc66, #loc67])
#loc207 = loc(fused[#loc68, #loc69])
#loc208 = loc(fused[#loc70, #loc71])
#loc209 = loc(fused[#loc72, #loc73])
#loc210 = loc(fused[#loc74, #loc75])
#loc211 = loc(fused[#loc77, #loc76])
#loc212 = loc(fused[#loc78, #loc79])
#loc213 = loc(fused[#loc80, #loc81])
#loc214 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc215 = loc(fused[#loc88, #loc89])
#loc216 = loc(fused[#loc87, #loc89])
#loc217 = loc(fused[#loc85, #loc90])
#loc218 = loc(fused[#loc91, #loc90])
#loc219 = loc(fused[#loc92, #loc93])
#loc220 = loc(fused[#loc94, #loc95])
#loc221 = loc(fused[#loc96, #loc93])
#loc222 = loc(fused[#loc101, #loc100])
#loc223 = loc(fused[#loc111, #loc112])
#loc224 = loc(fused[#loc110, #loc112])
#loc225 = loc(fused[#loc108, #loc113])
#loc226 = loc(fused[#loc114, #loc113])
#loc227 = loc(fused[#loc115, #loc116])
#loc228 = loc(fused[#loc117, #loc118])
#loc229 = loc(fused[#loc119, #loc116])
#loc230 = loc(fused[#loc124, #loc123])
#loc231 = loc(fused[#loc131, #loc132])
#loc232 = loc(fused[#loc133, #loc134])
#loc233 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc234 = loc(fused[#loc142, #loc143])
#loc235 = loc(fused[#loc144, #loc145])
#loc236 = loc(fused[#loc147, #loc146])
#loc237 = loc(fused[#loc148, #loc149])
#loc238 = loc(fused[#loc150, #loc151])
#loc239 = loc(fused[#loc152, #loc153, #loc154, #loc149])
#loc240 = loc(fused[#loc156, #loc155])
#loc241 = loc(fused[#loc158, #loc157])
#loc242 = loc(fused[#loc166, #loc165])
#loc243 = loc(fused[#loc168, #loc167])
#loc244 = loc(fused[#loc175, #loc176])
#loc245 = loc(fused[#loc177, #loc178])
#loc246 = loc(fused[#loc179, #loc180, #loc181, #loc176])
