!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":289:10)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":289:14)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":289:20)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":289:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc450 = loc(fused[#loc163, #loc164])
#loc451 = loc(fused[#loc165, #loc166])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc386)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc387)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc388)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc389)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc390)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc391)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc392)
  cir.func private @close(!s32i) -> !s32i loc(#loc393)
  cir.global "private" internal dsolocal @CWE126_Buffer_Overread__CWE129_listen_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc394)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc399)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc400)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc401)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc402)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc403)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc33)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc401)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc35)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc402)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc40)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc42)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc405)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc49)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc407)
            cir.if %63 {
              cir.break loc(#loc51)
            } loc(#loc408)
          } loc(#loc406)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc409)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc410)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc411)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc59)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc412)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc62)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc62)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc413)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc66)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc66)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc414)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc416)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc417)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc417)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc78)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc79)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc418)
            cir.if %67 {
              cir.break loc(#loc81)
            } loc(#loc419)
          } loc(#loc415)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc85)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc86)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc87)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc421)
            cir.if %65 {
              cir.break loc(#loc89)
            } loc(#loc422)
          } loc(#loc420)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc91)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc92)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc93)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc423)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc99)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc425)
            cir.if %63 {
              cir.break loc(#loc101)
            } loc(#loc426)
          } loc(#loc424)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc104)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc104)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc104)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc104)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc104)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc104)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc104)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc105)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc105)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc427)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc107)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc428)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc113)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc430)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc114)
              cir.yield %65 : !cir.bool loc(#loc114)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc431)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc114)
                cir.yield %69 : !cir.bool loc(#loc114)
              }, false {
                %69 = cir.const #false loc(#loc114)
                cir.yield %69 : !cir.bool loc(#loc114)
              }) : (!cir.bool) -> !cir.bool loc(#loc114)
              cir.yield %68 : !cir.bool loc(#loc114)
            }) : (!cir.bool) -> !cir.bool loc(#loc114)
            cir.if %64 {
              cir.break loc(#loc118)
            } loc(#loc432)
          } loc(#loc429)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc119)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc119)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc121)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc433)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc123)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
          cir.yield loc(#loc39)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc126)
          cir.condition(%16) loc(#loc126)
        } loc(#loc404)
      } loc(#loc404)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc130)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc436)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc133)
        } loc(#loc437)
      } loc(#loc435)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc137)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc439)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc140)
        } loc(#loc440)
      } loc(#loc438)
    } loc(#loc398)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %4 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc394)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc442)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    cir.return loc(#loc20)
  } loc(#loc395)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc444)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc445)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc443)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc446)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc447)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc448)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc160)
  cir.func @main(%arg0: !s32i loc(fused[#loc163, #loc164]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc165, #loc166])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc451)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc162)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc168)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc169)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc170)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc157)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc452)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_45_good() : () -> () loc(#loc172)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc159)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc453)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_45_bad() : () -> () loc(#loc176)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc160)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    cir.return %17 : !s32i loc(#loc454)
  } loc(#loc449)
  cir.func private @printIntLine(!s32i) loc(#loc455)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc183)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc457)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc394)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc459)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc459)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc459)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc195)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc461)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc200)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc200)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc200)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc201)
        } else {
          %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc183)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc183)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc202)
        } loc(#loc462)
      } loc(#loc460)
    } loc(#loc458)
    cir.return loc(#loc185)
  } loc(#loc456)
  cir.global "private" internal dsolocal @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc463)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc210)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc212)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %5 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc463)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc469)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc216)
    cir.return loc(#loc206)
  } loc(#loc464)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc463)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc473)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc473)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc473)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc229)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc475)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc233)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc234)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc234)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc234)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc235)
        } else {
          %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc236)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc236)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc237)
        } loc(#loc476)
      } loc(#loc474)
    } loc(#loc472)
    cir.return loc(#loc219)
  } loc(#loc470)
  cir.global "private" internal dsolocal @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc477)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc479)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc245)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc482)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc483)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc484)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc485)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc486)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc254)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc254)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc484)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc256)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc256)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc485)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc261)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc262)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc263)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc488)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc269)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc270)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc270)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc490)
            cir.if %63 {
              cir.break loc(#loc272)
            } loc(#loc491)
          } loc(#loc489)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc492)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc275)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc493)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc494)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc280)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc280)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc495)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc282)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc282)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc496)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc284)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc284)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc285)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc497)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc499)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc500)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc500)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc295)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc296)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc296)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc501)
            cir.if %67 {
              cir.break loc(#loc298)
            } loc(#loc502)
          } loc(#loc498)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc301)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc302)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc303)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc304)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc304)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc504)
            cir.if %65 {
              cir.break loc(#loc306)
            } loc(#loc505)
          } loc(#loc503)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc307)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc308)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc309)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc310)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc506)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc315)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc316)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc316)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc508)
            cir.if %63 {
              cir.break loc(#loc318)
            } loc(#loc509)
          } loc(#loc507)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc319)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc320)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc320)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc321)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc321)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc321)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc321)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc321)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc321)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc321)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc322)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc322)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc510)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc323)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc324)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc324)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc511)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc329)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc330)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc330)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc513)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc331)
              cir.yield %65 : !cir.bool loc(#loc331)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc332)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc333)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc514)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc331)
                cir.yield %69 : !cir.bool loc(#loc331)
              }, false {
                %69 = cir.const #false loc(#loc331)
                cir.yield %69 : !cir.bool loc(#loc331)
              }) : (!cir.bool) -> !cir.bool loc(#loc331)
              cir.yield %68 : !cir.bool loc(#loc331)
            }) : (!cir.bool) -> !cir.bool loc(#loc331)
            cir.if %64 {
              cir.break loc(#loc335)
            } loc(#loc515)
          } loc(#loc512)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc336)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc336)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc338)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc338)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc516)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc339)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc340)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc517)
          cir.yield loc(#loc260)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc343)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc343)
          cir.condition(%16) loc(#loc343)
        } loc(#loc487)
      } loc(#loc487)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc347)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc347)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc519)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc349)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc350)
        } loc(#loc520)
      } loc(#loc518)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc353)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc354)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc354)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc522)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc356)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc357)
        } loc(#loc523)
      } loc(#loc521)
    } loc(#loc481)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc358)
    %4 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc477)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc525)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc360)
    cir.return loc(#loc241)
  } loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc362)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc527)
    %1 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc477)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc529)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc529)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc529)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc373)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc374)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc531)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc376)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc377)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc532)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc375)
            cir.yield %13 : !cir.bool loc(#loc375)
          }, false {
            %13 = cir.const #false loc(#loc375)
            cir.yield %13 : !cir.bool loc(#loc375)
          }) : (!cir.bool) -> !cir.bool loc(#loc375)
          cir.yield %12 : !cir.bool loc(#loc375)
        }, false {
          %9 = cir.const #false loc(#loc375)
          cir.yield %9 : !cir.bool loc(#loc375)
        }) : (!cir.bool) -> !cir.bool loc(#loc375)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc382)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc383)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc383)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc383)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc384)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc362)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc362)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc385)
        } loc(#loc533)
      } loc(#loc530)
    } loc(#loc528)
    cir.return loc(#loc364)
  } loc(#loc526)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":42:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":42:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":66:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":142:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":68:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":68:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":70:13)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":70:12)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":70:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":71:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":139:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":76:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":76:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":77:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":77:28)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":78:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":78:31)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":79:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":79:31)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":80:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":80:41)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":81:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":124:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:35)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:44)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:57)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:28)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":91:68)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":92:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":95:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":92:17)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":92:33)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":93:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":94:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:20)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:21)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:30)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:33)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:47)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":96:48)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":97:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":97:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":98:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":98:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":99:38)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":99:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":99:13)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":99:46)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":103:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:22)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:54)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:55)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:64)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:78)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":100:84)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":101:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":102:17)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":104:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":107:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":104:24)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":104:38)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":104:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":104:57)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":105:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":106:17)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:35)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:49)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:55)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:28)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":108:59)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":109:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":112:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":109:17)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":109:33)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":110:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":111:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:31)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:45)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:58)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:76)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:79)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:26)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":114:80)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":118:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:17)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:31)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:44)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:47)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":115:61)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":116:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":117:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":120:39)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":120:25)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":120:13)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":122:25)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":122:20)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":122:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":122:36)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":124:16)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":125:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":128:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":125:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":125:29)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":126:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":127:26)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":127:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":129:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":132:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":129:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":129:29)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":130:9)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":131:26)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":131:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":140:63)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":140:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":141:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":141:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":275:1)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":279:1)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":277:5)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":277:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":278:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":278:13)
#loc151 = loc("/usr/include/stdlib.h":575:1)
#loc152 = loc("/usr/include/stdlib.h":575:41)
#loc153 = loc("/usr/include/time.h":76:1)
#loc154 = loc("/usr/include/time.h":76:38)
#loc155 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":294:15)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":296:15)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":299:15)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":301:15)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":289:1)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":304:1)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":290:1)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":292:27)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":292:22)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":292:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":294:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":295:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":295:58)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":296:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":299:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":300:5)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":300:57)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":301:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":303:12)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":303:5)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":61:23)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":48:1)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":64:1)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":50:5)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":50:16)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":51:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":63:5)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":52:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":52:30)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":55:9)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":62:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":55:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":55:21)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":56:9)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":58:9)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":60:9)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":57:33)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":57:26)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":57:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":61:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":43:1)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":43:12)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":167:1)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":177:1)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":169:5)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":169:9)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":171:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":171:12)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":171:5)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":174:12)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":174:5)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":175:67)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":175:5)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":176:5)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":176:17)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":149:1)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":165:1)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":151:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":151:16)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":152:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":164:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":153:9)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":153:30)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":156:9)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":163:9)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":156:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":156:21)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":157:9)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":159:9)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":161:9)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":158:33)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":158:26)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":158:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":162:23)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":162:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":44:1)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":44:12)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":197:1)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":273:1)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":199:5)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":199:9)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":201:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":201:12)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":201:5)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":202:5)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":270:5)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":207:9)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":207:13)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":208:9)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":208:28)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":209:9)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":209:31)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":210:9)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":210:31)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":211:9)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":211:41)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":212:9)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":255:17)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:35)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:44)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:57)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:28)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:13)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":222:68)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":223:13)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":226:13)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":223:17)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":223:33)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":224:13)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":225:17)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:20)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:21)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:30)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:33)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:47)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:13)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":227:48)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":228:34)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":228:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":229:39)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":229:13)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":230:38)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":230:32)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":230:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":230:46)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":234:13)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:22)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:54)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:55)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:64)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:78)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:17)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":231:84)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":232:13)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":233:17)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":235:13)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":238:13)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":235:24)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":235:38)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":235:17)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":235:57)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":236:13)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":237:17)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:35)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:49)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:55)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:28)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:13)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":239:59)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":240:13)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":243:13)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":240:17)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":240:33)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":241:13)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":242:17)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:31)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:45)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:58)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:76)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:79)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:26)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:13)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":245:80)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":249:13)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:17)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:31)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:44)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:47)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":246:61)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":247:13)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":248:17)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":251:39)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":251:25)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":251:13)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":253:25)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":253:20)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":253:13)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":253:36)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":255:16)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":256:9)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":259:9)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":256:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":256:29)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":257:9)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":258:26)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":258:13)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":260:9)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":263:9)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":260:13)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":260:29)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":261:9)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":262:26)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":262:13)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":271:67)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":271:5)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":272:5)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":272:17)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":192:23)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":180:1)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":195:1)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":182:5)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":182:16)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":183:5)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":194:5)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":184:9)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":184:30)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:9)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":193:9)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:13)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:21)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:23)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:26)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:34)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":186:36)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":187:9)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":189:9)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":191:9)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":188:33)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":188:26)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":188:13)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_45.c":192:13)
#loc386 = loc(fused[#loc1, #loc2])
#loc387 = loc(fused[#loc3, #loc4])
#loc388 = loc(fused[#loc5, #loc6])
#loc389 = loc(fused[#loc7, #loc8])
#loc390 = loc(fused[#loc9, #loc10])
#loc391 = loc(fused[#loc11, #loc12])
#loc392 = loc(fused[#loc13, #loc14])
#loc393 = loc(fused[#loc15, #loc16])
#loc394 = loc(fused[#loc17, #loc18])
#loc395 = loc(fused[#loc19, #loc20])
#loc396 = loc(fused[#loc21, #loc22])
#loc397 = loc(fused[#loc25, #loc23])
#loc398 = loc(fused[#loc26, #loc27])
#loc399 = loc(fused[#loc28, #loc29])
#loc400 = loc(fused[#loc30, #loc31])
#loc401 = loc(fused[#loc32, #loc33])
#loc402 = loc(fused[#loc34, #loc35])
#loc403 = loc(fused[#loc36, #loc37])
#loc404 = loc(fused[#loc38, #loc39])
#loc405 = loc(fused[#loc44, #loc45])
#loc406 = loc(fused[#loc46, #loc47])
#loc407 = loc(fused[#loc48, #loc49])
#loc408 = loc(fused[#loc50, #loc47])
#loc409 = loc(fused[#loc52, #loc53])
#loc410 = loc(fused[#loc55, #loc56])
#loc411 = loc(fused[#loc57, #loc58])
#loc412 = loc(fused[#loc61, #loc59])
#loc413 = loc(fused[#loc65, #loc62])
#loc414 = loc(fused[#loc69, #loc70])
#loc415 = loc(fused[#loc71, #loc72])
#loc416 = loc(fused[#loc74, #loc75])
#loc417 = loc(fused[#loc76, #loc77])
#loc418 = loc(fused[#loc78, #loc79])
#loc419 = loc(fused[#loc80, #loc72])
#loc420 = loc(fused[#loc82, #loc83])
#loc421 = loc(fused[#loc86, #loc87])
#loc422 = loc(fused[#loc88, #loc83])
#loc423 = loc(fused[#loc94, #loc95])
#loc424 = loc(fused[#loc96, #loc97])
#loc425 = loc(fused[#loc98, #loc99])
#loc426 = loc(fused[#loc100, #loc97])
#loc427 = loc(fused[#loc104, #loc105])
#loc428 = loc(fused[#loc108, #loc109])
#loc429 = loc(fused[#loc110, #loc111])
#loc430 = loc(fused[#loc112, #loc113])
#loc431 = loc(fused[#loc115, #loc116])
#loc432 = loc(fused[#loc117, #loc111])
#loc433 = loc(fused[#loc121, #loc119])
#loc434 = loc(fused[#loc124, #loc125])
#loc435 = loc(fused[#loc127, #loc128])
#loc436 = loc(fused[#loc129, #loc130])
#loc437 = loc(fused[#loc131, #loc128])
#loc438 = loc(fused[#loc134, #loc135])
#loc439 = loc(fused[#loc136, #loc137])
#loc440 = loc(fused[#loc138, #loc135])
#loc441 = loc(fused[#loc142, #loc141])
#loc442 = loc(fused[#loc143, #loc144])
#loc443 = loc(fused[#loc145, #loc146])
#loc444 = loc(fused[#loc147, #loc148])
#loc445 = loc(fused[#loc149, #loc150])
#loc446 = loc(fused[#loc151, #loc152])
#loc447 = loc(fused[#loc153, #loc154])
#loc448 = loc(fused[#loc155, #loc156])
#loc449 = loc(fused[#loc161, #loc162])
#loc452 = loc(fused[#loc172, #loc173])
#loc453 = loc(fused[#loc176, #loc177])
#loc454 = loc(fused[#loc180, #loc179])
#loc455 = loc(fused[#loc181, #loc182])
#loc456 = loc(fused[#loc184, #loc185])
#loc457 = loc(fused[#loc186, #loc187])
#loc458 = loc(fused[#loc188, #loc189])
#loc459 = loc(fused[#loc190, #loc191])
#loc460 = loc(fused[#loc192, #loc193])
#loc461 = loc(fused[#loc194, #loc195])
#loc462 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc463 = loc(fused[#loc203, #loc204])
#loc464 = loc(fused[#loc205, #loc206])
#loc465 = loc(fused[#loc207, #loc208])
#loc466 = loc(fused[#loc211, #loc209])
#loc467 = loc(fused[#loc213, #loc212])
#loc468 = loc(fused[#loc215, #loc214])
#loc469 = loc(fused[#loc216, #loc217])
#loc470 = loc(fused[#loc218, #loc219])
#loc471 = loc(fused[#loc220, #loc221])
#loc472 = loc(fused[#loc222, #loc223])
#loc473 = loc(fused[#loc224, #loc225])
#loc474 = loc(fused[#loc226, #loc227])
#loc475 = loc(fused[#loc228, #loc229])
#loc476 = loc(fused[#loc230, #loc231, #loc232, #loc227])
#loc477 = loc(fused[#loc238, #loc239])
#loc478 = loc(fused[#loc240, #loc241])
#loc479 = loc(fused[#loc242, #loc243])
#loc480 = loc(fused[#loc246, #loc244])
#loc481 = loc(fused[#loc247, #loc248])
#loc482 = loc(fused[#loc249, #loc250])
#loc483 = loc(fused[#loc251, #loc252])
#loc484 = loc(fused[#loc253, #loc254])
#loc485 = loc(fused[#loc255, #loc256])
#loc486 = loc(fused[#loc257, #loc258])
#loc487 = loc(fused[#loc259, #loc260])
#loc488 = loc(fused[#loc265, #loc266])
#loc489 = loc(fused[#loc267, #loc268])
#loc490 = loc(fused[#loc269, #loc270])
#loc491 = loc(fused[#loc271, #loc268])
#loc492 = loc(fused[#loc273, #loc274])
#loc493 = loc(fused[#loc276, #loc277])
#loc494 = loc(fused[#loc278, #loc279])
#loc495 = loc(fused[#loc281, #loc280])
#loc496 = loc(fused[#loc283, #loc282])
#loc497 = loc(fused[#loc286, #loc287])
#loc498 = loc(fused[#loc288, #loc289])
#loc499 = loc(fused[#loc291, #loc292])
#loc500 = loc(fused[#loc293, #loc294])
#loc501 = loc(fused[#loc295, #loc296])
#loc502 = loc(fused[#loc297, #loc289])
#loc503 = loc(fused[#loc299, #loc300])
#loc504 = loc(fused[#loc303, #loc304])
#loc505 = loc(fused[#loc305, #loc300])
#loc506 = loc(fused[#loc311, #loc312])
#loc507 = loc(fused[#loc313, #loc314])
#loc508 = loc(fused[#loc315, #loc316])
#loc509 = loc(fused[#loc317, #loc314])
#loc510 = loc(fused[#loc321, #loc322])
#loc511 = loc(fused[#loc325, #loc326])
#loc512 = loc(fused[#loc327, #loc328])
#loc513 = loc(fused[#loc329, #loc330])
#loc514 = loc(fused[#loc332, #loc333])
#loc515 = loc(fused[#loc334, #loc328])
#loc516 = loc(fused[#loc338, #loc336])
#loc517 = loc(fused[#loc341, #loc342])
#loc518 = loc(fused[#loc344, #loc345])
#loc519 = loc(fused[#loc346, #loc347])
#loc520 = loc(fused[#loc348, #loc345])
#loc521 = loc(fused[#loc351, #loc352])
#loc522 = loc(fused[#loc353, #loc354])
#loc523 = loc(fused[#loc355, #loc352])
#loc524 = loc(fused[#loc359, #loc358])
#loc525 = loc(fused[#loc360, #loc361])
#loc526 = loc(fused[#loc363, #loc364])
#loc527 = loc(fused[#loc365, #loc366])
#loc528 = loc(fused[#loc367, #loc368])
#loc529 = loc(fused[#loc369, #loc370])
#loc530 = loc(fused[#loc371, #loc372])
#loc531 = loc(fused[#loc373, #loc374])
#loc532 = loc(fused[#loc376, #loc378])
#loc533 = loc(fused[#loc379, #loc380, #loc381, #loc372])
