!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":22:21)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":22:25)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":163:10)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":163:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":163:20)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":163:32)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":109:25)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":109:29)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:23)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":67:25)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":67:29)
#true = #cir.bool<true> : !cir.bool
#loc293 = loc(fused[#loc17, #loc18])
#loc328 = loc(fused[#loc109, #loc110])
#loc329 = loc(fused[#loc111, #loc112])
#loc334 = loc(fused[#loc130, #loc131])
#loc364 = loc(fused[#loc211, #loc212])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc286)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc289)
  cir.func private @printIntLine(!s32i) loc(#loc290)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc291)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc295)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc293)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc23)
    cir.br ^bb1 loc(#loc296)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc27)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc27)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc297)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc298)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc299)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc295)
    cir.br ^bb2 loc(#loc300)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc301)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc302)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc303)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb7 loc(#loc303)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc43)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc44)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc306)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc51)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb7 loc(#loc303)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc309)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc311)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc62)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb16 loc(#loc313)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb17 loc(#loc313)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc69)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc316)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc74)
    cir.br ^bb20 loc(#loc64)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc64)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc76)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb17 loc(#loc313)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc64)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc57)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb25 loc(#loc53)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc53)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc78)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb27 loc(#loc25)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc16)
  } loc(#loc292)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc319)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc87)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc287)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc87)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @badSink(%9) : (!s32i) -> () loc(#loc90)
    cir.return loc(#loc81)
  } loc(#loc318)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc322)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc321)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc324)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc325)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc328)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc329)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc330)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc331)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    cir.return %17 : !s32i loc(#loc332)
  } loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc127)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc130, #loc131])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc336)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc334)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb1 loc(#loc337)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc140)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc140)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc338)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc339)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc340)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc336)
    cir.br ^bb2 loc(#loc341)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc146)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc342)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc343)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc150)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc144)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc344)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb7 loc(#loc344)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc156)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc346)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc157)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc347)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb10 loc(#loc152)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc152)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc164)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb7 loc(#loc344)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc152)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc350)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %29 ^bb15, ^bb20 loc(#loc169)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc171)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %32 ^bb16, ^bb17 loc(#loc169)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #true loc(#loc169)
    cir.br ^bb18(%33 : !cir.bool) loc(#loc169)
  ^bb17:  // pred: ^bb15
    %34 = cir.const #false loc(#loc169)
    cir.br ^bb18(%34 : !cir.bool) loc(#loc169)
  ^bb18(%35: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc169)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%35 : !cir.bool) loc(#loc169)
  ^bb20:  // pred: ^bb14
    %36 = cir.const #false loc(#loc169)
    cir.br ^bb21(%36 : !cir.bool) loc(#loc169)
  ^bb21(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc169)
  ^bb22:  // pred: ^bb21
    cir.brcond %37 ^bb23, ^bb32 loc(#loc353)
  ^bb23:  // pred: ^bb22
    %38 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc179)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb24 loc(#loc355)
  ^bb24:  // pred: ^bb23
    %42 = cir.const #cir.int<0> : !s32i loc(#loc182)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb25 loc(#loc355)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc185)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %45 ^bb26, ^bb30 loc(#loc186)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc358)
  ^bb27:  // pred: ^bb26
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc190)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc191)
    cir.br ^bb28 loc(#loc181)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc181)
  ^bb29:  // pred: ^bb28
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc193)
    cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb25 loc(#loc355)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc181)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc174)
  ^bb32:  // pred: ^bb22
    %52 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc127)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb33 loc(#loc166)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc166)
  ^bb34:  // pred: ^bb33
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc195)
    cir.call @free(%55) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc196)
    cir.br ^bb35 loc(#loc138)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc129)
  } loc(#loc333)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc361)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc202)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc204)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc287)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc205)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc206)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc206)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc204)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @goodB2GSink(%9) : (!s32i) -> () loc(#loc208)
    cir.return loc(#loc198)
  } loc(#loc360)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc211, #loc212])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc365)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc366)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc364)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb1 loc(#loc367)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc220)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc221)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc221)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc368)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc369)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc370)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc366)
    cir.br ^bb2 loc(#loc371)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc226)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc227)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc372)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc373)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc229)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc231)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc229)
    cir.br ^bb4 loc(#loc225)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc225)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc374)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc234)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb7 loc(#loc374)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc237)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %20 ^bb8, ^bb12 loc(#loc238)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc377)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc243)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb10 loc(#loc233)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc245)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb7 loc(#loc374)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc233)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc380)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %29 ^bb15, ^bb24 loc(#loc382)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc254)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc256)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb16 loc(#loc384)
  ^bb16:  // pred: ^bb15
    %34 = cir.const #cir.int<0> : !s32i loc(#loc259)
    cir.store %34, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb17 loc(#loc384)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc262)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %37 ^bb18, ^bb22 loc(#loc263)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc387)
  ^bb19:  // pred: ^bb18
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc265)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc267)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc268)
    cir.br ^bb20 loc(#loc258)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc258)
  ^bb21:  // pred: ^bb20
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %43 = cir.unary(inc, %42) : !s32i, !s32i loc(#loc270)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb17 loc(#loc384)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc258)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc251)
  ^bb24:  // pred: ^bb14
    %44 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc271)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc271)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.br ^bb25 loc(#loc247)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc247)
  ^bb26:  // pred: ^bb25
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc273)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc273)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc274)
    cir.br ^bb27 loc(#loc219)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc210)
  } loc(#loc363)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc280)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc282)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc285)
    cir.return loc(#loc276)
  } loc(#loc389)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":58:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":46:23)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":22:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":50:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":25:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":25:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:54)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":23:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":24:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":49:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:38)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:43)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":26:53)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:39)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:36)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":27:35)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":32:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:18)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:14)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:21)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:25)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":30:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":31:25)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":31:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":31:20)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":31:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:30)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":29:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":35:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":47:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":35:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":35:21)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":36:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":43:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":45:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":37:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":37:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":37:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":37:24)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":42:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:21)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:28)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:26)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":40:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":41:30)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":41:37)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":41:38)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":41:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:33)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":39:32)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":46:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":48:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":48:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":52:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":60:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":54:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":54:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":56:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":56:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":56:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":58:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":58:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":59:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":59:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":148:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":152:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":150:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":150:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":151:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":151:13)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":168:15)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":170:15)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":173:15)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":175:15)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":163:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":178:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":164:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":166:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":166:22)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":166:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":168:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":169:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":169:64)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":170:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":173:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":174:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":174:63)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":175:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":177:12)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":177:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":132:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":109:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":136:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":112:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":112:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:54)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":110:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":111:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":135:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:31)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:38)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:43)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":113:53)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:39)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:29)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:30)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:36)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":114:35)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":119:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:18)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:14)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:25)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:23)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":117:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":118:25)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":118:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":118:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":118:21)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:30)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":116:29)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":133:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:13)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:21)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:26)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:34)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":121:36)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":122:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":129:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":131:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":123:28)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":123:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":123:20)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":123:24)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":128:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:21)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:17)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:24)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:28)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:26)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":126:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":127:30)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":127:37)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":127:38)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":127:17)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:33)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":125:32)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":132:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":134:14)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":134:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":138:1)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":146:1)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":140:5)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":140:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":142:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":142:12)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":142:5)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":144:5)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":144:12)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":144:19)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":145:17)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":145:5)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":67:1)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":95:1)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":70:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":70:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:9)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:54)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":68:1)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":69:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":94:5)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:31)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:38)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:43)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":71:53)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:9)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:39)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:23)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:29)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:30)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:36)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":72:35)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":77:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:18)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:14)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:21)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:25)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:23)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":75:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":76:25)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":76:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":76:20)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":76:21)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:30)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":74:29)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":80:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":92:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":80:13)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":80:21)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":81:9)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":88:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":90:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":82:28)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":82:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":82:20)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":82:24)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":87:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:21)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:17)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:24)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:28)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:26)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":85:13)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":86:30)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":86:37)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":86:38)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":86:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:33)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":84:32)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":91:23)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":91:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":93:14)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":93:9)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":97:1)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":106:1)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":99:5)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":99:9)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":101:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":101:12)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":101:5)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":104:12)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":104:5)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":105:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_41.c":105:5)
#loc286 = loc(fused[#loc1, #loc2])
#loc287 = loc(fused[#loc3, #loc4])
#loc288 = loc(fused[#loc6, #loc7])
#loc289 = loc(fused[#loc8, #loc9])
#loc290 = loc(fused[#loc10, #loc11])
#loc291 = loc(fused[#loc13, #loc14])
#loc292 = loc(fused[#loc15, #loc16])
#loc294 = loc(fused[#loc19, #loc20])
#loc295 = loc(fused[#loc21, #loc22])
#loc296 = loc(fused[#loc24, #loc25])
#loc297 = loc(fused[#loc28, #loc29])
#loc298 = loc(fused[#loc27, #loc29])
#loc299 = loc(fused[#loc26, #loc22])
#loc300 = loc(fused[#loc30, #loc31])
#loc301 = loc(fused[#loc32, #loc33])
#loc302 = loc(fused[#loc34, #loc31])
#loc303 = loc(fused[#loc38, #loc39])
#loc304 = loc(fused[#loc41, #loc40])
#loc305 = loc(fused[#loc42, #loc43])
#loc306 = loc(fused[#loc45, #loc39])
#loc307 = loc(fused[#loc47, #loc46])
#loc308 = loc(fused[#loc51, #loc50])
#loc309 = loc(fused[#loc52, #loc53])
#loc310 = loc(fused[#loc54, #loc55])
#loc311 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc312 = loc(fused[#loc60, #loc59])
#loc313 = loc(fused[#loc63, #loc64])
#loc314 = loc(fused[#loc66, #loc65])
#loc315 = loc(fused[#loc67, #loc68])
#loc316 = loc(fused[#loc70, #loc64])
#loc317 = loc(fused[#loc76, #loc75])
#loc318 = loc(fused[#loc80, #loc81])
#loc319 = loc(fused[#loc82, #loc83])
#loc320 = loc(fused[#loc86, #loc84])
#loc321 = loc(fused[#loc91, #loc92])
#loc322 = loc(fused[#loc93, #loc94])
#loc323 = loc(fused[#loc95, #loc96])
#loc324 = loc(fused[#loc97, #loc98])
#loc325 = loc(fused[#loc99, #loc100])
#loc326 = loc(fused[#loc101, #loc102])
#loc327 = loc(fused[#loc107, #loc108])
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc122, #loc123])
#loc332 = loc(fused[#loc126, #loc125])
#loc333 = loc(fused[#loc128, #loc129])
#loc335 = loc(fused[#loc132, #loc133])
#loc336 = loc(fused[#loc134, #loc135])
#loc337 = loc(fused[#loc137, #loc138])
#loc338 = loc(fused[#loc141, #loc142])
#loc339 = loc(fused[#loc140, #loc142])
#loc340 = loc(fused[#loc139, #loc135])
#loc341 = loc(fused[#loc143, #loc144])
#loc342 = loc(fused[#loc145, #loc146])
#loc343 = loc(fused[#loc147, #loc144])
#loc344 = loc(fused[#loc151, #loc152])
#loc345 = loc(fused[#loc154, #loc153])
#loc346 = loc(fused[#loc155, #loc156])
#loc347 = loc(fused[#loc158, #loc152])
#loc348 = loc(fused[#loc160, #loc159])
#loc349 = loc(fused[#loc164, #loc163])
#loc350 = loc(fused[#loc165, #loc166])
#loc351 = loc(fused[#loc167, #loc168])
#loc352 = loc(fused[#loc170, #loc172])
#loc353 = loc(fused[#loc173, #loc174, #loc175, #loc166])
#loc354 = loc(fused[#loc177, #loc176])
#loc355 = loc(fused[#loc180, #loc181])
#loc356 = loc(fused[#loc183, #loc182])
#loc357 = loc(fused[#loc184, #loc185])
#loc358 = loc(fused[#loc187, #loc181])
#loc359 = loc(fused[#loc193, #loc192])
#loc360 = loc(fused[#loc197, #loc198])
#loc361 = loc(fused[#loc199, #loc200])
#loc362 = loc(fused[#loc203, #loc201])
#loc363 = loc(fused[#loc209, #loc210])
#loc365 = loc(fused[#loc213, #loc214])
#loc366 = loc(fused[#loc215, #loc216])
#loc367 = loc(fused[#loc218, #loc219])
#loc368 = loc(fused[#loc222, #loc223])
#loc369 = loc(fused[#loc221, #loc223])
#loc370 = loc(fused[#loc220, #loc216])
#loc371 = loc(fused[#loc224, #loc225])
#loc372 = loc(fused[#loc226, #loc227])
#loc373 = loc(fused[#loc228, #loc225])
#loc374 = loc(fused[#loc232, #loc233])
#loc375 = loc(fused[#loc235, #loc234])
#loc376 = loc(fused[#loc236, #loc237])
#loc377 = loc(fused[#loc239, #loc233])
#loc378 = loc(fused[#loc241, #loc240])
#loc379 = loc(fused[#loc245, #loc244])
#loc380 = loc(fused[#loc246, #loc247])
#loc381 = loc(fused[#loc248, #loc249])
#loc382 = loc(fused[#loc250, #loc251, #loc252, #loc247])
#loc383 = loc(fused[#loc254, #loc253])
#loc384 = loc(fused[#loc257, #loc258])
#loc385 = loc(fused[#loc260, #loc259])
#loc386 = loc(fused[#loc261, #loc262])
#loc387 = loc(fused[#loc264, #loc258])
#loc388 = loc(fused[#loc270, #loc269])
#loc389 = loc(fused[#loc275, #loc276])
#loc390 = loc(fused[#loc277, #loc278])
#loc391 = loc(fused[#loc281, #loc279])
#loc392 = loc(fused[#loc283, #loc282])
