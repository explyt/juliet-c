!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":25:67)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":25:74)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":25:81)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc32 = loc(fused[#loc9, #loc10])
!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_base = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__placement_new_82::CWE122_Heap_Based_Buffer_Overflow__placement_new_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__placement_new_82::CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B" {!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc29)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc30)
  cir.func  @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_8259CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B6actionEPc(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":25:67), %arg1: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B>> loc(#loc11)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_823A3ACWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B> loc(#loc8)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc34)
      %4 = cir.const #cir.int<8> : !u64i loc(#loc35)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
      cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc15)
      cir.store %7, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc34)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
      %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc36)
      %11 = cir.const #cir.int<10> : !s32i loc(#loc21)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
      %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc37)
      %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
      %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc26)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc27)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc27)
    } loc(#loc33)
    cir.return loc(#loc7)
  } loc(#loc31)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":25:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":41:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":26:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":27:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":40:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":33:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":33:45)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":33:35)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":33:39)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":35:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":35:9)
#loc20 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":36:28)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":36:9)
#loc23 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":37:22)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":37:32)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":37:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":39:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_82_goodG2B.cpp":39:14)
#loc29 = loc(fused[#loc2, #loc3])
#loc30 = loc(fused[#loc4, #loc5])
#loc31 = loc(fused[#loc6, #loc7])
#loc33 = loc(fused[#loc12, #loc13])
#loc34 = loc(fused[#loc14, #loc15])
#loc35 = loc(fused[#loc16, #loc15])
#loc36 = loc(fused[#loc19, #loc18])
#loc37 = loc(fused[#loc22, #loc21])
