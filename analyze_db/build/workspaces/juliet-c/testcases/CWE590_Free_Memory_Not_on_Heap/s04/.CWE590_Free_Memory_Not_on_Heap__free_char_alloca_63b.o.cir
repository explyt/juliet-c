!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":23:67)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":23:76)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":36:71)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":36:80)
#loc32 = loc(fused[#loc7, #loc8])
#loc35 = loc(fused[#loc19, #loc20])
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc29)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc30)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc32)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc33)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc11)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc14)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc15)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc31)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc35)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc36)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc23)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc27)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.return loc(#loc18)
  } loc(#loc34)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":29:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":25:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":25:20)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":24:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":25:19)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":26:15)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":26:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":28:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":28:10)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":36:1)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":42:1)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":38:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":38:20)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":37:1)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":38:19)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":39:15)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":39:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":41:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_63b.c":41:10)
#loc29 = loc(fused[#loc1, #loc2])
#loc30 = loc(fused[#loc3, #loc4])
#loc31 = loc(fused[#loc5, #loc6])
#loc33 = loc(fused[#loc9, #loc10])
#loc34 = loc(fused[#loc17, #loc18])
#loc36 = loc(fused[#loc21, #loc22])
