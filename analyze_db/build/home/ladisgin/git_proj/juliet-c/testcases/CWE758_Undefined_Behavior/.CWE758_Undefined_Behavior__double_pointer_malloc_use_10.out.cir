!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":104:10)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":104:14)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":104:20)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":104:32)
#loc209 = loc(fused[#loc58, #loc59])
#loc210 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func private @printDoubleLine(!cir.double) loc(#loc190)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc195)
          %4 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc196)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc197)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc198)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc195)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc28)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc29)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc200)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc201)
          } loc(#loc199)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc22)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc34)
          cir.store %10, %4 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc196)
          %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc36)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc36)
          cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
          %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc37)
          %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc38)
          cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc39)
        } loc(#loc194)
      } loc(#loc193)
    } loc(#loc192)
    cir.return loc(#loc12)
  } loc(#loc191)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc206)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_10_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %17 : !s32i loc(#loc213)
  } loc(#loc208)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc214)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc83)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc219)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc220)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc221)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc222)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc220)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc99)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc100)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc224)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc104)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
            } loc(#loc225)
          } loc(#loc223)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc105)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc226)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc227)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc228)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc112)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc113)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.double>, !cir.bool loc(#loc230)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc117)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
            } loc(#loc231)
          } loc(#loc229)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc118)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc119)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc232)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc121)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc122)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc233)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc235)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc127)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc128)
            cir.store %22, %20 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc235)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc129)
            %24 = cir.load %23 : !cir.ptr<!cir.double>, !cir.double loc(#loc130)
            cir.call @printDoubleLine(%24) : (!cir.double) -> () loc(#loc131)
          } loc(#loc234)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc132)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc133)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc133)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
        } loc(#loc218)
      } loc(#loc217)
    } loc(#loc216)
    cir.return loc(#loc80)
  } loc(#loc215)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc186)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc138)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc240)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc241)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc146)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc242)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc243)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc241)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc151)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc152)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc245)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc156)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
            } loc(#loc246)
          } loc(#loc244)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc247)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc248)
          cir.store %12, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc249)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc164)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc165)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.double>, !cir.bool loc(#loc251)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc168)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc169)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
            } loc(#loc252)
          } loc(#loc250)
          %13 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc170)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc171)
          cir.store %13, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc253)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc173)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc174)
          cir.store %15, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc254)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc256)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc179)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc180)
            cir.store %22, %20 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc256)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc181)
            %24 = cir.load %23 : !cir.ptr<!cir.double>, !cir.double loc(#loc182)
            cir.call @printDoubleLine(%24) : (!cir.double) -> () loc(#loc183)
          } loc(#loc255)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc184)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc185)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc185)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc184)
        } loc(#loc239)
      } loc(#loc238)
    } loc(#loc237)
    cir.return loc(#loc135)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":32:1)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":31:5)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":23:5)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":24:9)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":30:9)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":25:13)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":25:69)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":27:13)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":27:30)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":25:46)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":25:53)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":25:68)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:13)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:44)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:17)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:28)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:34)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:35)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:41)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":26:40)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":27:29)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":28:13)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":28:18)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":29:30)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":29:29)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":29:13)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":89:1)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":93:1)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":91:5)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":91:11)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":92:5)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":92:11)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":109:15)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":111:15)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":114:15)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":116:15)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":104:1)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":119:1)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":105:1)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":107:27)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":107:22)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":107:5)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":109:5)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":110:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":110:66)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":111:5)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":114:5)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":115:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":115:65)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":116:5)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":118:12)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":118:5)
#loc76 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc77 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":44:19)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":39:1)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":64:1)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":41:5)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":63:5)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":41:8)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":42:5)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":45:5)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":47:5)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":44:9)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":48:9)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":62:9)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":49:13)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":49:22)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":50:13)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":50:69)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":50:46)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":50:53)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":50:68)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:13)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:44)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:17)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:28)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:34)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:35)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:41)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":51:40)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":53:30)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":53:37)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":53:50)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":53:51)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":53:13)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:13)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:41)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:17)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:25)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:31)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:32)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:38)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":54:37)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":55:21)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":55:14)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":55:13)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":56:24)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":56:14)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":56:13)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":57:13)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":60:13)
#loc126 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":58:17)
#loc127 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":58:34)
#loc128 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":58:33)
#loc129 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":59:34)
#loc130 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":59:33)
#loc131 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":59:17)
#loc132 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":61:13)
#loc133 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":61:18)
#loc134 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":67:1)
#loc135 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":87:1)
#loc136 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":69:5)
#loc137 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":86:5)
#loc138 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":69:8)
#loc139 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":70:5)
#loc140 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":71:9)
#loc141 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":85:9)
#loc142 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":72:13)
#loc143 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":72:22)
#loc144 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":73:13)
#loc145 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":73:69)
#loc146 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":73:46)
#loc147 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":73:53)
#loc148 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":73:68)
#loc149 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:13)
#loc150 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:44)
#loc151 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:17)
#loc152 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:28)
#loc153 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:34)
#loc154 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:35)
#loc155 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:41)
#loc156 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":74:40)
#loc157 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":76:30)
#loc158 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":76:37)
#loc159 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":76:50)
#loc160 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":76:51)
#loc161 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":76:13)
#loc162 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:13)
#loc163 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:41)
#loc164 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:17)
#loc165 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:25)
#loc166 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:31)
#loc167 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:32)
#loc168 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:38)
#loc169 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":77:37)
#loc170 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":78:21)
#loc171 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":78:14)
#loc172 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":78:13)
#loc173 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":79:24)
#loc174 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":79:14)
#loc175 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":79:13)
#loc176 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":80:13)
#loc177 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":83:13)
#loc178 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":81:17)
#loc179 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":81:34)
#loc180 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":81:33)
#loc181 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":82:34)
#loc182 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":82:33)
#loc183 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":82:17)
#loc184 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":84:13)
#loc185 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_10.c":84:18)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc9, #loc10])
#loc191 = loc(fused[#loc11, #loc12])
#loc192 = loc(fused[#loc13, #loc14])
#loc193 = loc(fused[#loc16, #loc14])
#loc194 = loc(fused[#loc17, #loc18])
#loc195 = loc(fused[#loc19, #loc20])
#loc196 = loc(fused[#loc21, #loc22])
#loc197 = loc(fused[#loc24, #loc25])
#loc198 = loc(fused[#loc23, #loc20])
#loc199 = loc(fused[#loc26, #loc27])
#loc200 = loc(fused[#loc28, #loc29])
#loc201 = loc(fused[#loc30, #loc27])
#loc202 = loc(fused[#loc40, #loc41])
#loc203 = loc(fused[#loc42, #loc43])
#loc204 = loc(fused[#loc44, #loc45])
#loc205 = loc(fused[#loc46, #loc47])
#loc206 = loc(fused[#loc48, #loc49])
#loc207 = loc(fused[#loc50, #loc51])
#loc208 = loc(fused[#loc56, #loc57])
#loc211 = loc(fused[#loc67, #loc68])
#loc212 = loc(fused[#loc71, #loc72])
#loc213 = loc(fused[#loc75, #loc74])
#loc214 = loc(fused[#loc76, #loc77])
#loc215 = loc(fused[#loc79, #loc80])
#loc216 = loc(fused[#loc81, #loc82])
#loc217 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc218 = loc(fused[#loc88, #loc89])
#loc219 = loc(fused[#loc90, #loc91])
#loc220 = loc(fused[#loc92, #loc93])
#loc221 = loc(fused[#loc95, #loc96])
#loc222 = loc(fused[#loc94, #loc93])
#loc223 = loc(fused[#loc97, #loc98])
#loc224 = loc(fused[#loc99, #loc100])
#loc225 = loc(fused[#loc101, #loc98])
#loc226 = loc(fused[#loc106, #loc107])
#loc227 = loc(fused[#loc105, #loc108])
#loc228 = loc(fused[#loc109, #loc108])
#loc229 = loc(fused[#loc110, #loc111])
#loc230 = loc(fused[#loc112, #loc113])
#loc231 = loc(fused[#loc114, #loc111])
#loc232 = loc(fused[#loc120, #loc118])
#loc233 = loc(fused[#loc123, #loc121])
#loc234 = loc(fused[#loc124, #loc125])
#loc235 = loc(fused[#loc126, #loc127])
#loc236 = loc(fused[#loc134, #loc135])
#loc237 = loc(fused[#loc136, #loc137])
#loc238 = loc(fused[#loc139, #loc137])
#loc239 = loc(fused[#loc140, #loc141])
#loc240 = loc(fused[#loc142, #loc143])
#loc241 = loc(fused[#loc144, #loc145])
#loc242 = loc(fused[#loc147, #loc148])
#loc243 = loc(fused[#loc146, #loc145])
#loc244 = loc(fused[#loc149, #loc150])
#loc245 = loc(fused[#loc151, #loc152])
#loc246 = loc(fused[#loc153, #loc150])
#loc247 = loc(fused[#loc158, #loc159])
#loc248 = loc(fused[#loc157, #loc160])
#loc249 = loc(fused[#loc161, #loc160])
#loc250 = loc(fused[#loc162, #loc163])
#loc251 = loc(fused[#loc164, #loc165])
#loc252 = loc(fused[#loc166, #loc163])
#loc253 = loc(fused[#loc172, #loc170])
#loc254 = loc(fused[#loc175, #loc173])
#loc255 = loc(fused[#loc176, #loc177])
#loc256 = loc(fused[#loc178, #loc179])
