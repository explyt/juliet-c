!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":22:65)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":22:82)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":35:69)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":35:86)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":43:69)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":43:86)
#loc36 = loc(fused[#loc5, #loc6])
#loc39 = loc(fused[#loc16, #loc17])
#loc42 = loc(fused[#loc27, #loc28])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc34)
  cir.func @CWE675_Duplicate_Operations_on_Resource__fopen_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc36)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc10)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc8)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc10)
    cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc37)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %7 = cir.call @fclose(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc35)
  cir.func @CWE675_Duplicate_Operations_on_Resource__fopen_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(fused[#loc16, #loc17])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc39)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc20)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc21)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc19)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc40)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %7 = cir.call @fclose(%6) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc24)
    cir.return loc(#loc15)
  } loc(#loc38)
  cir.func @CWE675_Duplicate_Operations_on_Resource__fopen_66b_goodB2GSink(%arg0: !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(fused[#loc27, #loc28])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc42)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc31)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc32)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc30)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc43)
    cir.return loc(#loc26)
  } loc(#loc41)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":184:1)
#loc2 = loc("/usr/include/stdio.h":184:36)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":22:1)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":28:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":25:5)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":25:30)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":23:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":25:19)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":25:29)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":27:12)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":27:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":35:1)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":40:1)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":37:5)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":37:30)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":36:1)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":37:19)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":37:29)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":39:12)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":39:5)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":43:1)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":49:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":45:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":45:30)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":44:1)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":45:19)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_66b.c":45:29)
#loc34 = loc(fused[#loc1, #loc2])
#loc35 = loc(fused[#loc3, #loc4])
#loc37 = loc(fused[#loc7, #loc8])
#loc38 = loc(fused[#loc14, #loc15])
#loc40 = loc(fused[#loc18, #loc19])
#loc41 = loc(fused[#loc25, #loc26])
#loc43 = loc(fused[#loc29, #loc30])
