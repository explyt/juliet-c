!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc217)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc218)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc219)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc220)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc221)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc222)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc14)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc15)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc16)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc227)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc230)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc230)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc230)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc38)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc38)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc38)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc38)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc38)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc38)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc38)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc38)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc232)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc42)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc50)
            } loc(#loc233)
          } loc(#loc231)
        } loc(#loc229)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc51)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc237)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc237)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc55)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc55)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc60)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc61)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc14)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc240)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc67)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc70)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc241)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc71)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc68)
              cir.yield %17 : !cir.bool loc(#loc68)
            }, false {
              %17 = cir.const #false loc(#loc68)
              cir.yield %17 : !cir.bool loc(#loc68)
            }) : (!cir.bool) -> !cir.bool loc(#loc68)
            cir.yield %16 : !cir.bool loc(#loc68)
          }, false {
            %12 = cir.const #false loc(#loc68)
            cir.yield %12 : !cir.bool loc(#loc68)
          }) : (!cir.bool) -> !cir.bool loc(#loc68)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc75)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc76)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc15)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc15)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc16)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc16)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          } loc(#loc242)
        } loc(#loc239)
      } loc(#loc238)
    } loc(#loc236)
    cir.return loc(#loc18)
  } loc(#loc223)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc243)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc247)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc90)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc250)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc250)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc94)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc94)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc253)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc253)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc253)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc106)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc106)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc106)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc106)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc106)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc106)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc106)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc106)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc108)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc255)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc110)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc115)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc118)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc118)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc119)
            } loc(#loc256)
          } loc(#loc254)
        } loc(#loc252)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc259)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc259)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc259)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc127)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc127)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc127)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc127)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc127)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc127)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc127)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc127)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc128)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc129)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc261)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc131)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc136)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc140)
            } loc(#loc262)
          } loc(#loc260)
        } loc(#loc258)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc265)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc265)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc143)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc151)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc268)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc152)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc155)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc269)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc156)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc153)
              cir.yield %17 : !cir.bool loc(#loc153)
            }, false {
              %17 = cir.const #false loc(#loc153)
              cir.yield %17 : !cir.bool loc(#loc153)
            }) : (!cir.bool) -> !cir.bool loc(#loc153)
            cir.yield %16 : !cir.bool loc(#loc153)
          }, false {
            %12 = cir.const #false loc(#loc153)
            cir.yield %12 : !cir.bool loc(#loc153)
          }) : (!cir.bool) -> !cir.bool loc(#loc153)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc160)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc161)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc162)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc162)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc164)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc164)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc165)
          } loc(#loc270)
        } loc(#loc267)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc272)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc170)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc173)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc273)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc174)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc171)
              cir.yield %17 : !cir.bool loc(#loc171)
            }, false {
              %17 = cir.const #false loc(#loc171)
              cir.yield %17 : !cir.bool loc(#loc171)
            }) : (!cir.bool) -> !cir.bool loc(#loc171)
            cir.yield %16 : !cir.bool loc(#loc171)
          }, false {
            %12 = cir.const #false loc(#loc171)
            cir.yield %12 : !cir.bool loc(#loc171)
          }) : (!cir.bool) -> !cir.bool loc(#loc171)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc178)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc179)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc180)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc180)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc181)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc182)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc182)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc183)
          } loc(#loc274)
        } loc(#loc271)
      } loc(#loc266)
    } loc(#loc264)
    cir.return loc(#loc86)
  } loc(#loc246)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc189)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc279)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc279)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc193)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc193)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc198)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc200)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      } loc(#loc280)
    } loc(#loc278)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc284)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc284)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc204)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc204)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc209)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc210)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc211)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc211)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc212)
      } else {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc213)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc214)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc215)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc215)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc216)
      } loc(#loc285)
    } loc(#loc283)
    cir.return loc(#loc185)
  } loc(#loc275)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":49:27)
#loc12 = loc("/usr/include/unistd.h":480:1)
#loc13 = loc("/usr/include/unistd.h":480:43)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":62:19)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":70:23)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":74:23)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":32:1)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":77:1)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":34:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":34:9)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":36:14)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":36:13)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":36:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":37:5)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":57:5)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":37:8)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":37:33)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":38:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":52:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":54:5)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":39:9)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":51:9)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":40:13)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":40:49)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:13)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":50:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:23)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:36)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:53)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:17)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:63)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":42:60)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":43:13)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":46:13)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":48:13)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":45:30)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":45:25)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":45:17)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":45:41)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":49:17)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":56:17)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":56:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":58:5)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":76:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":58:8)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":58:33)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":59:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":63:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":65:5)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":61:15)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":61:9)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":62:9)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:9)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":75:9)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:13)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:21)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:19)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:23)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:26)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:35)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":67:32)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":68:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":71:9)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":73:9)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":69:19)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":69:13)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":70:13)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":74:13)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":183:1)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":187:1)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":185:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":185:13)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":186:5)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":186:13)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":86:1)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":149:1)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":88:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":88:9)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":90:14)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":90:13)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":90:5)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":91:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":122:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":91:8)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":91:33)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":92:5)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":106:5)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":108:5)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":93:9)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":105:9)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":94:13)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":94:49)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:13)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":104:13)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:23)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:36)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:53)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:17)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:63)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":96:60)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":97:13)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":100:13)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":102:13)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":99:30)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":99:25)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":99:17)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":99:41)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":103:27)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":103:17)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":109:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":121:9)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":110:13)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":110:49)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:13)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":120:13)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:23)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:36)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:53)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:17)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:63)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":112:60)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":113:13)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":116:13)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":118:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":115:30)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":115:25)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":115:17)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":115:41)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":119:27)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":119:17)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":123:5)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":148:5)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":123:8)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":123:33)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":124:5)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":135:5)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":137:5)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:9)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":134:9)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:13)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:21)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:19)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:23)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:26)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:35)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":126:32)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":127:9)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":130:9)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":132:9)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":128:19)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":128:13)
#loc162 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":129:23)
#loc163 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":129:13)
#loc164 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":133:23)
#loc165 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":133:13)
#loc166 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:9)
#loc167 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":147:9)
#loc168 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:13)
#loc169 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:21)
#loc170 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:19)
#loc171 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:23)
#loc172 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:26)
#loc173 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:35)
#loc174 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":139:32)
#loc175 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":140:9)
#loc176 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":143:9)
#loc177 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":145:9)
#loc178 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":141:19)
#loc179 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":141:13)
#loc180 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":142:23)
#loc181 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":142:13)
#loc182 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":146:23)
#loc183 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":146:13)
#loc184 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":154:1)
#loc185 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":181:1)
#loc186 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":156:5)
#loc187 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":156:9)
#loc188 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":158:14)
#loc189 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":158:13)
#loc190 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":158:5)
#loc191 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":159:5)
#loc192 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":168:5)
#loc193 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":159:8)
#loc194 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":159:33)
#loc195 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":160:5)
#loc196 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":163:5)
#loc197 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":165:5)
#loc198 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":162:17)
#loc199 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":162:9)
#loc200 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":167:17)
#loc201 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":167:9)
#loc202 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":169:5)
#loc203 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":180:5)
#loc204 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":169:8)
#loc205 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":169:33)
#loc206 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":170:5)
#loc207 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":174:5)
#loc208 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":176:5)
#loc209 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":172:15)
#loc210 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":172:9)
#loc211 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":173:19)
#loc212 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":173:9)
#loc213 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":178:15)
#loc214 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":178:9)
#loc215 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":179:19)
#loc216 = loc("CWE400_Resource_Exhaustion__fgets_sleep_12.c":179:9)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc12, #loc13])
#loc223 = loc(fused[#loc17, #loc18])
#loc224 = loc(fused[#loc19, #loc20])
#loc225 = loc(fused[#loc23, #loc21])
#loc226 = loc(fused[#loc24, #loc25])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc33, #loc34])
#loc231 = loc(fused[#loc35, #loc36])
#loc232 = loc(fused[#loc40, #loc41])
#loc233 = loc(fused[#loc43, #loc44, #loc45, #loc36])
#loc234 = loc(fused[#loc48, #loc49])
#loc235 = loc(fused[#loc52, #loc51])
#loc236 = loc(fused[#loc53, #loc54])
#loc237 = loc(fused[#loc55, #loc56])
#loc238 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc239 = loc(fused[#loc63, #loc64])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc69, #loc70])
#loc242 = loc(fused[#loc72, #loc73, #loc74, #loc64])
#loc243 = loc(fused[#loc79, #loc80])
#loc244 = loc(fused[#loc81, #loc82])
#loc245 = loc(fused[#loc83, #loc84])
#loc246 = loc(fused[#loc85, #loc86])
#loc247 = loc(fused[#loc87, #loc88])
#loc248 = loc(fused[#loc91, #loc89])
#loc249 = loc(fused[#loc92, #loc93])
#loc250 = loc(fused[#loc94, #loc95])
#loc251 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc252 = loc(fused[#loc99, #loc100])
#loc253 = loc(fused[#loc101, #loc102])
#loc254 = loc(fused[#loc103, #loc104])
#loc255 = loc(fused[#loc108, #loc109])
#loc256 = loc(fused[#loc111, #loc112, #loc113, #loc104])
#loc257 = loc(fused[#loc116, #loc117])
#loc258 = loc(fused[#loc120, #loc121])
#loc259 = loc(fused[#loc122, #loc123])
#loc260 = loc(fused[#loc124, #loc125])
#loc261 = loc(fused[#loc129, #loc130])
#loc262 = loc(fused[#loc132, #loc133, #loc134, #loc125])
#loc263 = loc(fused[#loc137, #loc138])
#loc264 = loc(fused[#loc141, #loc142])
#loc265 = loc(fused[#loc143, #loc144])
#loc266 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc267 = loc(fused[#loc148, #loc149])
#loc268 = loc(fused[#loc150, #loc151])
#loc269 = loc(fused[#loc154, #loc155])
#loc270 = loc(fused[#loc157, #loc158, #loc159, #loc149])
#loc271 = loc(fused[#loc166, #loc167])
#loc272 = loc(fused[#loc168, #loc169])
#loc273 = loc(fused[#loc172, #loc173])
#loc274 = loc(fused[#loc175, #loc176, #loc177, #loc167])
#loc275 = loc(fused[#loc184, #loc185])
#loc276 = loc(fused[#loc186, #loc187])
#loc277 = loc(fused[#loc190, #loc188])
#loc278 = loc(fused[#loc191, #loc192])
#loc279 = loc(fused[#loc193, #loc194])
#loc280 = loc(fused[#loc195, #loc196, #loc197, #loc192])
#loc281 = loc(fused[#loc199, #loc198])
#loc282 = loc(fused[#loc201, #loc200])
#loc283 = loc(fused[#loc202, #loc203])
#loc284 = loc(fused[#loc204, #loc205])
#loc285 = loc(fused[#loc206, #loc207, #loc208, #loc203])
