!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":42:25)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":42:32)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:37)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":180:10)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":180:14)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":180:20)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":180:32)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":102:30)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":102:37)
#loc199 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":136:30)
#loc200 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":136:37)
#true = #cir.bool<true> : !cir.bool
#loc247 = loc(fused[#loc18, #loc19])
#loc290 = loc(fused[#loc127, #loc128])
#loc291 = loc(fused[#loc129, #loc130])
#loc298 = loc(fused[#loc153, #loc154])
#loc315 = loc(fused[#loc199, #loc200])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc239)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc240)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_21_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc241)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc242)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc243)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc244)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc18, #loc19])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc248)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc242)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %5 ^bb2, ^bb26 loc(#loc250)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc251)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.br ^bb4 loc(#loc252)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc253)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc35)
    %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc254)
    cir.brcond %15 ^bb5, ^bb23 loc(#loc255)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc41)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc257)
    %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc257)
    %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc245)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
    %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
    %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
    %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
    cir.brcond %29 ^bb7, ^bb20 loc(#loc259)
  ^bb7:  // pred: ^bb6
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb8 loc(#loc261)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc57)
    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc262)
    cir.brcond %36 ^bb9, ^bb14 loc(#loc58)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc61)
    %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc263)
    %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc59)
    %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc59)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc58)
  ^bb10:  // pred: ^bb9
    %47 = cir.const #true loc(#loc58)
    cir.br ^bb12(%47 : !cir.bool) loc(#loc58)
  ^bb11:  // pred: ^bb9
    %48 = cir.const #false loc(#loc58)
    cir.br ^bb12(%48 : !cir.bool) loc(#loc58)
  ^bb12(%49: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:37)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc58)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%49 : !cir.bool) loc(#loc58)
  ^bb14:  // pred: ^bb8
    %50 = cir.const #false loc(#loc58)
    cir.br ^bb15(%50 : !cir.bool) loc(#loc58)
  ^bb15(%51: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:37)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc58)
  ^bb16:  // pred: ^bb15
    cir.brcond %51 ^bb17, ^bb18 loc(#loc265)
  ^bb17:  // pred: ^bb16
    %52 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc65)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc68)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc266)
    %59 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %53, %59 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    cir.br ^bb18 loc(#loc55)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc55)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc48)
  ^bb20:  // pred: ^bb6
    %60 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc71)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %65 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc268)
    cir.br ^bb21 loc(#loc38)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc38)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc32)
  ^bb23:  // 2 preds: ^bb4, ^bb22
    cir.br ^bb24 loc(#loc32)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc28)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc24)
  ^bb26:  // 2 preds: ^bb1, ^bb25
    cir.br ^bb27 loc(#loc24)
  ^bb27:  // pred: ^bb26
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %67, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
    cir.return %68 : !cir.ptr<!s8i> loc(#loc269)
  } loc(#loc246)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc79)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc271)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc241)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_21_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc241)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc241)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc242)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %8 = cir.call @badSource(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc93)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc79)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc79)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc99)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
    cir.br ^bb2 loc(#loc280)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc105)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc281)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc282)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc108)
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc83)
  } loc(#loc272)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc111)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    cir.return loc(#loc110)
  } loc(#loc283)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc286)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc287)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc124)
  cir.func @main(%arg0: !s32i loc(fused[#loc127, #loc128]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc129, #loc130])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc291)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc126)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc131)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc132)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc133)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc134)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc121)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_21_good() : () -> () loc(#loc136)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc123)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_21_bad() : () -> () loc(#loc140)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc124)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc143)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %17 : !s32i loc(#loc294)
  } loc(#loc289)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc147)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc150)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc153, #loc154])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc152)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.br ^bb1 loc(#loc299)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc295)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc158)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc300)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb4 loc(#loc160)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc163)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc150)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc150)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
    cir.br ^bb4 loc(#loc157)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc157)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc301)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc301)
  } loc(#loc297)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc304)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc240)
    %3 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc240)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc240)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %6 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc295)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %8 = cir.call @goodG2B1Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc178)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.br ^bb1 loc(#loc308)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc184)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc184)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc185)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
    cir.br ^bb2 loc(#loc310)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc190)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc191)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc311)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc312)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc193)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc194)
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc168)
  } loc(#loc302)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc313)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc199, #loc200])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc198)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc313)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc317)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc318)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc318)
  } loc(#loc314)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc239)
    %3 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc217)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %6 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc313)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    %8 = cir.call @goodG2B2Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc222)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc228)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc228)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc229)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc326)
    cir.br ^bb2 loc(#loc327)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc234)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc235)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc235)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc328)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc329)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc237)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc238)
    cir.br ^bb4 loc(#loc233)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc212)
  } loc(#loc319)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":149:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":149:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":120:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":120:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":78:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":78:26)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":40:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":40:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":65:31)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":42:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":73:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":48:13)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":48:41)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":43:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":44:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":71:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":44:8)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":45:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":46:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":70:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":48:30)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":48:37)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":50:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":69:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":50:17)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":50:21)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":50:31)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":51:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":68:17)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:27)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:32)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:31)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:47)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:51)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:61)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":53:71)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":54:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":62:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":64:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":57:31)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":57:38)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":57:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":57:42)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":61:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:25)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:35)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:40)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:45)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:53)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:54)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":58:59)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":59:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":60:43)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":60:25)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":60:30)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":60:38)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":60:39)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":65:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":67:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":67:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":67:26)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":67:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":72:12)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":72:5)
#loc77 = loc("/usr/include/stdio.h":893:1)
#loc78 = loc("/usr/include/stdio.h":894:3)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":85:28)
#loc80 = loc("/usr/include/stdio.h":887:1)
#loc81 = loc("/usr/include/stdio.h":887:36)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":75:1)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":91:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":83:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":83:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":77:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":77:12)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":79:12)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":79:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":80:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":80:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":81:22)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":81:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":81:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":81:26)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":82:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":90:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":85:22)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":85:16)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":85:9)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":85:31)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":86:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":89:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":86:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":86:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":87:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":88:20)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":88:13)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":164:1)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":168:1)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":166:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":166:14)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":167:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":167:14)
#loc115 = loc("/usr/include/stdlib.h":575:1)
#loc116 = loc("/usr/include/stdlib.h":575:41)
#loc117 = loc("/usr/include/time.h":76:1)
#loc118 = loc("/usr/include/time.h":76:38)
#loc119 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc120 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":185:15)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":187:15)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":190:15)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":192:15)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":180:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":195:1)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":181:1)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":183:27)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":183:22)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":183:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":185:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":186:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":186:60)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":187:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":190:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":191:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":191:59)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":192:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":194:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":194:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":98:1)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":98:29)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":107:19)
#loc148 = loc("/usr/include/string.h":149:1)
#loc149 = loc("/usr/include/string.h":150:14)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":112:22)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":102:1)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":115:1)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":103:1)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":104:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":113:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":104:8)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":105:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":108:5)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":110:5)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":107:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":112:9)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":112:16)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":114:12)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":114:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":117:1)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":133:1)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":125:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":125:15)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":119:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":119:12)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":121:12)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":121:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":122:22)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":122:5)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":123:27)
#loc178 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":123:12)
#loc179 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":123:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":123:31)
#loc181 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":124:5)
#loc182 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":132:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":127:22)
#loc184 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":127:28)
#loc185 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":127:16)
#loc186 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":127:9)
#loc187 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":127:31)
#loc188 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":128:9)
#loc189 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":131:9)
#loc190 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":128:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":128:21)
#loc192 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":129:9)
#loc193 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":130:20)
#loc194 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":130:13)
#loc195 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":99:1)
#loc196 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":99:29)
#loc197 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":136:1)
#loc198 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":144:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":137:1)
#loc202 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":138:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":142:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":138:8)
#loc205 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":139:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":141:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":141:16)
#loc208 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":141:22)
#loc209 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":143:12)
#loc210 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":143:5)
#loc211 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":146:1)
#loc212 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":162:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":154:9)
#loc214 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":154:15)
#loc215 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":148:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":148:12)
#loc217 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":150:12)
#loc218 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":150:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":151:22)
#loc220 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":151:5)
#loc221 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":152:27)
#loc222 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":152:12)
#loc223 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":152:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":152:31)
#loc225 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":153:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":161:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":156:22)
#loc228 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":156:28)
#loc229 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":156:16)
#loc230 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":156:9)
#loc231 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":156:31)
#loc232 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":157:9)
#loc233 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":160:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":157:13)
#loc235 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":157:21)
#loc236 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":158:9)
#loc237 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":159:20)
#loc238 = loc("CWE78_OS_Command_Injection__char_console_popen_21.c":159:13)
#loc239 = loc(fused[#loc1, #loc2])
#loc240 = loc(fused[#loc3, #loc4])
#loc241 = loc(fused[#loc5, #loc6])
#loc242 = loc(fused[#loc7, #loc8])
#loc243 = loc(fused[#loc9, #loc10])
#loc244 = loc(fused[#loc11, #loc12])
#loc245 = loc(fused[#loc13, #loc14])
#loc246 = loc(fused[#loc16, #loc17])
#loc248 = loc(fused[#loc20, #loc21])
#loc249 = loc(fused[#loc23, #loc24])
#loc250 = loc(fused[#loc26, #loc24])
#loc251 = loc(fused[#loc27, #loc28])
#loc252 = loc(fused[#loc31, #loc32])
#loc253 = loc(fused[#loc33, #loc34])
#loc254 = loc(fused[#loc33, #loc35])
#loc255 = loc(fused[#loc36, #loc32])
#loc256 = loc(fused[#loc37, #loc38])
#loc257 = loc(fused[#loc42, #loc43])
#loc258 = loc(fused[#loc45, #loc46])
#loc259 = loc(fused[#loc47, #loc48, #loc49, #loc38])
#loc260 = loc(fused[#loc52, #loc53])
#loc261 = loc(fused[#loc54, #loc55])
#loc262 = loc(fused[#loc56, #loc57])
#loc263 = loc(fused[#loc60, #loc61])
#loc264 = loc(fused[#loc59, #loc63])
#loc265 = loc(fused[#loc64, #loc55])
#loc266 = loc(fused[#loc67, #loc68])
#loc267 = loc(fused[#loc66, #loc65])
#loc268 = loc(fused[#loc72, #loc71])
#loc269 = loc(fused[#loc76, #loc75])
#loc270 = loc(fused[#loc77, #loc78])
#loc271 = loc(fused[#loc80, #loc81])
#loc272 = loc(fused[#loc82, #loc83])
#loc273 = loc(fused[#loc84, #loc85])
#loc274 = loc(fused[#loc86, #loc87])
#loc275 = loc(fused[#loc89, #loc88])
#loc276 = loc(fused[#loc91, #loc90])
#loc277 = loc(fused[#loc94, #loc95])
#loc278 = loc(fused[#loc96, #loc97])
#loc279 = loc(fused[#loc100, #loc101])
#loc280 = loc(fused[#loc102, #loc103])
#loc281 = loc(fused[#loc104, #loc105])
#loc282 = loc(fused[#loc106, #loc103])
#loc283 = loc(fused[#loc109, #loc110])
#loc284 = loc(fused[#loc111, #loc112])
#loc285 = loc(fused[#loc113, #loc114])
#loc286 = loc(fused[#loc115, #loc116])
#loc287 = loc(fused[#loc117, #loc118])
#loc288 = loc(fused[#loc119, #loc120])
#loc289 = loc(fused[#loc125, #loc126])
#loc292 = loc(fused[#loc136, #loc137])
#loc293 = loc(fused[#loc140, #loc141])
#loc294 = loc(fused[#loc144, #loc143])
#loc295 = loc(fused[#loc145, #loc146])
#loc296 = loc(fused[#loc148, #loc149])
#loc297 = loc(fused[#loc151, #loc152])
#loc299 = loc(fused[#loc156, #loc157])
#loc300 = loc(fused[#loc159, #loc160, #loc161, #loc157])
#loc301 = loc(fused[#loc166, #loc165])
#loc302 = loc(fused[#loc167, #loc168])
#loc303 = loc(fused[#loc169, #loc170])
#loc304 = loc(fused[#loc171, #loc172])
#loc305 = loc(fused[#loc174, #loc173])
#loc306 = loc(fused[#loc176, #loc175])
#loc307 = loc(fused[#loc179, #loc180])
#loc308 = loc(fused[#loc181, #loc182])
#loc309 = loc(fused[#loc186, #loc187])
#loc310 = loc(fused[#loc188, #loc189])
#loc311 = loc(fused[#loc190, #loc191])
#loc312 = loc(fused[#loc192, #loc189])
#loc313 = loc(fused[#loc195, #loc196])
#loc314 = loc(fused[#loc197, #loc198])
#loc316 = loc(fused[#loc202, #loc203])
#loc317 = loc(fused[#loc205, #loc203])
#loc318 = loc(fused[#loc210, #loc209])
#loc319 = loc(fused[#loc211, #loc212])
#loc320 = loc(fused[#loc213, #loc214])
#loc321 = loc(fused[#loc215, #loc216])
#loc322 = loc(fused[#loc218, #loc217])
#loc323 = loc(fused[#loc220, #loc219])
#loc324 = loc(fused[#loc223, #loc224])
#loc325 = loc(fused[#loc225, #loc226])
#loc326 = loc(fused[#loc230, #loc231])
#loc327 = loc(fused[#loc232, #loc233])
#loc328 = loc(fused[#loc234, #loc235])
#loc329 = loc(fused[#loc236, #loc233])
