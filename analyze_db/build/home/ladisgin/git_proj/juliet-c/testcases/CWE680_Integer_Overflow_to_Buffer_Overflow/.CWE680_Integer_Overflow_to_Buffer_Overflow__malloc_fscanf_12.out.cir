!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":104:10)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":104:14)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":104:20)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":104:32)
#loc202 = loc(fused[#loc90, #loc91])
#loc203 = loc(fused[#loc92, #loc93])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc166)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc167)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc170)
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc25)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc179)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc34)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc34)
    cir.br ^bb4 loc(#loc32)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<20> : !s32i loc(#loc36)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc40)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc41)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc183)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc184)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc40)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
    cir.store %22, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
    cir.br ^bb7 loc(#loc187)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc49)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc189)
  ^bb8:  // pred: ^bb7
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb9 loc(#loc47)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc47)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc190)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc56)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb12 loc(#loc190)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc59)
    %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %35 ^bb13, ^bb17 loc(#loc60)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc193)
  ^bb14:  // pred: ^bb13
    %36 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !u64i), !cir.ptr<!s32i> loc(#loc65)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb15 loc(#loc55)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc55)
  ^bb16:  // pred: ^bb15
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc67)
    cir.store %41, %0 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb12 loc(#loc190)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc55)
  ^bb18:  // pred: ^bb17
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc70)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc71)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc72)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb19 loc(#loc39)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc17)
  } loc(#loc173)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc196)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc198)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc199)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_good() : () -> () loc(#loc99)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12_bad() : () -> () loc(#loc103)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %17 : !s32i loc(#loc206)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc117)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc213)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc121)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc214)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc126)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc128)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc120)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc217)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc133)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc218)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc219)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc220)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc221)
    cir.br ^bb7 loc(#loc222)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc223)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc224)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc145)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb9 loc(#loc139)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc225)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc148)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb12 loc(#loc225)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc151)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc227)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc152)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc228)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc157)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb15 loc(#loc147)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc147)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc159)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.br ^bb12 loc(#loc225)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc147)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc163)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc164)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc165)
    cir.br ^bb19 loc(#loc131)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc109)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":29:23)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":21:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":50:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":37:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":37:16)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":38:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":38:14)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":23:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":23:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":25:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":25:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":25:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":26:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":35:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":26:8)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":26:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":27:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":30:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":32:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":29:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":29:16)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":34:16)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":34:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":36:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":49:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:28)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:35)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:42)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:52)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:53)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":41:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:43)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:27)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:33)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:34)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":42:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":46:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:18)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:33)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:23)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":44:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":45:29)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":45:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":45:24)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":45:25)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:40)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":43:39)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":47:22)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":47:33)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":47:34)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":47:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":48:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":48:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":89:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":92:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":91:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":91:13)
#loc78 = loc("/usr/include/stdlib.h":575:1)
#loc79 = loc("/usr/include/stdlib.h":575:41)
#loc80 = loc("/usr/include/time.h":76:1)
#loc81 = loc("/usr/include/time.h":76:38)
#loc82 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc83 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":109:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":111:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":114:15)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":116:15)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":104:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":119:1)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":105:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":107:27)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":107:22)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":107:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":109:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":110:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":110:71)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":111:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":114:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":115:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":115:70)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":116:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":118:12)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":118:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":58:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":87:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":74:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":74:16)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":75:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":75:14)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":60:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":60:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":62:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":62:12)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":62:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":63:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":72:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":63:8)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":63:33)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":64:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":67:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":69:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":66:16)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":66:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":71:16)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":71:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":73:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":86:5)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:28)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:35)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:42)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:52)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:53)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":78:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:43)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:34)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:40)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":79:39)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":83:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:18)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:14)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:21)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:23)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":81:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":82:29)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":82:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":82:24)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":82:25)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:40)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":80:39)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":84:22)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":84:33)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":84:34)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":84:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":85:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_12.c":85:9)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc8, #loc9])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc14, #loc15])
#loc173 = loc(fused[#loc16, #loc17])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc22, #loc23])
#loc177 = loc(fused[#loc26, #loc24])
#loc178 = loc(fused[#loc27, #loc28])
#loc179 = loc(fused[#loc29, #loc30])
#loc180 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc181 = loc(fused[#loc37, #loc36])
#loc182 = loc(fused[#loc38, #loc39])
#loc183 = loc(fused[#loc42, #loc43])
#loc184 = loc(fused[#loc41, #loc43])
#loc185 = loc(fused[#loc40, #loc44])
#loc186 = loc(fused[#loc45, #loc44])
#loc187 = loc(fused[#loc46, #loc47])
#loc188 = loc(fused[#loc48, #loc49])
#loc189 = loc(fused[#loc50, #loc47])
#loc190 = loc(fused[#loc54, #loc55])
#loc191 = loc(fused[#loc57, #loc56])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc61, #loc55])
#loc194 = loc(fused[#loc63, #loc62])
#loc195 = loc(fused[#loc67, #loc66])
#loc196 = loc(fused[#loc74, #loc75])
#loc197 = loc(fused[#loc76, #loc77])
#loc198 = loc(fused[#loc78, #loc79])
#loc199 = loc(fused[#loc80, #loc81])
#loc200 = loc(fused[#loc82, #loc83])
#loc201 = loc(fused[#loc88, #loc89])
#loc204 = loc(fused[#loc99, #loc100])
#loc205 = loc(fused[#loc103, #loc104])
#loc206 = loc(fused[#loc107, #loc106])
#loc207 = loc(fused[#loc108, #loc109])
#loc208 = loc(fused[#loc110, #loc111])
#loc209 = loc(fused[#loc112, #loc113])
#loc210 = loc(fused[#loc114, #loc115])
#loc211 = loc(fused[#loc118, #loc116])
#loc212 = loc(fused[#loc119, #loc120])
#loc213 = loc(fused[#loc121, #loc122])
#loc214 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc215 = loc(fused[#loc127, #loc126])
#loc216 = loc(fused[#loc129, #loc128])
#loc217 = loc(fused[#loc130, #loc131])
#loc218 = loc(fused[#loc134, #loc135])
#loc219 = loc(fused[#loc133, #loc135])
#loc220 = loc(fused[#loc132, #loc136])
#loc221 = loc(fused[#loc137, #loc136])
#loc222 = loc(fused[#loc138, #loc139])
#loc223 = loc(fused[#loc140, #loc141])
#loc224 = loc(fused[#loc142, #loc139])
#loc225 = loc(fused[#loc146, #loc147])
#loc226 = loc(fused[#loc149, #loc148])
#loc227 = loc(fused[#loc150, #loc151])
#loc228 = loc(fused[#loc153, #loc147])
#loc229 = loc(fused[#loc155, #loc154])
#loc230 = loc(fused[#loc159, #loc158])
