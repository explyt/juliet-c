!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc26)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    cir.br ^bb6 loc(#loc31)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc129)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc122)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc122)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc36)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc59)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc57)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb6 loc(#loc63)
  ^bb5:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc65)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc66)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc66)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc66)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc70)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc72)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc72)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc141)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc134)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc134)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc78)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc79)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb9 loc(#loc77)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc48)
  } loc(#loc133)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc95)
    cir.br ^bb2 loc(#loc93)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc93)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc99)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc99)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc103)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc105)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc105)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb6 loc(#loc108)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc109)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc143)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc143)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc114)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc115)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc84)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":37:19)
#loc4 = loc("/usr/include/string.h":149:1)
#loc5 = loc("/usr/include/string.h":150:14)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":23:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":46:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":41:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":41:25)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":25:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":25:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":26:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":26:24)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":27:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":28:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":39:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":28:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":30:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:31)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":32:32)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":33:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":33:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":33:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":33:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":33:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":34:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":38:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":45:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":43:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":43:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":43:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":44:19)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":104:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":108:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":106:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":106:14)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":107:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":107:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":53:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":76:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":71:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":71:25)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":55:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":55:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":56:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":56:24)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":57:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":57:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":58:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":69:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":58:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":62:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":62:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":63:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:16)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:22)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:30)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":66:31)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":67:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":67:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":67:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":67:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":67:18)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":68:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":70:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":75:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":73:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":73:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":73:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":74:19)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":74:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":79:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":102:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":97:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":97:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":81:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":81:12)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":82:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":82:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":83:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":83:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":84:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":95:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":84:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":86:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:27)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:30)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":88:31)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":89:22)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":89:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":89:14)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":89:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":89:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":90:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":93:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":93:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":94:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":96:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":101:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":99:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":99:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":99:22)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":100:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_15.c":100:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc4, #loc5])
#loc121 = loc(fused[#loc6, #loc7])
#loc122 = loc(fused[#loc8, #loc9])
#loc123 = loc(fused[#loc10, #loc11])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc15, #loc14])
#loc126 = loc(fused[#loc16, #loc17])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc27, #loc26])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc41, #loc42])
#loc131 = loc(fused[#loc43, #loc44])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc47, #loc48])
#loc134 = loc(fused[#loc49, #loc50])
#loc135 = loc(fused[#loc51, #loc52])
#loc136 = loc(fused[#loc53, #loc54])
#loc137 = loc(fused[#loc56, #loc55])
#loc138 = loc(fused[#loc57, #loc58])
#loc139 = loc(fused[#loc68, #loc69])
#loc140 = loc(fused[#loc71, #loc70])
#loc141 = loc(fused[#loc76, #loc77])
#loc142 = loc(fused[#loc83, #loc84])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc87, #loc88])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc92, #loc91])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc101, #loc102])
#loc149 = loc(fused[#loc104, #loc103])
#loc150 = loc(fused[#loc112, #loc113])
