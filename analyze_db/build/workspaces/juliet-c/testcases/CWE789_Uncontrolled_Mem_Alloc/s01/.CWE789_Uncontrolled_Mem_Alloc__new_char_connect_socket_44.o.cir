!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":53:21)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":53:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":147:25)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":147:32)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":181:25)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":181:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc334 = loc(fused[#loc11, #loc12])
#loc388 = loc(fused[#loc155, #loc156])
#loc403 = loc(fused[#loc198, #loc199])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc330)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc8)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7badSinkEm(%arg0: !u64i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc334)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc336)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc20)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc338)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc339)
        cir.if %4 {
          %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc26)
          %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc27)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
          cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc31)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          cir.delete.array %14 : <!s8i> loc(#loc35)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc8)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc340)
      } loc(#loc337)
    } loc(#loc335)
    cir.return loc(#loc10)
  } loc(#loc333)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc344)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc41)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc345)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc346)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc347)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc348)
  cir.func private @close(!s32i) -> !s32i loc(#loc349)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_443badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc351)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc352)
    %2 = cir.get_global @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7badSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc57)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc352)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc58)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc353)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc355)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc356)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc357)
      %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc358)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc67)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc357)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc74)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc75)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc75)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc76)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc76)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc77)
            cir.store %18, %9 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.scope {
              %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc83)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc363)
              cir.if %62 {
                cir.break loc(#loc85)
              } loc(#loc364)
            } loc(#loc362)
            %19 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc365)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc366)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc367)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc93)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc93)
            %24 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc368)
            %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc41)
            %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc41)
            %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc96)
            %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc369)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc101)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc101)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc102)
            %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc103)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc370)
            cir.scope {
              %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %60 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc372)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc373)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc373)
              %63 = cir.call @connect(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc113)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc114)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc374)
              cir.if %66 {
                cir.break loc(#loc116)
              } loc(#loc375)
            } loc(#loc371)
            %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %35 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc118)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc119)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc119)
            %39 = cir.const #cir.int<8> : !u64i loc(#loc119)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc119)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc119)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc119)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc119)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc120)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc376)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc121)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc122)
            cir.store %49, %7 : !s32i, !cir.ptr<!s32i> loc(#loc377)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc128)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc128)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc379)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc129)
                cir.yield %64 : !cir.bool loc(#loc129)
              }, false {
                %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc131)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc380)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc129)
                  cir.yield %68 : !cir.bool loc(#loc129)
                }, false {
                  %68 = cir.const #false loc(#loc129)
                  cir.yield %68 : !cir.bool loc(#loc129)
                }) : (!cir.bool) -> !cir.bool loc(#loc129)
                cir.yield %67 : !cir.bool loc(#loc129)
              }) : (!cir.bool) -> !cir.bool loc(#loc129)
              cir.if %63 {
                cir.break loc(#loc133)
              } loc(#loc381)
            } loc(#loc378)
            %50 = cir.const #cir.int<0> : !s8i loc(#loc134)
            %51 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %52 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc136)
            %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc136)
            cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc382)
            %54 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc137)
            %55 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc138)
            %56 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc140)
            %58 = cir.call @__isoc23_strtoul(%55, %56, %57) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc137)
            cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc383)
          } loc(#loc360)
          cir.yield loc(#loc71)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc143)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc143)
          cir.condition(%14) loc(#loc143)
        } loc(#loc359)
      } loc(#loc359)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc146)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc147)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc385)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc150)
        } loc(#loc386)
      } loc(#loc384)
    } loc(#loc354)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc151)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc151)
    cir.return loc(#loc53)
  } loc(#loc350)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L11goodG2BSinkEm(%arg0: !u64i loc(fused[#loc155, #loc156])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc388)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc390)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc164)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc392)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc393)
        cir.if %4 {
          %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc170)
          %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc171)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc395)
          cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc175)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc177)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc177)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc175)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc179)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
          cir.delete.array %14 : <!s8i> loc(#loc180)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc181)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc182)
        } loc(#loc394)
      } loc(#loc391)
    } loc(#loc389)
    cir.return loc(#loc154)
  } loc(#loc387)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc398)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc399)
    %2 = cir.get_global @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L11goodG2BSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc188)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc399)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc189)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc400)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc191)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc191)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc401)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc193)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc194)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc193)
    cir.return loc(#loc184)
  } loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc195)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L11goodB2GSinkEm(%arg0: !u64i loc(fused[#loc198, #loc199])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc403)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc405)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc207)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc407)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc408)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc211)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc212)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc212)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc409)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc210)
            cir.yield %11 : !cir.bool loc(#loc210)
          }, false {
            %11 = cir.const #false loc(#loc210)
            cir.yield %11 : !cir.bool loc(#loc210)
          }) : (!cir.bool) -> !cir.bool loc(#loc210)
          cir.yield %10 : !cir.bool loc(#loc210)
        }, false {
          %6 = cir.const #false loc(#loc210)
          cir.yield %6 : !cir.bool loc(#loc210)
        }) : (!cir.bool) -> !cir.bool loc(#loc210)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc216)
          %7 = cir.call @_Znam(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc217)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc411)
          cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc412)
          %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc221)
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc223)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc223)
          %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc225)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
          cir.delete.array %15 : <!s8i> loc(#loc226)
        } else {
          %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc195)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc195)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc227)
        } loc(#loc410)
      } loc(#loc406)
    } loc(#loc404)
    cir.return loc(#loc197)
  } loc(#loc402)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc414)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc415)
    %2 = cir.get_global @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L11goodB2GSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc233)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc415)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc234)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc416)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc418)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc419)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc420)
      %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc421)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc243)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc243)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc420)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc250)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc251)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc251)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc252)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc252)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
            cir.store %18, %9 : !s32i, !cir.ptr<!s32i> loc(#loc424)
            cir.scope {
              %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc258)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc259)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc259)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc426)
              cir.if %62 {
                cir.break loc(#loc261)
              } loc(#loc427)
            } loc(#loc425)
            %19 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc428)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc264)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc429)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc430)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc269)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc269)
            %24 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc431)
            %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc271)
            %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc271)
            %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc272)
            %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc432)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc275)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc275)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc276)
            %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc103)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc433)
            cir.scope {
              %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %60 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc435)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc436)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc436)
              %63 = cir.call @connect(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc286)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc287)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc287)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc437)
              cir.if %66 {
                cir.break loc(#loc289)
              } loc(#loc438)
            } loc(#loc434)
            %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %35 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc291)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc292)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc292)
            %39 = cir.const #cir.int<8> : !u64i loc(#loc292)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc292)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc292)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc292)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc292)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc293)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc293)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc439)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc294)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc295)
            cir.store %49, %7 : !s32i, !cir.ptr<!s32i> loc(#loc440)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc301)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc442)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc302)
                cir.yield %64 : !cir.bool loc(#loc302)
              }, false {
                %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc304)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc443)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc302)
                  cir.yield %68 : !cir.bool loc(#loc302)
                }, false {
                  %68 = cir.const #false loc(#loc302)
                  cir.yield %68 : !cir.bool loc(#loc302)
                }) : (!cir.bool) -> !cir.bool loc(#loc302)
                cir.yield %67 : !cir.bool loc(#loc302)
              }) : (!cir.bool) -> !cir.bool loc(#loc302)
              cir.if %63 {
                cir.break loc(#loc306)
              } loc(#loc444)
            } loc(#loc441)
            %50 = cir.const #cir.int<0> : !s8i loc(#loc307)
            %51 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
            %52 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc309)
            %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc309)
            cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc445)
            %54 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc310)
            %55 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc311)
            %56 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc313)
            %58 = cir.call @__isoc23_strtoul(%55, %56, %57) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc310)
            cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc446)
          } loc(#loc423)
          cir.yield loc(#loc247)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc316)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc316)
          cir.condition(%14) loc(#loc316)
        } loc(#loc422)
      } loc(#loc422)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc319)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc320)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc320)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc448)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc322)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc323)
        } loc(#loc449)
      } loc(#loc447)
    } loc(#loc417)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc324)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc325)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc324)
    cir.return loc(#loc229)
  } loc(#loc413)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_444goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7goodG2BEv() : () -> () loc(#loc328)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44L7goodB2GEv() : () -> () loc(#loc329)
    cir.return loc(#loc327)
  } loc(#loc450)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":64:30)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":70:23)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":53:1)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":73:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":54:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":55:5)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":72:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":56:9)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":56:16)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":60:9)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":71:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":60:13)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":60:20)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":60:39)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":61:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":67:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":69:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":62:33)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":53:13)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":62:24)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":62:37)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":62:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":64:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":64:20)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":65:23)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":65:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":66:23)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":70:13)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc38 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc39 = loc("/usr/include/arpa/inet.h":34:1)
#loc40 = loc("/usr/include/arpa/inet.h":34:47)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":108:49)
#loc42 = loc("/usr/include/netinet/in.h":402:1)
#loc43 = loc("/usr/include/netinet/in.h":403:40)
#loc44 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc45 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc46 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc47 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc48 = loc("/usr/include/stdlib.h":219:1)
#loc49 = loc("/usr/include/stdlib.h":223:6)
#loc50 = loc("/usr/include/unistd.h":358:1)
#loc51 = loc("/usr/include/unistd.h":358:27)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":75:1)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":140:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":77:5)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":77:12)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":79:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":79:32)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":81:12)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":81:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":82:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":137:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":87:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":87:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":88:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":88:28)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":89:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":89:32)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":90:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":90:41)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":91:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":126:17)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":92:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":125:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:36)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:45)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:58)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:29)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":101:69)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":102:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":105:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":102:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":102:34)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":103:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":104:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:20)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:21)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:30)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:33)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:47)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":106:48)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":107:34)
#loc94 = loc("/usr/include/netinet/in.h":249:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":107:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":108:39)
#loc97 = loc("/usr/include/netinet/in.h":251:20)
#loc98 = loc("/usr/include/netinet/in.h":33:15)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":108:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":108:59)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":109:38)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":109:32)
#loc103 = loc("/usr/include/netinet/in.h":250:15)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":109:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":109:46)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":113:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:25)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:58)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:59)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:68)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:82)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":110:88)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":111:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":112:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:31)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:46)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:59)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:77)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:80)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:26)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":116:81)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":120:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:31)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:44)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:47)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":117:61)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":118:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":119:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":122:39)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":122:25)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":122:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:28)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:41)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:47)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":124:48)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":126:16)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":127:9)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":130:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":127:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":127:30)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":128:9)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":129:26)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":129:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":139:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":139:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":147:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":167:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":148:1)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":149:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":166:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":150:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":150:16)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":154:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":165:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":154:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":154:20)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":154:39)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":155:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":161:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":163:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":156:33)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":147:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":156:24)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":156:37)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":156:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":158:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":158:20)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":158:30)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":159:23)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":159:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":160:23)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":164:23)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":164:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":169:1)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":178:1)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":171:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":171:12)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":172:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":172:32)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":174:12)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":174:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":176:12)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":176:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":177:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":177:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":198:23)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":181:1)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":201:1)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":182:1)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":183:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":200:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":184:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":184:16)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:9)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":199:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:20)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:39)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:41)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:44)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":188:51)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":189:9)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":195:9)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":197:9)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":190:33)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":181:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":190:24)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":190:37)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":190:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":192:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":192:20)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":192:30)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":193:23)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":193:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":194:23)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":198:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":203:1)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":266:1)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":205:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":205:12)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":206:5)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":206:32)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":208:12)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":208:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":209:5)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":264:5)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":214:9)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":214:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":215:9)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":215:28)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":216:9)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":216:32)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":217:9)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":217:41)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":218:9)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":253:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":219:9)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":252:9)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:36)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:45)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:58)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:29)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":228:69)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":229:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":232:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":229:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":229:34)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":230:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":231:17)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:20)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:21)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:30)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:33)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:47)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":233:48)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":234:34)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":234:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":235:49)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":235:39)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":235:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":235:59)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":236:38)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":236:32)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":236:13)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":236:46)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":240:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:25)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:58)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:59)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:68)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:82)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":237:88)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":238:13)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":239:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:31)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:46)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:59)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:77)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:80)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:26)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:13)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":243:81)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":247:13)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:17)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:31)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:44)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:47)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":244:61)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":245:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":246:17)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":249:39)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":249:25)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":249:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:20)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:28)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:41)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:47)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:13)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":251:48)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":253:16)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":254:9)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":257:9)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":254:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":254:30)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":255:9)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":256:26)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":256:13)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":265:5)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":265:13)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":268:1)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":272:1)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":270:5)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_44.cpp":271:5)
#loc330 = loc(fused[#loc1, #loc2])
#loc331 = loc(fused[#loc3, #loc4])
#loc332 = loc(fused[#loc6, #loc7])
#loc333 = loc(fused[#loc9, #loc10])
#loc335 = loc(fused[#loc14, #loc15])
#loc336 = loc(fused[#loc16, #loc17])
#loc337 = loc(fused[#loc18, #loc19])
#loc338 = loc(fused[#loc21, #loc22])
#loc339 = loc(fused[#loc20, #loc22])
#loc340 = loc(fused[#loc23, #loc24, #loc25, #loc19])
#loc341 = loc(fused[#loc28, #loc29])
#loc342 = loc(fused[#loc30, #loc29])
#loc343 = loc(fused[#loc37, #loc38])
#loc344 = loc(fused[#loc39, #loc40])
#loc345 = loc(fused[#loc42, #loc43])
#loc346 = loc(fused[#loc44, #loc45])
#loc347 = loc(fused[#loc46, #loc47])
#loc348 = loc(fused[#loc48, #loc49])
#loc349 = loc(fused[#loc50, #loc51])
#loc350 = loc(fused[#loc52, #loc53])
#loc351 = loc(fused[#loc54, #loc55])
#loc352 = loc(fused[#loc56, #loc57])
#loc353 = loc(fused[#loc59, #loc58])
#loc354 = loc(fused[#loc60, #loc61])
#loc355 = loc(fused[#loc62, #loc63])
#loc356 = loc(fused[#loc64, #loc65])
#loc357 = loc(fused[#loc66, #loc67])
#loc358 = loc(fused[#loc68, #loc69])
#loc359 = loc(fused[#loc70, #loc71])
#loc360 = loc(fused[#loc72, #loc73])
#loc361 = loc(fused[#loc78, #loc79])
#loc362 = loc(fused[#loc80, #loc81])
#loc363 = loc(fused[#loc82, #loc83])
#loc364 = loc(fused[#loc84, #loc81])
#loc365 = loc(fused[#loc86, #loc87])
#loc366 = loc(fused[#loc89, #loc90])
#loc367 = loc(fused[#loc91, #loc92])
#loc368 = loc(fused[#loc95, #loc93])
#loc369 = loc(fused[#loc99, #loc100])
#loc370 = loc(fused[#loc104, #loc105])
#loc371 = loc(fused[#loc106, #loc107])
#loc372 = loc(fused[#loc109, #loc110])
#loc373 = loc(fused[#loc111, #loc112])
#loc374 = loc(fused[#loc113, #loc114])
#loc375 = loc(fused[#loc115, #loc107])
#loc376 = loc(fused[#loc119, #loc120])
#loc377 = loc(fused[#loc123, #loc124])
#loc378 = loc(fused[#loc125, #loc126])
#loc379 = loc(fused[#loc127, #loc128])
#loc380 = loc(fused[#loc130, #loc131])
#loc381 = loc(fused[#loc132, #loc126])
#loc382 = loc(fused[#loc136, #loc134])
#loc383 = loc(fused[#loc141, #loc142])
#loc384 = loc(fused[#loc144, #loc145])
#loc385 = loc(fused[#loc146, #loc147])
#loc386 = loc(fused[#loc148, #loc145])
#loc387 = loc(fused[#loc153, #loc154])
#loc389 = loc(fused[#loc158, #loc159])
#loc390 = loc(fused[#loc160, #loc161])
#loc391 = loc(fused[#loc162, #loc163])
#loc392 = loc(fused[#loc165, #loc166])
#loc393 = loc(fused[#loc164, #loc166])
#loc394 = loc(fused[#loc167, #loc168, #loc169, #loc163])
#loc395 = loc(fused[#loc172, #loc173])
#loc396 = loc(fused[#loc174, #loc173])
#loc397 = loc(fused[#loc183, #loc184])
#loc398 = loc(fused[#loc185, #loc186])
#loc399 = loc(fused[#loc187, #loc188])
#loc400 = loc(fused[#loc190, #loc189])
#loc401 = loc(fused[#loc192, #loc191])
#loc402 = loc(fused[#loc196, #loc197])
#loc404 = loc(fused[#loc201, #loc202])
#loc405 = loc(fused[#loc203, #loc204])
#loc406 = loc(fused[#loc205, #loc206])
#loc407 = loc(fused[#loc208, #loc209])
#loc408 = loc(fused[#loc207, #loc209])
#loc409 = loc(fused[#loc211, #loc212])
#loc410 = loc(fused[#loc213, #loc214, #loc215, #loc206])
#loc411 = loc(fused[#loc218, #loc219])
#loc412 = loc(fused[#loc220, #loc219])
#loc413 = loc(fused[#loc228, #loc229])
#loc414 = loc(fused[#loc230, #loc231])
#loc415 = loc(fused[#loc232, #loc233])
#loc416 = loc(fused[#loc235, #loc234])
#loc417 = loc(fused[#loc236, #loc237])
#loc418 = loc(fused[#loc238, #loc239])
#loc419 = loc(fused[#loc240, #loc241])
#loc420 = loc(fused[#loc242, #loc243])
#loc421 = loc(fused[#loc244, #loc245])
#loc422 = loc(fused[#loc246, #loc247])
#loc423 = loc(fused[#loc248, #loc249])
#loc424 = loc(fused[#loc254, #loc255])
#loc425 = loc(fused[#loc256, #loc257])
#loc426 = loc(fused[#loc258, #loc259])
#loc427 = loc(fused[#loc260, #loc257])
#loc428 = loc(fused[#loc262, #loc263])
#loc429 = loc(fused[#loc265, #loc266])
#loc430 = loc(fused[#loc267, #loc268])
#loc431 = loc(fused[#loc270, #loc269])
#loc432 = loc(fused[#loc273, #loc274])
#loc433 = loc(fused[#loc277, #loc278])
#loc434 = loc(fused[#loc279, #loc280])
#loc435 = loc(fused[#loc282, #loc283])
#loc436 = loc(fused[#loc284, #loc285])
#loc437 = loc(fused[#loc286, #loc287])
#loc438 = loc(fused[#loc288, #loc280])
#loc439 = loc(fused[#loc292, #loc293])
#loc440 = loc(fused[#loc296, #loc297])
#loc441 = loc(fused[#loc298, #loc299])
#loc442 = loc(fused[#loc300, #loc301])
#loc443 = loc(fused[#loc303, #loc304])
#loc444 = loc(fused[#loc305, #loc299])
#loc445 = loc(fused[#loc309, #loc307])
#loc446 = loc(fused[#loc314, #loc315])
#loc447 = loc(fused[#loc317, #loc318])
#loc448 = loc(fused[#loc319, #loc320])
#loc449 = loc(fused[#loc321, #loc318])
#loc450 = loc(fused[#loc326, #loc327])
