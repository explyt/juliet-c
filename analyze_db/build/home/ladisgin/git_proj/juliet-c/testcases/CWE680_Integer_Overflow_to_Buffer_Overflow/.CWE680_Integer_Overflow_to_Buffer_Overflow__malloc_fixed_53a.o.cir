!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53b_badSink(!s32i) loc(#loc33)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc35)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc36)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc10)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc37)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc37)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc38)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53b_badSink(%8) : (!s32i) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc34)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc40)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc17)
  } loc(#loc39)
  cir.func private @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53b_goodG2BSink(!s32i) loc(#loc41)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc29)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53b_goodG2BSink(%4) : (!s32i) -> () loc(#loc32)
    cir.return loc(#loc23)
  } loc(#loc42)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":22:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":22:83)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":24:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":34:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":26:5)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":26:9)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":28:13)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":28:12)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":28:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":30:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":30:22)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":30:26)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":30:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":33:74)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":33:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":54:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":57:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":56:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":56:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":41:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":41:87)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":44:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":52:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":46:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":46:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":48:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":48:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":48:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":50:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":50:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":51:78)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_53a.c":51:5)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc3, #loc4])
#loc35 = loc(fused[#loc5, #loc6])
#loc36 = loc(fused[#loc9, #loc7])
#loc37 = loc(fused[#loc10, #loc11])
#loc38 = loc(fused[#loc13, #loc12])
#loc39 = loc(fused[#loc16, #loc17])
#loc40 = loc(fused[#loc18, #loc19])
#loc41 = loc(fused[#loc20, #loc21])
#loc42 = loc(fused[#loc22, #loc23])
#loc43 = loc(fused[#loc24, #loc25])
#loc44 = loc(fused[#loc28, #loc26])
#loc45 = loc(fused[#loc30, #loc29])
