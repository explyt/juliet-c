!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":31:64)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":31:68)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":42:68)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":42:72)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":49:68)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":49:72)
#loc24 = loc(fused[#loc5, #loc6])
#loc26 = loc(fused[#loc12, #loc13])
#loc28 = loc(fused[#loc19, #loc20])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @close(!s32i) -> !s32i loc(#loc22)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_53d_badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc24)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %2 = cir.call @close(%1) : (!s32i) -> !s32i loc(#loc9)
    cir.return loc(#loc4)
  } loc(#loc23)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_53d_goodG2BSink(%arg0: !s32i loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc26)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %2 = cir.call @close(%1) : (!s32i) -> !s32i loc(#loc16)
    cir.return loc(#loc11)
  } loc(#loc25)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_53d_goodB2GSink(%arg0: !s32i loc(fused[#loc19, #loc20])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc28)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc27)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_53d.c":0:0)
#loc1 = loc("/usr/include/unistd.h":358:1)
#loc2 = loc("/usr/include/unistd.h":358:27)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":31:1)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":35:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":32:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":34:11)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":34:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":42:1)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":46:1)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":43:1)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":45:11)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":45:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":49:1)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":54:1)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_53d.c":50:1)
#loc22 = loc(fused[#loc1, #loc2])
#loc23 = loc(fused[#loc3, #loc4])
#loc25 = loc(fused[#loc10, #loc11])
#loc27 = loc(fused[#loc17, #loc18])
