!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":65:72)
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":65:81)
#loc19 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":79:76)
#loc20 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":79:85)
#loc33 = loc(fused[#loc7, #loc8])
#loc36 = loc(fused[#loc19, #loc20])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc31)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func  @CWE78_OS_Command_Injection__char_listen_socket_execlp_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc33)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc11)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
    %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc15)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc32)
  cir.func  @CWE78_OS_Command_Injection__char_listen_socket_execlp_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc36)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc23)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc26)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc26)
    %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc27)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc27)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc30)
    cir.return loc(#loc18)
  } loc(#loc35)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":0:0)
#loc1 = loc("/usr/include/unistd.h":605:1)
#loc2 = loc("/usr/include/unistd.h":606:14)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:12)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:38)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":65:1)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":72:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":67:5)
#loc10 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":67:20)
#loc11 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":66:1)
#loc12 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":67:19)
#loc13 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:25)
#loc14 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:52)
#loc15 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:66)
#loc16 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":71:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":79:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":86:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":81:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":81:20)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":80:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":81:19)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:25)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:38)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:52)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:66)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_63b.c":85:5)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc5, #loc6])
#loc34 = loc(fused[#loc9, #loc10])
#loc35 = loc(fused[#loc17, #loc18])
#loc37 = loc(fused[#loc21, #loc22])
