!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc25 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":68:10)
#loc26 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":68:14)
#loc27 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":68:20)
#loc28 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":68:32)
#loc77 = loc(fused[#loc25, #loc26])
#loc78 = loc(fused[#loc27, #loc28])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE562_Return_of_Stack_Variable_Address/CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.helperBad.charString = #cir.const_array<"helperBad string\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> loc(#loc68)
  cir.global "private" internal dsolocal @helperGood1.charString = #cir.const_array<"helperGood1 string\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 16 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc69)
  cir.func no_proto @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_bad() extra(#fn_attr) {
    %0 = cir.get_global @helperBad : !cir.ptr<!cir.func<!cir.ptr<!s8i> ()>> loc(#loc71)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!cir.ptr<!s8i> ()>>) -> !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc10)
    cir.return loc(#loc7)
  } loc(#loc70)
  cir.func no_proto @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc13)
    cir.return loc(#loc12)
  } loc(#loc72)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc74)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc22)
  cir.func @main(%arg0: !s32i loc(fused[#loc25, #loc26]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc27, #loc28])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc78)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc24)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc29)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc29)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc30)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc31)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc31)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc32)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc19)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %8 = cir.get_global @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_good() : () -> () loc(#loc34)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc21)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    %13 = cir.get_global @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc80)
    cir.call @CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01_bad() : () -> () loc(#loc38)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc22)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc22)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.return %17 : !s32i loc(#loc81)
  } loc(#loc76)
  cir.func no_proto internal private @helperBad() -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc44)
    %1 = cir.alloca !cir.array<!s8i x 17>, !cir.ptr<!cir.array<!s8i x 17>>, ["charString"] {alignment = 16 : i64} loc(#loc68)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["ptrCharString"] {alignment = 8 : i64} loc(#loc83)
    %3 = cir.get_global @__const.helperBad.charString : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!s8i>, %4 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc85)
  } loc(#loc82)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.get_global @helperGood1 : !cir.ptr<!cir.func<!cir.ptr<!s8i> ()>> loc(#loc87)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!cir.ptr<!s8i> ()>>) -> !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc86)
  cir.func no_proto internal private @helperGood1() -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["ptrCharString"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.get_global @helperGood1.charString : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc63)
    %5 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %3 : !s32i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.return %7 : !cir.ptr<!s8i> loc(#loc91)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE562_Return_of_Stack_Variable_Address/CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":0:0)
#loc1 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":14:5)
#loc2 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":14:25)
#loc3 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":35:17)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":23:1)
#loc7 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":26:1)
#loc8 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":25:15)
#loc9 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":25:25)
#loc10 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":25:5)
#loc11 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":53:1)
#loc12 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":56:1)
#loc13 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":55:5)
#loc14 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":55:11)
#loc15 = loc("/usr/include/stdlib.h":575:1)
#loc16 = loc("/usr/include/stdlib.h":575:41)
#loc17 = loc("/usr/include/time.h":76:1)
#loc18 = loc("/usr/include/time.h":76:38)
#loc19 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":74:15)
#loc20 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":76:15)
#loc21 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":80:15)
#loc22 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":82:15)
#loc23 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":68:1)
#loc24 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":86:1)
#loc29 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":69:1)
#loc30 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":71:27)
#loc31 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":71:22)
#loc32 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":71:5)
#loc33 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":74:5)
#loc34 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":75:5)
#loc35 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":75:73)
#loc36 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":76:5)
#loc37 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":80:5)
#loc38 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":81:5)
#loc39 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":81:72)
#loc40 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":82:5)
#loc41 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":85:12)
#loc42 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":85:5)
#loc43 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":12:1)
#loc44 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":21:1)
#loc45 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":15:5)
#loc46 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":15:11)
#loc47 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":17:33)
#loc48 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":17:22)
#loc49 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":17:5)
#loc50 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":17:34)
#loc51 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":20:12)
#loc52 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":20:5)
#loc53 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":48:1)
#loc54 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":51:1)
#loc55 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":50:15)
#loc56 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":50:27)
#loc57 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":50:5)
#loc58 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":33:1)
#loc59 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":46:1)
#loc60 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":36:5)
#loc61 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":36:11)
#loc62 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":38:33)
#loc63 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":38:22)
#loc64 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":38:5)
#loc65 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":38:34)
#loc66 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":45:12)
#loc67 = loc("CWE562_Return_of_Stack_Variable_Address__return_pointer_buf_01.c":45:5)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc4, #loc5])
#loc70 = loc(fused[#loc6, #loc7])
#loc71 = loc(fused[#loc8, #loc9])
#loc72 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc13, #loc14])
#loc74 = loc(fused[#loc15, #loc16])
#loc75 = loc(fused[#loc17, #loc18])
#loc76 = loc(fused[#loc23, #loc24])
#loc79 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc38, #loc39])
#loc81 = loc(fused[#loc42, #loc41])
#loc82 = loc(fused[#loc43, #loc44])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc49, #loc50])
#loc85 = loc(fused[#loc52, #loc51])
#loc86 = loc(fused[#loc53, #loc54])
#loc87 = loc(fused[#loc55, #loc56])
#loc88 = loc(fused[#loc58, #loc59])
#loc89 = loc(fused[#loc60, #loc61])
#loc90 = loc(fused[#loc64, #loc65])
#loc91 = loc(fused[#loc67, #loc66])
