!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":25:62)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":25:69)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":45:66)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":45:73)
#loc81 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc44, #loc45])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_52c.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc79)
  cir.func @CWE126_Buffer_Overread__malloc_char_memmove_52c_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc82)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc17)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc18)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc84)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc22)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc85)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc28)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc28)
    %23 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc87)
    cir.libc.memmove %24 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc88)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc34)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc35)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc89)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc40)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc80)
  cir.func @CWE126_Buffer_Overread__malloc_char_memmove_52c_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc52)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc53)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc53)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc94)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc57)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc58)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc95)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc63)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc63)
    %23 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc97)
    cir.libc.memmove %24 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc98)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc69)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc70)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb2 loc(#loc50)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc43)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_52c.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":25:1)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":38:1)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":28:9)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":28:22)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":26:1)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":27:5)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":37:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:16)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:22)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:27)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:31)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:9)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":29:32)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":30:23)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":30:14)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":30:18)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":30:9)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:17)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:23)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:29)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:36)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:42)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:53)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:9)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":33:54)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":34:23)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":34:14)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":34:18)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":34:9)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":35:19)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":35:9)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":36:9)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":36:14)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":45:1)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":58:1)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":48:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":48:22)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":46:1)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":47:5)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":57:5)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:16)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:27)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:31)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:9)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":49:32)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":50:23)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":50:14)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":50:18)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":50:9)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:17)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:23)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:29)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:36)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:42)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:53)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:9)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":53:54)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":54:23)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":54:14)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":54:18)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":54:9)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":55:19)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":55:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":56:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_52c.c":56:14)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc11, #loc12])
#loc83 = loc(fused[#loc14, #loc15])
#loc84 = loc(fused[#loc20, #loc21])
#loc85 = loc(fused[#loc25, #loc22])
#loc86 = loc(fused[#loc30, #loc31])
#loc87 = loc(fused[#loc28, #loc31])
#loc88 = loc(fused[#loc32, #loc33])
#loc89 = loc(fused[#loc37, #loc34])
#loc90 = loc(fused[#loc42, #loc43])
#loc92 = loc(fused[#loc46, #loc47])
#loc93 = loc(fused[#loc49, #loc50])
#loc94 = loc(fused[#loc55, #loc56])
#loc95 = loc(fused[#loc60, #loc57])
#loc96 = loc(fused[#loc65, #loc66])
#loc97 = loc(fused[#loc63, #loc66])
#loc98 = loc(fused[#loc67, #loc68])
#loc99 = loc(fused[#loc72, #loc69])
