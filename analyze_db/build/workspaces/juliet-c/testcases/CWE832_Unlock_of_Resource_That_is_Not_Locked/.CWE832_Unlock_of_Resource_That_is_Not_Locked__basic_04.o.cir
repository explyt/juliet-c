!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @good2.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc6)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc12)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc15)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc116)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc22)
      cir.if %1 {
        cir.scope {
          %2 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc3)
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc6)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          cir.scope {
            %11 = cir.call @stdThreadLockCreate(%2) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc29)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc29)
            %13 = cir.unary(not, %12) : !cir.bool, !cir.bool loc(#loc29)
            cir.if %13 {
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc9)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc31)
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc122)
          } loc(#loc121)
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc12)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc35)
          cir.call @stdThreadLockRelease(%7) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc36)
          %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc15)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc15)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc37)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc38)
          cir.call @stdThreadLockDestroy(%10) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc39)
        } loc(#loc120)
      } loc(#loc119)
    } loc(#loc118)
    cir.return loc(#loc19)
  } loc(#loc117)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc126)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc54)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc54)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } else {
        cir.scope {
          %2 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc62)
          cir.scope {
            %14 = cir.call @stdThreadLockCreate(%2) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc65)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc65)
            %16 = cir.unary(not, %15) : !cir.bool, !cir.bool loc(#loc65)
            cir.if %16 {
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc67)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc67)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc68)
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc69)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc70)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
            } loc(#loc132)
          } loc(#loc131)
          %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc71)
          %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc72)
          cir.call @stdThreadLockAcquire(%7) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc73)
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc75)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc76)
          cir.call @stdThreadLockRelease(%10) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc77)
          %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc78)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc80)
          cir.call @stdThreadLockDestroy(%13) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc81)
        } loc(#loc130)
      } loc(#loc129)
    } loc(#loc128)
    cir.return loc(#loc51)
  } loc(#loc127)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc86)
      cir.if %1 {
        cir.scope {
          %2 = cir.get_global @good2.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc90)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc90)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc91)
          cir.scope {
            %14 = cir.call @stdThreadLockCreate(%2) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc94)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc94)
            %16 = cir.unary(not, %15) : !cir.bool, !cir.bool loc(#loc94)
            cir.if %16 {
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc96)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc97)
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc99)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
            } loc(#loc138)
          } loc(#loc137)
          %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc102)
          cir.call @stdThreadLockAcquire(%7) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc103)
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc106)
          cir.call @stdThreadLockRelease(%10) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc107)
          %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc108)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc108)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc109)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc110)
          cir.call @stdThreadLockDestroy(%13) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc111)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc134)
    cir.return loc(#loc83)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":88:34)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":64:34)
#loc3 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":33:34)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":34:23)
#loc7 = loc("../../testcasesupport/std_thread.h":18:1)
#loc8 = loc("../../testcasesupport/std_thread.h":18:44)
#loc9 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":37:27)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":41:23)
#loc13 = loc("../../testcasesupport/std_thread.h":20:1)
#loc14 = loc("../../testcasesupport/std_thread.h":20:45)
#loc15 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":43:23)
#loc16 = loc("../../testcasesupport/std_thread.h":21:1)
#loc17 = loc("../../testcasesupport/std_thread.h":21:45)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":28:1)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":47:1)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":30:5)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":46:5)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":30:8)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":31:5)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":32:9)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":45:9)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":34:13)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":35:13)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":39:13)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":35:18)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":36:13)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":37:17)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":38:17)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":38:22)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":41:13)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":42:34)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":42:13)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":43:13)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":44:34)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":44:13)
#loc40 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":106:1)
#loc41 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":110:1)
#loc42 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":108:5)
#loc43 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":108:11)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":109:5)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":109:11)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":59:19)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":72:23)
#loc48 = loc("../../testcasesupport/std_thread.h":19:1)
#loc49 = loc("../../testcasesupport/std_thread.h":19:45)
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":54:1)
#loc51 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":80:1)
#loc52 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":56:5)
#loc53 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":79:5)
#loc54 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":56:8)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":57:5)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":60:5)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":62:5)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":59:9)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":63:9)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":78:9)
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":65:23)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":65:13)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":66:13)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":70:13)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":66:18)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":67:13)
#loc67 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":68:27)
#loc68 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":68:17)
#loc69 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":69:17)
#loc70 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":69:22)
#loc71 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":72:13)
#loc72 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":73:34)
#loc73 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":73:13)
#loc74 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":74:23)
#loc75 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":74:13)
#loc76 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":75:34)
#loc77 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":75:13)
#loc78 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":76:23)
#loc79 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":76:13)
#loc80 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":77:34)
#loc81 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":77:13)
#loc82 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":83:1)
#loc83 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":104:1)
#loc84 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":85:5)
#loc85 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":103:5)
#loc86 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":85:8)
#loc87 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":86:5)
#loc88 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":87:9)
#loc89 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":102:9)
#loc90 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":89:23)
#loc91 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":89:13)
#loc92 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":90:13)
#loc93 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":94:13)
#loc94 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":90:18)
#loc95 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":91:13)
#loc96 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":92:27)
#loc97 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":92:17)
#loc98 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":93:17)
#loc99 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":93:22)
#loc100 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":96:23)
#loc101 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":96:13)
#loc102 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":97:34)
#loc103 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":97:13)
#loc104 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":98:23)
#loc105 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":98:13)
#loc106 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":99:34)
#loc107 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":99:13)
#loc108 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":100:23)
#loc109 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":100:13)
#loc110 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":101:34)
#loc111 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_04.c":101:13)
#loc112 = loc(fused[#loc4, #loc5])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc10, #loc11])
#loc115 = loc(fused[#loc13, #loc14])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc23, #loc21])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc30, #loc28])
#loc123 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc48, #loc49])
#loc127 = loc(fused[#loc50, #loc51])
#loc128 = loc(fused[#loc52, #loc53])
#loc129 = loc(fused[#loc55, #loc56, #loc57, #loc53])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc66, #loc64])
#loc133 = loc(fused[#loc82, #loc83])
#loc134 = loc(fused[#loc84, #loc85])
#loc135 = loc(fused[#loc87, #loc85])
#loc136 = loc(fused[#loc88, #loc89])
#loc137 = loc(fused[#loc92, #loc93])
#loc138 = loc(fused[#loc95, #loc93])
