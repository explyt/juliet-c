!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":262:10)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":262:14)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":262:20)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":262:32)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:27)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:27)
#true = #cir.bool<true> : !cir.bool
#loc520 = loc(fused[#loc116, #loc117])
#loc521 = loc(fused[#loc118, #loc119])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc472)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc473)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc474)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc475)
  cir.func private @printIntLine(!s32i) loc(#loc476)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc477)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc478)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc480)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc481)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc482)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc26)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    cir.br ^bb1 loc(#loc484)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc486)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc33)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc473)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc33)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc487)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<5> : !s32i loc(#loc37)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc38)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc488)
    cir.brcond %16 ^bb6, ^bb34 loc(#loc489)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc490)
  ^bb7:  // pred: ^bb6
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc43)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc491)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc492)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc493)
    cir.store %23, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc481)
    cir.br ^bb8 loc(#loc494)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc49)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc495)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc496)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb10 loc(#loc47)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc497)
  ^bb12:  // pred: ^bb11
    %31 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.br ^bb13 loc(#loc497)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc499)
    cir.brcond %34 ^bb14, ^bb18 loc(#loc60)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc500)
  ^bb15:  // pred: ^bb14
    %35 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc65)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb16 loc(#loc55)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc55)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc67)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    cir.br ^bb13 loc(#loc497)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc55)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc503)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %43 = cir.cmp(ge, %41, %42) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %43 ^bb21, ^bb30 loc(#loc505)
  ^bb21:  // pred: ^bb20
    %44 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc506)
    cir.br ^bb22 loc(#loc507)
  ^bb22:  // pred: ^bb21
    %48 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %48, %0 : !s32i, !cir.ptr<!s32i> loc(#loc508)
    cir.br ^bb23 loc(#loc507)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %50 = cir.const #cir.int<10> : !s32i loc(#loc84)
    %51 = cir.cmp(lt, %49, %50) : !s32i, !cir.bool loc(#loc509)
    cir.brcond %51 ^bb24, ^bb28 loc(#loc85)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc510)
  ^bb25:  // pred: ^bb24
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !s32i), !cir.ptr<!s32i> loc(#loc89)
    %55 = cir.load %54 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%55) : (!s32i) -> () loc(#loc90)
    cir.br ^bb26 loc(#loc80)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc80)
  ^bb27:  // pred: ^bb26
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %57 = cir.unary(inc, %56) : !s32i, !s32i loc(#loc92)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.br ^bb23 loc(#loc507)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc80)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc73)
  ^bb30:  // pred: ^bb20
    %58 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %59 = cir.cast(array_to_ptrdecay, %58 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb31 loc(#loc69)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc69)
  ^bb32:  // pred: ^bb31
    %60 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb33 loc(#loc41)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc36)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc36)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc18)
  } loc(#loc479)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc513)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc514)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc515)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc516)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc97)
  } loc(#loc512)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc517)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc518)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc113)
  cir.func @main(%arg0: !s32i loc(fused[#loc116, #loc117]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc118, #loc119])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc520)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc521)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc115)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc120)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc121)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc122)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc122)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc123)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc522)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_good() : () -> () loc(#loc125)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc111)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc112)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc523)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03_bad() : () -> () loc(#loc129)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc113)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc132)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc524)
    cir.return %17 : !s32i loc(#loc524)
  } loc(#loc519)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc135)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc526)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc527)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc528)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc145)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    cir.br ^bb1 loc(#loc530)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc149)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc531)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc532)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc152)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc473)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc153)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc154)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc154)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc152)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc533)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<5> : !s32i loc(#loc157)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc158)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc534)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc535)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb43 loc(#loc160)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc536)
  ^bb8:  // pred: ^bb7
    %19 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc166)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc166)
    %22 = cir.const #cir.int<4> : !u64i loc(#loc537)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc538)
    %24 = cir.call @malloc(%23) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc539)
    cir.store %25, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc527)
    cir.br ^bb9 loc(#loc540)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc172)
    %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s32i>, !cir.bool loc(#loc541)
    cir.brcond %29 ^bb10, ^bb11 loc(#loc542)
  ^bb10:  // pred: ^bb9
    %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc176)
    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
    cir.br ^bb11 loc(#loc170)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc170)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc543)
  ^bb13:  // pred: ^bb12
    %33 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    cir.br ^bb14 loc(#loc543)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %35 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %36 = cir.cmp(lt, %34, %35) : !s32i, !cir.bool loc(#loc545)
    cir.brcond %36 ^bb15, ^bb19 loc(#loc183)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc546)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc188)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb17 loc(#loc178)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc178)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %42 = cir.unary(inc, %41) : !s32i, !s32i loc(#loc190)
    cir.store %42, %0 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb14 loc(#loc543)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc178)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc549)
  ^bb21:  // pred: ^bb20
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %45 = cir.cmp(ge, %43, %44) : !s32i, !cir.bool loc(#loc550)
    cir.brcond %45 ^bb22, ^bb27 loc(#loc195)
  ^bb22:  // pred: ^bb21
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc197)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc551)
    cir.brcond %48 ^bb23, ^bb24 loc(#loc195)
  ^bb23:  // pred: ^bb22
    %49 = cir.const #true loc(#loc195)
    cir.br ^bb25(%49 : !cir.bool) loc(#loc195)
  ^bb24:  // pred: ^bb22
    %50 = cir.const #false loc(#loc195)
    cir.br ^bb25(%50 : !cir.bool) loc(#loc195)
  ^bb25(%51: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:27)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc195)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28(%51 : !cir.bool) loc(#loc195)
  ^bb27:  // pred: ^bb21
    %52 = cir.const #false loc(#loc195)
    cir.br ^bb28(%52 : !cir.bool) loc(#loc195)
  ^bb28(%53: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:27)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc195)
  ^bb29:  // pred: ^bb28
    cir.brcond %53 ^bb30, ^bb39 loc(#loc552)
  ^bb30:  // pred: ^bb29
    %54 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc205)
    cir.store %54, %57 : !s32i, !cir.ptr<!s32i> loc(#loc553)
    cir.br ^bb31 loc(#loc554)
  ^bb31:  // pred: ^bb30
    %58 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    cir.br ^bb32 loc(#loc554)
  ^bb32:  // 2 preds: ^bb31, ^bb36
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %60 = cir.const #cir.int<10> : !s32i loc(#loc211)
    %61 = cir.cmp(lt, %59, %60) : !s32i, !cir.bool loc(#loc556)
    cir.brcond %61 ^bb33, ^bb37 loc(#loc212)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc557)
  ^bb34:  // pred: ^bb33
    %62 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!s32i>, %63 : !s32i), !cir.ptr<!s32i> loc(#loc216)
    %65 = cir.load %64 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.call @printIntLine(%65) : (!s32i) -> () loc(#loc217)
    cir.br ^bb35 loc(#loc207)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc207)
  ^bb36:  // pred: ^bb35
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %67 = cir.unary(inc, %66) : !s32i, !s32i loc(#loc219)
    cir.store %67, %0 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb32 loc(#loc554)
  ^bb37:  // pred: ^bb32
    cir.br ^bb38 loc(#loc207)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc200)
  ^bb39:  // pred: ^bb29
    %68 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc135)
    %69 = cir.cast(array_to_ptrdecay, %68 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%69) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    cir.br ^bb40 loc(#loc192)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc192)
  ^bb41:  // pred: ^bb40
    %70 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc221)
    cir.call @free(%71) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc222)
    cir.br ^bb42 loc(#loc164)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc156)
  ^bb43:  // 2 preds: ^bb6, ^bb42
    cir.br ^bb44 loc(#loc156)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc137)
  } loc(#loc525)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc560)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc561)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc562)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc232)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.br ^bb1 loc(#loc564)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc236)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc237)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc566)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc239)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc473)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc240)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc241)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc241)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc239)
    cir.br ^bb3 loc(#loc235)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc235)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc567)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<5> : !s32i loc(#loc244)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc245)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %16 ^bb6, ^bb42 loc(#loc569)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc570)
  ^bb7:  // pred: ^bb6
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc249)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc250)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc250)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc571)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc572)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc249)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc573)
    cir.store %23, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc561)
    cir.br ^bb8 loc(#loc574)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc256)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc256)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc575)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc576)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc258)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc260)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc258)
    cir.br ^bb10 loc(#loc254)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc254)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc577)
  ^bb12:  // pred: ^bb11
    %31 = cir.const #cir.int<0> : !s32i loc(#loc263)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    cir.br ^bb13 loc(#loc577)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc266)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc579)
    cir.brcond %34 ^bb14, ^bb18 loc(#loc267)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc580)
  ^bb15:  // pred: ^bb14
    %35 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc270)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc272)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.br ^bb16 loc(#loc262)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc262)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc274)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    cir.br ^bb13 loc(#loc577)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc262)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc583)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %43 = cir.cmp(ge, %41, %42) : !s32i, !cir.bool loc(#loc584)
    cir.brcond %43 ^bb21, ^bb26 loc(#loc279)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc281)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc585)
    cir.brcond %46 ^bb22, ^bb23 loc(#loc279)
  ^bb22:  // pred: ^bb21
    %47 = cir.const #true loc(#loc279)
    cir.br ^bb24(%47 : !cir.bool) loc(#loc279)
  ^bb23:  // pred: ^bb21
    %48 = cir.const #false loc(#loc279)
    cir.br ^bb24(%48 : !cir.bool) loc(#loc279)
  ^bb24(%49: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc279)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27(%49 : !cir.bool) loc(#loc279)
  ^bb26:  // pred: ^bb20
    %50 = cir.const #false loc(#loc279)
    cir.br ^bb27(%50 : !cir.bool) loc(#loc279)
  ^bb27(%51: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:27)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc279)
  ^bb28:  // pred: ^bb27
    cir.brcond %51 ^bb29, ^bb38 loc(#loc586)
  ^bb29:  // pred: ^bb28
    %52 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc287)
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s32i>, %54 : !s32i), !cir.ptr<!s32i> loc(#loc289)
    cir.store %52, %55 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    cir.br ^bb30 loc(#loc588)
  ^bb30:  // pred: ^bb29
    %56 = cir.const #cir.int<0> : !s32i loc(#loc292)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.br ^bb31 loc(#loc588)
  ^bb31:  // 2 preds: ^bb30, ^bb35
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc295)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc590)
    cir.brcond %59 ^bb32, ^bb36 loc(#loc296)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc591)
  ^bb33:  // pred: ^bb32
    %60 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc298)
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    %62 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %61 : !s32i), !cir.ptr<!s32i> loc(#loc300)
    %63 = cir.load %62 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    cir.call @printIntLine(%63) : (!s32i) -> () loc(#loc301)
    cir.br ^bb34 loc(#loc291)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc291)
  ^bb35:  // pred: ^bb34
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %65 = cir.unary(inc, %64) : !s32i, !s32i loc(#loc303)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    cir.br ^bb31 loc(#loc588)
  ^bb36:  // pred: ^bb31
    cir.br ^bb37 loc(#loc291)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc284)
  ^bb38:  // pred: ^bb28
    %66 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc304)
    %67 = cir.cast(array_to_ptrdecay, %66 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc304)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc305)
    cir.br ^bb39 loc(#loc276)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc276)
  ^bb40:  // pred: ^bb39
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc306)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc306)
    cir.call @free(%69) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc307)
    cir.br ^bb41 loc(#loc248)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc243)
  ^bb42:  // 2 preds: ^bb5, ^bb41
    cir.br ^bb43 loc(#loc243)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc224)
  } loc(#loc559)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc594)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc595)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc596)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc316)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc317)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    cir.br ^bb1 loc(#loc598)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc321)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc322)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc600)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc326)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc326)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc327)
    cir.br ^bb4 loc(#loc324)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc328)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    cir.br ^bb4 loc(#loc320)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc320)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc602)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<5> : !s32i loc(#loc332)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc333)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc603)
    cir.brcond %13 ^bb7, ^bb35 loc(#loc604)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc605)
  ^bb8:  // pred: ^bb7
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc337)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc338)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc338)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc606)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc607)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc337)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc608)
    cir.store %20, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc595)
    cir.br ^bb9 loc(#loc609)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc343)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc344)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc344)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc610)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc611)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc346)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc347)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc348)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc346)
    cir.br ^bb11 loc(#loc342)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc342)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc612)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc351)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.br ^bb14 loc(#loc612)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    %30 = cir.const #cir.int<10> : !s32i loc(#loc354)
    %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc614)
    cir.brcond %31 ^bb15, ^bb19 loc(#loc355)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc615)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<0> : !s32i loc(#loc357)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc358)
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc360)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb17 loc(#loc350)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc350)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %37 = cir.unary(inc, %36) : !s32i, !s32i loc(#loc362)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc617)
    cir.br ^bb14 loc(#loc612)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc350)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc618)
  ^bb21:  // pred: ^bb20
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc366)
    %40 = cir.cmp(ge, %38, %39) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %40 ^bb22, ^bb31 loc(#loc620)
  ^bb22:  // pred: ^bb21
    %41 = cir.const #cir.int<1> : !s32i loc(#loc370)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc371)
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc372)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc373)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc621)
    cir.br ^bb23 loc(#loc622)
  ^bb23:  // pred: ^bb22
    %45 = cir.const #cir.int<0> : !s32i loc(#loc376)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.br ^bb24 loc(#loc622)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc379)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc624)
    cir.brcond %48 ^bb25, ^bb29 loc(#loc380)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc625)
  ^bb26:  // pred: ^bb25
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc382)
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc383)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc384)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc385)
    cir.br ^bb27 loc(#loc375)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc375)
  ^bb28:  // pred: ^bb27
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %54 = cir.unary(inc, %53) : !s32i, !s32i loc(#loc387)
    cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.br ^bb24 loc(#loc622)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc375)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc368)
  ^bb31:  // pred: ^bb21
    %55 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc388)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc388)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc389)
    cir.br ^bb32 loc(#loc364)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc364)
  ^bb33:  // pred: ^bb32
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc390)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc390)
    cir.call @free(%58) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc391)
    cir.br ^bb34 loc(#loc336)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc331)
  ^bb35:  // 2 preds: ^bb6, ^bb34
    cir.br ^bb36 loc(#loc331)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc309)
  } loc(#loc593)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc628)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc629)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc630)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc400)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc401)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb1 loc(#loc632)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc405)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc406)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc633)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc634)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc408)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    cir.br ^bb3 loc(#loc404)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc404)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc636)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<5> : !s32i loc(#loc412)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc413)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc637)
    cir.brcond %11 ^bb6, ^bb34 loc(#loc638)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc639)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc417)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc418)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc418)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc640)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc641)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc417)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc642)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc629)
    cir.br ^bb8 loc(#loc643)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc423)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc424)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc424)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc644)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc645)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc426)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc427)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc428)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc426)
    cir.br ^bb10 loc(#loc422)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc422)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc646)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc431)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.br ^bb13 loc(#loc646)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc434)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc648)
    cir.brcond %29 ^bb14, ^bb18 loc(#loc435)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc649)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<0> : !s32i loc(#loc437)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc438)
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc440)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    cir.br ^bb16 loc(#loc430)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc430)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc442)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc651)
    cir.br ^bb13 loc(#loc646)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc430)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc652)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc445)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc446)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc653)
    cir.brcond %38 ^bb21, ^bb30 loc(#loc654)
  ^bb21:  // pred: ^bb20
    %39 = cir.const #cir.int<1> : !s32i loc(#loc450)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc451)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc453)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc655)
    cir.br ^bb22 loc(#loc656)
  ^bb22:  // pred: ^bb21
    %43 = cir.const #cir.int<0> : !s32i loc(#loc456)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb23 loc(#loc656)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc458)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc459)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc658)
    cir.brcond %46 ^bb24, ^bb28 loc(#loc460)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc659)
  ^bb25:  // pred: ^bb24
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc462)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc464)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc462)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc465)
    cir.br ^bb26 loc(#loc455)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc455)
  ^bb27:  // pred: ^bb26
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc466)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc467)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc660)
    cir.br ^bb23 loc(#loc656)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc455)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc448)
  ^bb30:  // pred: ^bb20
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc468)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc468)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc469)
    cir.br ^bb31 loc(#loc444)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc444)
  ^bb32:  // pred: ^bb31
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc470)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc470)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc471)
    cir.br ^bb33 loc(#loc416)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc411)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc411)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc393)
  } loc(#loc627)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":30:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":56:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":22:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":61:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":35:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":35:17)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:58)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":24:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":24:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":26:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":26:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":27:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":31:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":27:8)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":27:11)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":28:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":30:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":30:16)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":32:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":60:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":32:8)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":32:11)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":33:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":34:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":59:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:42)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:47)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":36:57)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:43)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:34)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:40)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":37:39)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":42:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:25)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:27)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":40:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":41:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":41:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":41:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":41:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":39:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":45:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":57:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":45:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":45:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":46:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":53:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":55:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":47:32)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":47:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":47:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":47:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":52:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:25)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":50:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":51:34)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":51:41)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":51:42)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":51:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:37)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":49:36)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":56:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":58:18)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":58:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":245:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":251:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":247:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":247:14)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":248:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":248:14)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":249:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":249:14)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":250:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":250:14)
#loc106 = loc("/usr/include/stdlib.h":575:1)
#loc107 = loc("/usr/include/stdlib.h":575:41)
#loc108 = loc("/usr/include/time.h":76:1)
#loc109 = loc("/usr/include/time.h":76:38)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":267:15)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":269:15)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":272:15)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":274:15)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":262:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":277:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":263:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":265:27)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":265:22)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":265:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":267:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":268:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":268:64)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":269:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":272:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":273:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":273:63)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":274:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":276:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":276:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":81:19)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":106:27)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":68:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":111:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":86:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":86:17)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:58)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":70:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":70:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":72:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":72:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":72:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":73:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":77:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":73:8)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":73:11)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":74:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":76:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":76:16)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":76:23)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":78:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":110:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":78:8)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":78:11)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":79:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":82:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":84:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":81:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":85:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":109:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:35)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:42)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:47)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":87:57)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:43)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:27)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:33)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:34)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:40)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":88:39)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":93:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:22)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:18)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:25)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:29)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:27)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":91:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":92:29)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":92:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":92:24)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":92:25)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:34)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":90:33)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":107:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:17)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:25)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:30)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:38)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":95:40)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":96:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":103:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":105:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":97:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":97:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":97:24)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":97:28)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:17)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":102:17)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:25)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:21)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:28)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:32)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:30)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":100:17)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":101:34)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":101:41)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":101:42)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":101:21)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:37)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":99:36)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":106:17)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":108:18)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":108:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":114:1)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":152:1)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":127:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":127:17)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:58)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":116:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":116:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":118:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":118:12)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":118:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":119:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":123:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":119:8)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":119:11)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":120:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":122:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":122:16)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":122:23)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":124:5)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":151:5)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":124:8)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":124:11)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":125:5)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":126:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":150:9)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:35)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:42)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:47)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":128:57)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:43)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:17)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:27)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:33)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:34)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:40)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":129:39)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":134:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:22)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:18)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:25)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:29)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:27)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":132:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":133:29)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":133:17)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":133:24)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":133:25)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:34)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":131:33)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:13)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":148:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:17)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:25)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:30)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:38)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":136:40)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":137:13)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":144:13)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":146:13)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":138:32)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":138:17)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":138:24)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":138:28)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:17)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":143:17)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:25)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:21)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:28)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:32)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:30)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":141:17)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":142:34)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":142:41)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":142:42)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":142:21)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:37)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":140:36)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":147:27)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":147:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":149:18)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":149:13)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":155:1)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":200:1)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":174:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":174:17)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:13)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:58)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":157:5)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":157:9)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":159:13)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":159:12)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":159:5)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":160:5)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":170:5)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":160:8)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":160:11)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":161:5)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":164:5)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":166:5)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":163:19)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":163:9)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":169:16)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":169:9)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":171:5)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":199:5)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":171:8)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":171:11)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":172:5)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":173:9)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":198:9)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:35)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:42)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:47)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":175:57)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:43)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:17)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:27)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:33)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:34)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:40)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":176:39)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:13)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":181:13)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:22)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:18)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:25)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:29)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:27)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":179:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":180:29)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":180:17)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":180:24)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":180:25)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:34)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":178:33)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":184:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":196:13)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":184:17)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":184:25)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":185:13)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":192:13)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":194:13)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":186:32)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":186:17)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":186:24)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":186:28)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:17)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":191:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:25)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:21)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:28)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:32)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:30)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":189:17)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":190:34)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":190:41)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":190:42)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":190:21)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:37)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":188:36)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":195:27)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":195:17)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":197:18)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":197:13)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":203:1)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":243:1)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":217:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":217:17)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:13)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:58)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":205:5)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":205:9)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":207:13)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":207:12)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":207:5)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":208:5)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":213:5)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":208:8)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":208:11)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":209:5)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":212:16)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":212:9)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":214:5)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":242:5)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":214:8)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":214:11)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":215:5)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":216:9)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":241:9)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:35)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:42)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:47)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":218:57)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:13)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:43)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:17)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:27)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:33)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:34)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:40)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":219:39)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:13)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":224:13)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:22)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:18)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:25)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:29)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:27)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":222:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":223:29)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":223:17)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":223:24)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":223:25)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:34)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":221:33)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":227:13)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":239:13)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":227:17)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":227:25)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":228:13)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":235:13)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":237:13)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":229:32)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":229:17)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":229:24)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":229:28)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:17)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":234:17)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:25)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:21)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:28)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:32)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:30)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":232:17)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":233:34)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":233:41)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":233:42)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":233:21)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:37)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":231:36)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":238:27)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":238:17)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":240:18)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_03.c":240:13)
#loc472 = loc(fused[#loc1, #loc2])
#loc473 = loc(fused[#loc3, #loc4])
#loc474 = loc(fused[#loc6, #loc7])
#loc475 = loc(fused[#loc8, #loc9])
#loc476 = loc(fused[#loc10, #loc11])
#loc477 = loc(fused[#loc12, #loc13])
#loc478 = loc(fused[#loc15, #loc16])
#loc479 = loc(fused[#loc17, #loc18])
#loc480 = loc(fused[#loc19, #loc20])
#loc481 = loc(fused[#loc21, #loc22])
#loc482 = loc(fused[#loc23, #loc24])
#loc483 = loc(fused[#loc27, #loc25])
#loc484 = loc(fused[#loc28, #loc29])
#loc485 = loc(fused[#loc30, #loc31])
#loc486 = loc(fused[#loc32, #loc29])
#loc487 = loc(fused[#loc35, #loc36])
#loc488 = loc(fused[#loc37, #loc38])
#loc489 = loc(fused[#loc39, #loc36])
#loc490 = loc(fused[#loc40, #loc41])
#loc491 = loc(fused[#loc44, #loc45])
#loc492 = loc(fused[#loc43, #loc45])
#loc493 = loc(fused[#loc42, #loc22])
#loc494 = loc(fused[#loc46, #loc47])
#loc495 = loc(fused[#loc48, #loc49])
#loc496 = loc(fused[#loc50, #loc47])
#loc497 = loc(fused[#loc54, #loc55])
#loc498 = loc(fused[#loc57, #loc56])
#loc499 = loc(fused[#loc58, #loc59])
#loc500 = loc(fused[#loc61, #loc55])
#loc501 = loc(fused[#loc63, #loc62])
#loc502 = loc(fused[#loc67, #loc66])
#loc503 = loc(fused[#loc68, #loc69])
#loc504 = loc(fused[#loc70, #loc71])
#loc505 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc506 = loc(fused[#loc76, #loc75])
#loc507 = loc(fused[#loc79, #loc80])
#loc508 = loc(fused[#loc82, #loc81])
#loc509 = loc(fused[#loc83, #loc84])
#loc510 = loc(fused[#loc86, #loc80])
#loc511 = loc(fused[#loc92, #loc91])
#loc512 = loc(fused[#loc96, #loc97])
#loc513 = loc(fused[#loc98, #loc99])
#loc514 = loc(fused[#loc100, #loc101])
#loc515 = loc(fused[#loc102, #loc103])
#loc516 = loc(fused[#loc104, #loc105])
#loc517 = loc(fused[#loc106, #loc107])
#loc518 = loc(fused[#loc108, #loc109])
#loc519 = loc(fused[#loc114, #loc115])
#loc522 = loc(fused[#loc125, #loc126])
#loc523 = loc(fused[#loc129, #loc130])
#loc524 = loc(fused[#loc133, #loc132])
#loc525 = loc(fused[#loc136, #loc137])
#loc526 = loc(fused[#loc138, #loc139])
#loc527 = loc(fused[#loc140, #loc141])
#loc528 = loc(fused[#loc142, #loc143])
#loc529 = loc(fused[#loc146, #loc144])
#loc530 = loc(fused[#loc147, #loc148])
#loc531 = loc(fused[#loc149, #loc150])
#loc532 = loc(fused[#loc151, #loc148])
#loc533 = loc(fused[#loc155, #loc156])
#loc534 = loc(fused[#loc157, #loc158])
#loc535 = loc(fused[#loc159, #loc160, #loc161, #loc156])
#loc536 = loc(fused[#loc163, #loc164])
#loc537 = loc(fused[#loc167, #loc168])
#loc538 = loc(fused[#loc166, #loc168])
#loc539 = loc(fused[#loc165, #loc141])
#loc540 = loc(fused[#loc169, #loc170])
#loc541 = loc(fused[#loc171, #loc172])
#loc542 = loc(fused[#loc173, #loc170])
#loc543 = loc(fused[#loc177, #loc178])
#loc544 = loc(fused[#loc180, #loc179])
#loc545 = loc(fused[#loc181, #loc182])
#loc546 = loc(fused[#loc184, #loc178])
#loc547 = loc(fused[#loc186, #loc185])
#loc548 = loc(fused[#loc190, #loc189])
#loc549 = loc(fused[#loc191, #loc192])
#loc550 = loc(fused[#loc193, #loc194])
#loc551 = loc(fused[#loc196, #loc198])
#loc552 = loc(fused[#loc199, #loc200, #loc201, #loc192])
#loc553 = loc(fused[#loc203, #loc202])
#loc554 = loc(fused[#loc206, #loc207])
#loc555 = loc(fused[#loc209, #loc208])
#loc556 = loc(fused[#loc210, #loc211])
#loc557 = loc(fused[#loc213, #loc207])
#loc558 = loc(fused[#loc219, #loc218])
#loc559 = loc(fused[#loc223, #loc224])
#loc560 = loc(fused[#loc225, #loc226])
#loc561 = loc(fused[#loc227, #loc228])
#loc562 = loc(fused[#loc229, #loc230])
#loc563 = loc(fused[#loc233, #loc231])
#loc564 = loc(fused[#loc234, #loc235])
#loc565 = loc(fused[#loc236, #loc237])
#loc566 = loc(fused[#loc238, #loc235])
#loc567 = loc(fused[#loc242, #loc243])
#loc568 = loc(fused[#loc244, #loc245])
#loc569 = loc(fused[#loc246, #loc243])
#loc570 = loc(fused[#loc247, #loc248])
#loc571 = loc(fused[#loc251, #loc252])
#loc572 = loc(fused[#loc250, #loc252])
#loc573 = loc(fused[#loc249, #loc228])
#loc574 = loc(fused[#loc253, #loc254])
#loc575 = loc(fused[#loc255, #loc256])
#loc576 = loc(fused[#loc257, #loc254])
#loc577 = loc(fused[#loc261, #loc262])
#loc578 = loc(fused[#loc264, #loc263])
#loc579 = loc(fused[#loc265, #loc266])
#loc580 = loc(fused[#loc268, #loc262])
#loc581 = loc(fused[#loc270, #loc269])
#loc582 = loc(fused[#loc274, #loc273])
#loc583 = loc(fused[#loc275, #loc276])
#loc584 = loc(fused[#loc277, #loc278])
#loc585 = loc(fused[#loc280, #loc282])
#loc586 = loc(fused[#loc283, #loc284, #loc285, #loc276])
#loc587 = loc(fused[#loc287, #loc286])
#loc588 = loc(fused[#loc290, #loc291])
#loc589 = loc(fused[#loc293, #loc292])
#loc590 = loc(fused[#loc294, #loc295])
#loc591 = loc(fused[#loc297, #loc291])
#loc592 = loc(fused[#loc303, #loc302])
#loc593 = loc(fused[#loc308, #loc309])
#loc594 = loc(fused[#loc310, #loc311])
#loc595 = loc(fused[#loc312, #loc313])
#loc596 = loc(fused[#loc314, #loc315])
#loc597 = loc(fused[#loc318, #loc316])
#loc598 = loc(fused[#loc319, #loc320])
#loc599 = loc(fused[#loc321, #loc322])
#loc600 = loc(fused[#loc323, #loc324, #loc325, #loc320])
#loc601 = loc(fused[#loc329, #loc328])
#loc602 = loc(fused[#loc330, #loc331])
#loc603 = loc(fused[#loc332, #loc333])
#loc604 = loc(fused[#loc334, #loc331])
#loc605 = loc(fused[#loc335, #loc336])
#loc606 = loc(fused[#loc339, #loc340])
#loc607 = loc(fused[#loc338, #loc340])
#loc608 = loc(fused[#loc337, #loc313])
#loc609 = loc(fused[#loc341, #loc342])
#loc610 = loc(fused[#loc343, #loc344])
#loc611 = loc(fused[#loc345, #loc342])
#loc612 = loc(fused[#loc349, #loc350])
#loc613 = loc(fused[#loc352, #loc351])
#loc614 = loc(fused[#loc353, #loc354])
#loc615 = loc(fused[#loc356, #loc350])
#loc616 = loc(fused[#loc358, #loc357])
#loc617 = loc(fused[#loc362, #loc361])
#loc618 = loc(fused[#loc363, #loc364])
#loc619 = loc(fused[#loc365, #loc366])
#loc620 = loc(fused[#loc367, #loc368, #loc369, #loc364])
#loc621 = loc(fused[#loc371, #loc370])
#loc622 = loc(fused[#loc374, #loc375])
#loc623 = loc(fused[#loc377, #loc376])
#loc624 = loc(fused[#loc378, #loc379])
#loc625 = loc(fused[#loc381, #loc375])
#loc626 = loc(fused[#loc387, #loc386])
#loc627 = loc(fused[#loc392, #loc393])
#loc628 = loc(fused[#loc394, #loc395])
#loc629 = loc(fused[#loc396, #loc397])
#loc630 = loc(fused[#loc398, #loc399])
#loc631 = loc(fused[#loc402, #loc400])
#loc632 = loc(fused[#loc403, #loc404])
#loc633 = loc(fused[#loc405, #loc406])
#loc634 = loc(fused[#loc407, #loc404])
#loc635 = loc(fused[#loc409, #loc408])
#loc636 = loc(fused[#loc410, #loc411])
#loc637 = loc(fused[#loc412, #loc413])
#loc638 = loc(fused[#loc414, #loc411])
#loc639 = loc(fused[#loc415, #loc416])
#loc640 = loc(fused[#loc419, #loc420])
#loc641 = loc(fused[#loc418, #loc420])
#loc642 = loc(fused[#loc417, #loc397])
#loc643 = loc(fused[#loc421, #loc422])
#loc644 = loc(fused[#loc423, #loc424])
#loc645 = loc(fused[#loc425, #loc422])
#loc646 = loc(fused[#loc429, #loc430])
#loc647 = loc(fused[#loc432, #loc431])
#loc648 = loc(fused[#loc433, #loc434])
#loc649 = loc(fused[#loc436, #loc430])
#loc650 = loc(fused[#loc438, #loc437])
#loc651 = loc(fused[#loc442, #loc441])
#loc652 = loc(fused[#loc443, #loc444])
#loc653 = loc(fused[#loc445, #loc446])
#loc654 = loc(fused[#loc447, #loc448, #loc449, #loc444])
#loc655 = loc(fused[#loc451, #loc450])
#loc656 = loc(fused[#loc454, #loc455])
#loc657 = loc(fused[#loc457, #loc456])
#loc658 = loc(fused[#loc458, #loc459])
#loc659 = loc(fused[#loc461, #loc455])
#loc660 = loc(fused[#loc467, #loc466])
