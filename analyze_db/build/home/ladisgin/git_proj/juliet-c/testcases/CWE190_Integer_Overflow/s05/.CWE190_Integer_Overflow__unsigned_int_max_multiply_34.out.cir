!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":112:10)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":112:14)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":112:20)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":112:32)
!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType" {!u32i, !u32i}>
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printUnsignedLine(!u32i) loc(#loc130)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc133)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc134)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc135)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc13)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc136)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc15)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc15)
    %8 = cir.const #cir.int<2> : !u32i loc(#loc15)
    %9 = cir.binop(mul, %7, %8) : !u32i loc(#loc15)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc15)
    %11 = cir.binop(add, %9, %10) : !u32i loc(#loc15)
    cir.store %11, %2 : !u32i, !cir.ptr<!u32i> loc(#loc137)
    %12 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc17)
    %13 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %12, %13 : !u32i, !cir.ptr<!u32i> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %14 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc6)
    cir.store %15, %0 : !u32i, !cir.ptr<!u32i> loc(#loc132)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc25)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc26)
    %19 = cir.cmp(gt, %16, %18) : !u32i, !cir.bool loc(#loc141)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc142)
  ^bb3:  // pred: ^bb2
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc28)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
    %23 = cir.binop(mul, %20, %22) : !u32i loc(#loc143)
    cir.store %23, %1 : !u32i, !cir.ptr<!u32i> loc(#loc133)
    %24 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc29)
    cir.call @printUnsignedLine(%24) : (!u32i) -> () loc(#loc30)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc131)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc147)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_multiply_34_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.return %17 : !s32i loc(#loc155)
  } loc(#loc150)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc158)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc160)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc77)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc161)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc79)
    cir.store %7, %2 : !u32i, !cir.ptr<!u32i> loc(#loc162)
    %8 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc81)
    %9 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %8, %9 : !u32i, !cir.ptr<!u32i> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!u32i>, !u32i loc(#loc70)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc157)
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc87)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc88)
    %15 = cir.cmp(gt, %12, %14) : !u32i, !cir.bool loc(#loc166)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc167)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc90)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc72)
    %19 = cir.binop(mul, %16, %18) : !u32i loc(#loc168)
    cir.store %19, %1 : !u32i, !cir.ptr<!u32i> loc(#loc158)
    %20 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc91)
    cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc92)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc68)
  } loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc171)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc173)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc104)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc174)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc106)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc106)
    %8 = cir.const #cir.int<2> : !u32i loc(#loc106)
    %9 = cir.binop(mul, %7, %8) : !u32i loc(#loc106)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc106)
    %11 = cir.binop(add, %9, %10) : !u32i loc(#loc106)
    cir.store %11, %2 : !u32i, !cir.ptr<!u32i> loc(#loc175)
    %12 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc108)
    %13 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %12, %13 : !u32i, !cir.ptr<!u32i> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %14 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_multiply_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc97)
    cir.store %15, %0 : !u32i, !cir.ptr<!u32i> loc(#loc170)
    cir.br ^bb2 loc(#loc178)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc114)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc115)
    %19 = cir.cmp(gt, %16, %18) : !u32i, !cir.bool loc(#loc179)
    cir.brcond %19 ^bb3, ^bb9 loc(#loc180)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc181)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc119)
    %21 = cir.const #cir.int<2147483647> : !s32i loc(#loc120)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc120)
    %23 = cir.const #cir.int<2> : !u32i loc(#loc120)
    %24 = cir.binop(mul, %22, %23) : !u32i loc(#loc120)
    %25 = cir.const #cir.int<1> : !u32i loc(#loc120)
    %26 = cir.binop(add, %24, %25) : !u32i loc(#loc120)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc121)
    %29 = cir.binop(div, %26, %28) : !u32i loc(#loc182)
    %30 = cir.cmp(lt, %20, %29) : !u32i, !cir.bool loc(#loc183)
    cir.brcond %30 ^bb5, ^bb6 loc(#loc184)
  ^bb5:  // pred: ^bb4
    %31 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc126)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc99)
    %34 = cir.binop(mul, %31, %33) : !u32i loc(#loc185)
    cir.store %34, %1 : !u32i, !cir.ptr<!u32i> loc(#loc171)
    %35 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc127)
    cir.call @printUnsignedLine(%35) : (!u32i) -> () loc(#loc128)
    cir.br ^bb7 loc(#loc124)
  ^bb6:  // pred: ^bb4
    %36 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc93)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc118)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc113)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc111)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc95)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":28:1)
#loc4 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":45:1)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":37:9)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":37:37)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":41:13)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":41:42)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":30:5)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":30:18)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":31:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":31:69)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":32:12)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":32:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":34:12)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":34:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":35:26)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":22:18)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":35:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":36:5)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":44:5)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":23:18)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":38:9)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":43:9)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":38:12)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":38:19)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":39:9)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":41:35)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":42:31)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":42:13)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":98:1)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":102:1)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":100:5)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":100:13)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":101:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":101:13)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":117:15)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":119:15)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":122:15)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":124:15)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":112:1)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":127:1)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":113:1)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":115:27)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":115:22)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":115:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":117:5)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":118:5)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":118:64)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":119:5)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":122:5)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":123:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":123:63)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":124:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":126:12)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":126:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":52:1)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":69:1)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":61:9)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":61:37)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":65:13)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":65:42)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":54:5)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":54:18)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":55:5)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":55:69)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":56:12)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":56:5)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":58:12)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":58:5)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":59:26)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":59:5)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":60:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":68:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":62:9)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":67:9)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":62:12)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":62:19)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":63:9)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":65:35)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":66:31)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":66:13)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":92:27)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":72:1)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":96:1)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":81:9)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":81:37)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":87:17)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":87:46)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":74:5)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":74:18)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":75:5)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":75:69)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":76:12)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":76:5)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":78:12)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":78:5)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":79:26)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":79:5)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":80:5)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":95:5)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":82:9)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":94:9)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":82:12)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":82:19)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":83:9)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":85:13)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":93:13)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":85:17)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":85:25)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":85:34)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":85:35)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":86:13)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":89:13)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":91:13)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":87:39)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":88:35)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":88:17)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_34.c":92:17)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc14, #loc13])
#loc137 = loc(fused[#loc16, #loc15])
#loc138 = loc(fused[#loc19, #loc17])
#loc139 = loc(fused[#loc20, #loc21])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc25, #loc26])
#loc142 = loc(fused[#loc27, #loc24])
#loc143 = loc(fused[#loc28, #loc8])
#loc144 = loc(fused[#loc31, #loc32])
#loc145 = loc(fused[#loc33, #loc34])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc39, #loc40])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc58, #loc59])
#loc154 = loc(fused[#loc62, #loc63])
#loc155 = loc(fused[#loc66, #loc65])
#loc156 = loc(fused[#loc67, #loc68])
#loc157 = loc(fused[#loc69, #loc70])
#loc158 = loc(fused[#loc71, #loc72])
#loc159 = loc(fused[#loc73, #loc74])
#loc160 = loc(fused[#loc75, #loc76])
#loc161 = loc(fused[#loc78, #loc77])
#loc162 = loc(fused[#loc80, #loc79])
#loc163 = loc(fused[#loc82, #loc81])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc85, #loc86])
#loc166 = loc(fused[#loc87, #loc88])
#loc167 = loc(fused[#loc89, #loc86])
#loc168 = loc(fused[#loc90, #loc72])
#loc169 = loc(fused[#loc94, #loc95])
#loc170 = loc(fused[#loc96, #loc97])
#loc171 = loc(fused[#loc98, #loc99])
#loc172 = loc(fused[#loc100, #loc101])
#loc173 = loc(fused[#loc102, #loc103])
#loc174 = loc(fused[#loc105, #loc104])
#loc175 = loc(fused[#loc107, #loc106])
#loc176 = loc(fused[#loc109, #loc108])
#loc177 = loc(fused[#loc110, #loc111])
#loc178 = loc(fused[#loc112, #loc113])
#loc179 = loc(fused[#loc114, #loc115])
#loc180 = loc(fused[#loc116, #loc113])
#loc181 = loc(fused[#loc117, #loc118])
#loc182 = loc(fused[#loc120, #loc121])
#loc183 = loc(fused[#loc119, #loc122])
#loc184 = loc(fused[#loc123, #loc124, #loc125, #loc118])
#loc185 = loc(fused[#loc126, #loc99])
