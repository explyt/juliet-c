!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":25:14)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":25:31)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":49:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":49:35)
#loc50 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":68:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":68:35)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc74 = loc(fused[#loc6, #loc7])
#loc82 = loc(fused[#loc30, #loc31])
#loc90 = loc(fused[#loc53, #loc54])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc72)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_667badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc77)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc78)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
      cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc16)
      cir.store %10, %6 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc77)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc19)
      %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
      %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc79)
      %14 = cir.const #cir.int<10> : !s32i loc(#loc22)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
      %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
      cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc80)
      %17 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
      %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc27)
    } loc(#loc76)
    cir.return loc(#loc5)
  } loc(#loc73)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6611goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc30, #loc31])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc82)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc34)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc85)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc86)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
      cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc40)
      cir.store %10, %6 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc85)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc43)
      %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
      %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc87)
      %14 = cir.const #cir.int<10> : !s32i loc(#loc45)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
      %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
      cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc88)
      %17 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
      %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc49)
    } loc(#loc84)
    cir.return loc(#loc29)
  } loc(#loc81)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc50)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc50)
    cir.return loc(#loc50)
  } loc(#loc50)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_6611goodB2GSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!s8i>>, %3 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc93)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc94)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc94)
      cir.call @_ZN11OneIntClassC2Ev(%10) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc63)
      cir.store %10, %6 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc93)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc67)
      %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc68)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc95)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc69)
      %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc68)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc71)
    } loc(#loc92)
    cir.return loc(#loc52)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":42:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":28:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":28:30)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":26:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":28:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":28:29)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":41:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":35:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":35:45)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":35:35)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":35:39)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":37:28)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":37:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":38:28)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":38:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":39:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":39:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":49:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":65:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":51:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":51:30)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":50:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":51:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":51:29)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":52:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":64:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":58:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":58:45)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":58:35)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":58:39)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":60:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":60:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":61:28)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":61:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":62:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":62:32)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":62:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":68:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":82:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":70:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":70:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":69:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":70:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":70:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":71:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":81:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":77:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":77:44)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":77:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":77:38)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":79:28)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":79:9)
#loc68 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":80:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":80:32)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_66b.cpp":80:9)
#loc72 = loc(fused[#loc2, #loc3])
#loc73 = loc(fused[#loc4, #loc5])
#loc75 = loc(fused[#loc8, #loc9])
#loc76 = loc(fused[#loc13, #loc14])
#loc77 = loc(fused[#loc15, #loc16])
#loc78 = loc(fused[#loc17, #loc16])
#loc79 = loc(fused[#loc20, #loc19])
#loc80 = loc(fused[#loc23, #loc22])
#loc81 = loc(fused[#loc28, #loc29])
#loc83 = loc(fused[#loc32, #loc33])
#loc84 = loc(fused[#loc37, #loc38])
#loc85 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc41, #loc40])
#loc87 = loc(fused[#loc44, #loc43])
#loc88 = loc(fused[#loc46, #loc45])
#loc89 = loc(fused[#loc51, #loc52])
#loc91 = loc(fused[#loc55, #loc56])
#loc92 = loc(fused[#loc60, #loc61])
#loc93 = loc(fused[#loc62, #loc63])
#loc94 = loc(fused[#loc64, #loc63])
#loc95 = loc(fused[#loc67, #loc66])
