!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":101:10)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":101:14)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":101:20)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":101:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc126)
  cir.func private @printIntLine(!s32i) loc(#loc127)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc130)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc132)
    %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc135)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc135)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb2, ^bb5 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.copy %13 to %1 : !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %14 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
    %16 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc31)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb10 loc(#loc22)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc138)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %21, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %23 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %22, %23 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %25 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %26 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.copy %2 to %26 : !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.copy %27 to %4 : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %28 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc42)
    %30 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc6)
  } loc(#loc128)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc142)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_12_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_12_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %17 : !s32i loc(#loc152)
  } loc(#loc147)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc156)
    %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc158)
    %5 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc161)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc161)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc95)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %9 ^bb2, ^bb7 loc(#loc162)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<8> : !u64i loc(#loc84)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc84)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc84)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.store %13, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %15 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc104)
    %17 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.copy %0 to %18 : !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.copy %19 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
    %20 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc110)
    %22 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc112)
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc98)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc167)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<8> : !u64i loc(#loc90)
    %25 = cir.alloca !u8i, !cir.ptr<!u8i>, %24 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    cir.store %27, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %29 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %28, %29 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc117)
    %31 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %30, %31 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %32 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.copy %3 to %32 : !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.br ^bb9 loc(#loc170)
  ^bb9:  // pred: ^bb8
    %33 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    cir.copy %33 to %5 : !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
    %34 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc123)
    %36 = cir.get_member %5[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc125)
    cir.br ^bb10 loc(#loc121)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc114)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc94)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc94)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc80)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":20:1)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":46:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":25:13)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":25:56)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":26:13)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":26:35)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":34:13)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":34:27)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":35:13)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":35:56)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":40:17)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":40:39)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:5)
#loc18 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":45:5)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:8)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:33)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":23:5)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":30:5)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":32:5)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":24:9)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":29:9)
#loc26 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":27:31)
#loc28 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":27:13)
#loc29 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":28:31)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":28:13)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":33:9)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":44:9)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":36:27)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":36:13)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":37:27)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":37:13)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":38:14)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":39:13)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":43:13)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":41:35)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":41:17)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":42:35)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":42:17)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":87:1)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":90:1)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":89:5)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":89:11)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":106:15)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":108:15)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":111:15)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":113:15)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":101:1)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":116:1)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":102:1)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":104:27)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":104:22)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":104:5)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":106:5)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":107:5)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":107:58)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":108:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":111:5)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":112:5)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":112:57)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":113:5)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":115:12)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":115:5)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":53:1)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":85:1)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":58:13)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":58:27)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":59:13)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":59:56)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":64:17)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":64:39)
#loc87 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":73:13)
#loc88 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":73:27)
#loc89 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":74:13)
#loc90 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":74:56)
#loc91 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":79:17)
#loc92 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":79:39)
#loc93 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:5)
#loc94 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":84:5)
#loc95 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:8)
#loc96 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:33)
#loc97 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":56:5)
#loc98 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":69:5)
#loc99 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":71:5)
#loc100 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":57:9)
#loc101 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":68:9)
#loc102 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":60:27)
#loc103 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":60:13)
#loc104 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":61:27)
#loc105 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":61:13)
#loc106 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":62:14)
#loc107 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":63:13)
#loc108 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":67:13)
#loc109 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":65:35)
#loc110 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":65:17)
#loc111 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":66:35)
#loc112 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":66:17)
#loc113 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":72:9)
#loc114 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":83:9)
#loc115 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":75:27)
#loc116 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":75:13)
#loc117 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":76:27)
#loc118 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":76:13)
#loc119 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":77:14)
#loc120 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":78:13)
#loc121 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":82:13)
#loc122 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":80:35)
#loc123 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":80:17)
#loc124 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":81:35)
#loc125 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":81:17)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc17, #loc18])
#loc135 = loc(fused[#loc19, #loc20])
#loc136 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc32, #loc33])
#loc139 = loc(fused[#loc35, #loc34])
#loc140 = loc(fused[#loc37, #loc36])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc47, #loc48])
#loc144 = loc(fused[#loc49, #loc50])
#loc145 = loc(fused[#loc51, #loc52])
#loc146 = loc(fused[#loc53, #loc54])
#loc147 = loc(fused[#loc59, #loc60])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc78, #loc77])
#loc153 = loc(fused[#loc79, #loc80])
#loc154 = loc(fused[#loc81, #loc82])
#loc155 = loc(fused[#loc83, #loc84])
#loc156 = loc(fused[#loc85, #loc86])
#loc157 = loc(fused[#loc87, #loc88])
#loc158 = loc(fused[#loc89, #loc90])
#loc159 = loc(fused[#loc91, #loc92])
#loc160 = loc(fused[#loc93, #loc94])
#loc161 = loc(fused[#loc95, #loc96])
#loc162 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc103, #loc102])
#loc165 = loc(fused[#loc105, #loc104])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc113, #loc114])
#loc168 = loc(fused[#loc116, #loc115])
#loc169 = loc(fused[#loc118, #loc117])
#loc170 = loc(fused[#loc120, #loc121])
