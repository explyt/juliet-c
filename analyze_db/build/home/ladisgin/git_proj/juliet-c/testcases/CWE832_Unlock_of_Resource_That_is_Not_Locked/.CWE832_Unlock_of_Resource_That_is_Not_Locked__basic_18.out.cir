!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":83:10)
#loc51 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":83:14)
#loc52 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":83:20)
#loc53 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":83:32)
#loc111 = loc(fused[#loc50, #loc51])
#loc112 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc5)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc11)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc14)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc101)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_bad() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc103)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc21)
    %0 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc5)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    cir.scope {
      %9 = cir.call @stdThreadLockCreate(%0) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc25)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc25)
      %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc25)
      cir.if %11 {
        %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc8)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc8)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc27)
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc105)
    } loc(#loc104)
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc11)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc31)
    cir.call @stdThreadLockRelease(%5) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc32)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc14)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc34)
    cir.call @stdThreadLockDestroy(%8) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc35)
    cir.return loc(#loc18)
  } loc(#loc102)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc106)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc108)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.return %17 : !s32i loc(#loc115)
  } loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc116)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc118)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc75)
    %0 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.scope {
      %12 = cir.call @stdThreadLockCreate(%0) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc80)
      %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc80)
      %14 = cir.unary(not, %13) : !cir.bool, !cir.bool loc(#loc80)
      cir.if %14 {
        %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc82)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc83)
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc85)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
      } loc(#loc120)
    } loc(#loc119)
    %3 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc87)
    cir.call @stdThreadLockAcquire(%5) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc88)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc91)
    cir.call @stdThreadLockRelease(%8) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc92)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc93)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc95)
    cir.call @stdThreadLockDestroy(%11) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc96)
    cir.return loc(#loc72)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":52:30)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":27:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":28:19)
#loc6 = loc("../../testcasesupport/std_thread.h":18:1)
#loc7 = loc("../../testcasesupport/std_thread.h":18:44)
#loc8 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":31:23)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":35:19)
#loc12 = loc("../../testcasesupport/std_thread.h":20:1)
#loc13 = loc("../../testcasesupport/std_thread.h":20:45)
#loc14 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":37:19)
#loc15 = loc("../../testcasesupport/std_thread.h":21:1)
#loc16 = loc("../../testcasesupport/std_thread.h":21:45)
#loc17 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":22:1)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":40:1)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":24:5)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":24:10)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":25:1)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":28:9)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":29:9)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":33:9)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":29:14)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":30:9)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":31:13)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":32:13)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":32:18)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":35:9)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":36:30)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":36:9)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":37:9)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":38:30)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":38:9)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":69:1)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":72:1)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":71:5)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":71:11)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":88:15)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":90:15)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":93:15)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":95:15)
#loc48 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":83:1)
#loc49 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":98:1)
#loc54 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":84:1)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":86:27)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":86:22)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":86:5)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":88:5)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":89:5)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":89:65)
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":90:5)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":93:5)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":94:5)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":94:64)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":95:5)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":97:12)
#loc67 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":97:5)
#loc68 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":60:19)
#loc69 = loc("../../testcasesupport/std_thread.h":19:1)
#loc70 = loc("../../testcasesupport/std_thread.h":19:45)
#loc71 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":47:1)
#loc72 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":67:1)
#loc73 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":49:5)
#loc74 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":49:10)
#loc75 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":50:1)
#loc76 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":53:19)
#loc77 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":53:9)
#loc78 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":54:9)
#loc79 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":58:9)
#loc80 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":54:14)
#loc81 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":55:9)
#loc82 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":56:23)
#loc83 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":56:13)
#loc84 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":57:13)
#loc85 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":57:18)
#loc86 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":60:9)
#loc87 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":61:30)
#loc88 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":61:9)
#loc89 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":62:19)
#loc90 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":62:9)
#loc91 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":63:30)
#loc92 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":63:9)
#loc93 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":64:19)
#loc94 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":64:9)
#loc95 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":65:30)
#loc96 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_18.c":65:9)
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc6, #loc7])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc12, #loc13])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc17, #loc18])
#loc103 = loc(fused[#loc19, #loc20])
#loc104 = loc(fused[#loc23, #loc24])
#loc105 = loc(fused[#loc26, #loc24])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc40, #loc41])
#loc109 = loc(fused[#loc42, #loc43])
#loc110 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc63, #loc64])
#loc115 = loc(fused[#loc67, #loc66])
#loc116 = loc(fused[#loc69, #loc70])
#loc117 = loc(fused[#loc71, #loc72])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc78, #loc79])
#loc120 = loc(fused[#loc81, #loc79])
