!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc366)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc368)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc369)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc370)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc371)
  cir.func private @close(!s32i) -> !s32i loc(#loc372)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc373)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc374)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc377)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc378)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc379)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc31)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc380)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc383)
        cir.condition(%8) loc(#loc383)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc386)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc387)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc388)
            %9 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc389)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc47)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc388)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc54)
                  %13 = cir.const #cir.int<1> : !u32i loc(#loc55)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc55)
                  %15 = cir.const #cir.int<6> : !u32i loc(#loc56)
                  %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc56)
                  %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                  cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                  cir.scope {
                    %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc63)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc63)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc394)
                    cir.if %61 {
                      cir.break loc(#loc65)
                    } loc(#loc395)
                  } loc(#loc393)
                  %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc396)
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc68)
                  %20 = cir.const #cir.int<16> : !u64i loc(#loc397)
                  cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc398)
                  %21 = cir.const #cir.int<2> : !s32i loc(#loc73)
                  %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc73)
                  %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc399)
                  %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
                  %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc400)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc81)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc81)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
                  %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc401)
                  cir.scope {
                    %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                    %59 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc403)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc404)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc404)
                    %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc94)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc94)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc405)
                    cir.if %65 {
                      cir.break loc(#loc96)
                    } loc(#loc406)
                  } loc(#loc402)
                  %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc98)
                  %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
                  %36 = cir.const #cir.int<3> : !s32i loc(#loc99)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc99)
                  %38 = cir.const #cir.int<8> : !u64i loc(#loc99)
                  %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc99)
                  %40 = cir.const #cir.int<2> : !s32i loc(#loc99)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc99)
                  %42 = cir.binop(add, %39, %41) : !u64i loc(#loc99)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc100)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc407)
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc101)
                  %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc102)
                  %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc102)
                  cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc408)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc108)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc108)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc410)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc109)
                      cir.yield %63 : !cir.bool loc(#loc109)
                    }, false {
                      %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc111)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc411)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc109)
                        cir.yield %67 : !cir.bool loc(#loc109)
                      }, false {
                        %67 = cir.const #false loc(#loc109)
                        cir.yield %67 : !cir.bool loc(#loc109)
                      }) : (!cir.bool) -> !cir.bool loc(#loc109)
                      cir.yield %66 : !cir.bool loc(#loc109)
                    }) : (!cir.bool) -> !cir.bool loc(#loc109)
                    cir.if %62 {
                      cir.break loc(#loc113)
                    } loc(#loc412)
                  } loc(#loc409)
                  %49 = cir.const #cir.int<0> : !s8i loc(#loc114)
                  %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc116)
                  %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc116)
                  cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc413)
                  %53 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc117)
                  %54 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc118)
                  %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
                  %56 = cir.const #cir.int<0> : !s32i loc(#loc120)
                  %57 = cir.call @__isoc23_strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc117)
                  cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc414)
                } loc(#loc391)
                cir.yield loc(#loc51)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc123)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc123)
                cir.condition(%13) loc(#loc123)
              } loc(#loc390)
            } loc(#loc390)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc127)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc127)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc416)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc130)
              } loc(#loc417)
            } loc(#loc415)
          } loc(#loc385)
        } loc(#loc384)
        cir.yield loc(#loc34)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc132)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
        cir.yield loc(#loc381)
      } loc(#loc381)
    } loc(#loc381)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc135)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc420)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc421)
        cir.condition(%8) loc(#loc421)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc424)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc146)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc426)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc427)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc152)
                %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc153)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc429)
                cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc430)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
                %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc160)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                cir.delete.array %19 : <!s8i> loc(#loc161)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc162)
              } loc(#loc428)
            } loc(#loc425)
          } loc(#loc423)
        } loc(#loc422)
        cir.yield loc(#loc134)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc164)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc431)
        cir.yield loc(#loc419)
      } loc(#loc419)
    } loc(#loc419)
    cir.return loc(#loc25)
  } loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc165)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc434)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc435)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc173)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc436)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc177)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc438)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc439)
        cir.condition(%8) loc(#loc439)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc442)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc443)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc444)
            %9 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc445)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc189)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc444)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc196)
                  %13 = cir.const #cir.int<1> : !u32i loc(#loc197)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc197)
                  %15 = cir.const #cir.int<6> : !u32i loc(#loc198)
                  %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc198)
                  %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc199)
                  cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc448)
                  cir.scope {
                    %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc205)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc205)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc450)
                    cir.if %61 {
                      cir.break loc(#loc207)
                    } loc(#loc451)
                  } loc(#loc449)
                  %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc210)
                  %20 = cir.const #cir.int<16> : !u64i loc(#loc453)
                  cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
                  %21 = cir.const #cir.int<2> : !s32i loc(#loc215)
                  %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc215)
                  %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc455)
                  %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc217)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc217)
                  %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc218)
                  %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc456)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc221)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc221)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc222)
                  %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc457)
                  cir.scope {
                    %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                    %59 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc460)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc460)
                    %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc232)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc233)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc233)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc461)
                    cir.if %65 {
                      cir.break loc(#loc235)
                    } loc(#loc462)
                  } loc(#loc458)
                  %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                  %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc237)
                  %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc237)
                  %36 = cir.const #cir.int<3> : !s32i loc(#loc238)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc238)
                  %38 = cir.const #cir.int<8> : !u64i loc(#loc238)
                  %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc238)
                  %40 = cir.const #cir.int<2> : !s32i loc(#loc238)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc238)
                  %42 = cir.binop(add, %39, %41) : !u64i loc(#loc238)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc239)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc239)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc463)
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc240)
                  %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc241)
                  %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc241)
                  cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc464)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc247)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc247)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc466)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc248)
                      cir.yield %63 : !cir.bool loc(#loc248)
                    }, false {
                      %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc250)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc467)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc248)
                        cir.yield %67 : !cir.bool loc(#loc248)
                      }, false {
                        %67 = cir.const #false loc(#loc248)
                        cir.yield %67 : !cir.bool loc(#loc248)
                      }) : (!cir.bool) -> !cir.bool loc(#loc248)
                      cir.yield %66 : !cir.bool loc(#loc248)
                    }) : (!cir.bool) -> !cir.bool loc(#loc248)
                    cir.if %62 {
                      cir.break loc(#loc252)
                    } loc(#loc468)
                  } loc(#loc465)
                  %49 = cir.const #cir.int<0> : !s8i loc(#loc253)
                  %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                  %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc255)
                  %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc255)
                  cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc469)
                  %53 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc256)
                  %54 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc257)
                  %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
                  %56 = cir.const #cir.int<0> : !s32i loc(#loc259)
                  %57 = cir.call @__isoc23_strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc256)
                  cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc470)
                } loc(#loc447)
                cir.yield loc(#loc193)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc262)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc262)
                cir.condition(%13) loc(#loc262)
              } loc(#loc446)
            } loc(#loc446)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc266)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc266)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc472)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc269)
              } loc(#loc473)
            } loc(#loc471)
          } loc(#loc441)
        } loc(#loc440)
        cir.yield loc(#loc176)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc271)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
        cir.yield loc(#loc437)
      } loc(#loc437)
    } loc(#loc437)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc274)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc476)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc276)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc277)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc477)
        cir.condition(%8) loc(#loc477)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc480)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc285)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc482)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc483)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc289)
                %12 = cir.const #cir.int<100> : !s32i loc(#loc290)
                %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc290)
                %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc484)
                %15 = cir.ternary(%14, true {
                  %16 = cir.const #true loc(#loc288)
                  cir.yield %16 : !cir.bool loc(#loc288)
                }, false {
                  %16 = cir.const #false loc(#loc288)
                  cir.yield %16 : !cir.bool loc(#loc288)
                }) : (!cir.bool) -> !cir.bool loc(#loc288)
                cir.yield %15 : !cir.bool loc(#loc288)
              }, false {
                %11 = cir.const #false loc(#loc288)
                cir.yield %11 : !cir.bool loc(#loc288)
              }) : (!cir.bool) -> !cir.bool loc(#loc288)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc294)
                %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc295)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc486)
                cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc487)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc299)
                %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc300)
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc301)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc301)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc299)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc302)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc303)
                %20 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
                cir.delete.array %20 : <!s8i> loc(#loc304)
              } else {
                %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc165)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc165)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc305)
              } loc(#loc485)
            } loc(#loc481)
          } loc(#loc479)
        } loc(#loc478)
        cir.yield loc(#loc273)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc306)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc307)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc488)
        cir.yield loc(#loc475)
      } loc(#loc475)
    } loc(#loc475)
    cir.return loc(#loc167)
  } loc(#loc432)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc490)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc491)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc492)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc315)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc315)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc493)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc319)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc495)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc322)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc496)
        cir.condition(%8) loc(#loc496)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc324)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc324)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc498)
        } loc(#loc497)
        cir.yield loc(#loc318)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc327)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc499)
        cir.yield loc(#loc494)
      } loc(#loc494)
    } loc(#loc494)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc330)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc501)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc332)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc333)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc502)
        cir.condition(%8) loc(#loc502)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc505)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc341)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc507)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc508)
              cir.if %9 {
                %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc347)
                %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc348)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc510)
                cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc511)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc352)
                %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc354)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc354)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc352)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc355)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc356)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
                cir.delete.array %19 : <!s8i> loc(#loc357)
              } else {
                %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc358)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc358)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc359)
              } loc(#loc509)
            } loc(#loc506)
          } loc(#loc504)
        } loc(#loc503)
        cir.yield loc(#loc329)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc360)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc361)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc512)
        cir.yield loc(#loc500)
      } loc(#loc500)
    } loc(#loc500)
    cir.return loc(#loc309)
  } loc(#loc489)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17L7goodB2GEv() : () -> () loc(#loc364)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17L7goodG2BEv() : () -> () loc(#loc365)
    cir.return loc(#loc363)
  } loc(#loc513)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":86:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":128:34)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":134:27)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":52:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":138:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":54:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":54:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":54:11)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":55:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":55:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":57:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":57:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":116:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:16)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:20)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":59:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":60:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":115:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":65:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":65:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":66:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":66:32)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":67:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":67:36)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":68:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":68:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":69:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":104:21)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":70:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":103:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:40)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:49)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:62)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:33)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":79:73)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":80:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":83:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":80:21)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":80:38)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":81:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":82:21)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:24)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:25)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:34)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:37)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:51)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:17)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":84:52)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":85:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":85:17)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":86:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":86:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":86:63)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":87:42)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":87:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":87:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":87:50)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":91:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:29)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:62)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:63)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:72)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:86)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:21)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":88:92)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":89:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":90:21)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:35)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:50)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:63)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:81)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:84)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:30)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":94:85)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":98:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:21)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:35)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:48)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:51)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":95:65)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":96:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":97:21)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":100:43)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":100:29)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":100:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:24)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:32)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:45)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:51)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:17)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":102:52)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":104:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":105:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":108:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":105:17)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":105:34)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":106:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":107:30)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":107:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:24)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":58:23)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":137:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:16)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":118:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":119:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":136:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":120:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":120:20)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":124:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":135:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":124:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":124:24)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":124:43)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":125:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":131:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":133:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":126:37)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":52:6)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":126:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":126:41)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":126:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":128:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":128:24)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":129:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":129:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":130:27)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":134:17)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:24)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":117:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":227:27)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":145:1)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":231:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":147:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":147:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":147:11)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":148:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":148:12)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":150:12)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":150:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":209:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:16)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:20)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":152:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":153:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":208:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":158:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":158:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":159:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":159:32)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":160:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":160:36)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":161:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":161:45)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":162:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":197:21)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":163:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":196:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:40)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:49)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:62)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:33)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:17)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":172:73)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":173:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":176:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":173:21)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":173:38)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":174:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":175:21)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:24)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:25)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:34)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:37)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:51)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:17)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":177:52)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":178:38)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":178:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":179:53)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":179:43)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":179:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":179:63)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":180:42)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":180:36)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":180:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":180:50)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":184:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:29)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:62)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:63)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:72)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:86)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:21)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":181:92)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":182:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":183:21)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:35)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:50)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:63)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:81)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:84)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:30)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":187:85)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:17)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":191:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:21)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:35)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:48)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:51)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":188:65)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":189:17)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":190:21)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":193:43)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":193:29)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":193:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:24)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:32)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:45)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:51)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:17)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":195:52)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":197:20)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":198:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":201:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":198:17)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":198:34)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":199:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":200:30)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":200:17)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:24)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":151:23)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:5)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":230:5)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:9)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:16)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:20)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":211:5)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":212:9)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":229:9)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":213:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":213:20)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":228:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:24)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:43)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:45)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:48)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":217:55)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":218:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":224:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":226:13)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":219:37)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":145:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":219:28)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":219:41)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":219:17)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":221:17)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":221:24)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":221:34)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":222:27)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":222:17)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":223:27)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":227:17)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:24)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":210:23)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":234:1)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":266:1)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":236:5)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":236:9)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":236:11)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":237:5)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":237:12)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":239:12)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":239:5)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:5)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":244:5)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:16)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:20)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":241:5)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":243:16)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":243:9)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:24)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":240:23)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:5)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":265:5)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:13)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:9)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:16)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:20)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":246:5)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":247:9)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":264:9)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":248:13)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":248:20)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":252:13)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":263:13)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":252:17)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":252:24)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":252:43)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":253:13)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":259:13)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":261:13)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":254:37)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":234:13)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":254:28)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":254:41)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":254:17)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":256:17)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":256:24)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":256:34)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":257:27)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":257:17)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":258:27)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":262:27)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":262:17)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:24)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":245:23)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":268:1)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":272:1)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":270:5)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_17.cpp":271:5)
#loc366 = loc(fused[#loc1, #loc2])
#loc367 = loc(fused[#loc3, #loc4])
#loc368 = loc(fused[#loc6, #loc7])
#loc369 = loc(fused[#loc8, #loc9])
#loc370 = loc(fused[#loc10, #loc11])
#loc371 = loc(fused[#loc12, #loc13])
#loc372 = loc(fused[#loc14, #loc15])
#loc373 = loc(fused[#loc16, #loc17])
#loc374 = loc(fused[#loc18, #loc19])
#loc375 = loc(fused[#loc21, #loc22])
#loc376 = loc(fused[#loc24, #loc25])
#loc377 = loc(fused[#loc26, #loc27])
#loc378 = loc(fused[#loc26, #loc28])
#loc379 = loc(fused[#loc29, #loc30])
#loc380 = loc(fused[#loc32, #loc31])
#loc381 = loc(fused[#loc33, #loc34])
#loc382 = loc(fused[#loc36, #loc35])
#loc383 = loc(fused[#loc37, #loc38])
#loc384 = loc(fused[#loc39, #loc34])
#loc385 = loc(fused[#loc40, #loc41])
#loc386 = loc(fused[#loc42, #loc43])
#loc387 = loc(fused[#loc44, #loc45])
#loc388 = loc(fused[#loc46, #loc47])
#loc389 = loc(fused[#loc48, #loc49])
#loc390 = loc(fused[#loc50, #loc51])
#loc391 = loc(fused[#loc52, #loc53])
#loc392 = loc(fused[#loc58, #loc59])
#loc393 = loc(fused[#loc60, #loc61])
#loc394 = loc(fused[#loc62, #loc63])
#loc395 = loc(fused[#loc64, #loc61])
#loc396 = loc(fused[#loc66, #loc67])
#loc397 = loc(fused[#loc69, #loc70])
#loc398 = loc(fused[#loc71, #loc72])
#loc399 = loc(fused[#loc75, #loc73])
#loc400 = loc(fused[#loc79, #loc80])
#loc401 = loc(fused[#loc84, #loc85])
#loc402 = loc(fused[#loc86, #loc87])
#loc403 = loc(fused[#loc89, #loc90])
#loc404 = loc(fused[#loc91, #loc92])
#loc405 = loc(fused[#loc93, #loc94])
#loc406 = loc(fused[#loc95, #loc87])
#loc407 = loc(fused[#loc99, #loc100])
#loc408 = loc(fused[#loc103, #loc104])
#loc409 = loc(fused[#loc105, #loc106])
#loc410 = loc(fused[#loc107, #loc108])
#loc411 = loc(fused[#loc110, #loc111])
#loc412 = loc(fused[#loc112, #loc106])
#loc413 = loc(fused[#loc116, #loc114])
#loc414 = loc(fused[#loc121, #loc122])
#loc415 = loc(fused[#loc124, #loc125])
#loc416 = loc(fused[#loc126, #loc127])
#loc417 = loc(fused[#loc128, #loc125])
#loc418 = loc(fused[#loc132, #loc131])
#loc419 = loc(fused[#loc133, #loc134])
#loc420 = loc(fused[#loc136, #loc135])
#loc421 = loc(fused[#loc137, #loc138])
#loc422 = loc(fused[#loc139, #loc134])
#loc423 = loc(fused[#loc140, #loc141])
#loc424 = loc(fused[#loc142, #loc143])
#loc425 = loc(fused[#loc144, #loc145])
#loc426 = loc(fused[#loc147, #loc148])
#loc427 = loc(fused[#loc146, #loc148])
#loc428 = loc(fused[#loc149, #loc150, #loc151, #loc145])
#loc429 = loc(fused[#loc154, #loc155])
#loc430 = loc(fused[#loc156, #loc155])
#loc431 = loc(fused[#loc164, #loc163])
#loc432 = loc(fused[#loc166, #loc167])
#loc433 = loc(fused[#loc168, #loc169])
#loc434 = loc(fused[#loc168, #loc170])
#loc435 = loc(fused[#loc171, #loc172])
#loc436 = loc(fused[#loc174, #loc173])
#loc437 = loc(fused[#loc175, #loc176])
#loc438 = loc(fused[#loc178, #loc177])
#loc439 = loc(fused[#loc179, #loc180])
#loc440 = loc(fused[#loc181, #loc176])
#loc441 = loc(fused[#loc182, #loc183])
#loc442 = loc(fused[#loc184, #loc185])
#loc443 = loc(fused[#loc186, #loc187])
#loc444 = loc(fused[#loc188, #loc189])
#loc445 = loc(fused[#loc190, #loc191])
#loc446 = loc(fused[#loc192, #loc193])
#loc447 = loc(fused[#loc194, #loc195])
#loc448 = loc(fused[#loc200, #loc201])
#loc449 = loc(fused[#loc202, #loc203])
#loc450 = loc(fused[#loc204, #loc205])
#loc451 = loc(fused[#loc206, #loc203])
#loc452 = loc(fused[#loc208, #loc209])
#loc453 = loc(fused[#loc211, #loc212])
#loc454 = loc(fused[#loc213, #loc214])
#loc455 = loc(fused[#loc216, #loc215])
#loc456 = loc(fused[#loc219, #loc220])
#loc457 = loc(fused[#loc223, #loc224])
#loc458 = loc(fused[#loc225, #loc226])
#loc459 = loc(fused[#loc228, #loc229])
#loc460 = loc(fused[#loc230, #loc231])
#loc461 = loc(fused[#loc232, #loc233])
#loc462 = loc(fused[#loc234, #loc226])
#loc463 = loc(fused[#loc238, #loc239])
#loc464 = loc(fused[#loc242, #loc243])
#loc465 = loc(fused[#loc244, #loc245])
#loc466 = loc(fused[#loc246, #loc247])
#loc467 = loc(fused[#loc249, #loc250])
#loc468 = loc(fused[#loc251, #loc245])
#loc469 = loc(fused[#loc255, #loc253])
#loc470 = loc(fused[#loc260, #loc261])
#loc471 = loc(fused[#loc263, #loc264])
#loc472 = loc(fused[#loc265, #loc266])
#loc473 = loc(fused[#loc267, #loc264])
#loc474 = loc(fused[#loc271, #loc270])
#loc475 = loc(fused[#loc272, #loc273])
#loc476 = loc(fused[#loc275, #loc274])
#loc477 = loc(fused[#loc276, #loc277])
#loc478 = loc(fused[#loc278, #loc273])
#loc479 = loc(fused[#loc279, #loc280])
#loc480 = loc(fused[#loc281, #loc282])
#loc481 = loc(fused[#loc283, #loc284])
#loc482 = loc(fused[#loc286, #loc287])
#loc483 = loc(fused[#loc285, #loc287])
#loc484 = loc(fused[#loc289, #loc290])
#loc485 = loc(fused[#loc291, #loc292, #loc293, #loc284])
#loc486 = loc(fused[#loc296, #loc297])
#loc487 = loc(fused[#loc298, #loc297])
#loc488 = loc(fused[#loc307, #loc306])
#loc489 = loc(fused[#loc308, #loc309])
#loc490 = loc(fused[#loc310, #loc311])
#loc491 = loc(fused[#loc310, #loc312])
#loc492 = loc(fused[#loc313, #loc314])
#loc493 = loc(fused[#loc316, #loc315])
#loc494 = loc(fused[#loc317, #loc318])
#loc495 = loc(fused[#loc320, #loc319])
#loc496 = loc(fused[#loc321, #loc322])
#loc497 = loc(fused[#loc323, #loc318])
#loc498 = loc(fused[#loc325, #loc324])
#loc499 = loc(fused[#loc327, #loc326])
#loc500 = loc(fused[#loc328, #loc329])
#loc501 = loc(fused[#loc331, #loc330])
#loc502 = loc(fused[#loc332, #loc333])
#loc503 = loc(fused[#loc334, #loc329])
#loc504 = loc(fused[#loc335, #loc336])
#loc505 = loc(fused[#loc337, #loc338])
#loc506 = loc(fused[#loc339, #loc340])
#loc507 = loc(fused[#loc342, #loc343])
#loc508 = loc(fused[#loc341, #loc343])
#loc509 = loc(fused[#loc344, #loc345, #loc346, #loc340])
#loc510 = loc(fused[#loc349, #loc350])
#loc511 = loc(fused[#loc351, #loc350])
#loc512 = loc(fused[#loc361, #loc360])
#loc513 = loc(fused[#loc362, #loc363])
