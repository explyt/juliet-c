!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc177)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_07_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc177)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc186)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc189)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc28)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc29)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc190)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc191)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc39)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
            } loc(#loc195)
          } loc(#loc193)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc44)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc46)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc46)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc196)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc197)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
            cir.if %30 {
              %31 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc57)
              %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc14)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc14)
              %35 = cir.call @strcpy(%32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
              %36 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %37 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc61)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
              cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
            } loc(#loc202)
          } loc(#loc200)
        } loc(#loc188)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc18)
  } loc(#loc184)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc205)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc177)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc75)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc208)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc211)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc212)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc87)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc87)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc213)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc214)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc217)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc95)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %37 = cir.unary(minus, %36) nsw : !s32i, !s32i loc(#loc97)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
            } loc(#loc218)
          } loc(#loc216)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc98)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc100)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc100)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc102)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc103)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc105)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc105)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc219)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc220)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc118)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc120)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc120)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc122)
            } loc(#loc225)
          } loc(#loc223)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc123)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc71)
  } loc(#loc206)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc177)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc130)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc229)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc232)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc233)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc138)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc139)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc139)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc234)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc235)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc238)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc148)
              %37 = cir.unary(minus, %36) nsw : !s32i, !s32i loc(#loc149)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
            } loc(#loc239)
          } loc(#loc237)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc152)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc152)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc155)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc157)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc157)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc240)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc241)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc170)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc172)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc172)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc174)
            } loc(#loc246)
          } loc(#loc244)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc175)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
        } loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc126)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:26)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":683:1)
#loc13 = loc("/usr/include/stdlib.h":684:14)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:30)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":29:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":50:1)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":49:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:8)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:20)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":32:5)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":33:9)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":48:9)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:13)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:58)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:35)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:42)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:46)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:57)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:13)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:41)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:17)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:25)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:31)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:32)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:38)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:37)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:20)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":38:23)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":38:13)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:28)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:36)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:43)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:51)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:62)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:42)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:63)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":47:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:17)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:25)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":42:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:24)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":45:27)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":45:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":46:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":46:22)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":115:1)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":119:1)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":117:5)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":117:11)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":118:5)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":118:11)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":62:19)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":57:1)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":86:1)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:5)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":85:5)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:8)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:20)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":60:5)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":63:5)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":65:5)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":62:9)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":66:9)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":84:9)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:13)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:58)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":69:13)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":69:20)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:35)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:42)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:46)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:57)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:13)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:41)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:17)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:25)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:31)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:32)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:38)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:37)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:13)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:20)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:26)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":72:23)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":72:13)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:31)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:39)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:46)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:54)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:65)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:45)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:66)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:13)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":82:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:17)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:28)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":77:13)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":78:24)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":78:17)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:17)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:24)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:30)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":81:27)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":81:17)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":83:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":83:18)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":89:1)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":113:1)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:5)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":112:5)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:8)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:20)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":92:5)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":93:9)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":111:9)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:13)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:58)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":96:13)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":96:20)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:35)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:42)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:46)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:57)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:13)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:41)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:17)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:25)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:31)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:32)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:38)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:37)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:13)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:20)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:26)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":99:23)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":99:13)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:31)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:39)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:46)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:54)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:65)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:45)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:66)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:13)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:13)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":109:13)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:17)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:28)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":104:13)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":105:24)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":105:17)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:17)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:24)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:30)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":108:27)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":108:17)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":110:13)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":110:18)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc10, #loc11])
#loc182 = loc(fused[#loc12, #loc13])
#loc183 = loc(fused[#loc15, #loc16])
#loc184 = loc(fused[#loc17, #loc18])
#loc185 = loc(fused[#loc19, #loc20])
#loc186 = loc(fused[#loc21, #loc22])
#loc187 = loc(fused[#loc23, #loc20])
#loc188 = loc(fused[#loc24, #loc25])
#loc189 = loc(fused[#loc26, #loc27])
#loc190 = loc(fused[#loc30, #loc31])
#loc191 = loc(fused[#loc29, #loc31])
#loc192 = loc(fused[#loc28, #loc27])
#loc193 = loc(fused[#loc32, #loc33])
#loc194 = loc(fused[#loc34, #loc35])
#loc195 = loc(fused[#loc36, #loc33])
#loc196 = loc(fused[#loc47, #loc48])
#loc197 = loc(fused[#loc49, #loc48])
#loc198 = loc(fused[#loc44, #loc50])
#loc199 = loc(fused[#loc51, #loc50])
#loc200 = loc(fused[#loc52, #loc53])
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc56, #loc53])
#loc203 = loc(fused[#loc63, #loc64])
#loc204 = loc(fused[#loc65, #loc66])
#loc205 = loc(fused[#loc67, #loc68])
#loc206 = loc(fused[#loc70, #loc71])
#loc207 = loc(fused[#loc72, #loc73])
#loc208 = loc(fused[#loc74, #loc75])
#loc209 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc210 = loc(fused[#loc80, #loc81])
#loc211 = loc(fused[#loc82, #loc83])
#loc212 = loc(fused[#loc84, #loc85])
#loc213 = loc(fused[#loc88, #loc89])
#loc214 = loc(fused[#loc87, #loc89])
#loc215 = loc(fused[#loc86, #loc83])
#loc216 = loc(fused[#loc90, #loc91])
#loc217 = loc(fused[#loc92, #loc93])
#loc218 = loc(fused[#loc94, #loc91])
#loc219 = loc(fused[#loc106, #loc107])
#loc220 = loc(fused[#loc108, #loc107])
#loc221 = loc(fused[#loc103, #loc109])
#loc222 = loc(fused[#loc110, #loc109])
#loc223 = loc(fused[#loc111, #loc112])
#loc224 = loc(fused[#loc113, #loc114])
#loc225 = loc(fused[#loc115, #loc112])
#loc226 = loc(fused[#loc117, #loc116])
#loc227 = loc(fused[#loc125, #loc126])
#loc228 = loc(fused[#loc127, #loc128])
#loc229 = loc(fused[#loc129, #loc130])
#loc230 = loc(fused[#loc131, #loc128])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc136, #loc137])
#loc234 = loc(fused[#loc140, #loc141])
#loc235 = loc(fused[#loc139, #loc141])
#loc236 = loc(fused[#loc138, #loc135])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc144, #loc145])
#loc239 = loc(fused[#loc146, #loc143])
#loc240 = loc(fused[#loc158, #loc159])
#loc241 = loc(fused[#loc160, #loc159])
#loc242 = loc(fused[#loc155, #loc161])
#loc243 = loc(fused[#loc162, #loc161])
#loc244 = loc(fused[#loc163, #loc164])
#loc245 = loc(fused[#loc165, #loc166])
#loc246 = loc(fused[#loc167, #loc164])
#loc247 = loc(fused[#loc169, #loc168])
