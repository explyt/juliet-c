!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:44)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc265)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc267)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc268)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc269)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc270)
  cir.func private @close(!s32i) -> !s32i loc(#loc271)
  cir.func private @printIntLine(!s32i) loc(#loc272)
  cir.func @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc275)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc276)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc277)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc278)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc279)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc281)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc35)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc36)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc25)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb2 loc(#loc284)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc284)
  ^bb3:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %12 ^bb4, ^bb27 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc285)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %14 = cir.const #cir.int<1> : !u32i loc(#loc46)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc46)
    %16 = cir.const #cir.int<6> : !u32i loc(#loc47)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc47)
    %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb6 loc(#loc287)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc54)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc289)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc56)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc52)
  ^bb9:  // pred: ^bb8
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc290)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc291)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc293)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc294)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc295)
    cir.br ^bb10 loc(#loc296)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc297)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc298)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc298)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc85)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc300)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc87)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc90)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc90)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc90)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc90)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc90)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc91)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc301)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc93)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb14 loc(#loc303)
  ^bb14:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc99)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %65 ^bb15, ^bb16 loc(#loc100)
  ^bb15:  // pred: ^bb14
    %66 = cir.const #true loc(#loc100)
    cir.br ^bb21(%66 : !cir.bool) loc(#loc100)
  ^bb16:  // pred: ^bb14
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %69 ^bb17, ^bb18 loc(#loc100)
  ^bb17:  // pred: ^bb16
    %70 = cir.const #true loc(#loc100)
    cir.br ^bb19(%70 : !cir.bool) loc(#loc100)
  ^bb18:  // pred: ^bb16
    %71 = cir.const #false loc(#loc100)
    cir.br ^bb19(%71 : !cir.bool) loc(#loc100)
  ^bb19(%72: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc100)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%72 : !cir.bool) loc(#loc100)
  ^bb21(%73: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc100)
  ^bb22:  // pred: ^bb21
    cir.brcond %73 ^bb23, ^bb24 loc(#loc306)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc104)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc97)
  ^bb25:  // pred: ^bb24
    %74 = cir.const #cir.int<0> : !s8i loc(#loc105)
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %77 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %74, %77 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %79 = cir.call @atoi(%78) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
    cir.store %79, %6 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb26 loc(#loc44)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc41)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc41)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc309)
  ^bb29:  // pred: ^bb28
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc115)
    %83 = cir.cmp(ne, %80, %82) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc311)
  ^bb30:  // pred: ^bb29
    %84 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %85 = cir.call @close(%84) : (!s32i) -> !s32i loc(#loc118)
    cir.br ^bb31 loc(#loc113)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc39)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc312)
  ^bb34:  // pred: ^bb33
    %86 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %87 = cir.load %86 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %87, %4 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb35 loc(#loc313)
  ^bb35:  // pred: ^bb34
    %88 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %89 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %90 = cir.binop(add, %88, %89) nsw : !s32i loc(#loc123)
    cir.store %90, %5 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %91 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%91) : (!s32i) -> () loc(#loc125)
    cir.br ^bb36 loc(#loc122)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc120)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc19)
  } loc(#loc273)
  cir.func internal private @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc315)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc316)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc317)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc318)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc138)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb2 loc(#loc322)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc144)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc146)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc127)
  } loc(#loc314)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc323)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc149)
  cir.func internal private @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc326)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc327)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc328)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc329)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc330)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc331)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc332)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc168)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb1 loc(#loc334)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc157)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb2 loc(#loc335)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc335)
  ^bb3:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %12 ^bb4, ^bb27 loc(#loc174)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc336)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc177)
    %14 = cir.const #cir.int<1> : !u32i loc(#loc178)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc178)
    %16 = cir.const #cir.int<6> : !u32i loc(#loc179)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc179)
    %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc180)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb6 loc(#loc338)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc186)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc340)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc188)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc184)
  ^bb9:  // pred: ^bb8
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc341)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc342)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc343)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc196)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc196)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc344)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc198)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc198)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc199)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc345)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc202)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc202)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc203)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc346)
    cir.br ^bb10 loc(#loc347)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc348)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc349)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc349)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc213)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc214)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc351)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc216)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc207)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc218)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc219)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc219)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc219)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc219)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc219)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc219)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc219)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc220)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc352)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc222)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb14 loc(#loc354)
  ^bb14:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc228)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %65 ^bb15, ^bb16 loc(#loc229)
  ^bb15:  // pred: ^bb14
    %66 = cir.const #true loc(#loc229)
    cir.br ^bb21(%66 : !cir.bool) loc(#loc229)
  ^bb16:  // pred: ^bb14
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %69 ^bb17, ^bb18 loc(#loc229)
  ^bb17:  // pred: ^bb16
    %70 = cir.const #true loc(#loc229)
    cir.br ^bb19(%70 : !cir.bool) loc(#loc229)
  ^bb18:  // pred: ^bb16
    %71 = cir.const #false loc(#loc229)
    cir.br ^bb19(%71 : !cir.bool) loc(#loc229)
  ^bb19(%72: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc229)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%72 : !cir.bool) loc(#loc229)
  ^bb21(%73: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc229)
  ^bb22:  // pred: ^bb21
    cir.brcond %73 ^bb23, ^bb24 loc(#loc357)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc233)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc226)
  ^bb25:  // pred: ^bb24
    %74 = cir.const #cir.int<0> : !s8i loc(#loc234)
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
    %77 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc236)
    cir.store %74, %77 : !s8i, !cir.ptr<!s8i> loc(#loc358)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc237)
    %79 = cir.call @atoi(%78) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc238)
    cir.store %79, %6 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb26 loc(#loc176)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc173)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc173)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc360)
  ^bb29:  // pred: ^bb28
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc244)
    %83 = cir.cmp(ne, %80, %82) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %83 ^bb30, ^bb31 loc(#loc362)
  ^bb30:  // pred: ^bb29
    %84 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %85 = cir.call @close(%84) : (!s32i) -> !s32i loc(#loc247)
    cir.br ^bb31 loc(#loc242)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc242)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc171)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc363)
  ^bb34:  // pred: ^bb33
    %86 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
    %87 = cir.load %86 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.store %87, %4 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb35 loc(#loc364)
  ^bb35:  // pred: ^bb34
    %88 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %89 = cir.const #cir.int<2147483647> : !s32i loc(#loc253)
    %90 = cir.cmp(lt, %88, %89) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %90 ^bb36, ^bb37 loc(#loc366)
  ^bb36:  // pred: ^bb35
    %91 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %93 = cir.binop(add, %91, %92) nsw : !s32i loc(#loc257)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    %94 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.call @printIntLine(%94) : (!s32i) -> () loc(#loc259)
    cir.br ^bb38 loc(#loc255)
  ^bb37:  // pred: ^bb35
    %95 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc149)
    %96 = cir.cast(array_to_ptrdecay, %95 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%96) : (!cir.ptr<!s8i>) -> () loc(#loc260)
    cir.br ^bb38 loc(#loc251)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc251)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc249)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc151)
  } loc(#loc324)
  cir.func @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_33L7goodG2BEv() : () -> () loc(#loc263)
    cir.call @_ZN50CWE190_Integer_Overflow__int_connect_socket_add_33L7goodB2GEv() : () -> () loc(#loc264)
    cir.return loc(#loc262)
  } loc(#loc367)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":79:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":47:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":117:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":58:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":58:13)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":59:9)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":59:28)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":60:9)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":60:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":61:9)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":61:41)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":110:9)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":110:20)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":113:13)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":113:33)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":49:5)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":49:9)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":50:5)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":50:20)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":52:12)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":52:5)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":53:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":108:5)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":62:9)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":97:17)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":97:16)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":63:9)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":96:9)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:36)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:45)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:58)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:29)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:13)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":72:69)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":73:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":76:13)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":73:17)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":73:34)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":74:13)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":75:17)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:20)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:21)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:30)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:33)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:47)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:13)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":77:48)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":78:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":78:13)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":79:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":79:13)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":79:59)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":80:38)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":80:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":80:13)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":80:46)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:13)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":84:13)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:25)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:58)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:59)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:68)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:82)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:17)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":81:88)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":82:13)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":83:17)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:31)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:46)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:59)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:77)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:80)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:26)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:13)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":87:81)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:13)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":91:13)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:17)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:31)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:47)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":88:61)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":89:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":90:17)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":93:39)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":93:25)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":93:13)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":95:25)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":95:20)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":95:13)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":95:36)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":98:9)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":101:9)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":98:13)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":98:30)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":99:9)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":100:26)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":100:13)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":109:5)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":116:5)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":111:9)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":115:9)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":113:26)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":114:26)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":114:13)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":124:1)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":140:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":133:9)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":133:20)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":136:13)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":136:33)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":126:5)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":126:9)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":127:5)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":127:20)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":129:12)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":129:5)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":131:12)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":131:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":132:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":139:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":134:9)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":138:9)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":136:26)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":137:26)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":137:13)
#loc147 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc148 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":215:23)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":143:1)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":218:1)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":154:9)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":154:13)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":155:9)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":155:28)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":156:9)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":156:32)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":157:9)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":157:41)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":206:9)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":206:20)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":210:13)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":210:33)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":145:5)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":145:9)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":146:5)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":146:20)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":148:12)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":148:5)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":149:5)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":204:5)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":158:9)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":193:17)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":193:16)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":159:9)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":192:9)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:36)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:45)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:58)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:29)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:13)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":168:69)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":169:13)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":172:13)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":169:17)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":169:34)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":170:13)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":171:17)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:20)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:21)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:30)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:33)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:47)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:13)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":173:48)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":174:34)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":174:13)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":175:49)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":175:39)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":175:13)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":175:59)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":176:38)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":176:32)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":176:13)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":176:46)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":180:13)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:25)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:58)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:59)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:68)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:82)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:17)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":177:88)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":178:13)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":179:17)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:31)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:46)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:59)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:77)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:80)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:26)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:13)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":183:81)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:13)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":187:13)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:17)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:31)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:47)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":184:61)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":185:13)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":186:17)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":189:39)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":189:25)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":189:13)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":191:25)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":191:20)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":191:13)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":191:36)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":194:9)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":197:9)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":194:13)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":194:30)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":195:9)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":196:26)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":196:13)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":205:5)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":217:5)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":208:9)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":216:9)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":208:13)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":208:20)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":209:9)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":212:9)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":214:9)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":210:26)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":211:26)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":211:13)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":215:13)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":220:1)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":224:1)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":222:5)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_add_33.cpp":223:5)
#loc265 = loc(fused[#loc1, #loc2])
#loc266 = loc(fused[#loc3, #loc4])
#loc267 = loc(fused[#loc6, #loc7])
#loc268 = loc(fused[#loc8, #loc9])
#loc269 = loc(fused[#loc10, #loc11])
#loc270 = loc(fused[#loc12, #loc13])
#loc271 = loc(fused[#loc14, #loc15])
#loc272 = loc(fused[#loc16, #loc17])
#loc273 = loc(fused[#loc18, #loc19])
#loc274 = loc(fused[#loc20, #loc21])
#loc275 = loc(fused[#loc22, #loc23])
#loc276 = loc(fused[#loc24, #loc25])
#loc277 = loc(fused[#loc26, #loc27])
#loc278 = loc(fused[#loc28, #loc29])
#loc279 = loc(fused[#loc30, #loc31])
#loc280 = loc(fused[#loc32, #loc33])
#loc281 = loc(fused[#loc34, #loc35])
#loc282 = loc(fused[#loc37, #loc36])
#loc283 = loc(fused[#loc38, #loc39])
#loc284 = loc(fused[#loc40, #loc41])
#loc285 = loc(fused[#loc43, #loc44])
#loc286 = loc(fused[#loc49, #loc50])
#loc287 = loc(fused[#loc51, #loc52])
#loc288 = loc(fused[#loc53, #loc54])
#loc289 = loc(fused[#loc55, #loc52])
#loc290 = loc(fused[#loc57, #loc58])
#loc291 = loc(fused[#loc60, #loc61])
#loc292 = loc(fused[#loc62, #loc63])
#loc293 = loc(fused[#loc66, #loc64])
#loc294 = loc(fused[#loc70, #loc71])
#loc295 = loc(fused[#loc75, #loc76])
#loc296 = loc(fused[#loc77, #loc78])
#loc297 = loc(fused[#loc80, #loc81])
#loc298 = loc(fused[#loc82, #loc83])
#loc299 = loc(fused[#loc84, #loc85])
#loc300 = loc(fused[#loc86, #loc78])
#loc301 = loc(fused[#loc90, #loc91])
#loc302 = loc(fused[#loc94, #loc95])
#loc303 = loc(fused[#loc96, #loc97])
#loc304 = loc(fused[#loc98, #loc99])
#loc305 = loc(fused[#loc101, #loc102])
#loc306 = loc(fused[#loc103, #loc97])
#loc307 = loc(fused[#loc107, #loc105])
#loc308 = loc(fused[#loc110, #loc111])
#loc309 = loc(fused[#loc112, #loc113])
#loc310 = loc(fused[#loc114, #loc115])
#loc311 = loc(fused[#loc116, #loc113])
#loc312 = loc(fused[#loc119, #loc120])
#loc313 = loc(fused[#loc121, #loc122])
#loc314 = loc(fused[#loc126, #loc127])
#loc315 = loc(fused[#loc128, #loc129])
#loc316 = loc(fused[#loc130, #loc131])
#loc317 = loc(fused[#loc132, #loc133])
#loc318 = loc(fused[#loc134, #loc135])
#loc319 = loc(fused[#loc137, #loc136])
#loc320 = loc(fused[#loc139, #loc138])
#loc321 = loc(fused[#loc140, #loc141])
#loc322 = loc(fused[#loc142, #loc143])
#loc323 = loc(fused[#loc147, #loc148])
#loc324 = loc(fused[#loc150, #loc151])
#loc325 = loc(fused[#loc152, #loc153])
#loc326 = loc(fused[#loc154, #loc155])
#loc327 = loc(fused[#loc156, #loc157])
#loc328 = loc(fused[#loc158, #loc159])
#loc329 = loc(fused[#loc160, #loc161])
#loc330 = loc(fused[#loc162, #loc163])
#loc331 = loc(fused[#loc164, #loc165])
#loc332 = loc(fused[#loc166, #loc167])
#loc333 = loc(fused[#loc169, #loc168])
#loc334 = loc(fused[#loc170, #loc171])
#loc335 = loc(fused[#loc172, #loc173])
#loc336 = loc(fused[#loc175, #loc176])
#loc337 = loc(fused[#loc181, #loc182])
#loc338 = loc(fused[#loc183, #loc184])
#loc339 = loc(fused[#loc185, #loc186])
#loc340 = loc(fused[#loc187, #loc184])
#loc341 = loc(fused[#loc189, #loc190])
#loc342 = loc(fused[#loc192, #loc193])
#loc343 = loc(fused[#loc194, #loc195])
#loc344 = loc(fused[#loc197, #loc196])
#loc345 = loc(fused[#loc200, #loc201])
#loc346 = loc(fused[#loc204, #loc205])
#loc347 = loc(fused[#loc206, #loc207])
#loc348 = loc(fused[#loc209, #loc210])
#loc349 = loc(fused[#loc211, #loc212])
#loc350 = loc(fused[#loc213, #loc214])
#loc351 = loc(fused[#loc215, #loc207])
#loc352 = loc(fused[#loc219, #loc220])
#loc353 = loc(fused[#loc223, #loc224])
#loc354 = loc(fused[#loc225, #loc226])
#loc355 = loc(fused[#loc227, #loc228])
#loc356 = loc(fused[#loc230, #loc231])
#loc357 = loc(fused[#loc232, #loc226])
#loc358 = loc(fused[#loc236, #loc234])
#loc359 = loc(fused[#loc239, #loc240])
#loc360 = loc(fused[#loc241, #loc242])
#loc361 = loc(fused[#loc243, #loc244])
#loc362 = loc(fused[#loc245, #loc242])
#loc363 = loc(fused[#loc248, #loc249])
#loc364 = loc(fused[#loc250, #loc251])
#loc365 = loc(fused[#loc252, #loc253])
#loc366 = loc(fused[#loc254, #loc255, #loc256, #loc251])
#loc367 = loc(fused[#loc261, #loc262])
