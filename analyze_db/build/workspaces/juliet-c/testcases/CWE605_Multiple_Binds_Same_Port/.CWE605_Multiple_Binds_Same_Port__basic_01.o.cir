!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc341)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc344)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc346)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc347)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc348)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc349)
  cir.func private @close(!s32i) -> !s32i loc(#loc350)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc351)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc354)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc355)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc356)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc357)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc358)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc359)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc360)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc361)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc362)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc354)
      cir.store %9, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc354)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc36)
      cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc358)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc38)
      cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc359)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
      cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc360)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc42)
      cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc361)
      %18 = cir.const #cir.int<4> : !u64i loc(#loc363)
      %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc363)
      cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc362)
      cir.scope {
        cir.do {
          cir.scope {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc52)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc54)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
            cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc366)
            cir.scope {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc61)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc368)
              cir.if %76 {
                cir.break loc(#loc63)
              } loc(#loc369)
            } loc(#loc367)
            cir.scope {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc67)
              %75 = cir.const #cir.int<2> : !s32i loc(#loc68)
              %76 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc371)
              %77 = cir.cast(bitcast, %76 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc372)
              %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %79 = cir.cast(integral, %78 : !s32i), !u32i loc(#loc72)
              %80 = cir.call @setsockopt(%73, %74, %75, %77, %79) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc73)
              %81 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %82 = cir.cmp(ne, %80, %81) : !s32i, !cir.bool loc(#loc373)
              cir.if %82 {
                cir.break loc(#loc76)
              } loc(#loc374)
            } loc(#loc370)
            %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc375)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc79)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc376)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc377)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc84)
            %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc378)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc87)
            %33 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc379)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc91)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc91)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc92)
            %38 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc380)
            cir.scope {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %74 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc382)
              %75 = cir.const #cir.int<16> : !u64i loc(#loc383)
              %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc383)
              %77 = cir.call @bind(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc103)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc104)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc384)
              cir.if %80 {
                cir.break loc(#loc106)
              } loc(#loc385)
            } loc(#loc381)
            cir.scope {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %74 = cir.const #cir.int<5> : !s32i loc(#loc110)
              %75 = cir.call @listen(%73, %74) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc111)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc112)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc387)
              cir.if %78 {
                cir.break loc(#loc114)
              } loc(#loc388)
            } loc(#loc386)
            %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc116)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc117)
            %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc118)
            cir.store %42, %5 : !s32i, !cir.ptr<!s32i> loc(#loc389)
            cir.scope {
              %73 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc124)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc391)
              cir.if %76 {
                cir.break loc(#loc126)
              } loc(#loc392)
            } loc(#loc390)
            %43 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
            %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc129)
            %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc130)
            %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc393)
            %48 = cir.const #cir.int<100> : !s32i loc(#loc131)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc131)
            %50 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc394)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc133)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc395)
            %55 = cir.cast(integral, %54 : !u64i), !s32i loc(#loc395)
            %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc395)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc135)
            %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc135)
            cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc396)
            cir.scope {
              %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc141)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc141)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc398)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc142)
                cir.yield %78 : !cir.bool loc(#loc142)
              }, false {
                %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %79 = cir.const #cir.int<0> : !s32i loc(#loc144)
                %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc399)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc142)
                  cir.yield %82 : !cir.bool loc(#loc142)
                }, false {
                  %82 = cir.const #false loc(#loc142)
                  cir.yield %82 : !cir.bool loc(#loc142)
                }) : (!cir.bool) -> !cir.bool loc(#loc142)
                cir.yield %81 : !cir.bool loc(#loc142)
              }) : (!cir.bool) -> !cir.bool loc(#loc142)
              cir.if %77 {
                cir.break loc(#loc146)
              } loc(#loc400)
            } loc(#loc397)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc147)
            %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc147)
            %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
            %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc149)
            cir.store %61, %64 : !s8i, !cir.ptr<!s8i> loc(#loc401)
            %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc150)
            %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
            %67 = cir.const #cir.int<13> : !s32i loc(#loc152)
            %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc150)
            cir.store %68, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc402)
            cir.scope {
              %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s32i loc(#loc159)
                %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc159)
                %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc405)
              } loc(#loc404)
            } loc(#loc403)
            %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc162)
            %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
            %71 = cir.const #cir.int<10> : !s32i loc(#loc164)
            %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc162)
            cir.store %72, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc406)
            cir.scope {
              %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc169)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s32i loc(#loc171)
                %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc171)
                %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc409)
              } loc(#loc408)
            } loc(#loc407)
          } loc(#loc365)
          cir.yield loc(#loc49)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc174)
          cir.condition(%22) loc(#loc174)
        } loc(#loc364)
      } loc(#loc364)
      cir.scope {
        %21 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc178)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc411)
        cir.if %24 {
          %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc181)
        } loc(#loc412)
      } loc(#loc410)
      cir.scope {
        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc185)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc185)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc414)
        cir.if %24 {
          %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc188)
        } loc(#loc415)
      } loc(#loc413)
      %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc189)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    } loc(#loc353)
    cir.return loc(#loc24)
  } loc(#loc352)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc417)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc193)
    cir.return loc(#loc192)
  } loc(#loc416)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc420)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc421)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc422)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc423)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc424)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc425)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc426)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc420)
      cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc420)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc208)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc208)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc424)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc210)
      cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc425)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc213)
      %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc214)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc213)
      cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc426)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc219)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc220)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc221)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc222)
            cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc429)
            cir.scope {
              %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc227)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc228)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc228)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc431)
              cir.if %71 {
                cir.break loc(#loc230)
              } loc(#loc432)
            } loc(#loc430)
            %20 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc433)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc233)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc434)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc435)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc238)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc238)
            %25 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc436)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc240)
            %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc240)
            %28 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc437)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc242)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc242)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc243)
            %33 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc438)
            cir.scope {
              %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %69 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc440)
              %70 = cir.const #cir.int<16> : !u64i loc(#loc441)
              %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc441)
              %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc253)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc254)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc254)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc442)
              cir.if %75 {
                cir.break loc(#loc256)
              } loc(#loc443)
            } loc(#loc439)
            cir.scope {
              %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %69 = cir.const #cir.int<5> : !s32i loc(#loc260)
              %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc262)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc262)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc445)
              cir.if %73 {
                cir.break loc(#loc264)
              } loc(#loc446)
            } loc(#loc444)
            %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc266)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc267)
            %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc268)
            cir.store %37, %5 : !s32i, !cir.ptr<!s32i> loc(#loc447)
            cir.scope {
              %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc273)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc274)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc274)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc449)
              cir.if %71 {
                cir.break loc(#loc276)
              } loc(#loc450)
            } loc(#loc448)
            %38 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc278)
            %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc279)
            %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc280)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc451)
            %43 = cir.const #cir.int<100> : !s32i loc(#loc281)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc281)
            %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc282)
            %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc452)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc283)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc283)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc453)
            %50 = cir.cast(integral, %49 : !u64i), !s32i loc(#loc453)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc453)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc284)
            %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc285)
            %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc285)
            cir.store %54, %1 : !s32i, !cir.ptr<!s32i> loc(#loc454)
            cir.scope {
              %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc290)
              %69 = cir.const #cir.int<1> : !s32i loc(#loc291)
              %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc291)
              %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc456)
              %72 = cir.ternary(%71, true {
                %73 = cir.const #true loc(#loc292)
                cir.yield %73 : !cir.bool loc(#loc292)
              }, false {
                %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                %74 = cir.const #cir.int<0> : !s32i loc(#loc294)
                %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc457)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc292)
                  cir.yield %77 : !cir.bool loc(#loc292)
                }, false {
                  %77 = cir.const #false loc(#loc292)
                  cir.yield %77 : !cir.bool loc(#loc292)
                }) : (!cir.bool) -> !cir.bool loc(#loc292)
                cir.yield %76 : !cir.bool loc(#loc292)
              }) : (!cir.bool) -> !cir.bool loc(#loc292)
              cir.if %72 {
                cir.break loc(#loc296)
              } loc(#loc458)
            } loc(#loc455)
            %55 = cir.const #cir.int<0> : !s32i loc(#loc297)
            %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc297)
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc298)
            %58 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc299)
            %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc299)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc459)
            %60 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc300)
            %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc301)
            %62 = cir.const #cir.int<13> : !s32i loc(#loc302)
            %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc300)
            cir.store %63, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc460)
            cir.scope {
              %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc307)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc307)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc309)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc309)
                %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc463)
              } loc(#loc462)
            } loc(#loc461)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc312)
            %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc313)
            %66 = cir.const #cir.int<10> : !s32i loc(#loc314)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc312)
            cir.store %67, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc464)
            cir.scope {
              %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc319)
              %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc319)
              cir.if %69 {
                %70 = cir.const #cir.int<0> : !s32i loc(#loc321)
                %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc321)
                %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc322)
                cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc467)
              } loc(#loc466)
            } loc(#loc465)
          } loc(#loc428)
          cir.yield loc(#loc216)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc324)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc324)
          cir.condition(%17) loc(#loc324)
        } loc(#loc427)
      } loc(#loc427)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc328)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc328)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc469)
        cir.if %19 {
          %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc331)
        } loc(#loc470)
      } loc(#loc468)
      cir.scope {
        %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc334)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc335)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc335)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc472)
        cir.if %19 {
          %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc338)
        } loc(#loc473)
      } loc(#loc471)
      %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc339)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc340)
    } loc(#loc419)
    cir.return loc(#loc196)
  } loc(#loc418)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":138:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":46:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":137:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":47:9)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":47:26)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":52:9)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":52:13)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":53:9)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":53:28)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":54:9)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":54:15)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":55:9)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":55:31)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":56:9)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":56:31)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":57:9)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":57:37)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":62:9)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":62:23)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":63:9)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":63:33)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":57:26)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":57:33)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":63:23)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":65:9)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":121:17)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":66:9)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":120:9)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:35)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:44)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:57)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:28)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:13)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":74:68)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":75:13)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":78:13)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":75:17)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":75:33)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":76:13)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":77:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:13)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":83:13)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:28)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:42)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:54)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:75)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:76)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:68)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:85)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:17)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":80:97)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":81:13)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":82:17)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:20)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:21)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:30)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:33)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:47)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:13)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":84:48)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":85:34)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":85:13)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":86:39)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":86:13)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":87:38)
#loc92 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":87:32)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":87:13)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":87:46)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:13)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":91:13)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:22)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:54)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:55)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:64)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:78)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:17)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":88:84)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":89:13)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":90:17)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":92:13)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":95:13)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":92:24)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":92:38)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":92:17)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":92:57)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":93:13)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":94:17)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:35)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:49)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:55)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:28)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:13)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":96:59)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":97:13)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":100:13)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":97:17)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":97:33)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":98:13)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":99:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:31)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:45)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:50)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:49)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:65)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:69)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:77)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:81)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:26)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:13)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":102:82)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:13)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":106:13)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:17)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:31)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:44)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:47)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":103:61)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":104:13)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":105:17)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":108:32)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":108:18)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":108:13)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":110:23)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":110:30)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":110:36)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":110:13)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":110:40)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":111:13)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":114:13)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":111:17)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":112:13)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":113:28)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":113:18)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":113:17)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":115:23)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":115:30)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":115:36)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":115:13)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":115:40)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":116:13)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":119:13)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":116:17)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":117:13)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":118:28)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":118:18)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":118:17)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":121:16)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":122:9)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":125:9)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":122:13)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":122:29)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":123:9)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":124:26)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":124:13)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":126:9)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":129:9)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":126:13)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":126:29)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":127:9)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":128:26)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":128:13)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":136:19)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":136:9)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":229:1)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":232:1)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":231:5)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":231:11)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":144:1)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":227:1)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":146:5)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":226:5)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":147:9)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":147:26)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":152:9)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":152:13)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":153:9)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":153:28)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":154:9)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":154:15)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":155:9)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":155:31)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":156:9)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":156:31)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":157:9)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":157:37)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":157:26)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":157:33)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":158:9)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":210:17)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":159:9)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":209:9)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:35)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:44)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:57)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:28)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:13)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":167:68)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":168:13)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":171:13)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":168:17)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":168:33)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":169:13)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":170:17)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:20)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:21)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:30)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:33)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:47)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:13)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":173:48)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":174:34)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":174:13)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":175:39)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":175:13)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":176:38)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":176:32)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":176:13)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":176:46)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:13)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":180:13)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:22)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:54)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:55)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:64)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:78)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:17)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":177:84)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":178:13)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":179:17)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":181:13)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":184:13)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":181:24)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":181:38)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":181:17)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":181:57)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":182:13)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":183:17)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:35)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:49)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:55)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:28)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:13)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":185:59)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":186:13)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":189:13)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":186:17)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":186:33)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":187:13)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":188:17)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:31)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:45)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:50)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:49)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:65)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:69)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:77)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:81)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:26)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:13)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":191:82)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:13)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":195:13)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:17)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:31)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:44)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:47)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":192:61)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":193:13)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":194:17)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":197:32)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":197:18)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":197:13)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":199:23)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":199:30)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":199:36)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":199:13)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":199:40)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":200:13)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":203:13)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":200:17)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":201:13)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":202:28)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":202:18)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":202:17)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":204:23)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":204:30)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":204:36)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":204:13)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":204:40)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":205:13)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":208:13)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":205:17)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":206:13)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":207:28)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":207:18)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":207:17)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":210:16)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":211:9)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":214:9)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":211:13)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":211:29)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":212:9)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":213:26)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":213:13)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":215:9)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":218:9)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":215:13)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":215:29)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":216:9)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":217:26)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":217:13)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":225:19)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_01.c":225:9)
#loc341 = loc(fused[#loc1, #loc2])
#loc342 = loc(fused[#loc3, #loc4])
#loc343 = loc(fused[#loc5, #loc6])
#loc344 = loc(fused[#loc7, #loc8])
#loc345 = loc(fused[#loc9, #loc10])
#loc346 = loc(fused[#loc11, #loc12])
#loc347 = loc(fused[#loc13, #loc14])
#loc348 = loc(fused[#loc15, #loc16])
#loc349 = loc(fused[#loc17, #loc18])
#loc350 = loc(fused[#loc19, #loc20])
#loc351 = loc(fused[#loc21, #loc22])
#loc352 = loc(fused[#loc23, #loc24])
#loc353 = loc(fused[#loc25, #loc26])
#loc354 = loc(fused[#loc27, #loc28])
#loc355 = loc(fused[#loc29, #loc30])
#loc356 = loc(fused[#loc31, #loc32])
#loc357 = loc(fused[#loc33, #loc34])
#loc358 = loc(fused[#loc35, #loc36])
#loc359 = loc(fused[#loc37, #loc38])
#loc360 = loc(fused[#loc39, #loc40])
#loc361 = loc(fused[#loc41, #loc42])
#loc362 = loc(fused[#loc43, #loc44])
#loc363 = loc(fused[#loc47, #loc44])
#loc364 = loc(fused[#loc48, #loc49])
#loc365 = loc(fused[#loc50, #loc51])
#loc366 = loc(fused[#loc56, #loc57])
#loc367 = loc(fused[#loc58, #loc59])
#loc368 = loc(fused[#loc60, #loc61])
#loc369 = loc(fused[#loc62, #loc59])
#loc370 = loc(fused[#loc64, #loc65])
#loc371 = loc(fused[#loc69, #loc70])
#loc372 = loc(fused[#loc71, #loc70])
#loc373 = loc(fused[#loc73, #loc74])
#loc374 = loc(fused[#loc75, #loc65])
#loc375 = loc(fused[#loc77, #loc78])
#loc376 = loc(fused[#loc80, #loc81])
#loc377 = loc(fused[#loc82, #loc83])
#loc378 = loc(fused[#loc86, #loc84])
#loc379 = loc(fused[#loc90, #loc87])
#loc380 = loc(fused[#loc94, #loc95])
#loc381 = loc(fused[#loc96, #loc97])
#loc382 = loc(fused[#loc99, #loc100])
#loc383 = loc(fused[#loc101, #loc102])
#loc384 = loc(fused[#loc103, #loc104])
#loc385 = loc(fused[#loc105, #loc97])
#loc386 = loc(fused[#loc107, #loc108])
#loc387 = loc(fused[#loc111, #loc112])
#loc388 = loc(fused[#loc113, #loc108])
#loc389 = loc(fused[#loc119, #loc120])
#loc390 = loc(fused[#loc121, #loc122])
#loc391 = loc(fused[#loc123, #loc124])
#loc392 = loc(fused[#loc125, #loc122])
#loc393 = loc(fused[#loc128, #loc129])
#loc394 = loc(fused[#loc131, #loc132])
#loc395 = loc(fused[#loc131, #loc133])
#loc396 = loc(fused[#loc136, #loc137])
#loc397 = loc(fused[#loc138, #loc139])
#loc398 = loc(fused[#loc140, #loc141])
#loc399 = loc(fused[#loc143, #loc144])
#loc400 = loc(fused[#loc145, #loc139])
#loc401 = loc(fused[#loc149, #loc147])
#loc402 = loc(fused[#loc153, #loc154])
#loc403 = loc(fused[#loc155, #loc156])
#loc404 = loc(fused[#loc158, #loc156])
#loc405 = loc(fused[#loc161, #loc159])
#loc406 = loc(fused[#loc165, #loc166])
#loc407 = loc(fused[#loc167, #loc168])
#loc408 = loc(fused[#loc170, #loc168])
#loc409 = loc(fused[#loc173, #loc171])
#loc410 = loc(fused[#loc175, #loc176])
#loc411 = loc(fused[#loc177, #loc178])
#loc412 = loc(fused[#loc179, #loc176])
#loc413 = loc(fused[#loc182, #loc183])
#loc414 = loc(fused[#loc184, #loc185])
#loc415 = loc(fused[#loc186, #loc183])
#loc416 = loc(fused[#loc191, #loc192])
#loc417 = loc(fused[#loc193, #loc194])
#loc418 = loc(fused[#loc195, #loc196])
#loc419 = loc(fused[#loc197, #loc198])
#loc420 = loc(fused[#loc199, #loc200])
#loc421 = loc(fused[#loc201, #loc202])
#loc422 = loc(fused[#loc203, #loc204])
#loc423 = loc(fused[#loc205, #loc206])
#loc424 = loc(fused[#loc207, #loc208])
#loc425 = loc(fused[#loc209, #loc210])
#loc426 = loc(fused[#loc211, #loc212])
#loc427 = loc(fused[#loc215, #loc216])
#loc428 = loc(fused[#loc217, #loc218])
#loc429 = loc(fused[#loc223, #loc224])
#loc430 = loc(fused[#loc225, #loc226])
#loc431 = loc(fused[#loc227, #loc228])
#loc432 = loc(fused[#loc229, #loc226])
#loc433 = loc(fused[#loc231, #loc232])
#loc434 = loc(fused[#loc234, #loc235])
#loc435 = loc(fused[#loc236, #loc237])
#loc436 = loc(fused[#loc239, #loc238])
#loc437 = loc(fused[#loc241, #loc240])
#loc438 = loc(fused[#loc244, #loc245])
#loc439 = loc(fused[#loc246, #loc247])
#loc440 = loc(fused[#loc249, #loc250])
#loc441 = loc(fused[#loc251, #loc252])
#loc442 = loc(fused[#loc253, #loc254])
#loc443 = loc(fused[#loc255, #loc247])
#loc444 = loc(fused[#loc257, #loc258])
#loc445 = loc(fused[#loc261, #loc262])
#loc446 = loc(fused[#loc263, #loc258])
#loc447 = loc(fused[#loc269, #loc270])
#loc448 = loc(fused[#loc271, #loc272])
#loc449 = loc(fused[#loc273, #loc274])
#loc450 = loc(fused[#loc275, #loc272])
#loc451 = loc(fused[#loc278, #loc279])
#loc452 = loc(fused[#loc281, #loc282])
#loc453 = loc(fused[#loc281, #loc283])
#loc454 = loc(fused[#loc286, #loc287])
#loc455 = loc(fused[#loc288, #loc289])
#loc456 = loc(fused[#loc290, #loc291])
#loc457 = loc(fused[#loc293, #loc294])
#loc458 = loc(fused[#loc295, #loc289])
#loc459 = loc(fused[#loc299, #loc297])
#loc460 = loc(fused[#loc303, #loc304])
#loc461 = loc(fused[#loc305, #loc306])
#loc462 = loc(fused[#loc308, #loc306])
#loc463 = loc(fused[#loc311, #loc309])
#loc464 = loc(fused[#loc315, #loc316])
#loc465 = loc(fused[#loc317, #loc318])
#loc466 = loc(fused[#loc320, #loc318])
#loc467 = loc(fused[#loc323, #loc321])
#loc468 = loc(fused[#loc325, #loc326])
#loc469 = loc(fused[#loc327, #loc328])
#loc470 = loc(fused[#loc329, #loc326])
#loc471 = loc(fused[#loc332, #loc333])
#loc472 = loc(fused[#loc334, #loc335])
#loc473 = loc(fused[#loc336, #loc333])
