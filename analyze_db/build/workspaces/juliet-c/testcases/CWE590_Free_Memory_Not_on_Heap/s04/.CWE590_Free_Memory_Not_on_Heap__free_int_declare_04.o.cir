!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc166)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb15 loc(#loc174)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
    %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %11 ^bb7, ^bb11 loc(#loc29)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc180)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc33)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !u64i), !cir.ptr<!s32i> loc(#loc33)
    cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc35)
    cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb6 loc(#loc177)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // pred: ^bb12
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc36)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
    cir.br ^bb14 loc(#loc20)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc16)
  ^bb15:  // 2 preds: ^bb1, ^bb14
    cir.br ^bb16 loc(#loc16)
  ^bb16:  // pred: ^bb15
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc41)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc42)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.return loc(#loc6)
  } loc(#loc168)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc184)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc189)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc66)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb20 loc(#loc72)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc78)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc198)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc199)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc200)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc84)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc202)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc87)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc88)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc82)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc205)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc93)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb11 loc(#loc205)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc96)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc207)
    cir.brcond %28 ^bb12, ^bb16 loc(#loc97)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc208)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc102)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb14 loc(#loc92)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc92)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc104)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb11 loc(#loc205)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc92)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    cir.store %35, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
    cir.br ^bb19 loc(#loc76)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc69)
  ^bb20:  // 2 preds: ^bb2, ^bb19
    cir.br ^bb21 loc(#loc69)
  ^bb21:  // pred: ^bb20
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc109)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc110)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc59)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc121)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc125)
    cir.brcond %5 ^bb2, ^bb19 loc(#loc218)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc129)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc130)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc220)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc221)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc222)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
    cir.br ^bb4 loc(#loc223)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc224)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc225)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc140)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc141)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc140)
    cir.br ^bb6 loc(#loc134)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc226)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc227)
  ^bb9:  // pred: ^bb8
    %21 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc146)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb10 loc(#loc227)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc149)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc229)
    cir.brcond %26 ^bb11, ^bb15 loc(#loc150)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc230)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<5> : !s32i loc(#loc152)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc155)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb13 loc(#loc145)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc145)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc157)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb10 loc(#loc227)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc143)
  ^bb17:  // pred: ^bb16
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    cir.store %33, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
    cir.br ^bb18 loc(#loc128)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc124)
  ^bb19:  // 2 preds: ^bb1, ^bb18
    cir.br ^bb20 loc(#loc124)
  ^bb20:  // pred: ^bb19
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc163)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc164)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc165)
    cir.return loc(#loc114)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":30:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":52:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":38:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":38:31)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":40:17)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":40:24)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":32:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":32:11)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":33:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":33:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":34:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":48:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":34:8)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":35:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":36:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":47:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":39:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":45:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":44:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:22)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:29)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:31)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":42:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":43:37)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":43:32)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":43:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:39)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":41:38)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":46:20)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":46:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":49:18)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":49:23)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":49:24)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":49:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":51:10)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":51:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":123:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":127:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":125:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":125:14)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":126:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":126:14)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":66:19)
#loc53 = loc("/usr/include/stdlib.h":672:1)
#loc54 = loc("/usr/include/stdlib.h":672:45)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":75:27)
#loc56 = loc("/usr/include/stdlib.h":756:1)
#loc57 = loc("/usr/include/stdlib.h":756:70)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":59:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":91:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:61)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":79:17)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":79:24)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":61:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":61:11)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":62:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":62:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":63:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":87:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":63:8)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":64:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":67:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":69:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":66:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":70:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":86:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:39)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:46)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:50)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":72:60)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":73:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":77:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":73:17)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":73:31)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":74:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":75:17)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":76:17)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":76:22)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":78:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":84:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:17)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":83:17)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:26)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:22)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:29)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:33)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:31)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":81:17)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":82:37)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":82:21)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":82:32)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":82:33)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:39)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":80:38)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":85:20)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":85:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":88:18)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":88:23)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":88:24)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":88:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":90:10)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":90:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":94:1)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":121:1)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:61)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":109:17)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":109:24)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":96:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":96:11)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":97:12)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":97:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":98:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":117:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":98:8)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":99:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":100:9)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":116:9)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:39)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:46)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:50)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":102:60)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":103:13)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":107:13)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":103:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":103:31)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":104:13)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":105:27)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":105:17)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":106:17)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":106:22)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":108:13)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":114:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:17)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":113:17)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:26)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:22)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:29)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:33)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:31)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":111:17)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":112:37)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":112:21)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":112:32)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":112:33)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:39)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":110:38)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":115:20)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":115:13)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":118:18)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":118:23)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":118:24)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":118:5)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":120:10)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_04.c":120:5)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc9, #loc10])
#loc171 = loc(fused[#loc11, #loc12])
#loc172 = loc(fused[#loc14, #loc13])
#loc173 = loc(fused[#loc15, #loc16])
#loc174 = loc(fused[#loc18, #loc16])
#loc175 = loc(fused[#loc19, #loc20])
#loc176 = loc(fused[#loc21, #loc22])
#loc177 = loc(fused[#loc23, #loc24])
#loc178 = loc(fused[#loc26, #loc25])
#loc179 = loc(fused[#loc27, #loc28])
#loc180 = loc(fused[#loc30, #loc24])
#loc181 = loc(fused[#loc33, #loc31])
#loc182 = loc(fused[#loc35, #loc34])
#loc183 = loc(fused[#loc37, #loc36])
#loc184 = loc(fused[#loc44, #loc45])
#loc185 = loc(fused[#loc46, #loc47])
#loc186 = loc(fused[#loc48, #loc49])
#loc187 = loc(fused[#loc50, #loc51])
#loc188 = loc(fused[#loc53, #loc54])
#loc189 = loc(fused[#loc56, #loc57])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc64, #loc65])
#loc194 = loc(fused[#loc67, #loc66])
#loc195 = loc(fused[#loc68, #loc69])
#loc196 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc197 = loc(fused[#loc75, #loc76])
#loc198 = loc(fused[#loc79, #loc80])
#loc199 = loc(fused[#loc78, #loc80])
#loc200 = loc(fused[#loc77, #loc61])
#loc201 = loc(fused[#loc81, #loc82])
#loc202 = loc(fused[#loc83, #loc84])
#loc203 = loc(fused[#loc85, #loc82])
#loc204 = loc(fused[#loc89, #loc90])
#loc205 = loc(fused[#loc91, #loc92])
#loc206 = loc(fused[#loc94, #loc93])
#loc207 = loc(fused[#loc95, #loc96])
#loc208 = loc(fused[#loc98, #loc92])
#loc209 = loc(fused[#loc100, #loc99])
#loc210 = loc(fused[#loc104, #loc103])
#loc211 = loc(fused[#loc106, #loc105])
#loc212 = loc(fused[#loc113, #loc114])
#loc213 = loc(fused[#loc115, #loc116])
#loc214 = loc(fused[#loc117, #loc118])
#loc215 = loc(fused[#loc119, #loc120])
#loc216 = loc(fused[#loc122, #loc121])
#loc217 = loc(fused[#loc123, #loc124])
#loc218 = loc(fused[#loc126, #loc124])
#loc219 = loc(fused[#loc127, #loc128])
#loc220 = loc(fused[#loc131, #loc132])
#loc221 = loc(fused[#loc130, #loc132])
#loc222 = loc(fused[#loc129, #loc116])
#loc223 = loc(fused[#loc133, #loc134])
#loc224 = loc(fused[#loc135, #loc136])
#loc225 = loc(fused[#loc137, #loc134])
#loc226 = loc(fused[#loc142, #loc143])
#loc227 = loc(fused[#loc144, #loc145])
#loc228 = loc(fused[#loc147, #loc146])
#loc229 = loc(fused[#loc148, #loc149])
#loc230 = loc(fused[#loc151, #loc145])
#loc231 = loc(fused[#loc153, #loc152])
#loc232 = loc(fused[#loc157, #loc156])
#loc233 = loc(fused[#loc159, #loc158])
