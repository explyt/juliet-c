!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":25:21)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":25:25)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":205:10)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":205:14)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":205:20)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":205:32)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":72:26)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":72:30)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":114:26)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":114:30)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":151:25)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":151:29)
#true = #cir.bool<true> : !cir.bool
#loc285 = loc(fused[#loc13, #loc14])
#loc312 = loc(fused[#loc83, #loc84])
#loc313 = loc(fused[#loc85, #loc86])
#loc319 = loc(fused[#loc107, #loc108])
#loc341 = loc(fused[#loc169, #loc170])
#loc363 = loc(fused[#loc229, #loc230])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc280)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc282)
  cir.func private @printIntLine(!s32i) loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc285)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc282)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc289)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc290)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc290)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc290)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc29)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc292)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc35)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc35)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc294)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc38)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc296)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc40)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc41)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc297)
                  cir.condition(%17) loc(#loc42)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc45)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc46)
                  } loc(#loc298)
                  cir.yield loc(#loc37)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc48)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc299)
                  cir.yield loc(#loc295)
                } loc(#loc295)
              } loc(#loc295)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc49)
            } loc(#loc293)
          } loc(#loc291)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc286)
    cir.return loc(#loc12)
  } loc(#loc284)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc55)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc57)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc281)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc57)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc282)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @badSink(%11) : (!s32i) -> () loc(#loc62)
    cir.return loc(#loc51)
  } loc(#loc300)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc306)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc64)
  } loc(#loc304)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc308)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc309)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc312)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc313)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc90)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_21_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc315)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_21_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.return %17 : !s32i loc(#loc316)
  } loc(#loc311)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc104)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc107, #loc108])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc319)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc317)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc112)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc323)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc324)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc324)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc324)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc326)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc129)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc327)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc127)
                cir.yield %15 : !cir.bool loc(#loc127)
              }, false {
                %15 = cir.const #false loc(#loc127)
                cir.yield %15 : !cir.bool loc(#loc127)
              }) : (!cir.bool) -> !cir.bool loc(#loc127)
              cir.yield %14 : !cir.bool loc(#loc127)
            }, false {
              %11 = cir.const #false loc(#loc127)
              cir.yield %11 : !cir.bool loc(#loc127)
            }) : (!cir.bool) -> !cir.bool loc(#loc127)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc136)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc329)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc139)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc331)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc142)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc332)
                  cir.condition(%18) loc(#loc143)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc146)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc146)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc147)
                  } loc(#loc333)
                  cir.yield loc(#loc138)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc149)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc334)
                  cir.yield loc(#loc330)
                } loc(#loc330)
              } loc(#loc330)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc104)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc104)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc150)
            } loc(#loc328)
          } loc(#loc325)
        } loc(#loc322)
      } loc(#loc321)
    } loc(#loc320)
    cir.return loc(#loc106)
  } loc(#loc318)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc158)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc281)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc160)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc160)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc158)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc317)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.call @goodB2G1Sink(%11) : (!s32i) -> () loc(#loc164)
    cir.return loc(#loc152)
  } loc(#loc335)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc339)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc169, #loc170])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc339)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc174)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc345)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc346)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc346)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc346)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc185)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc348)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc188)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc349)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc186)
                cir.yield %15 : !cir.bool loc(#loc186)
              }, false {
                %15 = cir.const #false loc(#loc186)
                cir.yield %15 : !cir.bool loc(#loc186)
              }) : (!cir.bool) -> !cir.bool loc(#loc186)
              cir.yield %14 : !cir.bool loc(#loc186)
            }, false {
              %11 = cir.const #false loc(#loc186)
              cir.yield %11 : !cir.bool loc(#loc186)
            }) : (!cir.bool) -> !cir.bool loc(#loc186)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc193)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc195)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc351)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc198)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc353)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc201)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc354)
                  cir.condition(%18) loc(#loc202)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc205)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc205)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc206)
                  } loc(#loc355)
                  cir.yield loc(#loc197)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc208)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc356)
                  cir.yield loc(#loc352)
                } loc(#loc352)
              } loc(#loc352)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc209)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc209)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc210)
            } loc(#loc350)
          } loc(#loc347)
        } loc(#loc344)
      } loc(#loc343)
    } loc(#loc342)
    cir.return loc(#loc168)
  } loc(#loc340)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc216)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc218)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc281)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc219)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc220)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc220)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc218)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc339)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.call @goodB2G2Sink(%11) : (!s32i) -> () loc(#loc224)
    cir.return loc(#loc212)
  } loc(#loc357)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc361)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc229, #loc230])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc363)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc361)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc234)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc367)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc368)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc368)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc368)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc245)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc370)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc249)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc251)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc251)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc372)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc254)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc374)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc257)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc375)
                  cir.condition(%17) loc(#loc258)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc261)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc261)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc262)
                  } loc(#loc376)
                  cir.yield loc(#loc253)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc264)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc377)
                  cir.yield loc(#loc373)
                } loc(#loc373)
              } loc(#loc373)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc265)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc265)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc266)
            } loc(#loc371)
          } loc(#loc369)
        } loc(#loc366)
      } loc(#loc365)
    } loc(#loc364)
    cir.return loc(#loc228)
  } loc(#loc362)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc272)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc274)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc361)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc279)
    cir.return loc(#loc268)
  } loc(#loc378)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":57:19)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":23:1)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":23:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":45:27)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":25:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":49:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":26:1)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":27:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":48:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":27:8)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":28:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":29:9)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":47:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":30:13)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":30:17)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":31:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":31:34)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":34:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":46:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":34:17)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":34:24)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":35:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":42:13)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":44:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":36:32)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":36:24)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":36:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":41:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:25)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:21)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:28)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:32)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:30)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":39:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":40:41)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":40:34)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":40:21)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:37)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":38:36)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":45:17)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":51:1)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":60:1)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":53:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":53:9)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":55:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":55:12)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":55:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":57:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":57:12)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":58:17)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":58:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":59:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":59:5)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":189:1)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":194:1)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":191:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":191:14)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":192:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":192:14)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":193:5)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":193:13)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":210:15)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":212:15)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":215:15)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":217:15)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":205:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":220:1)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":206:1)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":208:27)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":208:22)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":208:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":210:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":211:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":211:53)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":212:5)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":215:5)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":216:5)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":216:52)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":217:5)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":219:12)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":219:5)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":67:1)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":67:29)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":77:19)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":96:27)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":72:1)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":100:1)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":73:1)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":74:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":99:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":74:8)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":75:5)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":78:5)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":80:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":77:9)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":81:9)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":98:9)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":82:13)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":82:17)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":83:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":83:34)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":97:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:17)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:25)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:27)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:30)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:38)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":85:40)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":86:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":93:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":95:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":87:32)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":87:24)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":87:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":92:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:25)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:21)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:28)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:32)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:30)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":90:17)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":91:41)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":91:34)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":91:21)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:37)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":89:36)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":96:17)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":102:1)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":111:1)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":104:5)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":104:9)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":106:13)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":106:12)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":106:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":108:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":108:12)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":108:19)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":109:22)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":109:5)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":110:18)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":110:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":68:1)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":68:29)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":114:1)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":137:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":115:1)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":116:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":136:5)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":116:8)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":117:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":118:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":135:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":119:13)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":119:17)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":120:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":120:34)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":134:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:17)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:25)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:27)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:30)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:38)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":122:40)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":123:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":130:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":132:13)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":124:32)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":124:24)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":124:17)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:17)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":129:17)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:25)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:21)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:28)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:32)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:30)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":127:17)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":128:41)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":128:34)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":128:21)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:37)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":126:36)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":133:27)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":133:17)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":139:1)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":148:1)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":141:5)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":141:9)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":143:13)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":143:12)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":143:5)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":145:5)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":145:12)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":145:19)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":146:22)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":146:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":147:18)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":147:5)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":69:1)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":69:28)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":151:1)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":175:1)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":152:1)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":153:5)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":174:5)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":153:8)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":154:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":155:9)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":173:9)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":156:13)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":156:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":157:13)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":157:34)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":160:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":172:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":160:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":160:24)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":161:13)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":168:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":170:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":162:32)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":162:24)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":162:17)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:17)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":167:17)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:25)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:21)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:28)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:32)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:30)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":165:17)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":166:41)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":166:34)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":166:21)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:37)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":164:36)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":171:27)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":171:17)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":177:1)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":187:1)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":179:5)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":179:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":181:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":181:12)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":181:5)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":184:12)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":184:5)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":185:21)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":185:5)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":186:17)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_21.c":186:5)
#loc280 = loc(fused[#loc1, #loc2])
#loc281 = loc(fused[#loc3, #loc4])
#loc282 = loc(fused[#loc6, #loc7])
#loc283 = loc(fused[#loc8, #loc9])
#loc284 = loc(fused[#loc11, #loc12])
#loc286 = loc(fused[#loc16, #loc17])
#loc287 = loc(fused[#loc19, #loc17])
#loc288 = loc(fused[#loc20, #loc21])
#loc289 = loc(fused[#loc22, #loc23])
#loc290 = loc(fused[#loc24, #loc25])
#loc291 = loc(fused[#loc26, #loc27])
#loc292 = loc(fused[#loc28, #loc29])
#loc293 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc294 = loc(fused[#loc35, #loc33])
#loc295 = loc(fused[#loc36, #loc37])
#loc296 = loc(fused[#loc39, #loc38])
#loc297 = loc(fused[#loc40, #loc41])
#loc298 = loc(fused[#loc43, #loc37])
#loc299 = loc(fused[#loc48, #loc47])
#loc300 = loc(fused[#loc50, #loc51])
#loc301 = loc(fused[#loc52, #loc53])
#loc302 = loc(fused[#loc56, #loc54])
#loc303 = loc(fused[#loc60, #loc59])
#loc304 = loc(fused[#loc63, #loc64])
#loc305 = loc(fused[#loc65, #loc66])
#loc306 = loc(fused[#loc67, #loc68])
#loc307 = loc(fused[#loc69, #loc70])
#loc308 = loc(fused[#loc71, #loc72])
#loc309 = loc(fused[#loc73, #loc74])
#loc310 = loc(fused[#loc75, #loc76])
#loc311 = loc(fused[#loc81, #loc82])
#loc314 = loc(fused[#loc92, #loc93])
#loc315 = loc(fused[#loc96, #loc97])
#loc316 = loc(fused[#loc100, #loc99])
#loc317 = loc(fused[#loc101, #loc102])
#loc318 = loc(fused[#loc105, #loc106])
#loc320 = loc(fused[#loc110, #loc111])
#loc321 = loc(fused[#loc113, #loc114, #loc115, #loc111])
#loc322 = loc(fused[#loc117, #loc118])
#loc323 = loc(fused[#loc119, #loc120])
#loc324 = loc(fused[#loc121, #loc122])
#loc325 = loc(fused[#loc123, #loc124])
#loc326 = loc(fused[#loc125, #loc126])
#loc327 = loc(fused[#loc128, #loc130])
#loc328 = loc(fused[#loc131, #loc132, #loc133, #loc124])
#loc329 = loc(fused[#loc136, #loc134])
#loc330 = loc(fused[#loc137, #loc138])
#loc331 = loc(fused[#loc140, #loc139])
#loc332 = loc(fused[#loc141, #loc142])
#loc333 = loc(fused[#loc144, #loc138])
#loc334 = loc(fused[#loc149, #loc148])
#loc335 = loc(fused[#loc151, #loc152])
#loc336 = loc(fused[#loc153, #loc154])
#loc337 = loc(fused[#loc157, #loc155])
#loc338 = loc(fused[#loc162, #loc161])
#loc339 = loc(fused[#loc165, #loc166])
#loc340 = loc(fused[#loc167, #loc168])
#loc342 = loc(fused[#loc172, #loc173])
#loc343 = loc(fused[#loc175, #loc173])
#loc344 = loc(fused[#loc176, #loc177])
#loc345 = loc(fused[#loc178, #loc179])
#loc346 = loc(fused[#loc180, #loc181])
#loc347 = loc(fused[#loc182, #loc183])
#loc348 = loc(fused[#loc184, #loc185])
#loc349 = loc(fused[#loc187, #loc189])
#loc350 = loc(fused[#loc190, #loc191, #loc192, #loc183])
#loc351 = loc(fused[#loc195, #loc193])
#loc352 = loc(fused[#loc196, #loc197])
#loc353 = loc(fused[#loc199, #loc198])
#loc354 = loc(fused[#loc200, #loc201])
#loc355 = loc(fused[#loc203, #loc197])
#loc356 = loc(fused[#loc208, #loc207])
#loc357 = loc(fused[#loc211, #loc212])
#loc358 = loc(fused[#loc213, #loc214])
#loc359 = loc(fused[#loc217, #loc215])
#loc360 = loc(fused[#loc222, #loc221])
#loc361 = loc(fused[#loc225, #loc226])
#loc362 = loc(fused[#loc227, #loc228])
#loc364 = loc(fused[#loc232, #loc233])
#loc365 = loc(fused[#loc235, #loc233])
#loc366 = loc(fused[#loc236, #loc237])
#loc367 = loc(fused[#loc238, #loc239])
#loc368 = loc(fused[#loc240, #loc241])
#loc369 = loc(fused[#loc242, #loc243])
#loc370 = loc(fused[#loc244, #loc245])
#loc371 = loc(fused[#loc246, #loc247, #loc248, #loc243])
#loc372 = loc(fused[#loc251, #loc249])
#loc373 = loc(fused[#loc252, #loc253])
#loc374 = loc(fused[#loc255, #loc254])
#loc375 = loc(fused[#loc256, #loc257])
#loc376 = loc(fused[#loc259, #loc253])
#loc377 = loc(fused[#loc264, #loc263])
#loc378 = loc(fused[#loc267, #loc268])
#loc379 = loc(fused[#loc269, #loc270])
#loc380 = loc(fused[#loc273, #loc271])
#loc381 = loc(fused[#loc275, #loc274])
#loc382 = loc(fused[#loc277, #loc276])
