!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":25:69)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":25:76)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":43:73)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":43:80)
#loc63 = loc(fused[#loc9, #loc10])
#loc69 = loc(fused[#loc35, #loc36])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc60)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc61)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc65)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc17)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc18)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc66)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc22)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc25)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc67)
      %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc26)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
      %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc30)
      %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    } loc(#loc64)
    cir.return loc(#loc8)
  } loc(#loc62)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc35, #loc36])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc71)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc43)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc44)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc44)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc72)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc48)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc49)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc73)
      %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc56)
      %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
      cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
    } loc(#loc70)
    cir.return loc(#loc34)
  } loc(#loc68)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":25:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":26:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":27:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":35:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":28:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":28:24)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:24)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:29)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":29:34)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":30:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":30:16)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":30:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":30:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":32:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":32:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":32:22)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":33:19)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":33:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":34:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":34:14)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":43:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":54:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":44:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":45:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":53:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":46:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":46:24)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:16)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:24)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:29)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":47:34)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":48:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":48:16)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":48:20)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":48:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":50:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":50:16)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":50:22)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":51:19)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":51:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":52:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_52c.c":52:14)
#loc59 = loc(fused[#loc1, #loc2])
#loc60 = loc(fused[#loc3, #loc4])
#loc61 = loc(fused[#loc5, #loc6])
#loc62 = loc(fused[#loc7, #loc8])
#loc64 = loc(fused[#loc12, #loc13])
#loc65 = loc(fused[#loc14, #loc15])
#loc66 = loc(fused[#loc20, #loc21])
#loc67 = loc(fused[#loc25, #loc22])
#loc68 = loc(fused[#loc33, #loc34])
#loc70 = loc(fused[#loc38, #loc39])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc46, #loc47])
#loc73 = loc(fused[#loc51, #loc48])
