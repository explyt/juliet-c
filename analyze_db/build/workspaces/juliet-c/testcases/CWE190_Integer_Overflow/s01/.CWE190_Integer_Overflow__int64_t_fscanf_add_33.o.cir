!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc87)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc89)
  cir.func private @printLongLongLine(!s64i) loc(#loc90)
  cir.func @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc93)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc94)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc89)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    cir.scope {
      %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc96)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
      %11 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc22)
      cir.store %11, %9 : !s64i, !cir.ptr<!s64i> loc(#loc96)
      cir.scope {
        %12 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc98)
        %13 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc27)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc26)
        %16 = cir.binop(add, %13, %15) nsw : !s64i loc(#loc27)
        cir.store %16, %12 : !s64i, !cir.ptr<!s64i> loc(#loc98)
        %17 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc28)
        cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc29)
      } loc(#loc97)
    } loc(#loc95)
    cir.return loc(#loc10)
  } loc(#loc91)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc101)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc36)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc102)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc38)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc103)
    cir.scope {
      %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc105)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
      %7 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc43)
      cir.store %7, %5 : !s64i, !cir.ptr<!s64i> loc(#loc105)
      cir.scope {
        %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc107)
        %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc48)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc47)
        %12 = cir.binop(add, %9, %11) nsw : !s64i loc(#loc48)
        cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc107)
        %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc49)
        cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc50)
      } loc(#loc106)
    } loc(#loc104)
    cir.return loc(#loc31)
  } loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc53)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc111)
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc59)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc60)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc112)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc62)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc113)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc62)
    cir.scope {
      %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc115)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
      %11 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc69)
      cir.store %11, %9 : !s64i, !cir.ptr<!s64i> loc(#loc115)
      cir.scope {
        %12 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc72)
        %13 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc73)
        %14 = cir.cmp(lt, %12, %13) : !s64i, !cir.bool loc(#loc117)
        cir.if %14 {
          %15 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc119)
          %16 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc79)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc78)
          %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc78)
          %19 = cir.binop(add, %16, %18) nsw : !s64i loc(#loc79)
          cir.store %19, %15 : !s64i, !cir.ptr<!s64i> loc(#loc119)
          %20 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc80)
          cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc81)
        } else {
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc53)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc53)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        } loc(#loc118)
      } loc(#loc116)
    } loc(#loc114)
    cir.return loc(#loc55)
  } loc(#loc109)
  cir.func @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_334goodEv() extra(#fn_attr) {
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_33L7goodG2BEv() : () -> () loc(#loc85)
    cir.call @_ZN46CWE190_Integer_Overflow__int64_t_fscanf_add_33L7goodB2GEv() : () -> () loc(#loc86)
    cir.return loc(#loc84)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":32:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":32:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":26:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":41:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":28:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":28:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":29:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":29:24)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":30:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":30:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":32:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":32:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":33:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":40:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":34:9)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":34:24)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":35:9)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":39:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":37:13)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":37:37)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":37:30)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":38:31)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":38:13)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":48:1)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":63:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":50:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":50:13)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":51:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":51:24)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":52:12)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":52:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":54:12)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":54:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":55:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":62:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":56:9)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":56:24)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":57:9)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":61:9)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":59:13)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":59:37)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":59:30)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":60:31)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":60:13)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":83:23)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":66:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":86:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":68:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":68:13)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":69:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":69:24)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":70:12)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":70:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":72:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":72:13)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":72:20)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":72:24)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":73:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":85:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":74:9)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":74:24)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":76:9)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":84:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":76:13)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":76:20)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":77:9)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":80:9)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":82:9)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":78:13)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":78:37)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":78:30)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":79:31)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":79:13)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":83:13)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":88:1)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":92:1)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":90:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_33.cpp":91:5)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc7, #loc8])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc16, #loc15])
#loc95 = loc(fused[#loc19, #loc20])
#loc96 = loc(fused[#loc21, #loc22])
#loc97 = loc(fused[#loc23, #loc24])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc30, #loc31])
#loc100 = loc(fused[#loc32, #loc33])
#loc101 = loc(fused[#loc34, #loc35])
#loc102 = loc(fused[#loc37, #loc36])
#loc103 = loc(fused[#loc39, #loc38])
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc42, #loc43])
#loc106 = loc(fused[#loc44, #loc45])
#loc107 = loc(fused[#loc46, #loc47])
#loc108 = loc(fused[#loc51, #loc52])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc56, #loc57])
#loc111 = loc(fused[#loc58, #loc59])
#loc112 = loc(fused[#loc61, #loc60])
#loc113 = loc(fused[#loc64, #loc65])
#loc114 = loc(fused[#loc66, #loc67])
#loc115 = loc(fused[#loc68, #loc69])
#loc116 = loc(fused[#loc70, #loc71])
#loc117 = loc(fused[#loc72, #loc73])
#loc118 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc119 = loc(fused[#loc77, #loc78])
#loc120 = loc(fused[#loc83, #loc84])
