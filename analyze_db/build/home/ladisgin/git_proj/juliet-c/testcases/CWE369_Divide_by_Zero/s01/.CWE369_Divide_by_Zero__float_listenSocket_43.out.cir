!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":49:23)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":49:30)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":140:27)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":140:34)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":160:27)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":160:34)
#loc294 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:8)
#loc295 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:14)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":270:10)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":270:14)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":270:20)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":270:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc364 = loc(fused[#loc19, #loc20])
#loc415 = loc(fused[#loc156, #loc157])
#loc424 = loc(fused[#loc178, #loc179])
#loc468 = loc(fused[#loc294, #loc295])
#loc483 = loc(fused[#loc339, #loc340])
#loc484 = loc(fused[#loc341, #loc342])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc355)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc356)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc357)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc358)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc359)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc360)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc361)
  cir.func private @close(!s32i) -> !s32i loc(#loc362)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L9badSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc364)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc21)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc366)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc367)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc368)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc369)
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc370)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc29)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc368)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc31)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc369)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc37)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc37)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc38)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc38)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc372)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc45)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc374)
            cir.if %55 {
              cir.break loc(#loc47)
            } loc(#loc375)
          } loc(#loc373)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc376)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc377)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc378)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc55)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc379)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc58)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc380)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc62)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc62)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc381)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %53 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc383)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc384)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc384)
            %56 = cir.call @bind(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc75)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc385)
            cir.if %59 {
              cir.break loc(#loc77)
            } loc(#loc386)
          } loc(#loc382)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %53 = cir.const #cir.int<5> : !s32i loc(#loc81)
            %54 = cir.call @listen(%52, %53) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc83)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc388)
            cir.if %57 {
              cir.break loc(#loc85)
            } loc(#loc389)
          } loc(#loc387)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc390)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc95)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc392)
            cir.if %55 {
              cir.break loc(#loc97)
            } loc(#loc393)
          } loc(#loc391)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc99)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          %37 = cir.const #cir.int<20> : !s32i loc(#loc100)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc100)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc100)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %42 = cir.call @recv(%34, %36, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc103)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc394)
          cir.scope {
            %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc109)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc396)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc110)
              cir.yield %57 : !cir.bool loc(#loc110)
            }, false {
              %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc397)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc110)
                cir.yield %61 : !cir.bool loc(#loc110)
              }, false {
                %61 = cir.const #false loc(#loc110)
                cir.yield %61 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %60 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %56 {
              cir.break loc(#loc114)
            } loc(#loc398)
          } loc(#loc395)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc115)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %46 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc117)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc399)
          %48 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc118)
          %49 = cir.call @atof(%48) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc119)
          %50 = cir.cast(floating, %49 : !cir.double), !cir.float loc(#loc119)
          %51 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc120)
          cir.store %50, %51 : !cir.float, !cir.ptr<!cir.float> loc(#loc400)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%11) loc(#loc122)
        } loc(#loc371)
      } loc(#loc371)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc126)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc402)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc403)
      } loc(#loc401)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc133)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc405)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc406)
      } loc(#loc404)
    } loc(#loc365)
    cir.return loc(#loc18)
  } loc(#loc363)
  cir.func private @printIntLine(!s32i) loc(#loc407)
  cir.func @_ZN44CWE369_Divide_by_Zero__float_listenSocket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc143)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc410)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L9badSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc145)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc412)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc150)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc151)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc151)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc413)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc413)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc153)
    } loc(#loc411)
    cir.return loc(#loc140)
  } loc(#loc408)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L13goodG2BSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc156, #loc157])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc415)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc158)
    %1 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc159)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc160)
    cir.store %1, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc416)
    cir.return loc(#loc155)
  } loc(#loc414)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc418)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc165)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc419)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L13goodG2BSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc167)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc421)
      %3 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc172)
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc173)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc173)
      %6 = cir.binop(div, %3, %5) : !cir.double loc(#loc422)
      %7 = cir.cast(float_to_int, %6 : !cir.double), !s32i loc(#loc422)
      cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc421)
      %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc175)
    } loc(#loc420)
    cir.return loc(#loc162)
  } loc(#loc417)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L13goodB2GSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc178, #loc179])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc424)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc180)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc426)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc427)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc428)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc429)
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc430)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc188)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc188)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc190)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc190)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc429)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc195)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc196)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc196)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc197)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc197)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc198)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc432)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc203)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc204)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc204)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc434)
            cir.if %55 {
              cir.break loc(#loc206)
            } loc(#loc435)
          } loc(#loc433)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc436)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc209)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc437)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc438)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc214)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc214)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc439)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc216)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc216)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc440)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc218)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc218)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc219)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc441)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc224)
            %53 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc443)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc444)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc444)
            %56 = cir.call @bind(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc229)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc230)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc230)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc445)
            cir.if %59 {
              cir.break loc(#loc232)
            } loc(#loc446)
          } loc(#loc442)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
            %53 = cir.const #cir.int<5> : !s32i loc(#loc236)
            %54 = cir.call @listen(%52, %53) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc237)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc238)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc238)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc448)
            cir.if %57 {
              cir.break loc(#loc240)
            } loc(#loc449)
          } loc(#loc447)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc242)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc243)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc244)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc450)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc250)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc452)
            cir.if %55 {
              cir.break loc(#loc252)
            } loc(#loc453)
          } loc(#loc451)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc254)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc254)
          %37 = cir.const #cir.int<20> : !s32i loc(#loc255)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc256)
          %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc255)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc255)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc257)
          %42 = cir.call @recv(%34, %36, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc258)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc258)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc454)
          cir.scope {
            %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc264)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc264)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc456)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc265)
              cir.yield %57 : !cir.bool loc(#loc265)
            }, false {
              %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc267)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc457)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc265)
                cir.yield %61 : !cir.bool loc(#loc265)
              }, false {
                %61 = cir.const #false loc(#loc265)
                cir.yield %61 : !cir.bool loc(#loc265)
              }) : (!cir.bool) -> !cir.bool loc(#loc265)
              cir.yield %60 : !cir.bool loc(#loc265)
            }) : (!cir.bool) -> !cir.bool loc(#loc265)
            cir.if %56 {
              cir.break loc(#loc269)
            } loc(#loc458)
          } loc(#loc455)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc270)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc271)
          %46 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc272)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc272)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc459)
          %48 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc273)
          %49 = cir.call @atof(%48) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc274)
          %50 = cir.cast(floating, %49 : !cir.double), !cir.float loc(#loc274)
          %51 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc275)
          cir.store %50, %51 : !cir.float, !cir.ptr<!cir.float> loc(#loc460)
          cir.yield loc(#loc194)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc277)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc277)
          cir.condition(%11) loc(#loc277)
        } loc(#loc431)
      } loc(#loc431)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc280)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc281)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc281)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc462)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc284)
        } loc(#loc463)
      } loc(#loc461)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc287)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc288)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc288)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc465)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc290)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc291)
        } loc(#loc466)
      } loc(#loc464)
    } loc(#loc425)
    cir.return loc(#loc177)
  } loc(#loc423)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc294, #loc295])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc468)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc293)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc296)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc297)
    %3 = cir.fabs %2 : !cir.float loc(#loc297)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc469)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc469)
    cir.return %4 : !cir.float loc(#loc469)
  } loc(#loc467)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc300)
  cir.func internal private @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc305)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc472)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L13goodB2GSourceERf(%0) : (!cir.ptr<!cir.float>) -> () loc(#loc307)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc310)
      %3 = cir.call @_ZSt4fabsf(%2) : (!cir.float) -> !cir.float loc(#loc311)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc311)
      %5 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc312)
      %6 = cir.cmp(gt, %4, %5) : !cir.double, !cir.bool loc(#loc474)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc476)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc318)
        %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc319)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc319)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc477)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc477)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc476)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc320)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc321)
      } else {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc300)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc300)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc322)
      } loc(#loc475)
    } loc(#loc473)
    cir.return loc(#loc302)
  } loc(#loc470)
  cir.func @_ZN44CWE369_Divide_by_Zero__float_listenSocket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L7goodG2BEv() : () -> () loc(#loc325)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_43L7goodB2GEv() : () -> () loc(#loc326)
    cir.return loc(#loc324)
  } loc(#loc478)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc479)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc480)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc481)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc333)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc336)
  cir.func @main(%arg0: !s32i loc(fused[#loc339, #loc340]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc341, #loc342])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc483)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc484)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc338)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc343)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc344)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc345)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc345)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc346)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc333)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc333)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc347)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_434goodEv() : () -> () loc(#loc348)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc334)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc334)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc349)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc335)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc335)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc350)
    cir.call @_ZN44CWE369_Divide_by_Zero__float_listenSocket_433badEv() : () -> () loc(#loc351)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc336)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc336)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc352)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc353)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc485)
    cir.return %15 : !s32i loc(#loc485)
  } loc(#loc482)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":49:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":120:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":50:1)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":51:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":119:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":56:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":56:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":57:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":57:28)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":58:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":58:31)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":59:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":59:31)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":60:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":60:41)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":61:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":104:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:35)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:44)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:57)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:28)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":70:68)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":71:13)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":74:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":71:17)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":71:33)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":72:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":73:17)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:20)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:21)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:30)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:33)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:47)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:13)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":75:48)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":76:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":76:13)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":77:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":77:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":78:38)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":78:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":78:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":78:46)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:13)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":82:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:22)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:54)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:55)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:64)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:78)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:17)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":79:84)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":80:13)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":81:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":83:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":86:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":83:24)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":83:38)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":83:17)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":83:57)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":84:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":85:17)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:35)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:49)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:55)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:28)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":87:59)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":88:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":91:13)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":88:17)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":88:33)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":89:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":90:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:31)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:45)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:58)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:76)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:79)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:26)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":94:80)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:13)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":98:13)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:17)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:31)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:44)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:47)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":95:61)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":96:13)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":97:17)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":100:39)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":100:25)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":100:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":102:32)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":102:27)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":102:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":102:43)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":104:16)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":105:9)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":108:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":105:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":105:29)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":106:9)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":107:26)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":107:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":109:9)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":112:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":109:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":109:29)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":110:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":111:26)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":111:13)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc138 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":122:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":133:1)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":124:5)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":124:11)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":126:12)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":126:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":127:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":128:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":132:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":130:9)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":130:40)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":130:28)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":130:36)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":131:22)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":131:9)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":140:1)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":144:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":141:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":143:12)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":143:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":146:1)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":157:1)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":148:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":148:11)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":150:12)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":150:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":151:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":152:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":156:5)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":154:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":154:40)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":154:28)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":154:36)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":155:22)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":155:9)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":160:1)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":231:1)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":161:1)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":162:5)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":230:5)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":167:9)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":167:13)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":168:9)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":168:28)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":169:9)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":169:31)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":170:9)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":170:31)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":171:9)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":171:41)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":172:9)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":215:17)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:35)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:44)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:57)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:28)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:13)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":181:68)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":182:13)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":185:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":182:17)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":182:33)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":183:13)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":184:17)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:20)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:21)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:30)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:33)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:47)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":186:48)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":187:34)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":187:13)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":188:39)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":188:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":189:38)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":189:32)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":189:13)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":189:46)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:13)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":193:13)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:22)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:54)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:55)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:64)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:78)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:17)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":190:84)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":191:13)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":192:17)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":194:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":197:13)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":194:24)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":194:38)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":194:17)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":194:57)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":195:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":196:17)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:35)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:49)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:55)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:28)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":198:59)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":199:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":202:13)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":199:17)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":199:33)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":200:13)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":201:17)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:31)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:45)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:58)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:76)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:79)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:26)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:13)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":205:80)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:13)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":209:13)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:31)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:44)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:47)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":206:61)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":207:13)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":208:17)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":211:39)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":211:25)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":211:13)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":213:32)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":213:27)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":213:13)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":213:43)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":215:16)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":216:9)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":219:9)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":216:13)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":216:29)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":217:9)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":218:26)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":218:13)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":220:9)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":223:9)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":220:13)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":220:29)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":221:9)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":222:26)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":222:13)
#loc292 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":237:3)
#loc293 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:34)
#loc296 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:3)
#loc297 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:28)
#loc298 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:5)
#loc299 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:31)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":247:19)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":233:1)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":249:1)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":235:5)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":235:11)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":237:12)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":237:5)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":238:5)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":240:5)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":248:5)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":240:13)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":240:8)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":240:21)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":241:5)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":244:5)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":246:5)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":242:9)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":242:40)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":242:28)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":242:36)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":243:22)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":243:9)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":247:9)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":251:1)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":255:1)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":253:5)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":254:5)
#loc327 = loc("/usr/include/stdlib.h":575:1)
#loc328 = loc("/usr/include/stdlib.h":575:41)
#loc329 = loc("/usr/include/time.h":76:1)
#loc330 = loc("/usr/include/time.h":76:38)
#loc331 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc332 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":275:15)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":277:15)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":280:15)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":282:15)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":270:1)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":285:1)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":271:1)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":273:27)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":273:22)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":273:5)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":275:5)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":276:5)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":277:5)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":280:5)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":281:5)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":282:5)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":284:12)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_43.cpp":284:5)
#loc355 = loc(fused[#loc1, #loc2])
#loc356 = loc(fused[#loc3, #loc4])
#loc357 = loc(fused[#loc5, #loc6])
#loc358 = loc(fused[#loc7, #loc8])
#loc359 = loc(fused[#loc9, #loc10])
#loc360 = loc(fused[#loc11, #loc12])
#loc361 = loc(fused[#loc13, #loc14])
#loc362 = loc(fused[#loc15, #loc16])
#loc363 = loc(fused[#loc17, #loc18])
#loc365 = loc(fused[#loc22, #loc23])
#loc366 = loc(fused[#loc24, #loc25])
#loc367 = loc(fused[#loc26, #loc27])
#loc368 = loc(fused[#loc28, #loc29])
#loc369 = loc(fused[#loc30, #loc31])
#loc370 = loc(fused[#loc32, #loc33])
#loc371 = loc(fused[#loc34, #loc35])
#loc372 = loc(fused[#loc40, #loc41])
#loc373 = loc(fused[#loc42, #loc43])
#loc374 = loc(fused[#loc44, #loc45])
#loc375 = loc(fused[#loc46, #loc43])
#loc376 = loc(fused[#loc48, #loc49])
#loc377 = loc(fused[#loc51, #loc52])
#loc378 = loc(fused[#loc53, #loc54])
#loc379 = loc(fused[#loc57, #loc55])
#loc380 = loc(fused[#loc61, #loc58])
#loc381 = loc(fused[#loc65, #loc66])
#loc382 = loc(fused[#loc67, #loc68])
#loc383 = loc(fused[#loc70, #loc71])
#loc384 = loc(fused[#loc72, #loc73])
#loc385 = loc(fused[#loc74, #loc75])
#loc386 = loc(fused[#loc76, #loc68])
#loc387 = loc(fused[#loc78, #loc79])
#loc388 = loc(fused[#loc82, #loc83])
#loc389 = loc(fused[#loc84, #loc79])
#loc390 = loc(fused[#loc90, #loc91])
#loc391 = loc(fused[#loc92, #loc93])
#loc392 = loc(fused[#loc94, #loc95])
#loc393 = loc(fused[#loc96, #loc93])
#loc394 = loc(fused[#loc104, #loc105])
#loc395 = loc(fused[#loc106, #loc107])
#loc396 = loc(fused[#loc108, #loc109])
#loc397 = loc(fused[#loc111, #loc112])
#loc398 = loc(fused[#loc113, #loc107])
#loc399 = loc(fused[#loc117, #loc115])
#loc400 = loc(fused[#loc120, #loc121])
#loc401 = loc(fused[#loc123, #loc124])
#loc402 = loc(fused[#loc125, #loc126])
#loc403 = loc(fused[#loc127, #loc124])
#loc404 = loc(fused[#loc130, #loc131])
#loc405 = loc(fused[#loc132, #loc133])
#loc406 = loc(fused[#loc134, #loc131])
#loc407 = loc(fused[#loc137, #loc138])
#loc408 = loc(fused[#loc139, #loc140])
#loc409 = loc(fused[#loc141, #loc142])
#loc410 = loc(fused[#loc144, #loc143])
#loc411 = loc(fused[#loc146, #loc147])
#loc412 = loc(fused[#loc148, #loc149])
#loc413 = loc(fused[#loc150, #loc151])
#loc414 = loc(fused[#loc154, #loc155])
#loc416 = loc(fused[#loc160, #loc159])
#loc417 = loc(fused[#loc161, #loc162])
#loc418 = loc(fused[#loc163, #loc164])
#loc419 = loc(fused[#loc166, #loc165])
#loc420 = loc(fused[#loc168, #loc169])
#loc421 = loc(fused[#loc170, #loc171])
#loc422 = loc(fused[#loc172, #loc173])
#loc423 = loc(fused[#loc176, #loc177])
#loc425 = loc(fused[#loc181, #loc182])
#loc426 = loc(fused[#loc183, #loc184])
#loc427 = loc(fused[#loc185, #loc186])
#loc428 = loc(fused[#loc187, #loc188])
#loc429 = loc(fused[#loc189, #loc190])
#loc430 = loc(fused[#loc191, #loc192])
#loc431 = loc(fused[#loc193, #loc194])
#loc432 = loc(fused[#loc199, #loc200])
#loc433 = loc(fused[#loc201, #loc202])
#loc434 = loc(fused[#loc203, #loc204])
#loc435 = loc(fused[#loc205, #loc202])
#loc436 = loc(fused[#loc207, #loc208])
#loc437 = loc(fused[#loc210, #loc211])
#loc438 = loc(fused[#loc212, #loc213])
#loc439 = loc(fused[#loc215, #loc214])
#loc440 = loc(fused[#loc217, #loc216])
#loc441 = loc(fused[#loc220, #loc221])
#loc442 = loc(fused[#loc222, #loc223])
#loc443 = loc(fused[#loc225, #loc226])
#loc444 = loc(fused[#loc227, #loc228])
#loc445 = loc(fused[#loc229, #loc230])
#loc446 = loc(fused[#loc231, #loc223])
#loc447 = loc(fused[#loc233, #loc234])
#loc448 = loc(fused[#loc237, #loc238])
#loc449 = loc(fused[#loc239, #loc234])
#loc450 = loc(fused[#loc245, #loc246])
#loc451 = loc(fused[#loc247, #loc248])
#loc452 = loc(fused[#loc249, #loc250])
#loc453 = loc(fused[#loc251, #loc248])
#loc454 = loc(fused[#loc259, #loc260])
#loc455 = loc(fused[#loc261, #loc262])
#loc456 = loc(fused[#loc263, #loc264])
#loc457 = loc(fused[#loc266, #loc267])
#loc458 = loc(fused[#loc268, #loc262])
#loc459 = loc(fused[#loc272, #loc270])
#loc460 = loc(fused[#loc275, #loc276])
#loc461 = loc(fused[#loc278, #loc279])
#loc462 = loc(fused[#loc280, #loc281])
#loc463 = loc(fused[#loc282, #loc279])
#loc464 = loc(fused[#loc285, #loc286])
#loc465 = loc(fused[#loc287, #loc288])
#loc466 = loc(fused[#loc289, #loc286])
#loc467 = loc(fused[#loc292, #loc293])
#loc469 = loc(fused[#loc298, #loc299])
#loc470 = loc(fused[#loc301, #loc302])
#loc471 = loc(fused[#loc303, #loc304])
#loc472 = loc(fused[#loc306, #loc305])
#loc473 = loc(fused[#loc308, #loc309])
#loc474 = loc(fused[#loc311, #loc312])
#loc475 = loc(fused[#loc313, #loc314, #loc315, #loc309])
#loc476 = loc(fused[#loc316, #loc317])
#loc477 = loc(fused[#loc318, #loc319])
#loc478 = loc(fused[#loc323, #loc324])
#loc479 = loc(fused[#loc327, #loc328])
#loc480 = loc(fused[#loc329, #loc330])
#loc481 = loc(fused[#loc331, #loc332])
#loc482 = loc(fused[#loc337, #loc338])
#loc485 = loc(fused[#loc354, #loc353])
