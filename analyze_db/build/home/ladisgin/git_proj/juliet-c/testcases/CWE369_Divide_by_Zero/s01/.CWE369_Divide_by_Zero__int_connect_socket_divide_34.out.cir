!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:44)
#loc143 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":233:10)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":233:14)
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":233:20)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":233:32)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:44)
#true = #cir.bool<true> : !cir.bool
!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc347 = loc(fused[#loc143, #loc144])
#loc348 = loc(fused[#loc145, #loc146])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc294)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc295)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc296)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @close(!s32i) -> !s32i loc(#loc298)
  cir.func private @printIntLine(!s32i) loc(#loc299)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc302)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc303)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc304)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc305)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc306)
    %6 = cir.alloca !ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc307)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc35)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb1 loc(#loc309)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc25)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb2 loc(#loc310)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc310)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc44)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb5 loc(#loc312)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc51)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc314)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc53)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc316)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc61)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc318)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc319)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc69)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc69)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc70)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc320)
    cir.br ^bb9 loc(#loc321)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc323)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc323)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc82)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc324)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc325)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc84)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc75)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc87)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc87)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc87)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc87)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc87)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc87)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc88)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc326)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc90)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb13 loc(#loc328)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc96)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc97)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc97)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc97)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc97)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc97)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc97)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc97)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc97)
  ^bb18(%70: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc97)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc97)
  ^bb20(%71: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc97)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc331)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc101)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc94)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc102)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc332)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
    cir.store %78, %5 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb3 loc(#loc40)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc40)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc334)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc112)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc336)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc115)
    cir.br ^bb29 loc(#loc110)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc110)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc38)
  ^bb31:  // pred: ^bb30
    %85 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %86 = cir.get_member %6[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc117)
    cir.store %85, %86 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb32 loc(#loc338)
  ^bb32:  // pred: ^bb31
    %87 = cir.get_member %6[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc121)
    %88 = cir.load %87 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %88, %4 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %89 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %90 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %91 = cir.binop(div, %89, %90) : !s32i loc(#loc339)
    cir.call @printIntLine(%91) : (!s32i) -> () loc(#loc124)
    cir.br ^bb33 loc(#loc120)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc19)
  } loc(#loc300)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc341)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc127)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc129)
    cir.return loc(#loc126)
  } loc(#loc340)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc343)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc344)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc140)
  cir.func @main(%arg0: !s32i loc(fused[#loc143, #loc144]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc145, #loc146])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc142)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc147)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc148)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc149)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc149)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc150)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc137)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_34_good() : () -> () loc(#loc152)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc139)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_34_bad() : () -> () loc(#loc156)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc140)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    cir.return %17 : !s32i loc(#loc351)
  } loc(#loc346)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %2 = cir.alloca !ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc355)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc170)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %7 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc117)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb1 loc(#loc359)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc121)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %12 = cir.binop(div, %10, %11) : !s32i loc(#loc360)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc180)
    cir.br ^bb2 loc(#loc177)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc162)
  } loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc181)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc363)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc364)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc365)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc366)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc367)
    %6 = cir.alloca !ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc368)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc199)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb1 loc(#loc370)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc189)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb2 loc(#loc371)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc371)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc205)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc205)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc206)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc208)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc209)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.br ^bb5 loc(#loc373)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc215)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc375)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc217)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc376)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc377)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc378)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc225)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc225)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc379)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc227)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc227)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc228)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc380)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc231)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc231)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc232)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc381)
    cir.br ^bb9 loc(#loc382)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc383)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc384)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc384)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc242)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc243)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc386)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc245)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc236)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc248)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc248)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc248)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc248)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc248)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc248)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc248)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc249)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc387)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc251)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc251)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb13 loc(#loc389)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc257)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc258)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc258)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc258)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc260)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc258)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc258)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc258)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc258)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc258)
  ^bb18(%70: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc258)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc258)
  ^bb20(%71: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc258)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc392)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc262)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc255)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc263)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc263)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc265)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc393)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc267)
    cir.store %78, %5 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    cir.br ^bb3 loc(#loc204)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc204)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc395)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc273)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc397)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc276)
    cir.br ^bb29 loc(#loc271)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc271)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc202)
  ^bb31:  // pred: ^bb30
    %85 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %86 = cir.get_member %6[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc117)
    cir.store %85, %86 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb32 loc(#loc399)
  ^bb32:  // pred: ^bb31
    %87 = cir.get_member %6[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc121)
    %88 = cir.load %87 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.store %88, %4 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb33 loc(#loc400)
  ^bb33:  // pred: ^bb32
    %89 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %90 = cir.const #cir.int<0> : !s32i loc(#loc284)
    %91 = cir.cmp(ne, %89, %90) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %91 ^bb34, ^bb35 loc(#loc402)
  ^bb34:  // pred: ^bb33
    %92 = cir.const #cir.int<100> : !s32i loc(#loc288)
    %93 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %94 = cir.binop(div, %92, %93) : !s32i loc(#loc403)
    cir.call @printIntLine(%94) : (!s32i) -> () loc(#loc290)
    cir.br ^bb36 loc(#loc286)
  ^bb35:  // pred: ^bb33
    %95 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc181)
    %96 = cir.cast(array_to_ptrdecay, %95 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%96) : (!cir.ptr<!s8i>) -> () loc(#loc291)
    cir.br ^bb36 loc(#loc282)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc282)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc280)
  ^bb38:  // pred: ^bb37
    cir.return loc(#loc183)
  } loc(#loc361)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":82:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":50:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":118:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":61:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":61:13)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":62:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":62:28)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":63:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":63:32)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":64:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":64:41)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":114:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":114:28)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":52:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":52:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":53:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":53:67)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":55:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":55:12)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":55:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":56:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":111:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":65:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":100:17)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":100:16)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:36)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:45)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:58)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:29)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":75:69)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":76:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":79:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":76:17)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":76:34)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":77:13)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":78:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:20)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:21)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:30)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:33)
#loc58 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:47)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":80:48)
#loc61 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":81:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":81:13)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":82:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":82:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":82:59)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":83:38)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":83:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":83:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":83:46)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":87:13)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:25)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:58)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:59)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:68)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:82)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:17)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":84:88)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":85:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":86:17)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:31)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:46)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:59)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:77)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:80)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:26)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":90:81)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":94:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:17)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:31)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:47)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":91:61)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":92:13)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":93:17)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":96:39)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":96:25)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":96:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":98:25)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":98:20)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":98:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":98:36)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":101:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":104:9)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":101:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":101:30)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":102:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":103:26)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":103:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":112:26)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":44:9)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":112:5)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":113:5)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":117:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":45:9)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":116:22)
#loc123 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":116:28)
#loc124 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":116:9)
#loc125 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":219:1)
#loc126 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":223:1)
#loc127 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":221:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":221:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":222:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":222:13)
#loc131 = loc("/usr/include/stdlib.h":575:1)
#loc132 = loc("/usr/include/stdlib.h":575:41)
#loc133 = loc("/usr/include/time.h":76:1)
#loc134 = loc("/usr/include/time.h":76:38)
#loc135 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc137 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":238:15)
#loc138 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":240:15)
#loc139 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":243:15)
#loc140 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":245:15)
#loc141 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":233:1)
#loc142 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":248:1)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":234:1)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":236:27)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":236:22)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":236:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":238:5)
#loc152 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":239:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":239:62)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":240:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":243:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":244:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":244:61)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":245:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":247:12)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":247:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":125:1)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":139:1)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":135:9)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":135:28)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":127:5)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":127:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":128:5)
#loc168 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":128:67)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":130:13)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":130:12)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":130:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":132:12)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":132:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":133:26)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":133:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":134:5)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":138:5)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":137:22)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":137:28)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":137:9)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":214:23)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":142:1)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":217:1)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":153:9)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":153:13)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":154:9)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":154:28)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":155:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":155:32)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":156:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":156:41)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":206:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":206:28)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":144:5)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":144:9)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":145:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":145:67)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":147:13)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":147:12)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":147:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":148:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":203:5)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":157:9)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":192:17)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":192:16)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:36)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:45)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:58)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:29)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:13)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":167:69)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":168:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":171:13)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":168:17)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":168:34)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":169:13)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":170:17)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:20)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:21)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:30)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:33)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:47)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":172:48)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":173:34)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":173:13)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":174:49)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":174:39)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":174:13)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":174:59)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":175:38)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":175:32)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":175:13)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":175:46)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":179:13)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:25)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:58)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:59)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:68)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:82)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:17)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":176:88)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":177:13)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":178:17)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:31)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:46)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:59)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:77)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:80)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:26)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:13)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":182:81)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":186:13)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:17)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:31)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:47)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":183:61)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":184:13)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":185:17)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":188:39)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":188:25)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":188:13)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":190:25)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":190:20)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":190:13)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":190:36)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":193:9)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":196:9)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":193:13)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":193:30)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":194:9)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":195:26)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":195:13)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":204:26)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":204:5)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":205:5)
#loc280 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":216:5)
#loc281 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":208:9)
#loc282 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":215:9)
#loc283 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":208:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":208:21)
#loc285 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":209:9)
#loc286 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":211:9)
#loc287 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":213:9)
#loc288 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":210:26)
#loc289 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":210:32)
#loc290 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":210:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_34.c":214:13)
#loc292 = loc(fused[#loc1, #loc2])
#loc293 = loc(fused[#loc3, #loc4])
#loc294 = loc(fused[#loc6, #loc7])
#loc295 = loc(fused[#loc8, #loc9])
#loc296 = loc(fused[#loc10, #loc11])
#loc297 = loc(fused[#loc12, #loc13])
#loc298 = loc(fused[#loc14, #loc15])
#loc299 = loc(fused[#loc16, #loc17])
#loc300 = loc(fused[#loc18, #loc19])
#loc301 = loc(fused[#loc20, #loc21])
#loc302 = loc(fused[#loc22, #loc23])
#loc303 = loc(fused[#loc24, #loc25])
#loc304 = loc(fused[#loc26, #loc27])
#loc305 = loc(fused[#loc28, #loc29])
#loc306 = loc(fused[#loc30, #loc31])
#loc307 = loc(fused[#loc32, #loc33])
#loc308 = loc(fused[#loc36, #loc34])
#loc309 = loc(fused[#loc37, #loc38])
#loc310 = loc(fused[#loc39, #loc40])
#loc311 = loc(fused[#loc46, #loc47])
#loc312 = loc(fused[#loc48, #loc49])
#loc313 = loc(fused[#loc50, #loc51])
#loc314 = loc(fused[#loc52, #loc49])
#loc315 = loc(fused[#loc54, #loc55])
#loc316 = loc(fused[#loc57, #loc58])
#loc317 = loc(fused[#loc59, #loc60])
#loc318 = loc(fused[#loc63, #loc61])
#loc319 = loc(fused[#loc67, #loc68])
#loc320 = loc(fused[#loc72, #loc73])
#loc321 = loc(fused[#loc74, #loc75])
#loc322 = loc(fused[#loc77, #loc78])
#loc323 = loc(fused[#loc79, #loc80])
#loc324 = loc(fused[#loc81, #loc82])
#loc325 = loc(fused[#loc83, #loc75])
#loc326 = loc(fused[#loc87, #loc88])
#loc327 = loc(fused[#loc91, #loc92])
#loc328 = loc(fused[#loc93, #loc94])
#loc329 = loc(fused[#loc95, #loc96])
#loc330 = loc(fused[#loc98, #loc99])
#loc331 = loc(fused[#loc100, #loc94])
#loc332 = loc(fused[#loc104, #loc102])
#loc333 = loc(fused[#loc107, #loc108])
#loc334 = loc(fused[#loc109, #loc110])
#loc335 = loc(fused[#loc111, #loc112])
#loc336 = loc(fused[#loc113, #loc110])
#loc337 = loc(fused[#loc118, #loc116])
#loc338 = loc(fused[#loc119, #loc120])
#loc339 = loc(fused[#loc122, #loc123])
#loc340 = loc(fused[#loc125, #loc126])
#loc341 = loc(fused[#loc127, #loc128])
#loc342 = loc(fused[#loc129, #loc130])
#loc343 = loc(fused[#loc131, #loc132])
#loc344 = loc(fused[#loc133, #loc134])
#loc345 = loc(fused[#loc135, #loc136])
#loc346 = loc(fused[#loc141, #loc142])
#loc349 = loc(fused[#loc152, #loc153])
#loc350 = loc(fused[#loc156, #loc157])
#loc351 = loc(fused[#loc160, #loc159])
#loc352 = loc(fused[#loc161, #loc162])
#loc353 = loc(fused[#loc163, #loc164])
#loc354 = loc(fused[#loc165, #loc166])
#loc355 = loc(fused[#loc167, #loc168])
#loc356 = loc(fused[#loc171, #loc169])
#loc357 = loc(fused[#loc173, #loc172])
#loc358 = loc(fused[#loc175, #loc174])
#loc359 = loc(fused[#loc176, #loc177])
#loc360 = loc(fused[#loc178, #loc179])
#loc361 = loc(fused[#loc182, #loc183])
#loc362 = loc(fused[#loc184, #loc185])
#loc363 = loc(fused[#loc186, #loc187])
#loc364 = loc(fused[#loc188, #loc189])
#loc365 = loc(fused[#loc190, #loc191])
#loc366 = loc(fused[#loc192, #loc193])
#loc367 = loc(fused[#loc194, #loc195])
#loc368 = loc(fused[#loc196, #loc197])
#loc369 = loc(fused[#loc200, #loc198])
#loc370 = loc(fused[#loc201, #loc202])
#loc371 = loc(fused[#loc203, #loc204])
#loc372 = loc(fused[#loc210, #loc211])
#loc373 = loc(fused[#loc212, #loc213])
#loc374 = loc(fused[#loc214, #loc215])
#loc375 = loc(fused[#loc216, #loc213])
#loc376 = loc(fused[#loc218, #loc219])
#loc377 = loc(fused[#loc221, #loc222])
#loc378 = loc(fused[#loc223, #loc224])
#loc379 = loc(fused[#loc226, #loc225])
#loc380 = loc(fused[#loc229, #loc230])
#loc381 = loc(fused[#loc233, #loc234])
#loc382 = loc(fused[#loc235, #loc236])
#loc383 = loc(fused[#loc238, #loc239])
#loc384 = loc(fused[#loc240, #loc241])
#loc385 = loc(fused[#loc242, #loc243])
#loc386 = loc(fused[#loc244, #loc236])
#loc387 = loc(fused[#loc248, #loc249])
#loc388 = loc(fused[#loc252, #loc253])
#loc389 = loc(fused[#loc254, #loc255])
#loc390 = loc(fused[#loc256, #loc257])
#loc391 = loc(fused[#loc259, #loc260])
#loc392 = loc(fused[#loc261, #loc255])
#loc393 = loc(fused[#loc265, #loc263])
#loc394 = loc(fused[#loc268, #loc269])
#loc395 = loc(fused[#loc270, #loc271])
#loc396 = loc(fused[#loc272, #loc273])
#loc397 = loc(fused[#loc274, #loc271])
#loc398 = loc(fused[#loc278, #loc277])
#loc399 = loc(fused[#loc279, #loc280])
#loc400 = loc(fused[#loc281, #loc282])
#loc401 = loc(fused[#loc283, #loc284])
#loc402 = loc(fused[#loc285, #loc286, #loc287, #loc282])
#loc403 = loc(fused[#loc288, #loc289])
