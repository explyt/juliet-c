!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc226)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_12_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc227)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc228)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc229)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc232)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc233)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc234)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
  cir.func private @close(!s32i) -> !s32i loc(#loc236)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc26)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc29)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc239)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc241)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc244)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc245)
    %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc246)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc227)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_12_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %9, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc250)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc250)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc52)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %13 ^bb2, ^bb44 loc(#loc251)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc252)
  ^bb3:  // pred: ^bb2
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc41)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
    %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
    cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc245)
    cir.br ^bb4 loc(#loc253)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc253)
  ^bb5:  // pred: ^bb36
    %19 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc63)
    cir.brcond %20 ^bb6, ^bb37 loc(#loc63)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc254)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %23 = cir.const #cir.int<6> : !s32i loc(#loc68)
    %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc69)
    cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb8 loc(#loc256)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc75)
    %28 = cir.cmp(eq, %25, %27) : !s32i, !cir.bool loc(#loc257)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc258)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc77)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc73)
  ^bb11:  // pred: ^bb10
    %29 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc259)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %31 = cir.const #cir.int<16> : !u64i loc(#loc260)
    cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc261)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc85)
    %34 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc262)
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %37 = cir.call @inet_addr(%36) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc88)
    %38 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc89)
    %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc90)
    cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc263)
    %40 = cir.const #cir.int<27015> : !s32i loc(#loc93)
    %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc93)
    %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc94)
    %43 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
    cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc264)
    cir.br ^bb12 loc(#loc265)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %45 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc266)
    %46 = cir.const #cir.int<16> : !u64i loc(#loc267)
    %47 = cir.cast(integral, %46 : !u64i), !u32i loc(#loc267)
    %48 = cir.call @connect(%44, %45, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc105)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc106)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %51 ^bb13, ^bb14 loc(#loc269)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc108)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc99)
  ^bb15:  // pred: ^bb14
    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %53 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc112)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc270)
    %57 = cir.const #cir.int<1> : !u64i loc(#loc271)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc117)
    %60 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %61 = cir.binop(sub, %59, %60) : !u64i loc(#loc272)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc119)
    %64 = cir.binop(sub, %61, %63) : !u64i loc(#loc273)
    %65 = cir.binop(mul, %57, %64) : !u64i loc(#loc274)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %67 = cir.call @recv(%52, %56, %65, %66) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
    %68 = cir.cast(integral, %67 : !s64i), !s32i loc(#loc122)
    cir.store %68, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb16 loc(#loc276)
  ^bb16:  // pred: ^bb15
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc128)
    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %72 ^bb17, ^bb18 loc(#loc129)
  ^bb17:  // pred: ^bb16
    %73 = cir.const #true loc(#loc129)
    cir.br ^bb23(%73 : !cir.bool) loc(#loc129)
  ^bb18:  // pred: ^bb16
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %76 ^bb19, ^bb20 loc(#loc129)
  ^bb19:  // pred: ^bb18
    %77 = cir.const #true loc(#loc129)
    cir.br ^bb21(%77 : !cir.bool) loc(#loc129)
  ^bb20:  // pred: ^bb18
    %78 = cir.const #false loc(#loc129)
    cir.br ^bb21(%78 : !cir.bool) loc(#loc129)
  ^bb21(%79: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc129)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%79 : !cir.bool) loc(#loc129)
  ^bb23(%80: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc129)
  ^bb24:  // pred: ^bb23
    cir.brcond %80 ^bb25, ^bb26 loc(#loc279)
  ^bb25:  // pred: ^bb24
    cir.br ^bb37 loc(#loc133)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc126)
  ^bb27:  // pred: ^bb26
    %81 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %82 = cir.cast(integral, %81 : !s32i), !s8i loc(#loc134)
    %83 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %84 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %86 = cir.cast(integral, %85 : !s32i), !u64i loc(#loc137)
    %87 = cir.const #cir.int<1> : !u64i loc(#loc280)
    %88 = cir.binop(div, %86, %87) : !u64i loc(#loc281)
    %89 = cir.binop(add, %84, %88) : !u64i loc(#loc282)
    %90 = cir.ptr_stride(%83 : !cir.ptr<!s8i>, %89 : !u64i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %82, %90 : !s8i, !cir.ptr<!s8i> loc(#loc283)
    %91 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %92 = cir.const #cir.int<13> : !s32i loc(#loc142)
    %93 = cir.call @strchr(%91, %92) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc143)
    cir.store %93, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    cir.br ^bb28 loc(#loc285)
  ^bb28:  // pred: ^bb27
    %94 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %95 = cir.cast(ptr_to_bool, %94 : !cir.ptr<!s8i>), !cir.bool loc(#loc148)
    cir.brcond %95 ^bb29, ^bb30 loc(#loc286)
  ^bb29:  // pred: ^bb28
    %96 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %97 = cir.cast(integral, %96 : !s32i), !s8i loc(#loc150)
    %98 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.store %97, %98 : !s8i, !cir.ptr<!s8i> loc(#loc287)
    cir.br ^bb30 loc(#loc147)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc147)
  ^bb31:  // pred: ^bb30
    %99 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %100 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %101 = cir.call @strchr(%99, %100) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc155)
    cir.store %101, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.br ^bb32 loc(#loc289)
  ^bb32:  // pred: ^bb31
    %102 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %103 = cir.cast(ptr_to_bool, %102 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
    cir.brcond %103 ^bb33, ^bb34 loc(#loc290)
  ^bb33:  // pred: ^bb32
    %104 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %105 = cir.cast(integral, %104 : !s32i), !s8i loc(#loc162)
    %106 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.store %105, %106 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    cir.br ^bb34 loc(#loc159)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc159)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc65)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc62)
  ^bb37:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb38 loc(#loc62)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc292)
  ^bb39:  // pred: ^bb38
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %108 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %109 = cir.unary(minus, %108) nsw : !s32i, !s32i loc(#loc168)
    %110 = cir.cmp(ne, %107, %109) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %110 ^bb40, ^bb41 loc(#loc294)
  ^bb40:  // pred: ^bb39
    %111 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %112 = cir.call @close(%111) : (!s32i) -> !s32i loc(#loc171)
    cir.br ^bb41 loc(#loc166)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc166)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc58)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc55)
  ^bb44:  // pred: ^bb1
    %113 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc172)
    %114 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc26)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc26)
    %117 = cir.call @strcat(%114, %116) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
    cir.br ^bb45 loc(#loc51)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc51)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc295)
  ^bb47:  // pred: ^bb46
    %118 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %119 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc29)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc29)
    %121 = cir.call @popen(%118, %120) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc177)
    cir.store %121, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc296)
    cir.br ^bb48 loc(#loc297)
  ^bb48:  // pred: ^bb47
    %122 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc182)
    %123 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc183)
    %124 = cir.cast(bitcast, %123 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc183)
    %125 = cir.cmp(ne, %122, %124) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc298)
    cir.brcond %125 ^bb49, ^bb50 loc(#loc299)
  ^bb49:  // pred: ^bb48
    %126 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
    %127 = cir.call @pclose(%126) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc186)
    cir.br ^bb50 loc(#loc181)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc181)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc175)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc33)
  } loc(#loc240)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc301)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc189)
    cir.return loc(#loc188)
  } loc(#loc300)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc304)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc226)
    %3 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc226)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc226)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    cir.br ^bb1 loc(#loc306)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc307)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc307)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc201)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc201)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc308)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc206)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
    cir.br ^bb4 loc(#loc204)
  ^bb3:  // pred: ^bb1
    %14 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc209)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc211)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc211)
    %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc209)
    cir.br ^bb4 loc(#loc200)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc309)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc215)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc215)
    %22 = cir.call @popen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc216)
    cir.store %22, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc310)
    cir.br ^bb7 loc(#loc311)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc221)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc222)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc312)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc313)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc224)
    %28 = cir.call @pclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc225)
    cir.br ^bb9 loc(#loc220)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc213)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc192)
  } loc(#loc302)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":159:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":159:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":62:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":62:26)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":93:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/string.h":149:1)
#loc25 = loc("/usr/include/string.h":150:14)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":137:22)
#loc27 = loc("/usr/include/stdio.h":903:1)
#loc28 = loc("/usr/include/stdio.h":904:3)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":142:28)
#loc30 = loc("/usr/include/stdio.h":897:1)
#loc31 = loc("/usr/include/stdio.h":897:36)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":59:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":148:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":71:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":71:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":72:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":72:32)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":73:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":73:19)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":74:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":74:36)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":75:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":75:41)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":140:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":140:15)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":61:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":61:12)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":63:12)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":63:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":64:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":138:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":64:8)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":64:33)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":65:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":133:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":135:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":66:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":132:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":75:30)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":75:37)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":76:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":121:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":121:20)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":77:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":120:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:40)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:49)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:62)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:33)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":86:73)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":87:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":90:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":87:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":87:38)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":88:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":89:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:24)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:25)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:34)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:37)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:51)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:17)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":91:52)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":92:38)
#loc86 = loc("/usr/include/netinet/in.h":249:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":92:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":93:43)
#loc89 = loc("/usr/include/netinet/in.h":251:20)
#loc90 = loc("/usr/include/netinet/in.h":33:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":93:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":93:63)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":94:42)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":94:36)
#loc95 = loc("/usr/include/netinet/in.h":250:15)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":94:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":94:50)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:17)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":98:17)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:29)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:62)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:63)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:72)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:86)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":95:92)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":96:17)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":97:21)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:35)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:59)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:66)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:64)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:50)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:73)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:76)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:87)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:92)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:98)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:108)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:109)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:112)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:30)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":102:113)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":106:17)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:21)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:35)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:51)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":103:65)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":104:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":105:21)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:61)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:22)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:32)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:45)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:56)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":108:57)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":110:34)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":110:40)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":110:27)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":110:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":110:44)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":111:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":114:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":111:21)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":112:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":113:32)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":113:22)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":113:21)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":115:34)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":115:40)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":115:27)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":115:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":115:44)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":116:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":119:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":116:21)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":117:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":118:32)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":118:22)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":118:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":122:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":125:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":122:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":122:34)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":123:13)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":124:30)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":124:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":137:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":137:16)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":139:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":147:5)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":142:22)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":142:16)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":142:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":142:31)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":143:9)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":146:9)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":143:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":143:21)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":144:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":145:20)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":145:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":182:1)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":185:1)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":184:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":184:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":156:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":180:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":172:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":172:15)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":158:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":158:12)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":160:12)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":160:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":161:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":170:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":161:8)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":161:33)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":162:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":165:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":167:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":164:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":164:16)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":164:22)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":169:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":169:16)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":169:22)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":171:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":179:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":174:22)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":174:28)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":174:16)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":174:9)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":174:31)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":175:9)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":178:9)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":175:13)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":175:21)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":176:9)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":177:20)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_12.c":177:13)
#loc226 = loc(fused[#loc1, #loc2])
#loc227 = loc(fused[#loc3, #loc4])
#loc228 = loc(fused[#loc5, #loc6])
#loc229 = loc(fused[#loc7, #loc8])
#loc230 = loc(fused[#loc9, #loc10])
#loc231 = loc(fused[#loc11, #loc12])
#loc232 = loc(fused[#loc14, #loc15])
#loc233 = loc(fused[#loc16, #loc17])
#loc234 = loc(fused[#loc18, #loc19])
#loc235 = loc(fused[#loc20, #loc21])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc24, #loc25])
#loc238 = loc(fused[#loc27, #loc28])
#loc239 = loc(fused[#loc30, #loc31])
#loc240 = loc(fused[#loc32, #loc33])
#loc241 = loc(fused[#loc34, #loc35])
#loc242 = loc(fused[#loc36, #loc37])
#loc243 = loc(fused[#loc38, #loc39])
#loc244 = loc(fused[#loc40, #loc41])
#loc245 = loc(fused[#loc42, #loc43])
#loc246 = loc(fused[#loc44, #loc45])
#loc247 = loc(fused[#loc46, #loc47])
#loc248 = loc(fused[#loc49, #loc48])
#loc249 = loc(fused[#loc50, #loc51])
#loc250 = loc(fused[#loc52, #loc53])
#loc251 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc252 = loc(fused[#loc57, #loc58])
#loc253 = loc(fused[#loc61, #loc62])
#loc254 = loc(fused[#loc64, #loc65])
#loc255 = loc(fused[#loc70, #loc71])
#loc256 = loc(fused[#loc72, #loc73])
#loc257 = loc(fused[#loc74, #loc75])
#loc258 = loc(fused[#loc76, #loc73])
#loc259 = loc(fused[#loc78, #loc79])
#loc260 = loc(fused[#loc81, #loc82])
#loc261 = loc(fused[#loc83, #loc84])
#loc262 = loc(fused[#loc87, #loc85])
#loc263 = loc(fused[#loc91, #loc92])
#loc264 = loc(fused[#loc96, #loc97])
#loc265 = loc(fused[#loc98, #loc99])
#loc266 = loc(fused[#loc101, #loc102])
#loc267 = loc(fused[#loc103, #loc104])
#loc268 = loc(fused[#loc105, #loc106])
#loc269 = loc(fused[#loc107, #loc99])
#loc270 = loc(fused[#loc113, #loc114])
#loc271 = loc(fused[#loc115, #loc116])
#loc272 = loc(fused[#loc117, #loc118])
#loc273 = loc(fused[#loc117, #loc119])
#loc274 = loc(fused[#loc115, #loc120])
#loc275 = loc(fused[#loc123, #loc124])
#loc276 = loc(fused[#loc125, #loc126])
#loc277 = loc(fused[#loc127, #loc128])
#loc278 = loc(fused[#loc130, #loc131])
#loc279 = loc(fused[#loc132, #loc126])
#loc280 = loc(fused[#loc138, #loc139])
#loc281 = loc(fused[#loc137, #loc139])
#loc282 = loc(fused[#loc136, #loc139])
#loc283 = loc(fused[#loc135, #loc134])
#loc284 = loc(fused[#loc144, #loc145])
#loc285 = loc(fused[#loc146, #loc147])
#loc286 = loc(fused[#loc149, #loc147])
#loc287 = loc(fused[#loc152, #loc150])
#loc288 = loc(fused[#loc156, #loc157])
#loc289 = loc(fused[#loc158, #loc159])
#loc290 = loc(fused[#loc161, #loc159])
#loc291 = loc(fused[#loc164, #loc162])
#loc292 = loc(fused[#loc165, #loc166])
#loc293 = loc(fused[#loc167, #loc168])
#loc294 = loc(fused[#loc169, #loc166])
#loc295 = loc(fused[#loc174, #loc175])
#loc296 = loc(fused[#loc178, #loc179])
#loc297 = loc(fused[#loc180, #loc181])
#loc298 = loc(fused[#loc182, #loc183])
#loc299 = loc(fused[#loc184, #loc181])
#loc300 = loc(fused[#loc187, #loc188])
#loc301 = loc(fused[#loc189, #loc190])
#loc302 = loc(fused[#loc191, #loc192])
#loc303 = loc(fused[#loc193, #loc194])
#loc304 = loc(fused[#loc195, #loc196])
#loc305 = loc(fused[#loc198, #loc197])
#loc306 = loc(fused[#loc199, #loc200])
#loc307 = loc(fused[#loc201, #loc202])
#loc308 = loc(fused[#loc203, #loc204, #loc205, #loc200])
#loc309 = loc(fused[#loc212, #loc213])
#loc310 = loc(fused[#loc217, #loc218])
#loc311 = loc(fused[#loc219, #loc220])
#loc312 = loc(fused[#loc221, #loc222])
#loc313 = loc(fused[#loc223, #loc220])
