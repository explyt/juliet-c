!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc235)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc236)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc237)
  cir.func private @printLongLongLine(!s64i) loc(#loc238)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc239)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc240)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc243)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc243)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc246)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc247)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc248)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc249)
          cir.store %11, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc246)
          cir.scope {
            %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc33)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s64i>, !cir.bool loc(#loc251)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc37)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc252)
          } loc(#loc250)
          %12 = cir.const #cir.int<5> : !s64i loc(#loc38)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc41)
          cir.store %12, %15 : !s64i, !cir.ptr<!s64i> loc(#loc253)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc44)
          %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc42)
          cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc45)
          %20 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc46)
          %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc47)
          %23 = cir.const #cir.int<130000> : !s32i loc(#loc48)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc48)
          %25 = cir.const #cir.int<8> : !u64i loc(#loc254)
          %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc255)
          %27 = cir.call @realloc(%22, %26) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc256)
          cir.store %28, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc257)
          cir.scope {
            %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc56)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc57)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s64i>, !cir.bool loc(#loc259)
            cir.if %32 {
              %33 = cir.const #cir.int<10> : !s64i loc(#loc59)
              %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc60)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %36 = cir.ptr_stride(%34 : !cir.ptr<!s64i>, %35 : !s32i), !cir.ptr<!s64i> loc(#loc62)
              cir.store %33, %36 : !s64i, !cir.ptr<!s64i> loc(#loc261)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc63)
              %38 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s64i>, %38 : !s32i), !cir.ptr<!s64i> loc(#loc65)
              %40 = cir.load %39 : !cir.ptr<!s64i>, !s64i loc(#loc63)
              cir.call @printLongLongLine(%40) : (!s64i) -> () loc(#loc66)
              %41 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc67)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc68)
              cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
            } loc(#loc260)
          } loc(#loc258)
        } loc(#loc245)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc263)
          %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc264)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc75)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc76)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc76)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc265)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc266)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc75)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc267)
          cir.store %12, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc263)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc82)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc269)
            cir.if %36 {
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc86)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
            } loc(#loc270)
          } loc(#loc268)
          %13 = cir.const #cir.int<5> : !s64i loc(#loc87)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc90)
          cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc271)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc93)
          %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc91)
          cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc94)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc95)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc96)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc97)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc97)
          %26 = cir.const #cir.int<8> : !u64i loc(#loc272)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc273)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc274)
          cir.store %29, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc275)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc105)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc106)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc277)
            cir.if %36 {
              %37 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
              cir.store %37, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc279)
              %38 = cir.const #cir.int<10> : !s64i loc(#loc110)
              %39 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s64i>, %40 : !s32i), !cir.ptr<!s64i> loc(#loc113)
              cir.store %38, %41 : !s64i, !cir.ptr<!s64i> loc(#loc280)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s64i>, %43 : !s32i), !cir.ptr<!s64i> loc(#loc116)
              %45 = cir.load %44 : !cir.ptr<!s64i>, !s64i loc(#loc114)
              cir.call @printLongLongLine(%45) : (!s64i) -> () loc(#loc117)
            } loc(#loc278)
          } loc(#loc276)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc118)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc119)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
        } loc(#loc262)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc14)
  } loc(#loc241)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc282)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    cir.return loc(#loc121)
  } loc(#loc281)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc285)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc285)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc128)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc128)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc288)
          %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc289)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc139)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc140)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc140)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc290)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc291)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc292)
          cir.store %12, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc288)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc145)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc146)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc294)
            cir.if %36 {
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc148)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc150)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc295)
          } loc(#loc293)
          %13 = cir.const #cir.int<5> : !s64i loc(#loc151)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc152)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc154)
          cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc296)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc155)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc156)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc157)
          %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc155)
          cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc158)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc159)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc160)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc160)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc161)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc161)
          %26 = cir.const #cir.int<8> : !u64i loc(#loc297)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc298)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc299)
          cir.store %29, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc300)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc169)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc170)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc302)
            cir.if %36 {
              %37 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc172)
              cir.store %37, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc304)
              %38 = cir.const #cir.int<10> : !s64i loc(#loc174)
              %39 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc175)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc176)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s64i>, %40 : !s32i), !cir.ptr<!s64i> loc(#loc177)
              cir.store %38, %41 : !s64i, !cir.ptr<!s64i> loc(#loc305)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc178)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc179)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s64i>, %43 : !s32i), !cir.ptr<!s64i> loc(#loc180)
              %45 = cir.load %44 : !cir.ptr<!s64i>, !s64i loc(#loc178)
              cir.call @printLongLongLine(%45) : (!s64i) -> () loc(#loc181)
            } loc(#loc303)
          } loc(#loc301)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc182)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc183)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc183)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
        } loc(#loc287)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc307)
          %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc308)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc190)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc191)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc191)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc309)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc310)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc311)
          cir.store %12, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc307)
          cir.scope {
            %33 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc196)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc197)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc197)
            %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc313)
            cir.if %36 {
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc199)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc201)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc199)
            } loc(#loc314)
          } loc(#loc312)
          %13 = cir.const #cir.int<5> : !s64i loc(#loc202)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc203)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc204)
          %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc205)
          cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc315)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc206)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc207)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc208)
          %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc206)
          cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc209)
          %21 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc210)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc211)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc211)
          %24 = cir.const #cir.int<130000> : !s32i loc(#loc212)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc212)
          %26 = cir.const #cir.int<8> : !u64i loc(#loc316)
          %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc317)
          %28 = cir.call @realloc(%23, %27) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc318)
          cir.store %29, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc319)
          cir.scope {
            %33 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc220)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc221)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc221)
            %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s64i>, !cir.bool loc(#loc321)
            cir.if %36 {
              %37 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc223)
              cir.store %37, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc323)
              %38 = cir.const #cir.int<10> : !s64i loc(#loc225)
              %39 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc226)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc227)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s64i>, %40 : !s32i), !cir.ptr<!s64i> loc(#loc228)
              cir.store %38, %41 : !s64i, !cir.ptr<!s64i> loc(#loc324)
              %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc229)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc230)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s64i>, %43 : !s32i), !cir.ptr<!s64i> loc(#loc231)
              %45 = cir.load %44 : !cir.ptr<!s64i>, !s64i loc(#loc229)
              cir.call @printLongLongLine(%45) : (!s64i) -> () loc(#loc232)
            } loc(#loc322)
          } loc(#loc320)
          %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc233)
          %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc234)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc234)
          cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc233)
        } loc(#loc306)
      } loc(#loc286)
    } loc(#loc284)
    cir.return loc(#loc125)
  } loc(#loc283)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("/usr/include/stdlib.h":683:1)
#loc10 = loc("/usr/include/stdlib.h":684:14)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":24:1)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":67:1)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":26:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":66:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":26:8)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":26:33)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":27:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":44:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":46:5)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":28:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":43:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:13)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:67)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:41)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:48)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:52)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":29:66)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:13)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:41)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:17)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:25)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:31)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:32)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:38)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":30:37)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":32:23)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":32:13)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":32:18)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":32:19)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":33:31)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":33:36)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":33:37)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":33:13)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:31)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:39)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:46)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:54)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:68)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:45)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:69)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":35:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":36:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":42:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":36:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":36:25)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":37:13)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":39:27)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":39:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":39:22)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":39:23)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":40:35)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":40:40)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":40:41)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":40:17)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":41:17)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":41:22)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":47:9)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":65:9)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:13)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:67)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":50:13)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":50:23)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:41)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:48)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:52)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":48:66)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:13)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:41)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:17)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:25)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:31)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:32)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:38)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":49:37)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":52:23)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":52:13)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":52:18)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":52:19)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":53:31)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":53:36)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":53:37)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":53:13)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:34)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:42)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:49)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:57)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:71)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:48)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:72)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":54:13)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":57:13)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":63:13)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":57:17)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":57:28)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":58:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":59:24)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":59:17)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":61:27)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":61:17)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":61:22)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":61:23)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":62:35)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":62:40)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":62:41)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":62:17)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":64:13)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":64:18)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":122:1)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":125:1)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":124:5)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":124:11)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":74:1)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":120:1)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":76:5)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":119:5)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":76:8)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":76:33)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":77:5)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":97:5)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":99:5)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":78:9)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":96:9)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:13)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:67)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":81:13)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":81:23)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:41)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:48)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:52)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":79:66)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:13)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:41)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:17)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:25)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:31)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:32)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:38)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":80:37)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":83:23)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":83:13)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":83:18)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":83:19)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":84:31)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":84:36)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":84:37)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":84:13)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:34)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:42)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:49)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:57)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:71)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:48)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:72)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":85:13)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":88:13)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":94:13)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":88:17)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":88:28)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":89:13)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":90:24)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":90:17)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":92:27)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":92:17)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":92:22)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":92:23)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":93:35)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":93:40)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":93:41)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":93:17)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":95:13)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":95:18)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":100:9)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":118:9)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:13)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:67)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":103:13)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":103:23)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:41)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:48)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:52)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":101:66)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:13)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:41)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:17)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:25)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:31)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:32)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:38)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":102:37)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":105:23)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":105:13)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":105:18)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":105:19)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":106:31)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":106:36)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":106:37)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":106:13)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:34)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:42)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:49)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:57)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:71)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:48)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:72)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":107:13)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":110:13)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":116:13)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":110:17)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":110:28)
#loc222 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":111:13)
#loc223 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":112:24)
#loc224 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":112:17)
#loc225 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":114:27)
#loc226 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":114:17)
#loc227 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":114:22)
#loc228 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":114:23)
#loc229 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":115:35)
#loc230 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":115:40)
#loc231 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":115:41)
#loc232 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":115:17)
#loc233 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":117:13)
#loc234 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_12.c":117:18)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc9, #loc10])
#loc240 = loc(fused[#loc11, #loc12])
#loc241 = loc(fused[#loc13, #loc14])
#loc242 = loc(fused[#loc15, #loc16])
#loc243 = loc(fused[#loc17, #loc18])
#loc244 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc245 = loc(fused[#loc22, #loc23])
#loc246 = loc(fused[#loc24, #loc25])
#loc247 = loc(fused[#loc28, #loc29])
#loc248 = loc(fused[#loc27, #loc29])
#loc249 = loc(fused[#loc26, #loc25])
#loc250 = loc(fused[#loc30, #loc31])
#loc251 = loc(fused[#loc32, #loc33])
#loc252 = loc(fused[#loc34, #loc31])
#loc253 = loc(fused[#loc39, #loc38])
#loc254 = loc(fused[#loc49, #loc50])
#loc255 = loc(fused[#loc51, #loc50])
#loc256 = loc(fused[#loc46, #loc52])
#loc257 = loc(fused[#loc53, #loc52])
#loc258 = loc(fused[#loc54, #loc55])
#loc259 = loc(fused[#loc56, #loc57])
#loc260 = loc(fused[#loc58, #loc55])
#loc261 = loc(fused[#loc60, #loc59])
#loc262 = loc(fused[#loc69, #loc70])
#loc263 = loc(fused[#loc71, #loc72])
#loc264 = loc(fused[#loc73, #loc74])
#loc265 = loc(fused[#loc77, #loc78])
#loc266 = loc(fused[#loc76, #loc78])
#loc267 = loc(fused[#loc75, #loc72])
#loc268 = loc(fused[#loc79, #loc80])
#loc269 = loc(fused[#loc81, #loc82])
#loc270 = loc(fused[#loc83, #loc80])
#loc271 = loc(fused[#loc88, #loc87])
#loc272 = loc(fused[#loc98, #loc99])
#loc273 = loc(fused[#loc100, #loc99])
#loc274 = loc(fused[#loc95, #loc101])
#loc275 = loc(fused[#loc102, #loc101])
#loc276 = loc(fused[#loc103, #loc104])
#loc277 = loc(fused[#loc105, #loc106])
#loc278 = loc(fused[#loc107, #loc104])
#loc279 = loc(fused[#loc109, #loc108])
#loc280 = loc(fused[#loc111, #loc110])
#loc281 = loc(fused[#loc120, #loc121])
#loc282 = loc(fused[#loc122, #loc123])
#loc283 = loc(fused[#loc124, #loc125])
#loc284 = loc(fused[#loc126, #loc127])
#loc285 = loc(fused[#loc128, #loc129])
#loc286 = loc(fused[#loc130, #loc131, #loc132, #loc127])
#loc287 = loc(fused[#loc133, #loc134])
#loc288 = loc(fused[#loc135, #loc136])
#loc289 = loc(fused[#loc137, #loc138])
#loc290 = loc(fused[#loc141, #loc142])
#loc291 = loc(fused[#loc140, #loc142])
#loc292 = loc(fused[#loc139, #loc136])
#loc293 = loc(fused[#loc143, #loc144])
#loc294 = loc(fused[#loc145, #loc146])
#loc295 = loc(fused[#loc147, #loc144])
#loc296 = loc(fused[#loc152, #loc151])
#loc297 = loc(fused[#loc162, #loc163])
#loc298 = loc(fused[#loc164, #loc163])
#loc299 = loc(fused[#loc159, #loc165])
#loc300 = loc(fused[#loc166, #loc165])
#loc301 = loc(fused[#loc167, #loc168])
#loc302 = loc(fused[#loc169, #loc170])
#loc303 = loc(fused[#loc171, #loc168])
#loc304 = loc(fused[#loc173, #loc172])
#loc305 = loc(fused[#loc175, #loc174])
#loc306 = loc(fused[#loc184, #loc185])
#loc307 = loc(fused[#loc186, #loc187])
#loc308 = loc(fused[#loc188, #loc189])
#loc309 = loc(fused[#loc192, #loc193])
#loc310 = loc(fused[#loc191, #loc193])
#loc311 = loc(fused[#loc190, #loc187])
#loc312 = loc(fused[#loc194, #loc195])
#loc313 = loc(fused[#loc196, #loc197])
#loc314 = loc(fused[#loc198, #loc195])
#loc315 = loc(fused[#loc203, #loc202])
#loc316 = loc(fused[#loc213, #loc214])
#loc317 = loc(fused[#loc215, #loc214])
#loc318 = loc(fused[#loc210, #loc216])
#loc319 = loc(fused[#loc217, #loc216])
#loc320 = loc(fused[#loc218, #loc219])
#loc321 = loc(fused[#loc220, #loc221])
#loc322 = loc(fused[#loc222, #loc219])
#loc323 = loc(fused[#loc224, #loc223])
#loc324 = loc(fused[#loc226, #loc225])
