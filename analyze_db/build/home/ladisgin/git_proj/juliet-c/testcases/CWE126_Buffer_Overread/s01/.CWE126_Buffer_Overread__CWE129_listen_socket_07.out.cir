!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":425:10)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":425:14)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":425:20)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":425:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc659 = loc(fused[#loc191, #loc192])
#loc660 = loc(fused[#loc193, #loc194])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc583)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc584)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc585)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc586)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc587)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc588)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc589)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc590)
  cir.func private @close(!s32i) -> !s32i loc(#loc591)
  cir.func private @printIntLine(!s32i) loc(#loc592)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc593)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc595)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc29)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc598)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc601)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc602)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc603)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc604)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc605)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc43)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc603)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc45)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc604)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc50)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc52)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc607)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc59)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc59)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc609)
                cir.if %64 {
                  cir.break loc(#loc61)
                } loc(#loc610)
              } loc(#loc608)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc611)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc612)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc613)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc69)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc69)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc614)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc72)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc72)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc615)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc76)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc76)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc616)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc618)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc619)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc619)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc89)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc89)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc620)
                cir.if %68 {
                  cir.break loc(#loc91)
                } loc(#loc621)
              } loc(#loc617)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc95)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc97)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc623)
                cir.if %66 {
                  cir.break loc(#loc99)
                } loc(#loc624)
              } loc(#loc622)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc625)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc109)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc627)
                cir.if %64 {
                  cir.break loc(#loc111)
                } loc(#loc628)
              } loc(#loc626)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc114)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc114)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc114)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc114)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc114)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc114)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc114)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc115)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc629)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc117)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc630)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc123)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc632)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc124)
                  cir.yield %66 : !cir.bool loc(#loc124)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc126)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc633)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc124)
                    cir.yield %70 : !cir.bool loc(#loc124)
                  }, false {
                    %70 = cir.const #false loc(#loc124)
                    cir.yield %70 : !cir.bool loc(#loc124)
                  }) : (!cir.bool) -> !cir.bool loc(#loc124)
                  cir.yield %69 : !cir.bool loc(#loc124)
                }) : (!cir.bool) -> !cir.bool loc(#loc124)
                cir.if %65 {
                  cir.break loc(#loc128)
                } loc(#loc634)
              } loc(#loc631)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc129)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc129)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc131)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc635)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc133)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc636)
              cir.yield loc(#loc49)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc136)
              cir.condition(%17) loc(#loc136)
            } loc(#loc606)
          } loc(#loc606)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc140)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc638)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc143)
            } loc(#loc639)
          } loc(#loc637)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc147)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc641)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc150)
            } loc(#loc642)
          } loc(#loc640)
        } loc(#loc600)
      } loc(#loc599)
    } loc(#loc597)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc154)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc644)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc647)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc647)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc647)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc163)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc649)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc168)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc168)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc169)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc23)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc170)
            } loc(#loc650)
          } loc(#loc648)
        } loc(#loc646)
      } loc(#loc645)
    } loc(#loc643)
    cir.return loc(#loc25)
  } loc(#loc594)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc652)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc653)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc175)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc654)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc177)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc655)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc179)
    cir.return loc(#loc172)
  } loc(#loc651)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc656)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc657)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc188)
  cir.func @main(%arg0: !s32i loc(fused[#loc191, #loc192]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc193, #loc194])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc659)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc660)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc190)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc195)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc196)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc197)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc197)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc198)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc185)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc661)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_07_good() : () -> () loc(#loc200)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc186)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc187)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc662)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_07_bad() : () -> () loc(#loc204)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc188)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc207)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc663)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc663)
    cir.return %17 : !s32i loc(#loc663)
  } loc(#loc658)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc210)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc665)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc216)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc666)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc221)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc668)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc671)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc672)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc673)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc674)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc675)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc230)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc230)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc673)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc232)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc232)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc674)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc237)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc238)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc239)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc677)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc246)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc246)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc679)
                cir.if %64 {
                  cir.break loc(#loc248)
                } loc(#loc680)
              } loc(#loc678)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc681)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc251)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc682)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc683)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc256)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc256)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc684)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc258)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc258)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc685)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc260)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc260)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc261)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc686)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc688)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc689)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc689)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc271)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc272)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc272)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc690)
                cir.if %68 {
                  cir.break loc(#loc274)
                } loc(#loc691)
              } loc(#loc687)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc277)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc278)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc279)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc280)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc280)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc693)
                cir.if %66 {
                  cir.break loc(#loc282)
                } loc(#loc694)
              } loc(#loc692)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc283)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc284)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc285)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc286)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc695)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc292)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc292)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc697)
                cir.if %64 {
                  cir.break loc(#loc294)
                } loc(#loc698)
              } loc(#loc696)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc295)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc296)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc296)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc297)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc297)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc297)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc297)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc297)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc297)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc297)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc298)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc298)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc699)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc299)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc300)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc700)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc306)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc306)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc702)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc307)
                  cir.yield %66 : !cir.bool loc(#loc307)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc309)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc703)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc307)
                    cir.yield %70 : !cir.bool loc(#loc307)
                  }, false {
                    %70 = cir.const #false loc(#loc307)
                    cir.yield %70 : !cir.bool loc(#loc307)
                  }) : (!cir.bool) -> !cir.bool loc(#loc307)
                  cir.yield %69 : !cir.bool loc(#loc307)
                }) : (!cir.bool) -> !cir.bool loc(#loc307)
                cir.if %65 {
                  cir.break loc(#loc311)
                } loc(#loc704)
              } loc(#loc701)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc312)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc312)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc314)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc314)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc705)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc315)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc316)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc706)
              cir.yield loc(#loc236)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc319)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc319)
              cir.condition(%17) loc(#loc319)
            } loc(#loc676)
          } loc(#loc676)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc322)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc323)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc323)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc708)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc325)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc326)
            } loc(#loc709)
          } loc(#loc707)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc329)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc330)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc330)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc711)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc332)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc333)
            } loc(#loc712)
          } loc(#loc710)
        } loc(#loc670)
      } loc(#loc669)
    } loc(#loc667)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc336)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc337)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc714)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc209)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc209)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc341)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc717)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc717)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc717)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc349)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc719)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc352)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc720)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc350)
                cir.yield %17 : !cir.bool loc(#loc350)
              }, false {
                %17 = cir.const #false loc(#loc350)
                cir.yield %17 : !cir.bool loc(#loc350)
              }) : (!cir.bool) -> !cir.bool loc(#loc350)
              cir.yield %16 : !cir.bool loc(#loc350)
            }, false {
              %13 = cir.const #false loc(#loc350)
              cir.yield %13 : !cir.bool loc(#loc350)
            }) : (!cir.bool) -> !cir.bool loc(#loc350)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc358)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc358)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc358)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc359)
            } else {
              %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc210)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc210)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc360)
            } loc(#loc721)
          } loc(#loc718)
        } loc(#loc716)
      } loc(#loc715)
    } loc(#loc713)
    cir.return loc(#loc212)
  } loc(#loc664)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc723)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc366)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc724)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc370)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc371)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc726)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc729)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc730)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc731)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc732)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc733)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc380)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc380)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc731)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc382)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc382)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc732)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc387)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc388)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc389)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc390)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc735)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc395)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc396)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc396)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc737)
                cir.if %64 {
                  cir.break loc(#loc398)
                } loc(#loc738)
              } loc(#loc736)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc739)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc401)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc740)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc741)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc406)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc406)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc742)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc408)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc408)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc743)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc410)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc410)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc411)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc744)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc416)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc746)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc747)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc747)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc421)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc422)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc422)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc748)
                cir.if %68 {
                  cir.break loc(#loc424)
                } loc(#loc749)
              } loc(#loc745)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc427)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc428)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc429)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc430)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc430)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc751)
                cir.if %66 {
                  cir.break loc(#loc432)
                } loc(#loc752)
              } loc(#loc750)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc433)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc434)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc435)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc436)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc753)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc442)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc442)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc755)
                cir.if %64 {
                  cir.break loc(#loc444)
                } loc(#loc756)
              } loc(#loc754)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc445)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc446)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc446)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc447)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc447)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc447)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc447)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc447)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc447)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc447)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc448)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc448)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc757)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc449)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc450)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc450)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc758)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc456)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc456)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc760)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc457)
                  cir.yield %66 : !cir.bool loc(#loc457)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc459)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc761)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc457)
                    cir.yield %70 : !cir.bool loc(#loc457)
                  }, false {
                    %70 = cir.const #false loc(#loc457)
                    cir.yield %70 : !cir.bool loc(#loc457)
                  }) : (!cir.bool) -> !cir.bool loc(#loc457)
                  cir.yield %69 : !cir.bool loc(#loc457)
                }) : (!cir.bool) -> !cir.bool loc(#loc457)
                cir.if %65 {
                  cir.break loc(#loc461)
                } loc(#loc762)
              } loc(#loc759)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc462)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc462)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc463)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc464)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc464)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc763)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc465)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc466)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc764)
              cir.yield loc(#loc386)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc469)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc469)
              cir.condition(%17) loc(#loc469)
            } loc(#loc734)
          } loc(#loc734)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc472)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc473)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc473)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc766)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc475)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc476)
            } loc(#loc767)
          } loc(#loc765)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc479)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc480)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc480)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc769)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc482)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc483)
            } loc(#loc770)
          } loc(#loc768)
        } loc(#loc728)
      } loc(#loc727)
    } loc(#loc725)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc486)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc487)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc772)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc775)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc775)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc775)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc495)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc496)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc777)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc499)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc778)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc497)
                cir.yield %17 : !cir.bool loc(#loc497)
              }, false {
                %17 = cir.const #false loc(#loc497)
                cir.yield %17 : !cir.bool loc(#loc497)
              }) : (!cir.bool) -> !cir.bool loc(#loc497)
              cir.yield %16 : !cir.bool loc(#loc497)
            }, false {
              %13 = cir.const #false loc(#loc497)
              cir.yield %13 : !cir.bool loc(#loc497)
            }) : (!cir.bool) -> !cir.bool loc(#loc497)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc504)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc505)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc505)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc505)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc506)
            } else {
              %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc507)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc507)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc508)
            } loc(#loc779)
          } loc(#loc776)
        } loc(#loc774)
      } loc(#loc773)
    } loc(#loc771)
    cir.return loc(#loc362)
  } loc(#loc722)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc781)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc513)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc514)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc782)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc518)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc519)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc784)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc523)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc523)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc524)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc525)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc786)
      } loc(#loc785)
    } loc(#loc783)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc529)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc530)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc788)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc791)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc791)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc791)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc538)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc539)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc793)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc543)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc544)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc544)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc544)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc545)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc546)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc546)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc547)
            } loc(#loc794)
          } loc(#loc792)
        } loc(#loc790)
      } loc(#loc789)
    } loc(#loc787)
    cir.return loc(#loc510)
  } loc(#loc780)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc796)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc552)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc553)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc797)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc557)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc558)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc799)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc560)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc801)
      } loc(#loc800)
    } loc(#loc798)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc583)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc564)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc565)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc803)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc806)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc806)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc806)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc573)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc574)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc808)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc578)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc579)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc579)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc579)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc580)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc581)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc581)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc582)
            } loc(#loc809)
          } loc(#loc807)
        } loc(#loc805)
      } loc(#loc804)
    } loc(#loc802)
    cir.return loc(#loc549)
  } loc(#loc795)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_07.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":45:1)
#loc2 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":138:27)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":49:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":142:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":51:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":51:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":53:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":53:12)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":53:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":54:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":125:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":54:8)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":54:20)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":55:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":56:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":124:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":61:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":61:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":62:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":62:32)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":63:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":63:35)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":64:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":64:35)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":65:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":65:45)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":66:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":109:21)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:39)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:48)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:61)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:32)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:17)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":76:72)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":77:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":80:17)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":77:21)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":77:37)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":78:17)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":79:21)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:24)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:25)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:34)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:37)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:51)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:17)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":81:52)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":82:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":82:17)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":83:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":83:17)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":84:42)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":84:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":84:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":84:50)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:17)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":88:17)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:26)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:58)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:59)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:68)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:82)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:21)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":85:88)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":86:17)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":87:21)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":89:17)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":92:17)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":89:28)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":89:42)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":89:21)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":89:61)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":90:17)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":91:21)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:39)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:53)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:59)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:32)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":93:63)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":94:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":97:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":94:21)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":94:37)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":95:17)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":96:21)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:35)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:49)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:62)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:80)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:83)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:30)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":99:84)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":103:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:21)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:35)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:48)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:51)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":100:65)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":101:17)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":102:21)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":105:43)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":105:29)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":105:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":107:29)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":107:24)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":107:17)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":107:40)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":109:20)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":110:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":113:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":110:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":110:33)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":111:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":112:30)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":112:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":114:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":117:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":114:17)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":114:33)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":115:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":116:30)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":116:17)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":126:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":141:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":126:8)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":126:20)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":127:5)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":128:9)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":140:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":129:13)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":129:34)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":132:13)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":139:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":132:17)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":132:25)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":133:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":135:13)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":137:13)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":134:37)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":134:30)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":134:17)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":138:17)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":408:1)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":414:1)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":410:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":410:14)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":411:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":411:14)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":412:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":412:14)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":413:5)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":413:14)
#loc181 = loc("/usr/include/stdlib.h":575:1)
#loc182 = loc("/usr/include/stdlib.h":575:41)
#loc183 = loc("/usr/include/time.h":76:1)
#loc184 = loc("/usr/include/time.h":76:38)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":430:15)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":432:15)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":435:15)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":437:15)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":425:1)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":440:1)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":426:1)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":428:27)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":428:22)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":428:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":430:5)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":431:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":431:58)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":432:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":435:5)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":436:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":436:57)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":437:5)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":439:12)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":439:5)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":229:19)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":242:27)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":149:1)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":246:1)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":151:5)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":151:9)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":153:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":153:12)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":153:5)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":154:5)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":225:5)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":154:8)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":154:20)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":155:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":156:9)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":224:9)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":161:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":161:17)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":162:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":162:32)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":163:13)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":163:35)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":164:13)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":164:35)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":165:13)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":165:45)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":166:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":209:21)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:39)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:48)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:61)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:32)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:17)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":176:72)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":177:17)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":180:17)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":177:21)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":177:37)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":178:17)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":179:21)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:24)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:25)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:34)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:37)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:51)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:17)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":181:52)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":182:38)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":182:17)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":183:43)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":183:17)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":184:42)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":184:36)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":184:17)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":184:50)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:17)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":188:17)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:26)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:58)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:59)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:68)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:82)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:21)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":185:88)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":186:17)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":187:21)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":189:17)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":192:17)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":189:28)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":189:42)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":189:21)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":189:61)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":190:17)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":191:21)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:39)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:53)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:59)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:32)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:17)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":193:63)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":194:17)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":197:17)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":194:21)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":194:37)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":195:17)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":196:21)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:35)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:49)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:62)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:80)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:83)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:30)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:17)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":199:84)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:17)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":203:17)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:21)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:35)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:48)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:51)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":200:65)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":201:17)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":202:21)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":205:43)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":205:29)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":205:17)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":207:29)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":207:24)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":207:17)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":207:40)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":209:20)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":210:13)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":213:13)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":210:17)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":210:33)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":211:13)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":212:30)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":212:17)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":214:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":217:13)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":214:17)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":214:33)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":215:13)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":216:30)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":216:17)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":226:5)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":245:5)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":226:8)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":226:20)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":227:5)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":230:5)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":232:5)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":229:9)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":233:9)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":244:9)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":234:13)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":234:34)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":243:13)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:17)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:25)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:27)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:30)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:38)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":236:40)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":237:13)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":239:13)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":241:13)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":238:37)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":238:30)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":238:17)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":242:17)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":249:1)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":341:1)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":251:5)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":251:9)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":253:13)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":253:12)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":253:5)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":254:5)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":325:5)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":254:8)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":254:20)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":255:5)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":256:9)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":324:9)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":261:13)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":261:17)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":262:13)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":262:32)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":263:13)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":263:35)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":264:13)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":264:35)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":265:13)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":265:45)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":266:13)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":309:21)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:39)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:48)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:61)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:32)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:17)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":276:72)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":277:17)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":280:17)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":277:21)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":277:37)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":278:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":279:21)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:24)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:25)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:34)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:37)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:51)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:17)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":281:52)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":282:38)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":282:17)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":283:43)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":283:17)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":284:42)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":284:36)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":284:17)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":284:50)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:17)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":288:17)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:26)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:58)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:59)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:68)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:82)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:21)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":285:88)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":286:17)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":287:21)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":289:17)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":292:17)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":289:28)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":289:42)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":289:21)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":289:61)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":290:17)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":291:21)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:39)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:53)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:59)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:32)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:17)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":293:63)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":294:17)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":297:17)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":294:21)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":294:37)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":295:17)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":296:21)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:35)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:49)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:62)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:80)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:83)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:30)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:17)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":299:84)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:17)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":303:17)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:21)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:35)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:48)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:51)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":300:65)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":301:17)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":302:21)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":305:43)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":305:29)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":305:17)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":307:29)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":307:24)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":307:17)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":307:40)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":309:20)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":310:13)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":313:13)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":310:17)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":310:33)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":311:13)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":312:30)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":312:17)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":314:13)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":317:13)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":314:17)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":314:33)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":315:13)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":316:30)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":316:17)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":326:5)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":340:5)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":326:8)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":326:20)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":327:5)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":328:9)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":339:9)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":329:13)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":329:34)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:13)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":338:13)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:17)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:25)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:27)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:30)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:38)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":331:40)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":332:13)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":334:13)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":336:13)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":333:37)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":333:30)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":333:17)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":337:27)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":337:17)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":344:1)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":376:1)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":346:5)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":346:9)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":348:13)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":348:12)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":348:5)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":349:5)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":359:5)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":349:8)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":349:20)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":350:5)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":353:5)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":355:5)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":352:19)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":352:9)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":358:16)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":358:9)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":360:5)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":375:5)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":360:8)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":360:20)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":361:5)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":362:9)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":374:9)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":363:13)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":363:34)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":366:13)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":373:13)
#loc538 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":366:17)
#loc539 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":366:25)
#loc540 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":367:13)
#loc541 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":369:13)
#loc542 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":371:13)
#loc543 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":368:37)
#loc544 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":368:30)
#loc545 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":368:17)
#loc546 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":372:27)
#loc547 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":372:17)
#loc548 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":379:1)
#loc549 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":406:1)
#loc550 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":381:5)
#loc551 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":381:9)
#loc552 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":383:13)
#loc553 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":383:12)
#loc554 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":383:5)
#loc555 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":384:5)
#loc556 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":389:5)
#loc557 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":384:8)
#loc558 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":384:20)
#loc559 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":385:5)
#loc560 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":388:16)
#loc561 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":388:9)
#loc562 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":390:5)
#loc563 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":405:5)
#loc564 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":390:8)
#loc565 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":390:20)
#loc566 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":391:5)
#loc567 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":392:9)
#loc568 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":404:9)
#loc569 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":393:13)
#loc570 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":393:34)
#loc571 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":396:13)
#loc572 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":403:13)
#loc573 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":396:17)
#loc574 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":396:25)
#loc575 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":397:13)
#loc576 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":399:13)
#loc577 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":401:13)
#loc578 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":398:37)
#loc579 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":398:30)
#loc580 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":398:17)
#loc581 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":402:27)
#loc582 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_07.c":402:17)
#loc583 = loc(fused[#loc1, #loc2])
#loc584 = loc(fused[#loc3, #loc4])
#loc585 = loc(fused[#loc5, #loc6])
#loc586 = loc(fused[#loc7, #loc8])
#loc587 = loc(fused[#loc9, #loc10])
#loc588 = loc(fused[#loc11, #loc12])
#loc589 = loc(fused[#loc13, #loc14])
#loc590 = loc(fused[#loc15, #loc16])
#loc591 = loc(fused[#loc17, #loc18])
#loc592 = loc(fused[#loc19, #loc20])
#loc593 = loc(fused[#loc21, #loc22])
#loc594 = loc(fused[#loc24, #loc25])
#loc595 = loc(fused[#loc26, #loc27])
#loc596 = loc(fused[#loc30, #loc28])
#loc597 = loc(fused[#loc31, #loc32])
#loc598 = loc(fused[#loc33, #loc34])
#loc599 = loc(fused[#loc35, #loc32])
#loc600 = loc(fused[#loc36, #loc37])
#loc601 = loc(fused[#loc38, #loc39])
#loc602 = loc(fused[#loc40, #loc41])
#loc603 = loc(fused[#loc42, #loc43])
#loc604 = loc(fused[#loc44, #loc45])
#loc605 = loc(fused[#loc46, #loc47])
#loc606 = loc(fused[#loc48, #loc49])
#loc607 = loc(fused[#loc54, #loc55])
#loc608 = loc(fused[#loc56, #loc57])
#loc609 = loc(fused[#loc58, #loc59])
#loc610 = loc(fused[#loc60, #loc57])
#loc611 = loc(fused[#loc62, #loc63])
#loc612 = loc(fused[#loc65, #loc66])
#loc613 = loc(fused[#loc67, #loc68])
#loc614 = loc(fused[#loc71, #loc69])
#loc615 = loc(fused[#loc75, #loc72])
#loc616 = loc(fused[#loc79, #loc80])
#loc617 = loc(fused[#loc81, #loc82])
#loc618 = loc(fused[#loc84, #loc85])
#loc619 = loc(fused[#loc86, #loc87])
#loc620 = loc(fused[#loc88, #loc89])
#loc621 = loc(fused[#loc90, #loc82])
#loc622 = loc(fused[#loc92, #loc93])
#loc623 = loc(fused[#loc96, #loc97])
#loc624 = loc(fused[#loc98, #loc93])
#loc625 = loc(fused[#loc104, #loc105])
#loc626 = loc(fused[#loc106, #loc107])
#loc627 = loc(fused[#loc108, #loc109])
#loc628 = loc(fused[#loc110, #loc107])
#loc629 = loc(fused[#loc114, #loc115])
#loc630 = loc(fused[#loc118, #loc119])
#loc631 = loc(fused[#loc120, #loc121])
#loc632 = loc(fused[#loc122, #loc123])
#loc633 = loc(fused[#loc125, #loc126])
#loc634 = loc(fused[#loc127, #loc121])
#loc635 = loc(fused[#loc131, #loc129])
#loc636 = loc(fused[#loc134, #loc135])
#loc637 = loc(fused[#loc137, #loc138])
#loc638 = loc(fused[#loc139, #loc140])
#loc639 = loc(fused[#loc141, #loc138])
#loc640 = loc(fused[#loc144, #loc145])
#loc641 = loc(fused[#loc146, #loc147])
#loc642 = loc(fused[#loc148, #loc145])
#loc643 = loc(fused[#loc151, #loc152])
#loc644 = loc(fused[#loc153, #loc154])
#loc645 = loc(fused[#loc155, #loc152])
#loc646 = loc(fused[#loc156, #loc157])
#loc647 = loc(fused[#loc158, #loc159])
#loc648 = loc(fused[#loc160, #loc161])
#loc649 = loc(fused[#loc162, #loc163])
#loc650 = loc(fused[#loc164, #loc165, #loc166, #loc161])
#loc651 = loc(fused[#loc171, #loc172])
#loc652 = loc(fused[#loc173, #loc174])
#loc653 = loc(fused[#loc175, #loc176])
#loc654 = loc(fused[#loc177, #loc178])
#loc655 = loc(fused[#loc179, #loc180])
#loc656 = loc(fused[#loc181, #loc182])
#loc657 = loc(fused[#loc183, #loc184])
#loc658 = loc(fused[#loc189, #loc190])
#loc661 = loc(fused[#loc200, #loc201])
#loc662 = loc(fused[#loc204, #loc205])
#loc663 = loc(fused[#loc208, #loc207])
#loc664 = loc(fused[#loc211, #loc212])
#loc665 = loc(fused[#loc213, #loc214])
#loc666 = loc(fused[#loc217, #loc215])
#loc667 = loc(fused[#loc218, #loc219])
#loc668 = loc(fused[#loc220, #loc221])
#loc669 = loc(fused[#loc222, #loc219])
#loc670 = loc(fused[#loc223, #loc224])
#loc671 = loc(fused[#loc225, #loc226])
#loc672 = loc(fused[#loc227, #loc228])
#loc673 = loc(fused[#loc229, #loc230])
#loc674 = loc(fused[#loc231, #loc232])
#loc675 = loc(fused[#loc233, #loc234])
#loc676 = loc(fused[#loc235, #loc236])
#loc677 = loc(fused[#loc241, #loc242])
#loc678 = loc(fused[#loc243, #loc244])
#loc679 = loc(fused[#loc245, #loc246])
#loc680 = loc(fused[#loc247, #loc244])
#loc681 = loc(fused[#loc249, #loc250])
#loc682 = loc(fused[#loc252, #loc253])
#loc683 = loc(fused[#loc254, #loc255])
#loc684 = loc(fused[#loc257, #loc256])
#loc685 = loc(fused[#loc259, #loc258])
#loc686 = loc(fused[#loc262, #loc263])
#loc687 = loc(fused[#loc264, #loc265])
#loc688 = loc(fused[#loc267, #loc268])
#loc689 = loc(fused[#loc269, #loc270])
#loc690 = loc(fused[#loc271, #loc272])
#loc691 = loc(fused[#loc273, #loc265])
#loc692 = loc(fused[#loc275, #loc276])
#loc693 = loc(fused[#loc279, #loc280])
#loc694 = loc(fused[#loc281, #loc276])
#loc695 = loc(fused[#loc287, #loc288])
#loc696 = loc(fused[#loc289, #loc290])
#loc697 = loc(fused[#loc291, #loc292])
#loc698 = loc(fused[#loc293, #loc290])
#loc699 = loc(fused[#loc297, #loc298])
#loc700 = loc(fused[#loc301, #loc302])
#loc701 = loc(fused[#loc303, #loc304])
#loc702 = loc(fused[#loc305, #loc306])
#loc703 = loc(fused[#loc308, #loc309])
#loc704 = loc(fused[#loc310, #loc304])
#loc705 = loc(fused[#loc314, #loc312])
#loc706 = loc(fused[#loc317, #loc318])
#loc707 = loc(fused[#loc320, #loc321])
#loc708 = loc(fused[#loc322, #loc323])
#loc709 = loc(fused[#loc324, #loc321])
#loc710 = loc(fused[#loc327, #loc328])
#loc711 = loc(fused[#loc329, #loc330])
#loc712 = loc(fused[#loc331, #loc328])
#loc713 = loc(fused[#loc334, #loc335])
#loc714 = loc(fused[#loc336, #loc337])
#loc715 = loc(fused[#loc338, #loc339, #loc340, #loc335])
#loc716 = loc(fused[#loc342, #loc343])
#loc717 = loc(fused[#loc344, #loc345])
#loc718 = loc(fused[#loc346, #loc347])
#loc719 = loc(fused[#loc348, #loc349])
#loc720 = loc(fused[#loc351, #loc353])
#loc721 = loc(fused[#loc354, #loc355, #loc356, #loc347])
#loc722 = loc(fused[#loc361, #loc362])
#loc723 = loc(fused[#loc363, #loc364])
#loc724 = loc(fused[#loc367, #loc365])
#loc725 = loc(fused[#loc368, #loc369])
#loc726 = loc(fused[#loc370, #loc371])
#loc727 = loc(fused[#loc372, #loc369])
#loc728 = loc(fused[#loc373, #loc374])
#loc729 = loc(fused[#loc375, #loc376])
#loc730 = loc(fused[#loc377, #loc378])
#loc731 = loc(fused[#loc379, #loc380])
#loc732 = loc(fused[#loc381, #loc382])
#loc733 = loc(fused[#loc383, #loc384])
#loc734 = loc(fused[#loc385, #loc386])
#loc735 = loc(fused[#loc391, #loc392])
#loc736 = loc(fused[#loc393, #loc394])
#loc737 = loc(fused[#loc395, #loc396])
#loc738 = loc(fused[#loc397, #loc394])
#loc739 = loc(fused[#loc399, #loc400])
#loc740 = loc(fused[#loc402, #loc403])
#loc741 = loc(fused[#loc404, #loc405])
#loc742 = loc(fused[#loc407, #loc406])
#loc743 = loc(fused[#loc409, #loc408])
#loc744 = loc(fused[#loc412, #loc413])
#loc745 = loc(fused[#loc414, #loc415])
#loc746 = loc(fused[#loc417, #loc418])
#loc747 = loc(fused[#loc419, #loc420])
#loc748 = loc(fused[#loc421, #loc422])
#loc749 = loc(fused[#loc423, #loc415])
#loc750 = loc(fused[#loc425, #loc426])
#loc751 = loc(fused[#loc429, #loc430])
#loc752 = loc(fused[#loc431, #loc426])
#loc753 = loc(fused[#loc437, #loc438])
#loc754 = loc(fused[#loc439, #loc440])
#loc755 = loc(fused[#loc441, #loc442])
#loc756 = loc(fused[#loc443, #loc440])
#loc757 = loc(fused[#loc447, #loc448])
#loc758 = loc(fused[#loc451, #loc452])
#loc759 = loc(fused[#loc453, #loc454])
#loc760 = loc(fused[#loc455, #loc456])
#loc761 = loc(fused[#loc458, #loc459])
#loc762 = loc(fused[#loc460, #loc454])
#loc763 = loc(fused[#loc464, #loc462])
#loc764 = loc(fused[#loc467, #loc468])
#loc765 = loc(fused[#loc470, #loc471])
#loc766 = loc(fused[#loc472, #loc473])
#loc767 = loc(fused[#loc474, #loc471])
#loc768 = loc(fused[#loc477, #loc478])
#loc769 = loc(fused[#loc479, #loc480])
#loc770 = loc(fused[#loc481, #loc478])
#loc771 = loc(fused[#loc484, #loc485])
#loc772 = loc(fused[#loc486, #loc487])
#loc773 = loc(fused[#loc488, #loc485])
#loc774 = loc(fused[#loc489, #loc490])
#loc775 = loc(fused[#loc491, #loc492])
#loc776 = loc(fused[#loc493, #loc494])
#loc777 = loc(fused[#loc495, #loc496])
#loc778 = loc(fused[#loc498, #loc500])
#loc779 = loc(fused[#loc501, #loc502, #loc503, #loc494])
#loc780 = loc(fused[#loc509, #loc510])
#loc781 = loc(fused[#loc511, #loc512])
#loc782 = loc(fused[#loc515, #loc513])
#loc783 = loc(fused[#loc516, #loc517])
#loc784 = loc(fused[#loc518, #loc519])
#loc785 = loc(fused[#loc520, #loc521, #loc522, #loc517])
#loc786 = loc(fused[#loc526, #loc525])
#loc787 = loc(fused[#loc527, #loc528])
#loc788 = loc(fused[#loc529, #loc530])
#loc789 = loc(fused[#loc531, #loc528])
#loc790 = loc(fused[#loc532, #loc533])
#loc791 = loc(fused[#loc534, #loc535])
#loc792 = loc(fused[#loc536, #loc537])
#loc793 = loc(fused[#loc538, #loc539])
#loc794 = loc(fused[#loc540, #loc541, #loc542, #loc537])
#loc795 = loc(fused[#loc548, #loc549])
#loc796 = loc(fused[#loc550, #loc551])
#loc797 = loc(fused[#loc554, #loc552])
#loc798 = loc(fused[#loc555, #loc556])
#loc799 = loc(fused[#loc557, #loc558])
#loc800 = loc(fused[#loc559, #loc556])
#loc801 = loc(fused[#loc561, #loc560])
#loc802 = loc(fused[#loc562, #loc563])
#loc803 = loc(fused[#loc564, #loc565])
#loc804 = loc(fused[#loc566, #loc563])
#loc805 = loc(fused[#loc567, #loc568])
#loc806 = loc(fused[#loc569, #loc570])
#loc807 = loc(fused[#loc571, #loc572])
#loc808 = loc(fused[#loc573, #loc574])
#loc809 = loc(fused[#loc575, #loc576, #loc577, #loc572])
