!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":31:23)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":31:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":58:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":58:35)
#loc109 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc59, #loc60])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc104)
  cir.global "private" constant cir_private @__const._ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_433badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc105)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc107)
  cir.func internal private @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc14)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc15)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc110)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc111)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc115)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc27)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc116)
    } loc(#loc114)
    cir.return loc(#loc10)
  } loc(#loc108)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc40)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc105)
      %3 = cir.get_global @__const._ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_433badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc44)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc46)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc47)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc47)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc124)
      %14 = cir.const #cir.int<1> : !u64i loc(#loc125)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc126)
      cir.libc.memmove %15 bytes from %7 to %5 : !cir.ptr<!void>, !u64i loc(#loc127)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    } loc(#loc123)
    cir.return loc(#loc35)
  } loc(#loc120)
  cir.func internal private @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc62)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc63)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc63)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc130)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc131)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc135)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc77)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc58)
  } loc(#loc128)
  cir.func internal private @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc82)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc84)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc104)
      %3 = cir.get_global @__const._ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc104)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc104)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc88)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc89)
      %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc90)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc89)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc91)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc91)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc141)
      %14 = cir.const #cir.int<1> : !u64i loc(#loc142)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc143)
      cir.libc.memmove %15 bytes from %7 to %5 : !cir.ptr<!void>, !u64i loc(#loc144)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc99)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
    } loc(#loc140)
    cir.return loc(#loc79)
  } loc(#loc137)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43L7goodG2BEv() : () -> () loc(#loc103)
    cir.return loc(#loc102)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":71:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":71:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":44:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":44:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":36:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":32:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:30)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:41)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:42)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":35:29)
#loc28 = loc("/usr/include/string.h":407:1)
#loc29 = loc("/usr/include/string.h":408:33)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":38:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":51:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":40:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":40:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":41:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":41:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":42:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":43:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":50:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:32)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:39)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:49)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:54)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:65)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:31)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":47:66)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":48:19)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":48:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":49:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":49:14)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":58:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":63:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":59:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:20)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:28)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:31)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:45)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:46)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":61:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:33)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:30)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":62:29)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":65:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":78:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":67:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":67:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":68:12)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":68:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":69:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":70:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":77:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:23)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:32)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:39)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:49)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:54)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:65)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:31)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":74:66)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":75:19)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":75:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":76:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":76:14)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":80:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":83:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_43.cpp":82:5)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc16, #loc17])
#loc111 = loc(fused[#loc15, #loc17])
#loc112 = loc(fused[#loc14, #loc18])
#loc113 = loc(fused[#loc19, #loc18])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc22, #loc23])
#loc116 = loc(fused[#loc24, #loc21])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc30, #loc31])
#loc119 = loc(fused[#loc32, #loc33])
#loc120 = loc(fused[#loc34, #loc35])
#loc121 = loc(fused[#loc36, #loc37])
#loc122 = loc(fused[#loc39, #loc38])
#loc123 = loc(fused[#loc41, #loc42])
#loc124 = loc(fused[#loc45, #loc47])
#loc125 = loc(fused[#loc48, #loc49])
#loc126 = loc(fused[#loc50, #loc49])
#loc127 = loc(fused[#loc51, #loc52])
#loc128 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc67, #loc66])
#loc132 = loc(fused[#loc62, #loc68])
#loc133 = loc(fused[#loc69, #loc68])
#loc134 = loc(fused[#loc70, #loc71])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc74, #loc71])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc80, #loc81])
#loc139 = loc(fused[#loc83, #loc82])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc89, #loc91])
#loc142 = loc(fused[#loc92, #loc93])
#loc143 = loc(fused[#loc94, #loc93])
#loc144 = loc(fused[#loc95, #loc96])
#loc145 = loc(fused[#loc101, #loc102])
