!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc307 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":250:10)
#loc308 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":250:14)
#loc309 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":250:20)
#loc310 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":250:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc446 = loc(fused[#loc307, #loc308])
#loc447 = loc(fused[#loc309, #loc310])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc324)
    cir.return %2 : !s32i loc(#loc324)
  } loc(#loc323)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc325)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc326)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc327)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc328)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc329)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc330)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc331)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc332)
  cir.func private @close(!s32i) -> !s32i loc(#loc333)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc334)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc336)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc337)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc337)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc337)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc35)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc340)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc343)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc344)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc345)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc346)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc347)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc348)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc47)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc346)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc49)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc347)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc52)
          cir.store %18, %11 : !u64i, !cir.ptr<!u64i> loc(#loc348)
          cir.scope {
            cir.do {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc56)
              %20 = cir.const #cir.int<1> : !u32i loc(#loc57)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc57)
              %22 = cir.const #cir.int<6> : !u32i loc(#loc58)
              %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc58)
              %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc59)
              cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc350)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc65)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc65)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc352)
                cir.if %80 {
                  cir.break loc(#loc67)
                } loc(#loc353)
              } loc(#loc351)
              %25 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc354)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc355)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc356)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc75)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc75)
              %30 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc357)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc78)
              %33 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc358)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc82)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc82)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc83)
              %38 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc359)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %78 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc361)
                %79 = cir.const #cir.int<16> : !u64i loc(#loc362)
                %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc362)
                %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc94)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc95)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc363)
                cir.if %84 {
                  cir.break loc(#loc97)
                } loc(#loc364)
              } loc(#loc360)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %78 = cir.const #cir.int<5> : !s32i loc(#loc101)
                %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc102)
                %80 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc103)
                %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc366)
                cir.if %82 {
                  cir.break loc(#loc105)
                } loc(#loc367)
              } loc(#loc365)
              %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc107)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc108)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
              cir.store %42, %10 : !s32i, !cir.ptr<!s32i> loc(#loc368)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc115)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc370)
                cir.if %80 {
                  cir.break loc(#loc117)
                } loc(#loc371)
              } loc(#loc369)
              %43 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
              %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc120)
              %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc121)
              %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc372)
              %48 = cir.const #cir.int<1> : !u64i loc(#loc373)
              %49 = cir.const #cir.int<4096> : !s32i loc(#loc126)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc126)
              %51 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc374)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc128)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc128)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc375)
              %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc376)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc130)
              %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc131)
              %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc131)
              cir.store %59, %6 : !s32i, !cir.ptr<!s32i> loc(#loc377)
              cir.scope {
                %77 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc137)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc137)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc379)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc138)
                  cir.yield %82 : !cir.bool loc(#loc138)
                }, false {
                  %82 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc140)
                  %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc380)
                  %85 = cir.ternary(%84, true {
                    %86 = cir.const #true loc(#loc138)
                    cir.yield %86 : !cir.bool loc(#loc138)
                  }, false {
                    %86 = cir.const #false loc(#loc138)
                    cir.yield %86 : !cir.bool loc(#loc138)
                  }) : (!cir.bool) -> !cir.bool loc(#loc138)
                  cir.yield %85 : !cir.bool loc(#loc138)
                }) : (!cir.bool) -> !cir.bool loc(#loc138)
                cir.if %81 {
                  cir.break loc(#loc142)
                } loc(#loc381)
              } loc(#loc378)
              %60 = cir.const #cir.int<0> : !s8i loc(#loc143)
              %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              %62 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc146)
              %65 = cir.const #cir.int<1> : !u64i loc(#loc382)
              %66 = cir.binop(div, %64, %65) : !u64i loc(#loc383)
              %67 = cir.binop(add, %62, %66) : !u64i loc(#loc384)
              %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc149)
              cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc385)
              %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              %70 = cir.const #cir.int<13> : !s8i loc(#loc151)
              %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc151)
              %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc152)
              cir.store %72, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
              cir.scope {
                %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s8i loc(#loc159)
                  %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                  cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc389)
                } loc(#loc388)
              } loc(#loc387)
              %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
              %74 = cir.const #cir.int<10> : !s8i loc(#loc163)
              %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc163)
              %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc164)
              cir.store %76, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
              cir.scope {
                %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc169)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s8i loc(#loc171)
                  %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                  cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc393)
                } loc(#loc392)
              } loc(#loc391)
              cir.yield loc(#loc55)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc174)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc174)
              cir.condition(%20) loc(#loc174)
            } loc(#loc349)
          } loc(#loc349)
          cir.scope {
            %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc177)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc178)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc178)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc395)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc181)
            } loc(#loc396)
          } loc(#loc394)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc185)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc398)
            cir.if %22 {
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc188)
            } loc(#loc399)
          } loc(#loc397)
        } loc(#loc342)
      } loc(#loc341)
    } loc(#loc339)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc401)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc194)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc195)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc402)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc196)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc197)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc403)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc198)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc404)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc204)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc205)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc406)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc207)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc208)
        } loc(#loc407)
      } loc(#loc405)
    } loc(#loc400)
    cir.return loc(#loc26)
  } loc(#loc335)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    cir.return %2 : !s32i loc(#loc409)
  } loc(#loc408)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc213)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc410)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc216)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc412)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc413)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc413)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc413)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc223)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc414)
    cir.scope {
      %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc227)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc416)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc213)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc213)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc232)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc233)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
        %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc216)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc216)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc233)
      } loc(#loc417)
    } loc(#loc415)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc419)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc240)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc241)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc420)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc242)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc243)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc421)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc244)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc422)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc250)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc251)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc424)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc254)
        } loc(#loc425)
      } loc(#loc423)
    } loc(#loc418)
    cir.return loc(#loc218)
  } loc(#loc411)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc427)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc428)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc428)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc428)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc429)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc265)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc431)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc268)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
        %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc270)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc268)
      } loc(#loc432)
    } loc(#loc430)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc434)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc276)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc277)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc435)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc278)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc279)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc436)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc280)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc437)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc285)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc286)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc287)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc439)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc290)
        } loc(#loc440)
      } loc(#loc438)
    } loc(#loc433)
    cir.return loc(#loc256)
  } loc(#loc426)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_084goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_08L8goodG2B1Ev() : () -> () loc(#loc293)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_08L8goodG2B2Ev() : () -> () loc(#loc294)
    cir.return loc(#loc292)
  } loc(#loc441)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc442)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc443)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc444)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc304)
  cir.func @main(%arg0: !s32i loc(fused[#loc307, #loc308]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc309, #loc310])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc446)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc447)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc306)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc311)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc312)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc313)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc313)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc314)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc301)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc301)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc315)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_084goodEv() : () -> () loc(#loc316)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc302)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc302)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc317)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc303)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc303)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc318)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_083badEv() : () -> () loc(#loc319)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc304)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc304)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc320)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc321)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    cir.return %15 : !s32i loc(#loc448)
  } loc(#loc445)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":55:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":58:1)
#loc3 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":57:12)
#loc4 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":57:5)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/fcntl.h":209:1)
#loc24 = loc("/usr/include/fcntl.h":209:56)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":70:1)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":166:1)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":72:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":72:12)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":73:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":73:37)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":74:12)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":74:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":75:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":156:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":75:8)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":75:26)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":76:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":77:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":155:9)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":82:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":82:17)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":83:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":83:32)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":84:13)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":84:19)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":85:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":85:35)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":86:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":86:35)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":87:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":87:41)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":87:30)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":87:37)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":88:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":140:21)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:39)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:48)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:61)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:32)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":98:72)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":99:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":102:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":99:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":99:37)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":100:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":101:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:24)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:25)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:34)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:37)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:51)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:17)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":103:52)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":104:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":104:17)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":105:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":105:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":106:42)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":106:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":106:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":106:50)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:17)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":110:17)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:26)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:58)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:59)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:68)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:82)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:21)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":107:88)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":108:17)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":109:21)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":111:17)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":114:17)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":111:28)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":111:42)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":111:21)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":111:61)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":112:17)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":113:21)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:39)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:53)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:59)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:32)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":115:63)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":116:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":119:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":116:21)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":116:37)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":117:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":118:21)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:35)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:58)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:65)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:63)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:49)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:72)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:75)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:86)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:91)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:106)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:116)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:117)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:120)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:30)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:17)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":121:121)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":125:17)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:21)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:35)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:48)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:51)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":122:65)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":123:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":124:21)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:61)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:17)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:22)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:32)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:45)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:56)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":127:57)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":129:34)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":129:40)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":129:27)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":129:17)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":129:44)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":130:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":133:17)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":130:21)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":131:17)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":132:32)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":132:22)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":132:21)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":134:34)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":134:40)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":134:27)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":134:17)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":134:44)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":135:17)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":138:17)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":135:21)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":136:17)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":137:32)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":137:22)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":137:21)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":140:20)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":141:13)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":144:13)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":141:17)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":141:33)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":142:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":143:30)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":143:17)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":145:13)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":148:13)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":145:17)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":145:33)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":146:13)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":147:30)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":147:17)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":157:5)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":165:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":158:9)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":158:13)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:25)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:31)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:38)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:47)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:55)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:20)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":160:63)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":161:9)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":164:9)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":161:13)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":161:26)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":161:25)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":162:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":163:19)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":163:13)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":60:1)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":63:1)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":62:12)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":62:5)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":181:19)
#loc214 = loc("/usr/include/string.h":149:1)
#loc215 = loc("/usr/include/string.h":150:14)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":190:22)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":173:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":202:1)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":175:5)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":175:12)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":176:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":176:37)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":177:12)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":177:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":178:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":192:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":178:8)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":178:27)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":179:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":182:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":184:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":181:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":190:9)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":190:16)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":193:5)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":201:5)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":194:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":194:13)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:25)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:31)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:38)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:47)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:55)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:20)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":196:63)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":197:9)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":200:9)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":197:13)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":197:26)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":197:25)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":198:9)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":199:19)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":199:13)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":205:1)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":229:1)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":207:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":207:12)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":208:5)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":208:37)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":209:12)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":209:5)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":210:5)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":219:5)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":210:8)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":210:26)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":211:5)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":217:9)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":217:16)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":217:22)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":220:5)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":228:5)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":221:9)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":221:13)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:25)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:31)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:38)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:47)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:55)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:20)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:9)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":223:63)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":224:9)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":227:9)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":224:13)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":224:26)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":224:25)
#loc288 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":225:9)
#loc289 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":226:19)
#loc290 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":226:13)
#loc291 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":231:1)
#loc292 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":235:1)
#loc293 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":233:5)
#loc294 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":234:5)
#loc295 = loc("/usr/include/stdlib.h":575:1)
#loc296 = loc("/usr/include/stdlib.h":575:41)
#loc297 = loc("/usr/include/time.h":76:1)
#loc298 = loc("/usr/include/time.h":76:38)
#loc299 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc300 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc301 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":255:15)
#loc302 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":257:15)
#loc303 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":260:15)
#loc304 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":262:15)
#loc305 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":250:1)
#loc306 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":265:1)
#loc311 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":251:1)
#loc312 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":253:27)
#loc313 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":253:22)
#loc314 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":253:5)
#loc315 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":255:5)
#loc316 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":256:5)
#loc317 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":257:5)
#loc318 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":260:5)
#loc319 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":261:5)
#loc320 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":262:5)
#loc321 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":264:12)
#loc322 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_08.cpp":264:5)
#loc323 = loc(fused[#loc1, #loc2])
#loc324 = loc(fused[#loc4, #loc3])
#loc325 = loc(fused[#loc5, #loc6])
#loc326 = loc(fused[#loc7, #loc8])
#loc327 = loc(fused[#loc9, #loc10])
#loc328 = loc(fused[#loc11, #loc12])
#loc329 = loc(fused[#loc13, #loc14])
#loc330 = loc(fused[#loc15, #loc16])
#loc331 = loc(fused[#loc17, #loc18])
#loc332 = loc(fused[#loc19, #loc20])
#loc333 = loc(fused[#loc21, #loc22])
#loc334 = loc(fused[#loc23, #loc24])
#loc335 = loc(fused[#loc25, #loc26])
#loc336 = loc(fused[#loc27, #loc28])
#loc337 = loc(fused[#loc29, #loc30])
#loc338 = loc(fused[#loc32, #loc31])
#loc339 = loc(fused[#loc33, #loc34])
#loc340 = loc(fused[#loc35, #loc36])
#loc341 = loc(fused[#loc37, #loc34])
#loc342 = loc(fused[#loc38, #loc39])
#loc343 = loc(fused[#loc40, #loc41])
#loc344 = loc(fused[#loc42, #loc43])
#loc345 = loc(fused[#loc44, #loc45])
#loc346 = loc(fused[#loc46, #loc47])
#loc347 = loc(fused[#loc48, #loc49])
#loc348 = loc(fused[#loc50, #loc51])
#loc349 = loc(fused[#loc54, #loc55])
#loc350 = loc(fused[#loc60, #loc61])
#loc351 = loc(fused[#loc62, #loc63])
#loc352 = loc(fused[#loc64, #loc65])
#loc353 = loc(fused[#loc66, #loc63])
#loc354 = loc(fused[#loc68, #loc69])
#loc355 = loc(fused[#loc71, #loc72])
#loc356 = loc(fused[#loc73, #loc74])
#loc357 = loc(fused[#loc77, #loc75])
#loc358 = loc(fused[#loc81, #loc78])
#loc359 = loc(fused[#loc85, #loc86])
#loc360 = loc(fused[#loc87, #loc88])
#loc361 = loc(fused[#loc90, #loc91])
#loc362 = loc(fused[#loc92, #loc93])
#loc363 = loc(fused[#loc94, #loc95])
#loc364 = loc(fused[#loc96, #loc88])
#loc365 = loc(fused[#loc98, #loc99])
#loc366 = loc(fused[#loc102, #loc103])
#loc367 = loc(fused[#loc104, #loc99])
#loc368 = loc(fused[#loc110, #loc111])
#loc369 = loc(fused[#loc112, #loc113])
#loc370 = loc(fused[#loc114, #loc115])
#loc371 = loc(fused[#loc116, #loc113])
#loc372 = loc(fused[#loc122, #loc123])
#loc373 = loc(fused[#loc124, #loc125])
#loc374 = loc(fused[#loc126, #loc127])
#loc375 = loc(fused[#loc126, #loc128])
#loc376 = loc(fused[#loc124, #loc129])
#loc377 = loc(fused[#loc132, #loc133])
#loc378 = loc(fused[#loc134, #loc135])
#loc379 = loc(fused[#loc136, #loc137])
#loc380 = loc(fused[#loc139, #loc140])
#loc381 = loc(fused[#loc141, #loc135])
#loc382 = loc(fused[#loc147, #loc148])
#loc383 = loc(fused[#loc146, #loc148])
#loc384 = loc(fused[#loc145, #loc148])
#loc385 = loc(fused[#loc144, #loc143])
#loc386 = loc(fused[#loc153, #loc154])
#loc387 = loc(fused[#loc155, #loc156])
#loc388 = loc(fused[#loc158, #loc156])
#loc389 = loc(fused[#loc161, #loc159])
#loc390 = loc(fused[#loc165, #loc166])
#loc391 = loc(fused[#loc167, #loc168])
#loc392 = loc(fused[#loc170, #loc168])
#loc393 = loc(fused[#loc173, #loc171])
#loc394 = loc(fused[#loc175, #loc176])
#loc395 = loc(fused[#loc177, #loc178])
#loc396 = loc(fused[#loc179, #loc176])
#loc397 = loc(fused[#loc182, #loc183])
#loc398 = loc(fused[#loc184, #loc185])
#loc399 = loc(fused[#loc186, #loc183])
#loc400 = loc(fused[#loc189, #loc190])
#loc401 = loc(fused[#loc191, #loc192])
#loc402 = loc(fused[#loc194, #loc195])
#loc403 = loc(fused[#loc196, #loc197])
#loc404 = loc(fused[#loc199, #loc200])
#loc405 = loc(fused[#loc201, #loc202])
#loc406 = loc(fused[#loc203, #loc204])
#loc407 = loc(fused[#loc206, #loc202])
#loc408 = loc(fused[#loc209, #loc210])
#loc409 = loc(fused[#loc212, #loc211])
#loc410 = loc(fused[#loc214, #loc215])
#loc411 = loc(fused[#loc217, #loc218])
#loc412 = loc(fused[#loc219, #loc220])
#loc413 = loc(fused[#loc221, #loc222])
#loc414 = loc(fused[#loc224, #loc223])
#loc415 = loc(fused[#loc225, #loc226])
#loc416 = loc(fused[#loc227, #loc228])
#loc417 = loc(fused[#loc229, #loc230, #loc231, #loc226])
#loc418 = loc(fused[#loc235, #loc236])
#loc419 = loc(fused[#loc237, #loc238])
#loc420 = loc(fused[#loc240, #loc241])
#loc421 = loc(fused[#loc242, #loc243])
#loc422 = loc(fused[#loc245, #loc246])
#loc423 = loc(fused[#loc247, #loc248])
#loc424 = loc(fused[#loc249, #loc250])
#loc425 = loc(fused[#loc252, #loc248])
#loc426 = loc(fused[#loc255, #loc256])
#loc427 = loc(fused[#loc257, #loc258])
#loc428 = loc(fused[#loc259, #loc260])
#loc429 = loc(fused[#loc262, #loc261])
#loc430 = loc(fused[#loc263, #loc264])
#loc431 = loc(fused[#loc265, #loc266])
#loc432 = loc(fused[#loc267, #loc264])
#loc433 = loc(fused[#loc271, #loc272])
#loc434 = loc(fused[#loc273, #loc274])
#loc435 = loc(fused[#loc276, #loc277])
#loc436 = loc(fused[#loc278, #loc279])
#loc437 = loc(fused[#loc281, #loc282])
#loc438 = loc(fused[#loc283, #loc284])
#loc439 = loc(fused[#loc285, #loc286])
#loc440 = loc(fused[#loc288, #loc284])
#loc441 = loc(fused[#loc291, #loc292])
#loc442 = loc(fused[#loc295, #loc296])
#loc443 = loc(fused[#loc297, #loc298])
#loc444 = loc(fused[#loc299, #loc300])
#loc445 = loc(fused[#loc305, #loc306])
#loc448 = loc(fused[#loc322, #loc321])
