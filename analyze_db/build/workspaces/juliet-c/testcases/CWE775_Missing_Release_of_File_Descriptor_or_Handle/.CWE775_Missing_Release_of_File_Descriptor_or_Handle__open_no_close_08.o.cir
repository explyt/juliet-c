!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc9)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc12)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc105)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc13)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc14)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc106)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc15)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.scope {
      %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc109)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc20)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc20)
      cir.if %14 {
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc5)
  } loc(#loc102)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc111)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.return %2 : !s32i loc(#loc115)
  } loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private @close(!s32i) -> !s32i loc(#loc117)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc43)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc45)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc45)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc47)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc121)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc48)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc49)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc122)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc50)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.scope {
      %12 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc125)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc55)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc55)
      cir.if %14 {
        %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc64)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc65)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc128)
          cir.if %18 {
            %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc68)
          } loc(#loc129)
        } loc(#loc127)
      } loc(#loc126)
    } loc(#loc124)
    cir.return loc(#loc39)
  } loc(#loc118)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %2 : !s32i loc(#loc131)
  } loc(#loc130)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc80)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc80)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc81)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc82)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc135)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc83)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc84)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc136)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc85)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.scope {
      %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc139)
      %13 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc90)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc90)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc96)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc97)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc142)
          cir.if %18 {
            %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc100)
          } loc(#loc143)
        } loc(#loc141)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc74)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:17)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":43:1)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":55:1)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":45:5)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":45:9)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:13)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:12)
#loc10 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:5)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:39)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:46)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:55)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:63)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:12)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:5)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:71)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:5)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":54:5)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:8)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:26)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":51:5)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":102:1)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":106:1)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":104:5)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":104:14)
#loc27 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":105:5)
#loc28 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":105:14)
#loc29 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":31:1)
#loc30 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":34:1)
#loc31 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":33:12)
#loc32 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":33:5)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":72:19)
#loc36 = loc("/usr/include/unistd.h":358:1)
#loc37 = loc("/usr/include/unistd.h":358:27)
#loc38 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":62:1)
#loc39 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":82:1)
#loc40 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":64:5)
#loc41 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":64:9)
#loc42 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:13)
#loc43 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:12)
#loc44 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:5)
#loc45 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:17)
#loc46 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:39)
#loc47 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:46)
#loc48 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:55)
#loc49 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:63)
#loc50 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:12)
#loc51 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:5)
#loc52 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:71)
#loc53 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:5)
#loc54 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":81:5)
#loc55 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:8)
#loc56 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:27)
#loc57 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":70:5)
#loc58 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":73:5)
#loc59 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":75:5)
#loc60 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":72:9)
#loc61 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:9)
#loc62 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":80:9)
#loc63 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:13)
#loc64 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:22)
#loc65 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:21)
#loc66 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":78:9)
#loc67 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":79:19)
#loc68 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":79:13)
#loc69 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":36:1)
#loc70 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":39:1)
#loc71 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":38:12)
#loc72 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":38:5)
#loc73 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":85:1)
#loc74 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":100:1)
#loc75 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":87:5)
#loc76 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":87:9)
#loc77 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:13)
#loc78 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:12)
#loc79 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:5)
#loc80 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:17)
#loc81 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:39)
#loc82 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:46)
#loc83 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:55)
#loc84 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:63)
#loc85 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:12)
#loc86 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:5)
#loc87 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:71)
#loc88 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:5)
#loc89 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":99:5)
#loc90 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:8)
#loc91 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:26)
#loc92 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":93:5)
#loc93 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:9)
#loc94 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":98:9)
#loc95 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:13)
#loc96 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:22)
#loc97 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:21)
#loc98 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":96:9)
#loc99 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":97:19)
#loc100 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":97:13)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc4, #loc5])
#loc103 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc10, #loc8])
#loc105 = loc(fused[#loc11, #loc12])
#loc106 = loc(fused[#loc13, #loc14])
#loc107 = loc(fused[#loc16, #loc17])
#loc108 = loc(fused[#loc18, #loc19])
#loc109 = loc(fused[#loc20, #loc21])
#loc110 = loc(fused[#loc22, #loc19])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc25, #loc26])
#loc113 = loc(fused[#loc27, #loc28])
#loc114 = loc(fused[#loc29, #loc30])
#loc115 = loc(fused[#loc32, #loc31])
#loc116 = loc(fused[#loc33, #loc34])
#loc117 = loc(fused[#loc36, #loc37])
#loc118 = loc(fused[#loc38, #loc39])
#loc119 = loc(fused[#loc40, #loc41])
#loc120 = loc(fused[#loc44, #loc42])
#loc121 = loc(fused[#loc46, #loc47])
#loc122 = loc(fused[#loc48, #loc49])
#loc123 = loc(fused[#loc51, #loc52])
#loc124 = loc(fused[#loc53, #loc54])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc127 = loc(fused[#loc61, #loc62])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc66, #loc62])
#loc130 = loc(fused[#loc69, #loc70])
#loc131 = loc(fused[#loc72, #loc71])
#loc132 = loc(fused[#loc73, #loc74])
#loc133 = loc(fused[#loc75, #loc76])
#loc134 = loc(fused[#loc79, #loc77])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc84])
#loc137 = loc(fused[#loc86, #loc87])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc91])
#loc140 = loc(fused[#loc92, #loc89])
#loc141 = loc(fused[#loc93, #loc94])
#loc142 = loc(fused[#loc95, #loc96])
#loc143 = loc(fused[#loc98, #loc94])
