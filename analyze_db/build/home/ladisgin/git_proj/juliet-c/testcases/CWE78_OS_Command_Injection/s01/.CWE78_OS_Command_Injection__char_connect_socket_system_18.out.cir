!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":175:10)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":175:14)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":175:20)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":175:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc295 = loc(fused[#loc182, #loc183])
#loc296 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc224)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_18_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc225)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc226)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc227)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc229)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc230)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc231)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
  cir.func private @close(!s32i) -> !s32i loc(#loc233)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc26)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc236)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc239)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc240)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc241)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc242)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc243)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_18_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc225)
    cir.copy %7 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc225)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.goto "source" loc(#loc245)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc47)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc40)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
    cir.store %13, %6 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.scope {
      cir.do {
        %14 = cir.const #cir.int<2> : !s32i loc(#loc52)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %16 = cir.const #cir.int<6> : !s32i loc(#loc54)
        %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc247)
        cir.scope {
          %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc60)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc61)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc61)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc249)
          cir.if %71 {
            cir.break loc(#loc63)
          } loc(#loc250)
        } loc(#loc248)
        %18 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc251)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %20 = cir.const #cir.int<16> : !u64i loc(#loc252)
        cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc253)
        %21 = cir.const #cir.int<2> : !s32i loc(#loc71)
        %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc71)
        %23 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
        cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc254)
        %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
        %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
        %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
        %27 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
        %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
        cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc255)
        %29 = cir.const #cir.int<27015> : !s32i loc(#loc79)
        %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc79)
        %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
        %32 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
        cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc256)
        cir.scope {
          %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %69 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc258)
          %70 = cir.const #cir.int<16> : !u64i loc(#loc259)
          %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc259)
          %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
          %73 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc92)
          %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc260)
          cir.if %75 {
            cir.break loc(#loc94)
          } loc(#loc261)
        } loc(#loc257)
        %33 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
        %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %35 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc97)
        %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc98)
        %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc262)
        %38 = cir.const #cir.int<1> : !u64i loc(#loc263)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc103)
        %41 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc104)
        %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc264)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc105)
        %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc265)
        %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc266)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
        %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc108)
        cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc267)
        cir.scope {
          %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc114)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc269)
          %72 = cir.ternary(%71, true {
            %73 = cir.const #true loc(#loc115)
            cir.yield %73 : !cir.bool loc(#loc115)
          }, false {
            %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %74 = cir.const #cir.int<0> : !s32i loc(#loc117)
            %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc270)
            %76 = cir.ternary(%75, true {
              %77 = cir.const #true loc(#loc115)
              cir.yield %77 : !cir.bool loc(#loc115)
            }, false {
              %77 = cir.const #false loc(#loc115)
              cir.yield %77 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.yield %76 : !cir.bool loc(#loc115)
          }) : (!cir.bool) -> !cir.bool loc(#loc115)
          cir.if %72 {
            cir.break loc(#loc119)
          } loc(#loc271)
        } loc(#loc268)
        %50 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc120)
        %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        %53 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc122)
        %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc123)
        %56 = cir.const #cir.int<1> : !u64i loc(#loc272)
        %57 = cir.binop(div, %55, %56) : !u64i loc(#loc273)
        %58 = cir.binop(add, %53, %57) : !u64i loc(#loc274)
        %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc126)
        cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc275)
        %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc127)
        %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %62 = cir.const #cir.int<13> : !s32i loc(#loc129)
        %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
        cir.store %63, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc134)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc136)
            %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc279)
          } loc(#loc278)
        } loc(#loc277)
        %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc139)
        %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
        %66 = cir.const #cir.int<10> : !s32i loc(#loc141)
        %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
        cir.store %67, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc146)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc148)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc148)
            %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc283)
          } loc(#loc282)
        } loc(#loc281)
        cir.yield loc(#loc51)
      } while {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc151)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc151)
        cir.condition(%15) loc(#loc151)
      } loc(#loc246)
    } loc(#loc246)
    cir.scope {
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc155)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc285)
      cir.if %17 {
        %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc158)
      } loc(#loc286)
    } loc(#loc284)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %15 = cir.call @system(%14) : (!cir.ptr<!s8i>) -> !s32i loc(#loc162)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc163)
      %17 = cir.cmp(ne, %15, %16) : !s32i, !cir.bool loc(#loc288)
      cir.if %17 {
        %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc26)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc165)
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc166)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc167)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
      } loc(#loc289)
    } loc(#loc287)
    cir.return loc(#loc30)
  } loc(#loc237)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc170)
    cir.return loc(#loc169)
  } loc(#loc290)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc292)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc296)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_18_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_18_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    cir.return %17 : !s32i loc(#loc299)
  } loc(#loc294)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc224)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc224)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc224)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
    cir.goto "source" loc(#loc304)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc211)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc212)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc202)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc202)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
      %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc217)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc218)
      %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc306)
      cir.if %12 {
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc220)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc220)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc221)
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc222)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc223)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc222)
      } loc(#loc307)
    } loc(#loc305)
    cir.return loc(#loc204)
  } loc(#loc301)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":146:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":146:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":59:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":59:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":90:49)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdlib.h":923:1)
#loc23 = loc("/usr/include/stdlib.h":923:41)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":133:19)
#loc27 = loc("/usr/include/stdlib.h":756:1)
#loc28 = loc("/usr/include/stdlib.h":756:70)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":56:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":136:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":58:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":58:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":68:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":68:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":69:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":69:28)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":70:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":70:15)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":71:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":71:32)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":72:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":72:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":60:12)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":60:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":61:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":61:10)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":62:1)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":72:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":72:33)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":73:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":118:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:36)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:45)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:58)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:29)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":83:69)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":84:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":87:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":84:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":84:34)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":85:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":86:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:20)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:30)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:33)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:47)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":88:48)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":89:34)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":89:13)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":90:39)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":90:13)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":90:59)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":91:38)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":91:32)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":91:13)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":91:46)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:13)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":95:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:58)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:59)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:68)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:82)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":92:88)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":93:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":94:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:31)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:55)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:62)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:60)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:46)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:69)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:72)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:83)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:88)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:94)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:104)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:105)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:108)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:26)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:13)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":99:109)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":103:13)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:31)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:44)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:47)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":100:61)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":101:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":102:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:57)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:13)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:18)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:28)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:41)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:52)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":105:53)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":107:23)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":107:30)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":107:36)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":107:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":107:40)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":108:13)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":111:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":108:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":109:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":110:28)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":110:18)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":110:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":112:23)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":112:30)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":112:36)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":112:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":112:40)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":113:13)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":116:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":113:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":114:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":115:28)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":115:18)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":115:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":118:16)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":119:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":122:9)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":119:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":119:30)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":120:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":121:26)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":121:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":131:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":135:5)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":131:16)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":131:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":131:25)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":132:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":133:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":134:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":134:14)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":160:1)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":163:1)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":162:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":162:13)
#loc172 = loc("/usr/include/stdlib.h":575:1)
#loc173 = loc("/usr/include/stdlib.h":575:41)
#loc174 = loc("/usr/include/time.h":76:1)
#loc175 = loc("/usr/include/time.h":76:38)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":180:15)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":182:15)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":185:15)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":187:15)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":175:1)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":190:1)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":176:1)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":178:27)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":178:22)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":178:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":180:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":181:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":181:68)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":182:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":185:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":186:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":186:67)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":187:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":189:12)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":189:5)
#loc200 = loc("/usr/include/string.h":149:1)
#loc201 = loc("/usr/include/string.h":150:14)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":151:18)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":143:1)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":158:1)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":145:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":145:12)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":147:12)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":147:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":148:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":148:10)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":149:1)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":151:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":151:12)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":153:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":157:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":153:16)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":153:9)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":153:25)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":154:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":155:19)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":155:9)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":156:9)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_18.c":156:14)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc5, #loc6])
#loc227 = loc(fused[#loc7, #loc8])
#loc228 = loc(fused[#loc9, #loc10])
#loc229 = loc(fused[#loc12, #loc13])
#loc230 = loc(fused[#loc14, #loc15])
#loc231 = loc(fused[#loc16, #loc17])
#loc232 = loc(fused[#loc18, #loc19])
#loc233 = loc(fused[#loc20, #loc21])
#loc234 = loc(fused[#loc22, #loc23])
#loc235 = loc(fused[#loc24, #loc25])
#loc236 = loc(fused[#loc27, #loc28])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc31, #loc32])
#loc239 = loc(fused[#loc33, #loc34])
#loc240 = loc(fused[#loc35, #loc36])
#loc241 = loc(fused[#loc37, #loc38])
#loc242 = loc(fused[#loc39, #loc40])
#loc243 = loc(fused[#loc41, #loc42])
#loc244 = loc(fused[#loc44, #loc43])
#loc245 = loc(fused[#loc45, #loc46])
#loc246 = loc(fused[#loc50, #loc51])
#loc247 = loc(fused[#loc56, #loc57])
#loc248 = loc(fused[#loc58, #loc59])
#loc249 = loc(fused[#loc60, #loc61])
#loc250 = loc(fused[#loc62, #loc59])
#loc251 = loc(fused[#loc64, #loc65])
#loc252 = loc(fused[#loc67, #loc68])
#loc253 = loc(fused[#loc69, #loc70])
#loc254 = loc(fused[#loc73, #loc71])
#loc255 = loc(fused[#loc77, #loc78])
#loc256 = loc(fused[#loc82, #loc83])
#loc257 = loc(fused[#loc84, #loc85])
#loc258 = loc(fused[#loc87, #loc88])
#loc259 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc93, #loc85])
#loc262 = loc(fused[#loc99, #loc100])
#loc263 = loc(fused[#loc101, #loc102])
#loc264 = loc(fused[#loc103, #loc104])
#loc265 = loc(fused[#loc103, #loc105])
#loc266 = loc(fused[#loc101, #loc106])
#loc267 = loc(fused[#loc109, #loc110])
#loc268 = loc(fused[#loc111, #loc112])
#loc269 = loc(fused[#loc113, #loc114])
#loc270 = loc(fused[#loc116, #loc117])
#loc271 = loc(fused[#loc118, #loc112])
#loc272 = loc(fused[#loc124, #loc125])
#loc273 = loc(fused[#loc123, #loc125])
#loc274 = loc(fused[#loc122, #loc125])
#loc275 = loc(fused[#loc121, #loc120])
#loc276 = loc(fused[#loc130, #loc131])
#loc277 = loc(fused[#loc132, #loc133])
#loc278 = loc(fused[#loc135, #loc133])
#loc279 = loc(fused[#loc138, #loc136])
#loc280 = loc(fused[#loc142, #loc143])
#loc281 = loc(fused[#loc144, #loc145])
#loc282 = loc(fused[#loc147, #loc145])
#loc283 = loc(fused[#loc150, #loc148])
#loc284 = loc(fused[#loc152, #loc153])
#loc285 = loc(fused[#loc154, #loc155])
#loc286 = loc(fused[#loc156, #loc153])
#loc287 = loc(fused[#loc159, #loc160])
#loc288 = loc(fused[#loc162, #loc163])
#loc289 = loc(fused[#loc164, #loc160])
#loc290 = loc(fused[#loc168, #loc169])
#loc291 = loc(fused[#loc170, #loc171])
#loc292 = loc(fused[#loc172, #loc173])
#loc293 = loc(fused[#loc174, #loc175])
#loc294 = loc(fused[#loc180, #loc181])
#loc297 = loc(fused[#loc191, #loc192])
#loc298 = loc(fused[#loc195, #loc196])
#loc299 = loc(fused[#loc199, #loc198])
#loc300 = loc(fused[#loc200, #loc201])
#loc301 = loc(fused[#loc203, #loc204])
#loc302 = loc(fused[#loc205, #loc206])
#loc303 = loc(fused[#loc208, #loc207])
#loc304 = loc(fused[#loc209, #loc210])
#loc305 = loc(fused[#loc214, #loc215])
#loc306 = loc(fused[#loc217, #loc218])
#loc307 = loc(fused[#loc219, #loc215])
