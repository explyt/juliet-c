!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc57)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc58)
  cir.func private @printHexCharLine(!s8i) loc(#loc59)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_163badEv() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%1) loc(#loc11)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc64)
            %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc65)
            %2 = cir.const #cir.int<1> : !u64i loc(#loc66)
            %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc64)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
            cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
            %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
            %6 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc20)
            cir.store %6, %1 : !s8i, !cir.ptr<!s8i> loc(#loc65)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
            cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc22)
            %9 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc23)
            cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc24)
          } loc(#loc63)
          cir.break loc(#loc25)
        } loc(#loc62)
        cir.yield loc(#loc10)
      } loc(#loc61)
    } loc(#loc61)
    cir.return loc(#loc8)
  } loc(#loc60)
  cir.func internal private @_ZN42CWE758_Undefined_Behavior__char_new_use_16L5good1Ev() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%1) loc(#loc30)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc71)
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc72)
            %2 = cir.const #cir.int<5> : !s32i loc(#loc38)
            %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc38)
            cir.store %3, %0 : !s8i, !cir.ptr<!s8i> loc(#loc73)
            %4 = cir.const #cir.int<1> : !u64i loc(#loc74)
            %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc72)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
            cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
            %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc41)
            %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            cir.store %7, %8 : !s8i, !cir.ptr<!s8i> loc(#loc75)
            cir.scope {
              %11 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc77)
              %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
              %13 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc48)
              cir.store %13, %11 : !s8i, !cir.ptr<!s8i> loc(#loc77)
              %14 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc49)
              cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc50)
            } loc(#loc76)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
          } loc(#loc70)
          cir.break loc(#loc53)
        } loc(#loc69)
        cir.yield loc(#loc29)
      } loc(#loc68)
    } loc(#loc68)
    cir.return loc(#loc27)
  } loc(#loc67)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE758_Undefined_Behavior__char_new_use_16L5good1Ev() : () -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc7 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":23:1)
#loc8 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":35:1)
#loc9 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":25:5)
#loc10 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":34:5)
#loc11 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":25:11)
#loc12 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":26:5)
#loc13 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":27:9)
#loc14 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":32:9)
#loc15 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":28:13)
#loc16 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":28:34)
#loc17 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":29:13)
#loc18 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":29:26)
#loc19 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":28:30)
#loc20 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":29:25)
#loc21 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":30:20)
#loc22 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":23:6)
#loc23 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":31:30)
#loc24 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":31:13)
#loc25 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":33:9)
#loc26 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":42:1)
#loc27 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":59:1)
#loc28 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":44:5)
#loc29 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":58:5)
#loc30 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":44:11)
#loc31 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":45:5)
#loc32 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":46:9)
#loc33 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":56:9)
#loc34 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":47:13)
#loc35 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":47:18)
#loc36 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":49:13)
#loc37 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":49:34)
#loc38 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":48:20)
#loc39 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":48:13)
#loc40 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":49:30)
#loc41 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":50:24)
#loc42 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":50:14)
#loc43 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":50:13)
#loc44 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":51:13)
#loc45 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":54:13)
#loc46 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":52:17)
#loc47 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":52:30)
#loc48 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":52:29)
#loc49 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":53:34)
#loc50 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":53:17)
#loc51 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":55:20)
#loc52 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":42:13)
#loc53 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":57:9)
#loc54 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":61:1)
#loc55 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":64:1)
#loc56 = loc("CWE758_Undefined_Behavior__char_new_use_16.cpp":63:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc9, #loc10])
#loc62 = loc(fused[#loc12, #loc10])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc15, #loc16])
#loc65 = loc(fused[#loc17, #loc18])
#loc66 = loc(fused[#loc19, #loc16])
#loc67 = loc(fused[#loc26, #loc27])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc31, #loc29])
#loc70 = loc(fused[#loc32, #loc33])
#loc71 = loc(fused[#loc34, #loc35])
#loc72 = loc(fused[#loc36, #loc37])
#loc73 = loc(fused[#loc39, #loc38])
#loc74 = loc(fused[#loc40, #loc37])
#loc75 = loc(fused[#loc43, #loc41])
#loc76 = loc(fused[#loc44, #loc45])
#loc77 = loc(fused[#loc46, #loc47])
#loc78 = loc(fused[#loc54, #loc55])
