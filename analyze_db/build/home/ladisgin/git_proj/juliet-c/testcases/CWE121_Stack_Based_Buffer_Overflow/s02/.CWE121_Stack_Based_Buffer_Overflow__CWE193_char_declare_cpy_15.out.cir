!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":128:10)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":128:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":128:20)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":128:32)
#loc154 = loc(fused[#loc57, #loc58])
#loc155 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc135)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc136)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc143)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc22)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc26)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc29)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc146)
          cir.break loc(#loc30)
        } loc(#loc23)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc31)
        cir.yield loc(#loc20)
      } loc(#loc20)
    } loc(#loc144)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc137)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc137)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc137)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    } loc(#loc147)
    cir.return loc(#loc13)
  } loc(#loc140)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc162)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc85)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          cir.break loc(#loc89)
        } loc(#loc86)
        cir.case(default, []) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc91)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc93)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc95)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc96)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc165)
          cir.break loc(#loc97)
        } loc(#loc90)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc163)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc136)
      %4 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc100)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc102)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    } loc(#loc166)
    cir.return loc(#loc76)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc169)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc170)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc115)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc117)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc119)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc119)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc122)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc173)
          cir.break loc(#loc123)
        } loc(#loc116)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          cir.break loc(#loc127)
        } loc(#loc124)
        cir.yield loc(#loc113)
      } loc(#loc113)
    } loc(#loc171)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc135)
      %4 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
      %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc130)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc132)
      %8 = cir.call @strcpy(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    } loc(#loc174)
    cir.return loc(#loc106)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":105:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":105:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":78:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":78:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":47:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":43:19)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":28:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":52:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":31:26)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":32:29)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":45:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":33:12)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":38:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":39:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":39:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":39:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":40:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":41:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":43:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":44:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":46:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":51:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":49:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":49:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":49:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":50:19)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":50:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":112:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":116:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":114:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":114:14)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":115:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":115:14)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":133:15)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":135:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":138:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":140:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":128:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":143:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":129:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":131:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":131:22)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":131:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":133:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":134:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":134:73)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":135:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":138:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":139:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":139:72)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":140:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":142:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":142:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":59:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":83:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":61:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":61:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":62:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":62:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":63:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":63:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":64:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":76:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":64:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":66:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":68:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":68:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":69:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":70:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":73:16)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":73:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":74:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":74:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":74:14)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":74:15)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":75:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":77:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":82:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":80:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":80:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":80:22)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":81:19)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":81:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":86:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":110:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":88:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":88:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":89:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":89:26)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":90:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":90:29)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":91:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":103:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":91:12)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":93:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":96:16)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":96:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":97:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":97:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":97:14)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":97:15)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":98:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":99:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":101:19)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":101:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":102:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":104:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":109:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":107:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":107:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":107:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":108:19)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_15.c":108:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc25, #loc24])
#loc146 = loc(fused[#loc27, #loc26])
#loc147 = loc(fused[#loc34, #loc35])
#loc148 = loc(fused[#loc41, #loc42])
#loc149 = loc(fused[#loc43, #loc44])
#loc150 = loc(fused[#loc45, #loc46])
#loc151 = loc(fused[#loc47, #loc48])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc66, #loc67])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc74, #loc73])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc77, #loc78])
#loc161 = loc(fused[#loc79, #loc80])
#loc162 = loc(fused[#loc81, #loc82])
#loc163 = loc(fused[#loc83, #loc84])
#loc164 = loc(fused[#loc92, #loc91])
#loc165 = loc(fused[#loc94, #loc93])
#loc166 = loc(fused[#loc98, #loc99])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc107, #loc108])
#loc169 = loc(fused[#loc109, #loc110])
#loc170 = loc(fused[#loc111, #loc112])
#loc171 = loc(fused[#loc113, #loc114])
#loc172 = loc(fused[#loc118, #loc117])
#loc173 = loc(fused[#loc120, #loc119])
#loc174 = loc(fused[#loc128, #loc129])
