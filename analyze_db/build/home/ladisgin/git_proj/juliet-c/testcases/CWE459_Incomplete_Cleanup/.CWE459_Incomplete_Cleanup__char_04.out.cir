!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE459_Incomplete_Cleanup__char_04.c":142:10)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_04.c":142:14)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_04.c":142:20)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_04.c":142:32)
#loc193 = loc(fused[#loc68, #loc69])
#loc194 = loc(fused[#loc70, #loc71])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc166)
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc167)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_04_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc168)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc169)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc172)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc21)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc168)
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc177)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc178)
          %5 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_04_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc168)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc168)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc29)
          %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc30)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc178)
          cir.scope {
            %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc33)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc35)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc180)
            cir.if %11 {
              %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc11)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc11)
              %15 = cir.call @fdopen(%12, %14) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc38)
              cir.store %15, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
              cir.scope {
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
                %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
                %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc44)
                %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc184)
                cir.if %19 {
                  %20 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc46)
                  %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                  %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc14)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc14)
                  %24 = cir.call @fprintf(%21, %23) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
                  %25 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc49)
                } loc(#loc185)
              } loc(#loc183)
            } loc(#loc181)
          } loc(#loc179)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    cir.return loc(#loc18)
  } loc(#loc173)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc189)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc190)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE459_Incomplete_Cleanup__char_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE459_Incomplete_Cleanup__char_04_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE459_Incomplete_Cleanup__char_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE459_Incomplete_Cleanup__char_04_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc86)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc198)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc93)
      cir.if %1 {
        %2 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc167)
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc203)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc204)
          %5 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc167)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc167)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
          %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc105)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc204)
          cir.scope {
            %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc110)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc206)
            cir.if %11 {
              %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc113)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc113)
              %15 = cir.call @fdopen(%12, %14) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc114)
              cir.store %15, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc208)
              cir.scope {
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
                %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
                %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc120)
                %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc210)
                cir.if %19 {
                  %20 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc122)
                  %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
                  %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc124)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc124)
                  %24 = cir.call @fprintf(%21, %23) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
                  %25 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc126)
                  %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc127)
                  %28 = cir.call @unlink(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
                } loc(#loc211)
              } loc(#loc209)
            } loc(#loc207)
          } loc(#loc205)
        } loc(#loc202)
      } loc(#loc201)
    } loc(#loc200)
    cir.return loc(#loc90)
  } loc(#loc199)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc133)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc166)
          %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc216)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc217)
          %5 = cir.get_global @__const.good2.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc166)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc166)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc141)
          %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc142)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          cir.scope {
            %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc147)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc219)
            cir.if %11 {
              %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc150)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc150)
              %15 = cir.call @fdopen(%12, %14) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc151)
              cir.store %15, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
              cir.scope {
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
                %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
                %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc157)
                %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc223)
                cir.if %19 {
                  %20 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc159)
                  %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc160)
                  %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc161)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc161)
                  %24 = cir.call @fprintf(%21, %23) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc159)
                  %25 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc162)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc163)
                  %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc164)
                  %28 = cir.call @unlink(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc165)
                } loc(#loc224)
              } loc(#loc222)
            } loc(#loc220)
          } loc(#loc218)
        } loc(#loc215)
      } loc(#loc214)
    } loc(#loc213)
    cir.return loc(#loc130)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_04.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_04.c":108:13)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_04.c":108:31)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_04.c":83:13)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_04.c":83:31)
#loc5 = loc("CWE459_Incomplete_Cleanup__char_04.c":50:13)
#loc6 = loc("CWE459_Incomplete_Cleanup__char_04.c":50:31)
#loc7 = loc("/usr/include/stdlib.h":827:1)
#loc8 = loc("/usr/include/stdlib.h":827:39)
#loc9 = loc("/usr/include/stdio.h":299:1)
#loc10 = loc("/usr/include/stdio.h":300:3)
#loc11 = loc("CWE459_Incomplete_Cleanup__char_04.c":56:42)
#loc12 = loc("/usr/include/stdio.h":357:1)
#loc13 = loc("/usr/include/stdio.h":358:45)
#loc14 = loc("CWE459_Incomplete_Cleanup__char_04.c":59:36)
#loc15 = loc("/usr/include/stdio.h":184:1)
#loc16 = loc("/usr/include/stdio.h":184:36)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_04.c":45:1)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_04.c":66:1)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_04.c":47:5)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_04.c":65:5)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_04.c":47:8)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_04.c":48:5)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_04.c":49:9)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_04.c":64:9)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_04.c":51:13)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_04.c":51:19)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_04.c":53:13)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_04.c":53:44)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_04.c":53:36)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_04.c":53:28)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_04.c":54:13)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_04.c":63:13)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_04.c":54:17)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_04.c":54:30)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_04.c":54:29)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_04.c":55:13)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_04.c":56:32)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_04.c":56:25)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_04.c":56:17)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_04.c":56:45)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_04.c":57:17)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_04.c":62:17)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_04.c":57:21)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_04.c":57:30)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_04.c":58:17)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_04.c":59:21)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_04.c":59:29)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_04.c":60:28)
#loc49 = loc("CWE459_Incomplete_Cleanup__char_04.c":60:21)
#loc50 = loc("CWE459_Incomplete_Cleanup__char_04.c":127:1)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_04.c":131:1)
#loc52 = loc("CWE459_Incomplete_Cleanup__char_04.c":129:5)
#loc53 = loc("CWE459_Incomplete_Cleanup__char_04.c":129:11)
#loc54 = loc("CWE459_Incomplete_Cleanup__char_04.c":130:5)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_04.c":130:11)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_04.c":147:15)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_04.c":149:15)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_04.c":152:15)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_04.c":154:15)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_04.c":142:1)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_04.c":157:1)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_04.c":143:1)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_04.c":145:27)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_04.c":145:22)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_04.c":145:5)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_04.c":147:5)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_04.c":148:5)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_04.c":148:45)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_04.c":149:5)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_04.c":152:5)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_04.c":153:5)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_04.c":153:44)
#loc83 = loc("CWE459_Incomplete_Cleanup__char_04.c":154:5)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_04.c":156:12)
#loc85 = loc("CWE459_Incomplete_Cleanup__char_04.c":156:5)
#loc86 = loc("CWE459_Incomplete_Cleanup__char_04.c":78:19)
#loc87 = loc("/usr/include/unistd.h":858:1)
#loc88 = loc("/usr/include/unistd.h":858:48)
#loc89 = loc("CWE459_Incomplete_Cleanup__char_04.c":73:1)
#loc90 = loc("CWE459_Incomplete_Cleanup__char_04.c":100:1)
#loc91 = loc("CWE459_Incomplete_Cleanup__char_04.c":75:5)
#loc92 = loc("CWE459_Incomplete_Cleanup__char_04.c":99:5)
#loc93 = loc("CWE459_Incomplete_Cleanup__char_04.c":75:8)
#loc94 = loc("CWE459_Incomplete_Cleanup__char_04.c":76:5)
#loc95 = loc("CWE459_Incomplete_Cleanup__char_04.c":79:5)
#loc96 = loc("CWE459_Incomplete_Cleanup__char_04.c":81:5)
#loc97 = loc("CWE459_Incomplete_Cleanup__char_04.c":78:9)
#loc98 = loc("CWE459_Incomplete_Cleanup__char_04.c":82:9)
#loc99 = loc("CWE459_Incomplete_Cleanup__char_04.c":98:9)
#loc100 = loc("CWE459_Incomplete_Cleanup__char_04.c":84:13)
#loc101 = loc("CWE459_Incomplete_Cleanup__char_04.c":84:19)
#loc102 = loc("CWE459_Incomplete_Cleanup__char_04.c":86:13)
#loc103 = loc("CWE459_Incomplete_Cleanup__char_04.c":86:44)
#loc104 = loc("CWE459_Incomplete_Cleanup__char_04.c":86:36)
#loc105 = loc("CWE459_Incomplete_Cleanup__char_04.c":86:28)
#loc106 = loc("CWE459_Incomplete_Cleanup__char_04.c":87:13)
#loc107 = loc("CWE459_Incomplete_Cleanup__char_04.c":97:13)
#loc108 = loc("CWE459_Incomplete_Cleanup__char_04.c":87:17)
#loc109 = loc("CWE459_Incomplete_Cleanup__char_04.c":87:30)
#loc110 = loc("CWE459_Incomplete_Cleanup__char_04.c":87:29)
#loc111 = loc("CWE459_Incomplete_Cleanup__char_04.c":88:13)
#loc112 = loc("CWE459_Incomplete_Cleanup__char_04.c":89:32)
#loc113 = loc("CWE459_Incomplete_Cleanup__char_04.c":89:42)
#loc114 = loc("CWE459_Incomplete_Cleanup__char_04.c":89:25)
#loc115 = loc("CWE459_Incomplete_Cleanup__char_04.c":89:17)
#loc116 = loc("CWE459_Incomplete_Cleanup__char_04.c":89:45)
#loc117 = loc("CWE459_Incomplete_Cleanup__char_04.c":90:17)
#loc118 = loc("CWE459_Incomplete_Cleanup__char_04.c":96:17)
#loc119 = loc("CWE459_Incomplete_Cleanup__char_04.c":90:21)
#loc120 = loc("CWE459_Incomplete_Cleanup__char_04.c":90:30)
#loc121 = loc("CWE459_Incomplete_Cleanup__char_04.c":91:17)
#loc122 = loc("CWE459_Incomplete_Cleanup__char_04.c":92:21)
#loc123 = loc("CWE459_Incomplete_Cleanup__char_04.c":92:29)
#loc124 = loc("CWE459_Incomplete_Cleanup__char_04.c":92:36)
#loc125 = loc("CWE459_Incomplete_Cleanup__char_04.c":93:28)
#loc126 = loc("CWE459_Incomplete_Cleanup__char_04.c":93:21)
#loc127 = loc("CWE459_Incomplete_Cleanup__char_04.c":95:28)
#loc128 = loc("CWE459_Incomplete_Cleanup__char_04.c":95:21)
#loc129 = loc("CWE459_Incomplete_Cleanup__char_04.c":103:1)
#loc130 = loc("CWE459_Incomplete_Cleanup__char_04.c":125:1)
#loc131 = loc("CWE459_Incomplete_Cleanup__char_04.c":105:5)
#loc132 = loc("CWE459_Incomplete_Cleanup__char_04.c":124:5)
#loc133 = loc("CWE459_Incomplete_Cleanup__char_04.c":105:8)
#loc134 = loc("CWE459_Incomplete_Cleanup__char_04.c":106:5)
#loc135 = loc("CWE459_Incomplete_Cleanup__char_04.c":107:9)
#loc136 = loc("CWE459_Incomplete_Cleanup__char_04.c":123:9)
#loc137 = loc("CWE459_Incomplete_Cleanup__char_04.c":109:13)
#loc138 = loc("CWE459_Incomplete_Cleanup__char_04.c":109:19)
#loc139 = loc("CWE459_Incomplete_Cleanup__char_04.c":111:13)
#loc140 = loc("CWE459_Incomplete_Cleanup__char_04.c":111:44)
#loc141 = loc("CWE459_Incomplete_Cleanup__char_04.c":111:36)
#loc142 = loc("CWE459_Incomplete_Cleanup__char_04.c":111:28)
#loc143 = loc("CWE459_Incomplete_Cleanup__char_04.c":112:13)
#loc144 = loc("CWE459_Incomplete_Cleanup__char_04.c":122:13)
#loc145 = loc("CWE459_Incomplete_Cleanup__char_04.c":112:17)
#loc146 = loc("CWE459_Incomplete_Cleanup__char_04.c":112:30)
#loc147 = loc("CWE459_Incomplete_Cleanup__char_04.c":112:29)
#loc148 = loc("CWE459_Incomplete_Cleanup__char_04.c":113:13)
#loc149 = loc("CWE459_Incomplete_Cleanup__char_04.c":114:32)
#loc150 = loc("CWE459_Incomplete_Cleanup__char_04.c":114:42)
#loc151 = loc("CWE459_Incomplete_Cleanup__char_04.c":114:25)
#loc152 = loc("CWE459_Incomplete_Cleanup__char_04.c":114:17)
#loc153 = loc("CWE459_Incomplete_Cleanup__char_04.c":114:45)
#loc154 = loc("CWE459_Incomplete_Cleanup__char_04.c":115:17)
#loc155 = loc("CWE459_Incomplete_Cleanup__char_04.c":121:17)
#loc156 = loc("CWE459_Incomplete_Cleanup__char_04.c":115:21)
#loc157 = loc("CWE459_Incomplete_Cleanup__char_04.c":115:30)
#loc158 = loc("CWE459_Incomplete_Cleanup__char_04.c":116:17)
#loc159 = loc("CWE459_Incomplete_Cleanup__char_04.c":117:21)
#loc160 = loc("CWE459_Incomplete_Cleanup__char_04.c":117:29)
#loc161 = loc("CWE459_Incomplete_Cleanup__char_04.c":117:36)
#loc162 = loc("CWE459_Incomplete_Cleanup__char_04.c":118:28)
#loc163 = loc("CWE459_Incomplete_Cleanup__char_04.c":118:21)
#loc164 = loc("CWE459_Incomplete_Cleanup__char_04.c":120:28)
#loc165 = loc("CWE459_Incomplete_Cleanup__char_04.c":120:21)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc9, #loc10])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc15, #loc16])
#loc173 = loc(fused[#loc17, #loc18])
#loc174 = loc(fused[#loc19, #loc20])
#loc175 = loc(fused[#loc22, #loc20])
#loc176 = loc(fused[#loc23, #loc24])
#loc177 = loc(fused[#loc25, #loc26])
#loc178 = loc(fused[#loc27, #loc28])
#loc179 = loc(fused[#loc31, #loc32])
#loc180 = loc(fused[#loc33, #loc34])
#loc181 = loc(fused[#loc36, #loc32])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc41, #loc42])
#loc184 = loc(fused[#loc43, #loc44])
#loc185 = loc(fused[#loc45, #loc42])
#loc186 = loc(fused[#loc50, #loc51])
#loc187 = loc(fused[#loc52, #loc53])
#loc188 = loc(fused[#loc54, #loc55])
#loc189 = loc(fused[#loc56, #loc57])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc66, #loc67])
#loc195 = loc(fused[#loc77, #loc78])
#loc196 = loc(fused[#loc81, #loc82])
#loc197 = loc(fused[#loc85, #loc84])
#loc198 = loc(fused[#loc87, #loc88])
#loc199 = loc(fused[#loc89, #loc90])
#loc200 = loc(fused[#loc91, #loc92])
#loc201 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc202 = loc(fused[#loc98, #loc99])
#loc203 = loc(fused[#loc100, #loc101])
#loc204 = loc(fused[#loc102, #loc103])
#loc205 = loc(fused[#loc106, #loc107])
#loc206 = loc(fused[#loc108, #loc109])
#loc207 = loc(fused[#loc111, #loc107])
#loc208 = loc(fused[#loc115, #loc116])
#loc209 = loc(fused[#loc117, #loc118])
#loc210 = loc(fused[#loc119, #loc120])
#loc211 = loc(fused[#loc121, #loc118])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc134, #loc132])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc139, #loc140])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc148, #loc144])
#loc221 = loc(fused[#loc152, #loc153])
#loc222 = loc(fused[#loc154, #loc155])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc158, #loc155])
