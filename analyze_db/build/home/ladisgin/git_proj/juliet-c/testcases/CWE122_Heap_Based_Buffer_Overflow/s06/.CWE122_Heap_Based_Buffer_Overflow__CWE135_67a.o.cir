!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType = !cir.struct<struct "_CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType" {!cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func private @wmemset(!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc140)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_badSink(!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) loc(#loc141)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__CWE135_67_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc148)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc149)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc150)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.br ^bb2 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc152)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc32)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc35)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc35)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc35)
    %24 = cir.call @wmemset(%18, %19, %23) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc37)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc40)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    cir.store %25, %30 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
    cir.store %32, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc155)
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc45)
    %34 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    cir.store %33, %34 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc156)
    %35 = cir.load %2 : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType loc(#loc48)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_badSink(%35) : (!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) -> () loc(#loc48)
    cir.return loc(#loc10)
  } loc(#loc142)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__CWE135_67_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc157)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_goodG2BSink(!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc164)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc69)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc70)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc70)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc167)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc168)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb2 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc80)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc82)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc83)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc83)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc83)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc87)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc89)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc89)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc91)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    cir.store %33, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc175)
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc94)
    %35 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    cir.store %34, %35 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc176)
    %36 = cir.load %2 : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType loc(#loc96)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_goodG2BSink(%36) : (!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) -> () loc(#loc96)
    cir.return loc(#loc58)
  } loc(#loc161)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_goodB2GSink(!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) loc(#loc177)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc181)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc111)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc112)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc112)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc184)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc185)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc186)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.br ^bb2 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc118)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc189)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc122)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc116)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc124)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc125)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc125)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc125)
    %24 = cir.call @wmemset(%18, %19, %23) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc127)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc130)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc132)
    cir.store %25, %30 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc133)
    cir.store %32, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc191)
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc135)
    %34 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType> -> !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    cir.store %33, %34 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc192)
    %35 = cir.load %2 : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType>, !ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType loc(#loc137)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_67b_goodB2GSink(%35) : (!ty__CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType) -> () loc(#loc137)
    cir.return loc(#loc100)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/wchar.h":296:1)
#loc6 = loc("/usr/include/wchar.h":296:65)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":30:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":30:124)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":32:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":47:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:71)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":34:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":35:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":35:61)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":36:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":36:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":37:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":44:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:46)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:53)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:56)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":38:70)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:46)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:36)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:43)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":39:42)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":40:17)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":40:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":40:38)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":40:41)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":40:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":41:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":41:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":41:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":41:26)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":41:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":43:24)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":43:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":45:28)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":24:12)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":45:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":46:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":93:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":97:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":95:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":95:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":96:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":96:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":54:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":54:128)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":56:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":71:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:63)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":58:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":58:12)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":59:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":59:61)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":60:12)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":60:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":61:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":68:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:41)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:48)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:51)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":62:62)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:47)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:37)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:38)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:44)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":63:43)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:16)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:32)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:37)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:40)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":64:41)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":65:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":65:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":65:24)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":65:27)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":65:28)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":67:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":67:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":69:28)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":69:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":70:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":74:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":74:128)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":76:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":91:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:71)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":78:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":78:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":79:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":79:61)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":80:12)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":80:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":81:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":88:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:46)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:53)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:56)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":82:70)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:46)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:30)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:36)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:37)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:43)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":83:42)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":84:17)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":84:32)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":84:38)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":84:41)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":84:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":85:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":85:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":85:23)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":85:26)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":85:27)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":87:24)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":87:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":89:28)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":89:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_67a.c":90:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc18, #loc17])
#loc147 = loc(fused[#loc19, #loc20])
#loc148 = loc(fused[#loc23, #loc24])
#loc149 = loc(fused[#loc22, #loc24])
#loc150 = loc(fused[#loc21, #loc12])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc27, #loc28])
#loc153 = loc(fused[#loc29, #loc26])
#loc154 = loc(fused[#loc39, #loc38])
#loc155 = loc(fused[#loc44, #loc43])
#loc156 = loc(fused[#loc47, #loc45])
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc51, #loc52])
#loc159 = loc(fused[#loc53, #loc54])
#loc160 = loc(fused[#loc55, #loc56])
#loc161 = loc(fused[#loc57, #loc58])
#loc162 = loc(fused[#loc59, #loc60])
#loc163 = loc(fused[#loc61, #loc62])
#loc164 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc66, #loc65])
#loc166 = loc(fused[#loc67, #loc68])
#loc167 = loc(fused[#loc71, #loc72])
#loc168 = loc(fused[#loc70, #loc72])
#loc169 = loc(fused[#loc69, #loc60])
#loc170 = loc(fused[#loc73, #loc74])
#loc171 = loc(fused[#loc75, #loc76])
#loc172 = loc(fused[#loc77, #loc74])
#loc173 = loc(fused[#loc85, #loc86])
#loc174 = loc(fused[#loc88, #loc87])
#loc175 = loc(fused[#loc93, #loc92])
#loc176 = loc(fused[#loc95, #loc94])
#loc177 = loc(fused[#loc97, #loc98])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc108, #loc107])
#loc183 = loc(fused[#loc109, #loc110])
#loc184 = loc(fused[#loc113, #loc114])
#loc185 = loc(fused[#loc112, #loc114])
#loc186 = loc(fused[#loc111, #loc102])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc116])
#loc190 = loc(fused[#loc129, #loc128])
#loc191 = loc(fused[#loc134, #loc133])
#loc192 = loc(fused[#loc136, #loc135])
