!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":233:10)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":233:14)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":233:20)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":233:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc343 = loc(fused[#loc140, #loc141])
#loc344 = loc(fused[#loc142, #loc143])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc292)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc293)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc297)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc298)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc300)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc303)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc304)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc305)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc306)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc35)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc305)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc40)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc42)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc49)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc310)
            cir.if %54 {
              cir.break loc(#loc51)
            } loc(#loc311)
          } loc(#loc309)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc312)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc313)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc314)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc59)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc315)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc316)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc67)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc67)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc317)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc319)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc320)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc320)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc80)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc321)
            cir.if %58 {
              cir.break loc(#loc82)
            } loc(#loc322)
          } loc(#loc318)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc85)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc85)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc85)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc85)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc85)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc85)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc86)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc86)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc323)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc87)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc88)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc324)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc94)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc326)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc95)
              cir.yield %56 : !cir.bool loc(#loc95)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc97)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc327)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc95)
                cir.yield %60 : !cir.bool loc(#loc95)
              }, false {
                %60 = cir.const #false loc(#loc95)
                cir.yield %60 : !cir.bool loc(#loc95)
              }) : (!cir.bool) -> !cir.bool loc(#loc95)
              cir.yield %59 : !cir.bool loc(#loc95)
            }) : (!cir.bool) -> !cir.bool loc(#loc95)
            cir.if %55 {
              cir.break loc(#loc99)
            } loc(#loc328)
          } loc(#loc325)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc100)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc102)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc329)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc104)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
          cir.yield loc(#loc39)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc107)
          cir.condition(%10) loc(#loc107)
        } loc(#loc307)
      } loc(#loc307)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc111)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc332)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc114)
        } loc(#loc333)
      } loc(#loc331)
    } loc(#loc302)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc335)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc336)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc335)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc336)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc121)
      %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc122)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc20)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc20)
      cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    } loc(#loc334)
    cir.return loc(#loc22)
  } loc(#loc299)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc338)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc339)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    cir.return loc(#loc125)
  } loc(#loc337)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc340)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc341)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc137)
  cir.func @main(%arg0: !s32i loc(fused[#loc140, #loc141]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc142, #loc143])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc343)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc344)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc139)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc145)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc146)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc146)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc147)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc134)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_31_good() : () -> () loc(#loc149)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc135)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc136)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_31_bad() : () -> () loc(#loc153)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc137)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    cir.return %17 : !s32i loc(#loc347)
  } loc(#loc342)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc349)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc163)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc165)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc353)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc354)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc353)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc172)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc354)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc173)
      %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc174)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc175)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc175)
      cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    } loc(#loc352)
    cir.return loc(#loc159)
  } loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc178)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc184)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc359)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc360)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc361)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc362)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc193)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc193)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc361)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc198)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc200)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc201)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc364)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc206)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc207)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc207)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc366)
            cir.if %54 {
              cir.break loc(#loc209)
            } loc(#loc367)
          } loc(#loc365)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc368)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc212)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc369)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc370)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc217)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc217)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc371)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc219)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc219)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc220)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc372)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc223)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc223)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc224)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc373)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc229)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc375)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc376)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc376)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc234)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc235)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc235)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc377)
            cir.if %58 {
              cir.break loc(#loc237)
            } loc(#loc378)
          } loc(#loc374)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc239)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc239)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc240)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc240)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc240)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc240)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc240)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc240)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc240)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc241)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc241)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc379)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc242)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc243)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc243)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc380)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc249)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc249)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc382)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc250)
              cir.yield %56 : !cir.bool loc(#loc250)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc383)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc250)
                cir.yield %60 : !cir.bool loc(#loc250)
              }, false {
                %60 = cir.const #false loc(#loc250)
                cir.yield %60 : !cir.bool loc(#loc250)
              }) : (!cir.bool) -> !cir.bool loc(#loc250)
              cir.yield %59 : !cir.bool loc(#loc250)
            }) : (!cir.bool) -> !cir.bool loc(#loc250)
            cir.if %55 {
              cir.break loc(#loc254)
            } loc(#loc384)
          } loc(#loc381)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc255)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc256)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc257)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc257)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc385)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc258)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc259)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
          cir.yield loc(#loc197)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc262)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc262)
          cir.condition(%10) loc(#loc262)
        } loc(#loc363)
      } loc(#loc363)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc265)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc266)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc266)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc388)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc268)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc269)
        } loc(#loc389)
      } loc(#loc387)
    } loc(#loc358)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc391)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc392)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc391)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc275)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc392)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc278)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc279)
        %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc394)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc281)
          %12 = cir.const #cir.int<2000> : !s32i loc(#loc282)
          %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc395)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc280)
            cir.yield %15 : !cir.bool loc(#loc280)
          }, false {
            %15 = cir.const #false loc(#loc280)
            cir.yield %15 : !cir.bool loc(#loc280)
          }) : (!cir.bool) -> !cir.bool loc(#loc280)
          cir.yield %14 : !cir.bool loc(#loc280)
        }, false {
          %11 = cir.const #false loc(#loc280)
          cir.yield %11 : !cir.bool loc(#loc280)
        }) : (!cir.bool) -> !cir.bool loc(#loc280)
        cir.if %10 {
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc286)
          %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc286)
          %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc287)
          %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc177)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc177)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc288)
        } else {
          %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc178)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc289)
        } loc(#loc396)
      } loc(#loc393)
    } loc(#loc390)
    cir.return loc(#loc180)
  } loc(#loc355)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/unistd.h":480:1)
#loc17 = loc("/usr/include/unistd.h":480:43)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":116:19)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":50:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":118:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":52:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":52:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:14)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:13)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":54:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":55:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":110:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":60:9)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":60:13)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":61:9)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":61:28)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":62:9)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":62:32)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":63:9)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":63:41)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":64:9)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":99:17)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:36)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:45)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:58)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:29)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:13)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":74:69)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:13)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":78:13)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:17)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":75:34)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":76:13)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":77:17)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:20)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:21)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:30)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:33)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:47)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:13)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":79:48)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":80:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":80:13)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:13)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":81:59)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:38)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:13)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":82:46)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:13)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":86:13)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:25)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:58)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:59)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:68)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:82)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":83:88)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":84:13)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":85:17)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:31)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:46)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:59)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:77)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:80)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:26)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:13)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":89:81)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:13)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":93:13)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:17)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:31)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:44)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:47)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":90:61)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":91:13)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":92:17)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:39)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:25)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":95:13)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:26)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:21)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:13)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":97:37)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":99:16)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:9)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":103:9)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:13)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":100:30)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":101:9)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":102:26)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":102:13)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":111:5)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":117:5)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":112:9)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":112:25)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":113:9)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":113:21)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":115:15)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":115:9)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":116:9)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":219:1)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":223:1)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":221:5)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":221:13)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":222:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":222:13)
#loc130 = loc("/usr/include/stdlib.h":575:1)
#loc131 = loc("/usr/include/stdlib.h":575:41)
#loc132 = loc("/usr/include/time.h":76:1)
#loc133 = loc("/usr/include/time.h":76:38)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":238:15)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":240:15)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":243:15)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":245:15)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":233:1)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":248:1)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":234:1)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":236:27)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":236:22)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":236:5)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":238:5)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":239:5)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":239:62)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":240:5)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":243:5)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":244:5)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":244:61)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":245:5)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":247:12)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":247:5)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":125:1)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":139:1)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":127:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":127:9)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:14)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:13)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":129:5)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":131:13)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":131:5)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":132:5)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":138:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":133:9)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":133:25)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":134:9)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":134:21)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":136:15)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":136:9)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":137:19)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":137:9)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":210:23)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":214:23)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":142:1)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":217:1)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":144:5)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":144:9)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:14)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:13)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":146:5)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":147:5)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":202:5)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":152:9)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":152:13)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":153:9)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":153:28)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":154:9)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":154:32)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":155:9)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":155:41)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":156:9)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":191:17)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:36)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:45)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:58)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:29)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:13)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":166:69)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:13)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":170:13)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:17)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":167:34)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":168:13)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":169:17)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:20)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:21)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:30)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:33)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:47)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:13)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":171:48)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":172:34)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":172:13)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:49)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:39)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:13)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":173:59)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:38)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:32)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:13)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":174:46)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:13)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":178:13)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:25)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:58)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:59)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:68)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:82)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:17)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":175:88)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":176:13)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":177:17)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:31)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:46)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:59)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:77)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:80)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:26)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:13)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":181:81)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:13)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":185:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:17)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:31)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:44)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:47)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":182:61)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":183:13)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":184:17)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:39)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:25)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":187:13)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:26)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:21)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:13)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":189:37)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":191:16)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:9)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":195:9)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:13)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":192:30)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":193:9)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":194:26)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":194:13)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":203:5)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":216:5)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":204:9)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":204:25)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":205:9)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":205:21)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:9)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":215:9)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:13)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:21)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:23)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:26)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":207:35)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":208:9)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":211:9)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":213:9)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":209:19)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":209:13)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":210:13)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_31.c":214:13)
#loc290 = loc(fused[#loc1, #loc2])
#loc291 = loc(fused[#loc3, #loc4])
#loc292 = loc(fused[#loc6, #loc7])
#loc293 = loc(fused[#loc8, #loc9])
#loc294 = loc(fused[#loc10, #loc11])
#loc295 = loc(fused[#loc12, #loc13])
#loc296 = loc(fused[#loc14, #loc15])
#loc297 = loc(fused[#loc16, #loc17])
#loc298 = loc(fused[#loc18, #loc19])
#loc299 = loc(fused[#loc21, #loc22])
#loc300 = loc(fused[#loc23, #loc24])
#loc301 = loc(fused[#loc27, #loc25])
#loc302 = loc(fused[#loc28, #loc29])
#loc303 = loc(fused[#loc30, #loc31])
#loc304 = loc(fused[#loc32, #loc33])
#loc305 = loc(fused[#loc34, #loc35])
#loc306 = loc(fused[#loc36, #loc37])
#loc307 = loc(fused[#loc38, #loc39])
#loc308 = loc(fused[#loc44, #loc45])
#loc309 = loc(fused[#loc46, #loc47])
#loc310 = loc(fused[#loc48, #loc49])
#loc311 = loc(fused[#loc50, #loc47])
#loc312 = loc(fused[#loc52, #loc53])
#loc313 = loc(fused[#loc55, #loc56])
#loc314 = loc(fused[#loc57, #loc58])
#loc315 = loc(fused[#loc61, #loc59])
#loc316 = loc(fused[#loc65, #loc66])
#loc317 = loc(fused[#loc70, #loc71])
#loc318 = loc(fused[#loc72, #loc73])
#loc319 = loc(fused[#loc75, #loc76])
#loc320 = loc(fused[#loc77, #loc78])
#loc321 = loc(fused[#loc79, #loc80])
#loc322 = loc(fused[#loc81, #loc73])
#loc323 = loc(fused[#loc85, #loc86])
#loc324 = loc(fused[#loc89, #loc90])
#loc325 = loc(fused[#loc91, #loc92])
#loc326 = loc(fused[#loc93, #loc94])
#loc327 = loc(fused[#loc96, #loc97])
#loc328 = loc(fused[#loc98, #loc92])
#loc329 = loc(fused[#loc102, #loc100])
#loc330 = loc(fused[#loc105, #loc106])
#loc331 = loc(fused[#loc108, #loc109])
#loc332 = loc(fused[#loc110, #loc111])
#loc333 = loc(fused[#loc112, #loc109])
#loc334 = loc(fused[#loc115, #loc116])
#loc335 = loc(fused[#loc117, #loc118])
#loc336 = loc(fused[#loc119, #loc120])
#loc337 = loc(fused[#loc124, #loc125])
#loc338 = loc(fused[#loc126, #loc127])
#loc339 = loc(fused[#loc128, #loc129])
#loc340 = loc(fused[#loc130, #loc131])
#loc341 = loc(fused[#loc132, #loc133])
#loc342 = loc(fused[#loc138, #loc139])
#loc345 = loc(fused[#loc149, #loc150])
#loc346 = loc(fused[#loc153, #loc154])
#loc347 = loc(fused[#loc157, #loc156])
#loc348 = loc(fused[#loc158, #loc159])
#loc349 = loc(fused[#loc160, #loc161])
#loc350 = loc(fused[#loc164, #loc162])
#loc351 = loc(fused[#loc166, #loc165])
#loc352 = loc(fused[#loc167, #loc168])
#loc353 = loc(fused[#loc169, #loc170])
#loc354 = loc(fused[#loc171, #loc172])
#loc355 = loc(fused[#loc179, #loc180])
#loc356 = loc(fused[#loc181, #loc182])
#loc357 = loc(fused[#loc185, #loc183])
#loc358 = loc(fused[#loc186, #loc187])
#loc359 = loc(fused[#loc188, #loc189])
#loc360 = loc(fused[#loc190, #loc191])
#loc361 = loc(fused[#loc192, #loc193])
#loc362 = loc(fused[#loc194, #loc195])
#loc363 = loc(fused[#loc196, #loc197])
#loc364 = loc(fused[#loc202, #loc203])
#loc365 = loc(fused[#loc204, #loc205])
#loc366 = loc(fused[#loc206, #loc207])
#loc367 = loc(fused[#loc208, #loc205])
#loc368 = loc(fused[#loc210, #loc211])
#loc369 = loc(fused[#loc213, #loc214])
#loc370 = loc(fused[#loc215, #loc216])
#loc371 = loc(fused[#loc218, #loc217])
#loc372 = loc(fused[#loc221, #loc222])
#loc373 = loc(fused[#loc225, #loc226])
#loc374 = loc(fused[#loc227, #loc228])
#loc375 = loc(fused[#loc230, #loc231])
#loc376 = loc(fused[#loc232, #loc233])
#loc377 = loc(fused[#loc234, #loc235])
#loc378 = loc(fused[#loc236, #loc228])
#loc379 = loc(fused[#loc240, #loc241])
#loc380 = loc(fused[#loc244, #loc245])
#loc381 = loc(fused[#loc246, #loc247])
#loc382 = loc(fused[#loc248, #loc249])
#loc383 = loc(fused[#loc251, #loc252])
#loc384 = loc(fused[#loc253, #loc247])
#loc385 = loc(fused[#loc257, #loc255])
#loc386 = loc(fused[#loc260, #loc261])
#loc387 = loc(fused[#loc263, #loc264])
#loc388 = loc(fused[#loc265, #loc266])
#loc389 = loc(fused[#loc267, #loc264])
#loc390 = loc(fused[#loc270, #loc271])
#loc391 = loc(fused[#loc272, #loc273])
#loc392 = loc(fused[#loc274, #loc275])
#loc393 = loc(fused[#loc276, #loc277])
#loc394 = loc(fused[#loc278, #loc279])
#loc395 = loc(fused[#loc281, #loc282])
#loc396 = loc(fused[#loc283, #loc284, #loc285, #loc277])
