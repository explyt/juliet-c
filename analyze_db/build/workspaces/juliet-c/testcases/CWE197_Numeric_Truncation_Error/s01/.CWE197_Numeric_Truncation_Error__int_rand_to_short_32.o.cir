!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":31:16)
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc74)
  cir.func private @printShortLine(!s16i) loc(#loc75)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc78)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc79)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc80)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc81)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc82)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc81)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc20)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc8)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %12 = cir.binop(and, %10, %11) : !s32i loc(#loc25)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc25)
  ^bb2:  // pred: ^bb1
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc25)
    %16 = cir.const #cir.int<30> : !s32i loc(#loc25)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc25)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc25)
    %20 = cir.const #cir.int<15> : !s32i loc(#loc25)
    %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc25)
    %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc25)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc25)
    %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc25)
    cir.br ^bb4(%25 : !u32i) loc(#loc25)
  ^bb3:  // pred: ^bb1
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc25)
    %28 = cir.const #cir.int<30> : !s32i loc(#loc25)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc25)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc25)
    %32 = cir.const #cir.int<15> : !s32i loc(#loc25)
    %33 = cir.shift(left, %31 : !u32i, %32 : !s32i) -> !u32i loc(#loc25)
    %34 = cir.binop(xor, %29, %33) : !u32i loc(#loc25)
    %35 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc25)
    %37 = cir.binop(xor, %34, %36) : !u32i loc(#loc25)
    %38 = cir.unary(minus, %37) : !u32i, !u32i loc(#loc25)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc25)
    %41 = cir.binop(sub, %38, %40) : !u32i loc(#loc25)
    cir.br ^bb4(%41 : !u32i) loc(#loc25)
  ^bb4(%42: !u32i loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":31:16)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    %43 = cir.cast(integral, %42 : !u32i), !s32i loc(#loc25)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %45 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    cir.store %44, %45 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    %46 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %47, %1 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // pred: ^bb7
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %49 = cir.cast(integral, %48 : !s32i), !s16i loc(#loc12)
    cir.store %49, %2 : !s16i, !cir.ptr<!s16i> loc(#loc79)
    %50 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc35)
    cir.call @printShortLine(%50) : (!s16i) -> () loc(#loc36)
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc31)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc76)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc89)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc93)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc94)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc95)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc96)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc97)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc56)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %10 = cir.const #cir.int<127> : !s32i loc(#loc61)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc62)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc61)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %18 = cir.cast(integral, %17 : !s32i), !s16i loc(#loc48)
    cir.store %18, %2 : !s16i, !cir.ptr<!s16i> loc(#loc94)
    %19 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc72)
    cir.call @printShortLine(%19) : (!s16i) -> () loc(#loc73)
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc42)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":20:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":20:39)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":21:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":42:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":29:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":29:21)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":35:9)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":35:21)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":38:13)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":38:38)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":23:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":23:9)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":24:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":24:22)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":25:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":25:22)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":27:13)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":27:12)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":27:5)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":28:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":33:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":29:20)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":31:9)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":32:21)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":32:10)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":32:9)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":34:5)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":41:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":35:20)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":36:9)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":40:9)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":39:28)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":39:13)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":72:1)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":75:1)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":74:5)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":74:13)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":49:1)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":70:1)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":57:9)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":57:21)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":63:9)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":63:21)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":66:13)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":66:38)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":51:5)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":51:9)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":52:5)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":52:22)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":53:5)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":53:22)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":55:13)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":55:12)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":55:5)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":56:5)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":61:5)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":57:20)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":59:16)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":59:25)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":59:9)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":60:21)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":60:10)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":60:9)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":62:5)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":69:5)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":63:20)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":64:9)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":68:9)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":67:28)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_32.c":67:13)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc11, #loc12])
#loc80 = loc(fused[#loc13, #loc14])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc21, #loc19])
#loc84 = loc(fused[#loc22, #loc23])
#loc85 = loc(fused[#loc26, #loc25])
#loc86 = loc(fused[#loc29, #loc27])
#loc87 = loc(fused[#loc30, #loc31])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc37, #loc38])
#loc90 = loc(fused[#loc39, #loc40])
#loc91 = loc(fused[#loc41, #loc42])
#loc92 = loc(fused[#loc43, #loc44])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc51, #loc52])
#loc97 = loc(fused[#loc53, #loc54])
#loc98 = loc(fused[#loc57, #loc55])
#loc99 = loc(fused[#loc58, #loc59])
#loc100 = loc(fused[#loc63, #loc62])
#loc101 = loc(fused[#loc66, #loc64])
#loc102 = loc(fused[#loc67, #loc68])
#loc103 = loc(fused[#loc70, #loc71])
