!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc431)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc432)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc433)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc434)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc435)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc436)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.func private @printIntLine(!s32i) loc(#loc437)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc439)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc440)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc440)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc440)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc441)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc445)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc33)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc33)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc445)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc37)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc447)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc39)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc448)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc45)
                %21 = cir.const #cir.int<100> : !s32i loc(#loc46)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc46)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc451)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc451)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc434)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc49)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
                %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc452)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
                  cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc454)
                  cir.scope {
                    %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc61)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc61)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc456)
                    %39 = cir.ternary(%38, true {
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc65)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc65)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc457)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                      %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc63)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc63)
                      %48 = cir.const #cir.int<10> : !s32i loc(#loc67)
                      %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc458)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc62)
                        cir.yield %51 : !cir.bool loc(#loc62)
                      }, false {
                        %51 = cir.const #false loc(#loc62)
                        cir.yield %51 : !cir.bool loc(#loc62)
                      }) : (!cir.bool) -> !cir.bool loc(#loc62)
                      cir.yield %50 : !cir.bool loc(#loc62)
                    }, false {
                      %40 = cir.const #false loc(#loc62)
                      cir.yield %40 : !cir.bool loc(#loc62)
                    }) : (!cir.bool) -> !cir.bool loc(#loc62)
                    cir.if %39 {
                      %40 = cir.const #cir.int<0> : !s32i loc(#loc69)
                      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc69)
                      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                      %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                      %44 = cir.const #cir.int<1> : !s32i loc(#loc72)
                      %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc72)
                      %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc460)
                      %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                      cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc461)
                    } loc(#loc459)
                  } loc(#loc455)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc74)
                  %34 = cir.const #cir.int<0> : !s32i loc(#loc75)
                  %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc75)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                  %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                  %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                  cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc462)
                } loc(#loc453)
              } loc(#loc450)
            } loc(#loc449)
          } loc(#loc446)
        } loc(#loc444)
      } loc(#loc443)
    } loc(#loc442)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc81)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc466)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc467)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc468)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc91)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc91)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc470)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc95)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc472)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc99)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc474)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc475)
                  cir.condition(%22) loc(#loc103)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc106)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc477)
                  } loc(#loc476)
                  cir.yield loc(#loc98)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc108)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc478)
                  cir.yield loc(#loc473)
                } loc(#loc473)
              } loc(#loc473)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc110)
            } loc(#loc471)
          } loc(#loc469)
        } loc(#loc465)
      } loc(#loc464)
    } loc(#loc463)
    cir.return loc(#loc18)
  } loc(#loc438)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc480)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc113)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc481)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc482)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc483)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    cir.return loc(#loc112)
  } loc(#loc479)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc484)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc486)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc487)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc487)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc487)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc488)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc134)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc492)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc140)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc140)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc492)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc144)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc144)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc145)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc494)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc146)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc495)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc151)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc152)
                %21 = cir.const #cir.int<100> : !s32i loc(#loc153)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc153)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc154)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc498)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc498)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc434)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc155)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc156)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
                %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc499)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc161)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc161)
                  cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc501)
                  cir.scope {
                    %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc167)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc168)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc168)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc503)
                    %39 = cir.ternary(%38, true {
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc171)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc172)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc172)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc504)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc173)
                      %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc170)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc170)
                      %48 = cir.const #cir.int<10> : !s32i loc(#loc174)
                      %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc505)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc169)
                        cir.yield %51 : !cir.bool loc(#loc169)
                      }, false {
                        %51 = cir.const #false loc(#loc169)
                        cir.yield %51 : !cir.bool loc(#loc169)
                      }) : (!cir.bool) -> !cir.bool loc(#loc169)
                      cir.yield %50 : !cir.bool loc(#loc169)
                    }, false {
                      %40 = cir.const #false loc(#loc169)
                      cir.yield %40 : !cir.bool loc(#loc169)
                    }) : (!cir.bool) -> !cir.bool loc(#loc169)
                    cir.if %39 {
                      %40 = cir.const #cir.int<0> : !s32i loc(#loc176)
                      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc176)
                      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                      %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc178)
                      %44 = cir.const #cir.int<1> : !s32i loc(#loc179)
                      %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc179)
                      %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc507)
                      %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc180)
                      cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc508)
                    } loc(#loc506)
                  } loc(#loc502)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc181)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc181)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc182)
                  %34 = cir.const #cir.int<0> : !s32i loc(#loc183)
                  %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc183)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
                  %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc185)
                  %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc186)
                  cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc509)
                } loc(#loc500)
              } loc(#loc497)
            } loc(#loc496)
          } loc(#loc493)
        } loc(#loc491)
      } loc(#loc490)
    } loc(#loc489)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc484)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc189)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc193)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc513)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc514)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc515)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc202)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc204)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc204)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc202)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc517)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc210)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc520)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc212)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc522)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc216)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc524)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc525)
                      cir.condition(%25) loc(#loc220)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                        %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc223)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc527)
                      } loc(#loc526)
                      cir.yield loc(#loc215)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                      %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc225)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc528)
                      cir.yield loc(#loc523)
                    } loc(#loc523)
                  } loc(#loc523)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc227)
                } loc(#loc521)
              } loc(#loc519)
            } loc(#loc518)
          } loc(#loc516)
        } loc(#loc512)
      } loc(#loc511)
    } loc(#loc510)
    cir.return loc(#loc125)
  } loc(#loc485)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc530)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc531)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc531)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc531)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc234)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc532)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc238)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc238)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc536)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc244)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc244)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc536)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc248)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc248)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc249)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc538)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc250)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc539)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc255)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc256)
                %21 = cir.const #cir.int<100> : !s32i loc(#loc257)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc257)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc258)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc542)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc542)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc434)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc260)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc261)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
                %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc543)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc265)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc265)
                  cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc545)
                  cir.scope {
                    %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc271)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc272)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc272)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc547)
                    %39 = cir.ternary(%38, true {
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc275)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc276)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc276)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc548)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc277)
                      %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc274)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc274)
                      %48 = cir.const #cir.int<10> : !s32i loc(#loc278)
                      %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc549)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc273)
                        cir.yield %51 : !cir.bool loc(#loc273)
                      }, false {
                        %51 = cir.const #false loc(#loc273)
                        cir.yield %51 : !cir.bool loc(#loc273)
                      }) : (!cir.bool) -> !cir.bool loc(#loc273)
                      cir.yield %50 : !cir.bool loc(#loc273)
                    }, false {
                      %40 = cir.const #false loc(#loc273)
                      cir.yield %40 : !cir.bool loc(#loc273)
                    }) : (!cir.bool) -> !cir.bool loc(#loc273)
                    cir.if %39 {
                      %40 = cir.const #cir.int<0> : !s32i loc(#loc280)
                      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc280)
                      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc281)
                      %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc282)
                      %44 = cir.const #cir.int<1> : !s32i loc(#loc283)
                      %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc283)
                      %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc551)
                      %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc284)
                      cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc552)
                    } loc(#loc550)
                  } loc(#loc546)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc285)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc285)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc286)
                  %34 = cir.const #cir.int<0> : !s32i loc(#loc287)
                  %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc287)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc288)
                  %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc289)
                  %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc290)
                  cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc553)
                } loc(#loc544)
              } loc(#loc541)
            } loc(#loc540)
          } loc(#loc537)
        } loc(#loc535)
      } loc(#loc534)
    } loc(#loc533)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc293)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc293)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc557)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc558)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc559)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc303)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc305)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc305)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc303)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc306)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc561)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc311)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc564)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc313)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc566)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc317)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc568)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc320)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc569)
                      cir.condition(%25) loc(#loc321)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                        %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc324)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc571)
                      } loc(#loc570)
                      cir.yield loc(#loc316)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                      %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc326)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc572)
                      cir.yield loc(#loc567)
                    } loc(#loc567)
                  } loc(#loc567)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc328)
                } loc(#loc565)
              } loc(#loc563)
            } loc(#loc562)
          } loc(#loc560)
        } loc(#loc556)
      } loc(#loc555)
    } loc(#loc554)
    cir.return loc(#loc229)
  } loc(#loc529)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc573)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc331)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc575)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc576)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc576)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc576)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc338)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc577)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc484)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc342)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc342)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc346)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc346)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc347)
      } else {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc348)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc331)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc331)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc348)
      } loc(#loc579)
    } loc(#loc578)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc352)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc352)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc583)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc584)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc585)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc362)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc363)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc364)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc364)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc362)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc365)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc587)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc367)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc589)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc371)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc591)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc592)
                  cir.condition(%22) loc(#loc375)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc377)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc378)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                  } loc(#loc593)
                  cir.yield loc(#loc370)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc379)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc380)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc595)
                  cir.yield loc(#loc590)
                } loc(#loc590)
              } loc(#loc590)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc381)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc382)
            } loc(#loc588)
          } loc(#loc586)
        } loc(#loc582)
      } loc(#loc581)
    } loc(#loc580)
    cir.return loc(#loc333)
  } loc(#loc574)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc597)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc598)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc598)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc598)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc389)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc599)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc393)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc393)
      cir.if %6 {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc395)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc396)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc397)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc397)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc395)
      } loc(#loc601)
    } loc(#loc600)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc431)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc400)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc400)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc605)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc606)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc607)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc410)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc411)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc412)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc412)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc410)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc413)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc609)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc415)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc611)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc419)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc613)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc421)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc422)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc614)
                  cir.condition(%22) loc(#loc423)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc426)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc616)
                  } loc(#loc615)
                  cir.yield loc(#loc418)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc427)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc428)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                  cir.yield loc(#loc612)
                } loc(#loc612)
              } loc(#loc612)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc429)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc430)
            } loc(#loc610)
          } loc(#loc608)
        } loc(#loc604)
      } loc(#loc603)
    } loc(#loc602)
    cir.return loc(#loc384)
  } loc(#loc596)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_05.c":0:0)
#loc1 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":29:1)
#loc2 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":29:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":60:31)
#loc12 = loc("/usr/include/stdio.h":468:1)
#loc13 = loc("/usr/include/stdio.h":468:12)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":71:30)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":34:1)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":84:1)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":36:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":36:12)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":37:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":37:28)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":38:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":38:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":39:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":66:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":39:8)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":40:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":41:9)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":65:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":43:13)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":43:41)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":43:30)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":43:37)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":45:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":64:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":45:17)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":45:21)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":45:31)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":46:13)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:17)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":63:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:27)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:32)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:31)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:47)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:51)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:61)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:21)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":48:71)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":49:17)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":57:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":59:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":52:31)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":52:38)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":52:21)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":52:42)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:21)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":56:21)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:25)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:35)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:37)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:40)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:45)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:53)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:54)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":53:59)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":54:21)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":55:43)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":55:25)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":55:30)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":55:38)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":55:39)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":60:21)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":62:37)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":62:21)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":62:26)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":62:33)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":67:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":83:5)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":67:8)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":68:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":69:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":82:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":70:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":70:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":70:20)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":70:23)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":71:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":81:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":71:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":71:24)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":71:43)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":72:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":74:31)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":74:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":79:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:26)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:22)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:29)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:33)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:31)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":76:17)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":78:32)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":78:21)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:37)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":75:36)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":80:30)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":80:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":272:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":278:1)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":274:5)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":274:14)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":275:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":275:14)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":276:5)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":276:14)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":277:5)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":277:14)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":30:1)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":30:26)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":127:19)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":91:1)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":149:1)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":93:5)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":93:12)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":94:5)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":94:28)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":95:12)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":95:5)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":96:5)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":123:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":96:8)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":97:5)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":98:9)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":122:9)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":100:13)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":100:41)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":100:30)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":100:37)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":102:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":121:13)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":102:17)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":102:21)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":102:31)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":103:13)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":120:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:27)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:32)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:31)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:47)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:51)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:61)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:21)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":105:71)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":106:17)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":114:17)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":116:17)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":109:31)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":109:38)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":109:21)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":109:42)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:21)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":113:21)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:25)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:35)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:37)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:40)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:45)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:53)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:54)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":110:59)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":111:21)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":112:43)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":112:25)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":112:30)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":112:38)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":112:39)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":117:31)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":117:21)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":119:37)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":119:21)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":119:26)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":119:33)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":124:5)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":148:5)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":124:8)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":125:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":128:5)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":130:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":127:9)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":131:9)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":147:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":132:13)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":132:17)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":132:20)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":132:23)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":133:13)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":146:13)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":133:17)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":133:24)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":133:30)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":133:43)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":134:13)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":136:17)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":145:17)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":136:21)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":136:25)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":137:17)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":138:35)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":138:21)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:21)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":143:21)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:30)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:26)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:33)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:37)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:35)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":140:21)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":142:36)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":142:25)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:41)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":139:40)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":144:34)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":144:21)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":152:1)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":205:1)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":154:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":154:12)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":155:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":155:28)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":156:12)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":156:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":157:5)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":184:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":157:8)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":158:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":159:9)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":183:9)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":161:13)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":161:41)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":161:30)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":161:37)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":163:13)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":182:13)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":163:17)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":163:21)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":163:31)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":164:13)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":181:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:27)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:32)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:31)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:47)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:51)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:61)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:21)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":166:71)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":167:17)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":175:17)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":177:17)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":170:31)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":170:38)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":170:21)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":170:42)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:21)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":174:21)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:25)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:35)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:37)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:40)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:45)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:53)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:54)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":171:59)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":172:21)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":173:43)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":173:25)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":173:30)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":173:38)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":173:39)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":178:31)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":178:21)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":180:37)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":180:21)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":180:26)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":180:33)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":185:5)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":204:5)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":185:8)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":186:5)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":187:9)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":203:9)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":188:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":188:17)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":188:20)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":188:23)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":189:13)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":202:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":189:17)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":189:24)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":189:30)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":189:43)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":190:13)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":192:17)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":201:17)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":192:21)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":192:25)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":193:17)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":194:35)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":194:21)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:21)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":199:21)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:30)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:26)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:33)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:37)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:35)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":196:21)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":198:36)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":198:25)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:41)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":195:40)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":200:34)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":200:21)
#loc329 = loc("/usr/include/string.h":141:1)
#loc330 = loc("/usr/include/string.h":142:14)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":221:22)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":208:1)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":240:1)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":210:5)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":210:12)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":211:5)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":211:28)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":212:12)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":212:5)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":213:5)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":222:5)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":213:8)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":214:5)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":217:5)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":219:5)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":216:19)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":216:9)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":221:9)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":221:16)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":223:5)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":239:5)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":223:8)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":224:5)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":225:9)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":238:9)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":226:13)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":226:17)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":226:20)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":226:23)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":227:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":237:13)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":227:17)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":227:24)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":227:30)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":227:43)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":228:13)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":230:31)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":230:17)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:17)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":235:17)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:26)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:22)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:29)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:33)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:31)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":232:17)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":234:32)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":234:21)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:37)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":231:36)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":236:30)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":236:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":243:1)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":270:1)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":245:5)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":245:12)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":246:5)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":246:28)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":247:12)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":247:5)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":248:5)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":252:5)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":248:8)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":249:5)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":251:9)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":251:16)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":251:22)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":253:5)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":269:5)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":253:8)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":254:5)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":255:9)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":268:9)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":256:13)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":256:17)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":256:20)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":256:23)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":257:13)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":267:13)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":257:17)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":257:24)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":257:30)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":257:43)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":258:13)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":260:31)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":260:17)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:17)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":265:17)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:26)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:22)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:29)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:33)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:31)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":262:17)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":264:32)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":264:21)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:37)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":261:36)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":266:30)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_console_05.c":266:17)
#loc431 = loc(fused[#loc1, #loc2])
#loc432 = loc(fused[#loc3, #loc4])
#loc433 = loc(fused[#loc5, #loc6])
#loc434 = loc(fused[#loc7, #loc8])
#loc435 = loc(fused[#loc9, #loc10])
#loc436 = loc(fused[#loc12, #loc13])
#loc437 = loc(fused[#loc15, #loc16])
#loc438 = loc(fused[#loc17, #loc18])
#loc439 = loc(fused[#loc19, #loc20])
#loc440 = loc(fused[#loc21, #loc22])
#loc441 = loc(fused[#loc24, #loc23])
#loc442 = loc(fused[#loc25, #loc26])
#loc443 = loc(fused[#loc28, #loc26])
#loc444 = loc(fused[#loc29, #loc30])
#loc445 = loc(fused[#loc31, #loc32])
#loc446 = loc(fused[#loc35, #loc36])
#loc447 = loc(fused[#loc37, #loc38])
#loc448 = loc(fused[#loc37, #loc39])
#loc449 = loc(fused[#loc40, #loc36])
#loc450 = loc(fused[#loc41, #loc42])
#loc451 = loc(fused[#loc46, #loc47])
#loc452 = loc(fused[#loc49, #loc50])
#loc453 = loc(fused[#loc51, #loc52, #loc53, #loc42])
#loc454 = loc(fused[#loc56, #loc57])
#loc455 = loc(fused[#loc58, #loc59])
#loc456 = loc(fused[#loc60, #loc61])
#loc457 = loc(fused[#loc64, #loc65])
#loc458 = loc(fused[#loc63, #loc67])
#loc459 = loc(fused[#loc68, #loc59])
#loc460 = loc(fused[#loc71, #loc72])
#loc461 = loc(fused[#loc70, #loc69])
#loc462 = loc(fused[#loc76, #loc75])
#loc463 = loc(fused[#loc79, #loc80])
#loc464 = loc(fused[#loc82, #loc80])
#loc465 = loc(fused[#loc83, #loc84])
#loc466 = loc(fused[#loc85, #loc86])
#loc467 = loc(fused[#loc85, #loc87])
#loc468 = loc(fused[#loc85, #loc88])
#loc469 = loc(fused[#loc89, #loc90])
#loc470 = loc(fused[#loc91, #loc93])
#loc471 = loc(fused[#loc94, #loc90])
#loc472 = loc(fused[#loc96, #loc95])
#loc473 = loc(fused[#loc97, #loc98])
#loc474 = loc(fused[#loc100, #loc99])
#loc475 = loc(fused[#loc101, #loc102])
#loc476 = loc(fused[#loc104, #loc98])
#loc477 = loc(fused[#loc106, #loc105])
#loc478 = loc(fused[#loc108, #loc107])
#loc479 = loc(fused[#loc111, #loc112])
#loc480 = loc(fused[#loc113, #loc114])
#loc481 = loc(fused[#loc115, #loc116])
#loc482 = loc(fused[#loc117, #loc118])
#loc483 = loc(fused[#loc119, #loc120])
#loc484 = loc(fused[#loc121, #loc122])
#loc485 = loc(fused[#loc124, #loc125])
#loc486 = loc(fused[#loc126, #loc127])
#loc487 = loc(fused[#loc128, #loc129])
#loc488 = loc(fused[#loc131, #loc130])
#loc489 = loc(fused[#loc132, #loc133])
#loc490 = loc(fused[#loc135, #loc133])
#loc491 = loc(fused[#loc136, #loc137])
#loc492 = loc(fused[#loc138, #loc139])
#loc493 = loc(fused[#loc142, #loc143])
#loc494 = loc(fused[#loc144, #loc145])
#loc495 = loc(fused[#loc144, #loc146])
#loc496 = loc(fused[#loc147, #loc143])
#loc497 = loc(fused[#loc148, #loc149])
#loc498 = loc(fused[#loc153, #loc154])
#loc499 = loc(fused[#loc156, #loc157])
#loc500 = loc(fused[#loc158, #loc159, #loc160, #loc149])
#loc501 = loc(fused[#loc163, #loc164])
#loc502 = loc(fused[#loc165, #loc166])
#loc503 = loc(fused[#loc167, #loc168])
#loc504 = loc(fused[#loc171, #loc172])
#loc505 = loc(fused[#loc170, #loc174])
#loc506 = loc(fused[#loc175, #loc166])
#loc507 = loc(fused[#loc178, #loc179])
#loc508 = loc(fused[#loc177, #loc176])
#loc509 = loc(fused[#loc184, #loc183])
#loc510 = loc(fused[#loc187, #loc188])
#loc511 = loc(fused[#loc190, #loc191, #loc192, #loc188])
#loc512 = loc(fused[#loc194, #loc195])
#loc513 = loc(fused[#loc196, #loc197])
#loc514 = loc(fused[#loc196, #loc198])
#loc515 = loc(fused[#loc196, #loc199])
#loc516 = loc(fused[#loc200, #loc201])
#loc517 = loc(fused[#loc202, #loc205])
#loc518 = loc(fused[#loc206, #loc201])
#loc519 = loc(fused[#loc207, #loc208])
#loc520 = loc(fused[#loc209, #loc210])
#loc521 = loc(fused[#loc211, #loc208])
#loc522 = loc(fused[#loc213, #loc212])
#loc523 = loc(fused[#loc214, #loc215])
#loc524 = loc(fused[#loc217, #loc216])
#loc525 = loc(fused[#loc218, #loc219])
#loc526 = loc(fused[#loc221, #loc215])
#loc527 = loc(fused[#loc223, #loc222])
#loc528 = loc(fused[#loc225, #loc224])
#loc529 = loc(fused[#loc228, #loc229])
#loc530 = loc(fused[#loc230, #loc231])
#loc531 = loc(fused[#loc232, #loc233])
#loc532 = loc(fused[#loc235, #loc234])
#loc533 = loc(fused[#loc236, #loc237])
#loc534 = loc(fused[#loc239, #loc237])
#loc535 = loc(fused[#loc240, #loc241])
#loc536 = loc(fused[#loc242, #loc243])
#loc537 = loc(fused[#loc246, #loc247])
#loc538 = loc(fused[#loc248, #loc249])
#loc539 = loc(fused[#loc248, #loc250])
#loc540 = loc(fused[#loc251, #loc247])
#loc541 = loc(fused[#loc252, #loc253])
#loc542 = loc(fused[#loc257, #loc258])
#loc543 = loc(fused[#loc260, #loc261])
#loc544 = loc(fused[#loc262, #loc263, #loc264, #loc253])
#loc545 = loc(fused[#loc267, #loc268])
#loc546 = loc(fused[#loc269, #loc270])
#loc547 = loc(fused[#loc271, #loc272])
#loc548 = loc(fused[#loc275, #loc276])
#loc549 = loc(fused[#loc274, #loc278])
#loc550 = loc(fused[#loc279, #loc270])
#loc551 = loc(fused[#loc282, #loc283])
#loc552 = loc(fused[#loc281, #loc280])
#loc553 = loc(fused[#loc288, #loc287])
#loc554 = loc(fused[#loc291, #loc292])
#loc555 = loc(fused[#loc294, #loc292])
#loc556 = loc(fused[#loc295, #loc296])
#loc557 = loc(fused[#loc297, #loc298])
#loc558 = loc(fused[#loc297, #loc299])
#loc559 = loc(fused[#loc297, #loc300])
#loc560 = loc(fused[#loc301, #loc302])
#loc561 = loc(fused[#loc303, #loc306])
#loc562 = loc(fused[#loc307, #loc302])
#loc563 = loc(fused[#loc308, #loc309])
#loc564 = loc(fused[#loc310, #loc311])
#loc565 = loc(fused[#loc312, #loc309])
#loc566 = loc(fused[#loc314, #loc313])
#loc567 = loc(fused[#loc315, #loc316])
#loc568 = loc(fused[#loc318, #loc317])
#loc569 = loc(fused[#loc319, #loc320])
#loc570 = loc(fused[#loc322, #loc316])
#loc571 = loc(fused[#loc324, #loc323])
#loc572 = loc(fused[#loc326, #loc325])
#loc573 = loc(fused[#loc329, #loc330])
#loc574 = loc(fused[#loc332, #loc333])
#loc575 = loc(fused[#loc334, #loc335])
#loc576 = loc(fused[#loc336, #loc337])
#loc577 = loc(fused[#loc339, #loc338])
#loc578 = loc(fused[#loc340, #loc341])
#loc579 = loc(fused[#loc343, #loc344, #loc345, #loc341])
#loc580 = loc(fused[#loc350, #loc351])
#loc581 = loc(fused[#loc353, #loc351])
#loc582 = loc(fused[#loc354, #loc355])
#loc583 = loc(fused[#loc356, #loc357])
#loc584 = loc(fused[#loc356, #loc358])
#loc585 = loc(fused[#loc356, #loc359])
#loc586 = loc(fused[#loc360, #loc361])
#loc587 = loc(fused[#loc362, #loc365])
#loc588 = loc(fused[#loc366, #loc361])
#loc589 = loc(fused[#loc368, #loc367])
#loc590 = loc(fused[#loc369, #loc370])
#loc591 = loc(fused[#loc372, #loc371])
#loc592 = loc(fused[#loc373, #loc374])
#loc593 = loc(fused[#loc376, #loc370])
#loc594 = loc(fused[#loc378, #loc377])
#loc595 = loc(fused[#loc380, #loc379])
#loc596 = loc(fused[#loc383, #loc384])
#loc597 = loc(fused[#loc385, #loc386])
#loc598 = loc(fused[#loc387, #loc388])
#loc599 = loc(fused[#loc390, #loc389])
#loc600 = loc(fused[#loc391, #loc392])
#loc601 = loc(fused[#loc394, #loc392])
#loc602 = loc(fused[#loc398, #loc399])
#loc603 = loc(fused[#loc401, #loc399])
#loc604 = loc(fused[#loc402, #loc403])
#loc605 = loc(fused[#loc404, #loc405])
#loc606 = loc(fused[#loc404, #loc406])
#loc607 = loc(fused[#loc404, #loc407])
#loc608 = loc(fused[#loc408, #loc409])
#loc609 = loc(fused[#loc410, #loc413])
#loc610 = loc(fused[#loc414, #loc409])
#loc611 = loc(fused[#loc416, #loc415])
#loc612 = loc(fused[#loc417, #loc418])
#loc613 = loc(fused[#loc420, #loc419])
#loc614 = loc(fused[#loc421, #loc422])
#loc615 = loc(fused[#loc424, #loc418])
#loc616 = loc(fused[#loc426, #loc425])
#loc617 = loc(fused[#loc428, #loc427])
