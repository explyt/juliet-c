!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("../../../testcasesupport/std_thread.c":30:29)
#loc10 = loc("../../../testcasesupport/std_thread.c":30:35)
#loc28 = loc("../../../testcasesupport/std_thread.c":48:21)
#loc29 = loc("../../../testcasesupport/std_thread.c":48:38)
#loc30 = loc("../../../testcasesupport/std_thread.c":48:45)
#loc31 = loc("../../../testcasesupport/std_thread.c":48:51)
#loc32 = loc("../../../testcasesupport/std_thread.c":48:57)
#loc33 = loc("../../../testcasesupport/std_thread.c":48:68)
#loc83 = loc("../../../testcasesupport/std_thread.c":91:19)
#loc84 = loc("../../../testcasesupport/std_thread.c":91:29)
#loc100 = loc("../../../testcasesupport/std_thread.c":106:22)
#loc101 = loc("../../../testcasesupport/std_thread.c":106:32)
#loc111 = loc("../../../testcasesupport/std_thread.c":133:25)
#loc112 = loc("../../../testcasesupport/std_thread.c":133:40)
#loc151 = loc("../../../testcasesupport/std_thread.c":161:27)
#loc152 = loc("../../../testcasesupport/std_thread.c":161:41)
#loc160 = loc("../../../testcasesupport/std_thread.c":188:27)
#loc161 = loc("../../../testcasesupport/std_thread.c":188:41)
#loc169 = loc("../../../testcasesupport/std_thread.c":200:27)
#loc170 = loc("../../../testcasesupport/std_thread.c":200:41)
#loc180 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc28, #loc29])
#loc186 = loc(fused[#loc30, #loc31])
#loc187 = loc(fused[#loc32, #loc33])
#loc209 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc100, #loc101])
#loc220 = loc(fused[#loc111, #loc112])
#loc237 = loc(fused[#loc151, #loc152])
#loc240 = loc(fused[#loc160, #loc161])
#loc243 = loc(fused[#loc169, #loc170])
!ty___pthread_internal_list = !cir.struct<struct "__pthread_internal_list" {!cir.ptr<!cir.struct<struct "__pthread_internal_list">>, !cir.ptr<!cir.struct<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_pthread_attr_t = !cir.struct<union "pthread_attr_t" {!cir.array<!s8i x 56>, !s64i} #cir.record.decl.ast>
!ty_pthread_mutexattr_t = !cir.struct<union "pthread_mutexattr_t" {!cir.array<!s8i x 4>, !s32i} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.struct<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty__stdThread = !cir.struct<struct "_stdThread" {!u64i, !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.struct<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" {!ty_pthread_mutex_t} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcasesupport/std_thread.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc176)
  cir.func private @pthread_create(!cir.ptr<!u64i>, !cir.ptr<!ty_pthread_attr_t>, !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>)>>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc177)
  cir.func private @pthread_exit(!cir.ptr<!void>) loc(#loc178)
  cir.func internal private @internal_start(%arg0: !cir.ptr<!void> loc(fused[#loc9, #loc10])) -> !cir.ptr<!void> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    %2 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["thread", init] {alignment = 8 : i64} loc(#loc181)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__stdThread> loc(#loc12)
    cir.store %4, %2 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc181)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc14)
    %6 = cir.get_member %5[1] {name = "start"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>> loc(#loc15)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc16)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc17)
    %9 = cir.get_member %8[2] {name = "args"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!cir.ptr<!void>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc19)
    cir.call %7(%10) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc14)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
    cir.call @pthread_exit(%11) : (!cir.ptr<!void>) -> () loc(#loc21)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    cir.store %12, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc182)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc182)
    cir.return %13 : !cir.ptr<!void> loc(#loc182)
  } loc(#loc179)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.func @stdThreadCreate(%arg0: !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(fused[#loc28, #loc29]), %arg1: !cir.ptr<!void> loc(fused[#loc30, #loc31]), %arg2: !cir.ptr<!cir.ptr<!ty__stdThread>> loc(fused[#loc32, #loc33])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>>, ["start", init] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThread>>>, ["thread", init] {alignment = 8 : i64} loc(#loc187)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc27)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["handle"] {alignment = 8 : i64} loc(#loc188)
    %5 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["my_thread"] {alignment = 8 : i64} loc(#loc189)
    cir.store %arg0, %0 : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>> loc(#loc38)
    cir.store %arg1, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc38)
    cir.store %arg2, %2 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThread>>> loc(#loc38)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc39)
    %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThread>>>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc40)
    cir.store %6, %7 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc190)
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %9 = cir.const #cir.int<24> : !u64i loc(#loc191)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__stdThread> loc(#loc192)
    cir.store %11, %5 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc193)
    cir.scope {
      %25 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc49)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__stdThread> loc(#loc50)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__stdThread>, !cir.bool loc(#loc195)
      cir.if %28 {
        %29 = cir.const #cir.int<0> : !s32i loc(#loc52)
        cir.store %29, %3 : !s32i, !cir.ptr<!s32i> loc(#loc197)
        %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        cir.return %30 : !s32i loc(#loc197)
      } loc(#loc196)
    } loc(#loc194)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc54)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc55)
    %14 = cir.get_member %13[1] {name = "start"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>> loc(#loc15)
    cir.store %12, %14 : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>> loc(#loc198)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc57)
    %17 = cir.get_member %16[2] {name = "args"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!cir.ptr<!void>> loc(#loc18)
    cir.store %15, %17 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc199)
    cir.scope {
      %25 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!ty_pthread_attr_t> loc(#loc61)
      %27 = cir.get_global @internal_start : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>)>> loc(#loc62)
      %28 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc63)
      %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__stdThread>), !cir.ptr<!void> loc(#loc63)
      %30 = cir.call @pthread_create(%4, %26, %27, %29) : (!cir.ptr<!u64i>, !cir.ptr<!ty_pthread_attr_t>, !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>)>>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc64)
      %31 = cir.cmp(ne, %25, %30) : !s32i, !cir.bool loc(#loc201)
      cir.if %31 {
        %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
        %33 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc68)
        %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__stdThread>), !cir.ptr<!void> loc(#loc68)
        cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
        %35 = cir.const #cir.int<0> : !s32i loc(#loc69)
        cir.store %35, %3 : !s32i, !cir.ptr<!s32i> loc(#loc203)
        %36 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        cir.return %36 : !s32i loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc72)
    %20 = cir.get_member %19[0] {name = "handle"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!u64i> loc(#loc73)
    cir.store %18, %20 : !u64i, !cir.ptr<!u64i> loc(#loc204)
    %21 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc74)
    %22 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThread>>>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc75)
    cir.store %21, %22 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc205)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc77)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %24 : !s32i loc(#loc206)
  } loc(#loc184)
  cir.func private @pthread_join(!u64i, !cir.ptr<!cir.ptr<!void>>) -> !s32i loc(#loc207)
  cir.func @stdThreadJoin(%arg0: !cir.ptr<!ty__stdThread> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["thread", init] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dummy"] {alignment = 8 : i64} loc(#loc210)
    cir.store %arg0, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc87)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc91)
      %7 = cir.get_member %6[0] {name = "handle"} : !cir.ptr<!ty__stdThread> -> !cir.ptr<!u64i> loc(#loc73)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc92)
      %9 = cir.call @pthread_join(%8, %2) : (!u64i, !cir.ptr<!cir.ptr<!void>>) -> !s32i loc(#loc93)
      %10 = cir.cmp(ne, %5, %9) : !s32i, !cir.bool loc(#loc212)
      cir.if %10 {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc89)
        cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc213)
        %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc213)
        cir.return %12 : !s32i loc(#loc213)
      } loc(#loc213)
    } loc(#loc211)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc96)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.return %4 : !s32i loc(#loc214)
  } loc(#loc208)
  cir.func @stdThreadDestroy(%arg0: !cir.ptr<!ty__stdThread> loc(fused[#loc100, #loc101])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["thread", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc102)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc104)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__stdThread>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc105)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.return %6 : !s32i loc(#loc217)
  } loc(#loc215)
  cir.func private @pthread_mutex_init(!cir.ptr<!ty_pthread_mutex_t>, !cir.ptr<!ty_pthread_mutexattr_t>) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func @stdThreadLockCreate(%arg0: !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThreadLock>>>, ["lock", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, ["my_lock", init] {alignment = 8 : i64} loc(#loc221)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThreadLock>>> loc(#loc115)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> loc(#loc114)
    cir.store %3, %2 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc221)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> loc(#loc116)
    %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThreadLock>>>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc117)
    cir.store %4, %5 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc222)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc119)
    %7 = cir.const #cir.int<40> : !u64i loc(#loc223)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__stdThreadLock> loc(#loc224)
    cir.store %9, %2 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc225)
    cir.scope {
      %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc126)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__stdThreadLock> loc(#loc127)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__stdThreadLock>, !cir.bool loc(#loc227)
      cir.if %17 {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc125)
        cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
        %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc228)
        cir.return %19 : !s32i loc(#loc228)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %14 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc132)
      %16 = cir.get_member %15[0] {name = "mutex"} : !cir.ptr<!ty__stdThreadLock> -> !cir.ptr<!ty_pthread_mutex_t> loc(#loc133)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty_pthread_mutexattr_t> loc(#loc134)
      %18 = cir.call @pthread_mutex_init(%16, %17) : (!cir.ptr<!ty_pthread_mutex_t>, !cir.ptr<!ty_pthread_mutexattr_t>) -> !s32i extra(#fn_attr) loc(#loc135)
      %19 = cir.cmp(ne, %14, %18) : !s32i, !cir.bool loc(#loc230)
      cir.if %19 {
        %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThreadLock>>>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc139)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>), !cir.ptr<!void> loc(#loc139)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc140)
        cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc232)
        %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc232)
        cir.return %24 : !s32i loc(#loc232)
      } loc(#loc231)
    } loc(#loc229)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc142)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__stdThreadLock>>>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc143)
    cir.store %10, %11 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc233)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc145)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.return %13 : !s32i loc(#loc234)
  } loc(#loc219)
  cir.func private @pthread_mutex_lock(!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func @stdThreadLockAcquire(%arg0: !cir.ptr<!ty__stdThreadLock> loc(fused[#loc151, #loc152])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, ["lock", init] {alignment = 8 : i64} loc(#loc237)
    cir.store %arg0, %0 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc153)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc154)
    %2 = cir.get_member %1[0] {name = "mutex"} : !cir.ptr<!ty__stdThreadLock> -> !cir.ptr<!ty_pthread_mutex_t> loc(#loc133)
    %3 = cir.call @pthread_mutex_lock(%2) : (!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc155)
    cir.return loc(#loc150)
  } loc(#loc236)
  cir.func private @pthread_mutex_unlock(!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func @stdThreadLockRelease(%arg0: !cir.ptr<!ty__stdThreadLock> loc(fused[#loc160, #loc161])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, ["lock", init] {alignment = 8 : i64} loc(#loc240)
    cir.store %arg0, %0 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc162)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc163)
    %2 = cir.get_member %1[0] {name = "mutex"} : !cir.ptr<!ty__stdThreadLock> -> !cir.ptr<!ty_pthread_mutex_t> loc(#loc133)
    %3 = cir.call @pthread_mutex_unlock(%2) : (!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc164)
    cir.return loc(#loc159)
  } loc(#loc239)
  cir.func private @pthread_mutex_destroy(!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func @stdThreadLockDestroy(%arg0: !cir.ptr<!ty__stdThreadLock> loc(fused[#loc169, #loc170])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, ["lock", init] {alignment = 8 : i64} loc(#loc243)
    cir.store %arg0, %0 : !cir.ptr<!ty__stdThreadLock>, !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc171)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc172)
    %2 = cir.get_member %1[0] {name = "mutex"} : !cir.ptr<!ty__stdThreadLock> -> !cir.ptr<!ty_pthread_mutex_t> loc(#loc133)
    %3 = cir.call @pthread_mutex_destroy(%2) : (!cir.ptr<!ty_pthread_mutex_t>) -> !s32i extra(#fn_attr) loc(#loc173)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc174)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc175)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__stdThreadLock>), !cir.ptr<!void> loc(#loc175)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc174)
    cir.return loc(#loc168)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcasesupport/std_thread.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/pthread.h":202:1)
#loc4 = loc("/usr/include/pthread.h":205:41)
#loc5 = loc("/usr/include/pthread.h":211:1)
#loc6 = loc("/usr/include/pthread.h":211:72)
#loc7 = loc("../../../testcasesupport/std_thread.c":30:1)
#loc8 = loc("../../../testcasesupport/std_thread.c":46:1)
#loc11 = loc("../../../testcasesupport/std_thread.c":33:5)
#loc12 = loc("../../../testcasesupport/std_thread.c":33:35)
#loc13 = loc("../../../testcasesupport/std_thread.c":32:1)
#loc14 = loc("../../../testcasesupport/std_thread.c":35:5)
#loc15 = loc("../../../testcasesupport/std_thread.c":19:22)
#loc16 = loc("../../../testcasesupport/std_thread.c":35:13)
#loc17 = loc("../../../testcasesupport/std_thread.c":35:19)
#loc18 = loc("../../../testcasesupport/std_thread.c":20:11)
#loc19 = loc("../../../testcasesupport/std_thread.c":35:27)
#loc20 = loc("../../../testcasesupport/std_thread.c":42:18)
#loc21 = loc("../../../testcasesupport/std_thread.c":42:5)
#loc22 = loc("../../../testcasesupport/std_thread.c":44:12)
#loc23 = loc("../../../testcasesupport/std_thread.c":44:5)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("../../../testcasesupport/std_thread.c":48:1)
#loc27 = loc("../../../testcasesupport/std_thread.c":89:1)
#loc34 = loc("../../../testcasesupport/std_thread.c":53:5)
#loc35 = loc("../../../testcasesupport/std_thread.c":53:15)
#loc36 = loc("../../../testcasesupport/std_thread.c":55:5)
#loc37 = loc("../../../testcasesupport/std_thread.c":55:15)
#loc38 = loc("../../../testcasesupport/std_thread.c":49:1)
#loc39 = loc("../../../testcasesupport/std_thread.c":57:15)
#loc40 = loc("../../../testcasesupport/std_thread.c":57:6)
#loc41 = loc("../../../testcasesupport/std_thread.c":57:5)
#loc42 = loc("../../../testcasesupport/std_thread.c":59:28)
#loc43 = loc("../../../testcasesupport/std_thread.c":59:35)
#loc44 = loc("../../../testcasesupport/std_thread.c":59:52)
#loc45 = loc("../../../testcasesupport/std_thread.c":59:53)
#loc46 = loc("../../../testcasesupport/std_thread.c":59:5)
#loc47 = loc("../../../testcasesupport/std_thread.c":60:5)
#loc48 = loc("../../../testcasesupport/std_thread.c":62:5)
#loc49 = loc("../../../testcasesupport/std_thread.c":60:9)
#loc50 = loc("../../../testcasesupport/std_thread.c":60:22)
#loc51 = loc("../../../testcasesupport/std_thread.c":60:28)
#loc52 = loc("../../../testcasesupport/std_thread.c":61:16)
#loc53 = loc("../../../testcasesupport/std_thread.c":61:9)
#loc54 = loc("../../../testcasesupport/std_thread.c":64:24)
#loc55 = loc("../../../testcasesupport/std_thread.c":64:5)
#loc56 = loc("../../../testcasesupport/std_thread.c":65:23)
#loc57 = loc("../../../testcasesupport/std_thread.c":65:5)
#loc58 = loc("../../../testcasesupport/std_thread.c":74:5)
#loc59 = loc("../../../testcasesupport/std_thread.c":77:5)
#loc60 = loc("../../../testcasesupport/std_thread.c":74:9)
#loc61 = loc("../../../testcasesupport/std_thread.c":74:38)
#loc62 = loc("../../../testcasesupport/std_thread.c":74:44)
#loc63 = loc("../../../testcasesupport/std_thread.c":74:60)
#loc64 = loc("../../../testcasesupport/std_thread.c":74:14)
#loc65 = loc("../../../testcasesupport/std_thread.c":74:69)
#loc66 = loc("../../../testcasesupport/std_thread.c":74:72)
#loc67 = loc("../../../testcasesupport/std_thread.c":75:9)
#loc68 = loc("../../../testcasesupport/std_thread.c":75:14)
#loc69 = loc("../../../testcasesupport/std_thread.c":76:16)
#loc70 = loc("../../../testcasesupport/std_thread.c":76:9)
#loc71 = loc("../../../testcasesupport/std_thread.c":84:25)
#loc72 = loc("../../../testcasesupport/std_thread.c":84:5)
#loc73 = loc("../../../testcasesupport/std_thread.c":17:15)
#loc74 = loc("../../../testcasesupport/std_thread.c":86:15)
#loc75 = loc("../../../testcasesupport/std_thread.c":86:6)
#loc76 = loc("../../../testcasesupport/std_thread.c":86:5)
#loc77 = loc("../../../testcasesupport/std_thread.c":88:12)
#loc78 = loc("../../../testcasesupport/std_thread.c":88:5)
#loc79 = loc("/usr/include/pthread.h":219:1)
#loc80 = loc("/usr/include/pthread.h":219:64)
#loc81 = loc("../../../testcasesupport/std_thread.c":91:1)
#loc82 = loc("../../../testcasesupport/std_thread.c":104:1)
#loc85 = loc("../../../testcasesupport/std_thread.c":99:5)
#loc86 = loc("../../../testcasesupport/std_thread.c":99:11)
#loc87 = loc("../../../testcasesupport/std_thread.c":92:1)
#loc88 = loc("../../../testcasesupport/std_thread.c":100:5)
#loc89 = loc("../../../testcasesupport/std_thread.c":100:59)
#loc90 = loc("../../../testcasesupport/std_thread.c":100:9)
#loc91 = loc("../../../testcasesupport/std_thread.c":100:27)
#loc92 = loc("../../../testcasesupport/std_thread.c":100:35)
#loc93 = loc("../../../testcasesupport/std_thread.c":100:14)
#loc94 = loc("../../../testcasesupport/std_thread.c":100:49)
#loc95 = loc("../../../testcasesupport/std_thread.c":100:52)
#loc96 = loc("../../../testcasesupport/std_thread.c":103:12)
#loc97 = loc("../../../testcasesupport/std_thread.c":103:5)
#loc98 = loc("../../../testcasesupport/std_thread.c":106:1)
#loc99 = loc("../../../testcasesupport/std_thread.c":115:1)
#loc102 = loc("../../../testcasesupport/std_thread.c":107:1)
#loc103 = loc("../../../testcasesupport/std_thread.c":112:5)
#loc104 = loc("../../../testcasesupport/std_thread.c":112:10)
#loc105 = loc("../../../testcasesupport/std_thread.c":114:12)
#loc106 = loc("../../../testcasesupport/std_thread.c":114:5)
#loc107 = loc("/usr/include/pthread.h":781:1)
#loc108 = loc("/usr/include/pthread.h":783:14)
#loc109 = loc("../../../testcasesupport/std_thread.c":133:1)
#loc110 = loc("../../../testcasesupport/std_thread.c":159:1)
#loc113 = loc("../../../testcasesupport/std_thread.c":135:5)
#loc114 = loc("../../../testcasesupport/std_thread.c":135:29)
#loc115 = loc("../../../testcasesupport/std_thread.c":134:1)
#loc116 = loc("../../../testcasesupport/std_thread.c":137:13)
#loc117 = loc("../../../testcasesupport/std_thread.c":137:6)
#loc118 = loc("../../../testcasesupport/std_thread.c":137:5)
#loc119 = loc("../../../testcasesupport/std_thread.c":139:30)
#loc120 = loc("../../../testcasesupport/std_thread.c":139:37)
#loc121 = loc("../../../testcasesupport/std_thread.c":139:52)
#loc122 = loc("../../../testcasesupport/std_thread.c":139:53)
#loc123 = loc("../../../testcasesupport/std_thread.c":139:5)
#loc124 = loc("../../../testcasesupport/std_thread.c":140:5)
#loc125 = loc("../../../testcasesupport/std_thread.c":140:33)
#loc126 = loc("../../../testcasesupport/std_thread.c":140:9)
#loc127 = loc("../../../testcasesupport/std_thread.c":140:20)
#loc128 = loc("../../../testcasesupport/std_thread.c":140:26)
#loc129 = loc("../../../testcasesupport/std_thread.c":150:5)
#loc130 = loc("../../../testcasesupport/std_thread.c":153:5)
#loc131 = loc("../../../testcasesupport/std_thread.c":150:9)
#loc132 = loc("../../../testcasesupport/std_thread.c":150:34)
#loc133 = loc("../../../testcasesupport/std_thread.c":125:21)
#loc134 = loc("../../../testcasesupport/std_thread.c":150:50)
#loc135 = loc("../../../testcasesupport/std_thread.c":150:14)
#loc136 = loc("../../../testcasesupport/std_thread.c":150:54)
#loc137 = loc("../../../testcasesupport/std_thread.c":150:57)
#loc138 = loc("../../../testcasesupport/std_thread.c":151:9)
#loc139 = loc("../../../testcasesupport/std_thread.c":151:14)
#loc140 = loc("../../../testcasesupport/std_thread.c":152:16)
#loc141 = loc("../../../testcasesupport/std_thread.c":152:9)
#loc142 = loc("../../../testcasesupport/std_thread.c":156:13)
#loc143 = loc("../../../testcasesupport/std_thread.c":156:6)
#loc144 = loc("../../../testcasesupport/std_thread.c":156:5)
#loc145 = loc("../../../testcasesupport/std_thread.c":158:12)
#loc146 = loc("../../../testcasesupport/std_thread.c":158:5)
#loc147 = loc("/usr/include/pthread.h":794:1)
#loc148 = loc("/usr/include/pthread.h":795:16)
#loc149 = loc("../../../testcasesupport/std_thread.c":161:1)
#loc150 = loc("../../../testcasesupport/std_thread.c":186:1)
#loc153 = loc("../../../testcasesupport/std_thread.c":162:1)
#loc154 = loc("../../../testcasesupport/std_thread.c":184:25)
#loc155 = loc("../../../testcasesupport/std_thread.c":184:5)
#loc156 = loc("/usr/include/pthread.h":835:1)
#loc157 = loc("/usr/include/pthread.h":836:16)
#loc158 = loc("../../../testcasesupport/std_thread.c":188:1)
#loc159 = loc("../../../testcasesupport/std_thread.c":198:1)
#loc162 = loc("../../../testcasesupport/std_thread.c":189:1)
#loc163 = loc("../../../testcasesupport/std_thread.c":196:27)
#loc164 = loc("../../../testcasesupport/std_thread.c":196:5)
#loc165 = loc("/usr/include/pthread.h":786:1)
#loc166 = loc("/usr/include/pthread.h":787:14)
#loc167 = loc("../../../testcasesupport/std_thread.c":200:1)
#loc168 = loc("../../../testcasesupport/std_thread.c":208:1)
#loc171 = loc("../../../testcasesupport/std_thread.c":200:46)
#loc172 = loc("../../../testcasesupport/std_thread.c":205:28)
#loc173 = loc("../../../testcasesupport/std_thread.c":205:5)
#loc174 = loc("../../../testcasesupport/std_thread.c":207:5)
#loc175 = loc("../../../testcasesupport/std_thread.c":207:10)
#loc176 = loc(fused[#loc1, #loc2])
#loc177 = loc(fused[#loc3, #loc4])
#loc178 = loc(fused[#loc5, #loc6])
#loc179 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc11, #loc12])
#loc182 = loc(fused[#loc23, #loc22])
#loc183 = loc(fused[#loc24, #loc25])
#loc184 = loc(fused[#loc26, #loc27])
#loc188 = loc(fused[#loc34, #loc35])
#loc189 = loc(fused[#loc36, #loc37])
#loc190 = loc(fused[#loc41, #loc39])
#loc191 = loc(fused[#loc43, #loc44])
#loc192 = loc(fused[#loc42, #loc45])
#loc193 = loc(fused[#loc46, #loc45])
#loc194 = loc(fused[#loc47, #loc48])
#loc195 = loc(fused[#loc49, #loc50])
#loc196 = loc(fused[#loc51, #loc48])
#loc197 = loc(fused[#loc53, #loc52])
#loc198 = loc(fused[#loc55, #loc54])
#loc199 = loc(fused[#loc57, #loc56])
#loc200 = loc(fused[#loc58, #loc59])
#loc201 = loc(fused[#loc60, #loc65])
#loc202 = loc(fused[#loc66, #loc59])
#loc203 = loc(fused[#loc70, #loc69])
#loc204 = loc(fused[#loc72, #loc71])
#loc205 = loc(fused[#loc76, #loc74])
#loc206 = loc(fused[#loc78, #loc77])
#loc207 = loc(fused[#loc79, #loc80])
#loc208 = loc(fused[#loc81, #loc82])
#loc210 = loc(fused[#loc85, #loc86])
#loc211 = loc(fused[#loc88, #loc89])
#loc212 = loc(fused[#loc90, #loc94])
#loc213 = loc(fused[#loc95, #loc89])
#loc214 = loc(fused[#loc97, #loc96])
#loc215 = loc(fused[#loc98, #loc99])
#loc217 = loc(fused[#loc106, #loc105])
#loc218 = loc(fused[#loc107, #loc108])
#loc219 = loc(fused[#loc109, #loc110])
#loc221 = loc(fused[#loc113, #loc114])
#loc222 = loc(fused[#loc118, #loc116])
#loc223 = loc(fused[#loc120, #loc121])
#loc224 = loc(fused[#loc119, #loc122])
#loc225 = loc(fused[#loc123, #loc122])
#loc226 = loc(fused[#loc124, #loc125])
#loc227 = loc(fused[#loc126, #loc127])
#loc228 = loc(fused[#loc128, #loc125])
#loc229 = loc(fused[#loc129, #loc130])
#loc230 = loc(fused[#loc131, #loc136])
#loc231 = loc(fused[#loc137, #loc130])
#loc232 = loc(fused[#loc141, #loc140])
#loc233 = loc(fused[#loc144, #loc142])
#loc234 = loc(fused[#loc146, #loc145])
#loc235 = loc(fused[#loc147, #loc148])
#loc236 = loc(fused[#loc149, #loc150])
#loc238 = loc(fused[#loc156, #loc157])
#loc239 = loc(fused[#loc158, #loc159])
#loc241 = loc(fused[#loc165, #loc166])
#loc242 = loc(fused[#loc167, #loc168])
