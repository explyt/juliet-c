!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc287)
  cir.func private  @printDoubleLine(!cir.double) loc(#loc288)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc290)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc291)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc292)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc294)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
      cir.if %7 {
      } loc(#loc295)
    } loc(#loc293)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc297)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc300)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc31)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc302)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc33)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc34)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc303)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc35)
              cir.condition(%13) loc(#loc35)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc37)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc38)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc39)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc37)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc40)
              } loc(#loc304)
              cir.yield loc(#loc30)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc42)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              cir.yield loc(#loc301)
            } loc(#loc301)
          } loc(#loc301)
        } loc(#loc299)
      } loc(#loc298)
    } loc(#loc296)
    cir.return loc(#loc6)
  } loc(#loc289)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc44)
  } loc(#loc306)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc311)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc314)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc62)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc315)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc317)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc68)
      cir.if %7 {
      } loc(#loc318)
    } loc(#loc316)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc320)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc74)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc323)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc85)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc325)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc88)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc326)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc89)
              cir.condition(%13) loc(#loc89)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc91)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc92)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc94)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc328)
              } loc(#loc327)
              cir.yield loc(#loc84)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc96)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc329)
              cir.yield loc(#loc324)
            } loc(#loc324)
          } loc(#loc324)
        } loc(#loc322)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc331)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc103)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc333)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc106)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc334)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc107)
              cir.condition(%13) loc(#loc107)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc109)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc111)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc109)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc112)
              } loc(#loc335)
              cir.yield loc(#loc102)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc114)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc336)
              cir.yield loc(#loc332)
            } loc(#loc332)
          } loc(#loc332)
        } loc(#loc330)
      } loc(#loc321)
    } loc(#loc319)
    cir.return loc(#loc57)
  } loc(#loc312)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc339)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc121)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc340)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc342)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc127)
      cir.if %7 {
      } loc(#loc343)
    } loc(#loc341)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc345)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc133)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc348)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc141)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc350)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc144)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc351)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc145)
              cir.condition(%13) loc(#loc145)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc147)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc148)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc150)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc353)
              } loc(#loc352)
              cir.yield loc(#loc140)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc152)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc354)
              cir.yield loc(#loc349)
            } loc(#loc349)
          } loc(#loc349)
        } loc(#loc347)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc356)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc159)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc358)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc162)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc359)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc163)
              cir.condition(%13) loc(#loc163)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc165)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc167)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc165)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc168)
              } loc(#loc360)
              cir.yield loc(#loc158)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc169)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc170)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc361)
              cir.yield loc(#loc357)
            } loc(#loc357)
          } loc(#loc357)
        } loc(#loc355)
      } loc(#loc346)
    } loc(#loc344)
    cir.return loc(#loc116)
  } loc(#loc337)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc363)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc364)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc177)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc365)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc181)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc182)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc367)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc183)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc187)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc187)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc188)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc370)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc195)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc372)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc198)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc373)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc199)
              cir.condition(%13) loc(#loc199)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc201)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc201)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc202)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc204)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc375)
              } loc(#loc374)
              cir.yield loc(#loc194)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc206)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc376)
              cir.yield loc(#loc371)
            } loc(#loc371)
          } loc(#loc371)
        } loc(#loc369)
      } loc(#loc368)
    } loc(#loc366)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc209)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc210)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc378)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc211)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc381)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc219)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc383)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc222)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc384)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc223)
              cir.condition(%13) loc(#loc223)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc225)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc227)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc225)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc228)
              } loc(#loc385)
              cir.yield loc(#loc218)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc230)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc386)
              cir.yield loc(#loc382)
            } loc(#loc382)
          } loc(#loc382)
        } loc(#loc380)
      } loc(#loc379)
    } loc(#loc377)
    cir.return loc(#loc172)
  } loc(#loc362)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc388)
    %1 = cir.alloca !cir.array<!cir.double x 10>, !cir.ptr<!cir.array<!cir.double x 10>>, ["dataUninitArray"] {alignment = 16 : i64} loc(#loc389)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.double x 10>>), !cir.ptr<!cir.double> loc(#loc237)
    cir.store %2, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc390)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc242)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc392)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc243)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc395)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc251)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc397)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc254)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc398)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc255)
              cir.condition(%13) loc(#loc255)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc257)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc258)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc260)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc400)
              } loc(#loc399)
              cir.yield loc(#loc250)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc262)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc401)
              cir.yield loc(#loc396)
            } loc(#loc396)
          } loc(#loc396)
        } loc(#loc394)
      } loc(#loc393)
    } loc(#loc391)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc287)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc265)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc266)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc403)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc267)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc406)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc275)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc408)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc278)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc409)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc279)
              cir.condition(%13) loc(#loc279)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc281)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc283)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc281)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc284)
              } loc(#loc410)
              cir.yield loc(#loc274)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc285)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc286)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc411)
              cir.yield loc(#loc407)
            } loc(#loc407)
          } loc(#loc407)
        } loc(#loc405)
      } loc(#loc404)
    } loc(#loc402)
    cir.return loc(#loc232)
  } loc(#loc387)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":43:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":24:14)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":25:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":25:30)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":26:12)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":26:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":27:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":31:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":27:8)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":27:20)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":27:18)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":28:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":32:5)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":42:5)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":32:8)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":32:20)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":32:18)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":33:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":35:9)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":41:9)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":36:13)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":36:17)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:13)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":40:13)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:19)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:17)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:22)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:24)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:23)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":38:13)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":39:33)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":39:38)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":39:39)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":39:17)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:29)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":37:28)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":181:1)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":187:1)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":183:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":183:14)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":184:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":184:14)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":185:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":185:14)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":186:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":186:14)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":63:19)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":50:1)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":83:1)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":52:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":52:14)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":53:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":53:30)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":54:12)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":54:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":55:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":59:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":55:8)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":55:20)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":55:18)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":56:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":60:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":82:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":60:8)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":60:20)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":60:18)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":61:5)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":64:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":66:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":63:9)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":68:9)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":74:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":69:13)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":69:17)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":73:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:19)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:17)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:24)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:23)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":71:13)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":72:35)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":72:17)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":72:22)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":72:23)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:29)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":70:28)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":75:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":81:9)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":76:13)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":76:17)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:13)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":80:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:19)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:17)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:22)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:24)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:23)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":78:13)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":79:33)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":79:38)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":79:39)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":79:17)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:29)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":77:28)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":86:1)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":114:1)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":88:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":88:14)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":89:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":89:30)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":90:12)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":90:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":91:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":95:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":91:8)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":91:20)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":91:18)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":92:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":96:5)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":113:5)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":96:8)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":96:20)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":96:18)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":97:5)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":99:9)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":105:9)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":100:13)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":100:17)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:13)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":104:13)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:19)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:17)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:22)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:24)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:23)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":102:13)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":103:35)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":103:17)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":103:22)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":103:23)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:29)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":101:28)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":106:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":112:9)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":107:13)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":107:17)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:13)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":111:13)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:19)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:17)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:22)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:24)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:23)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":109:13)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":110:33)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":110:38)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":110:39)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":110:17)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:29)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":108:28)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":117:1)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":149:1)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":119:5)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":119:14)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":120:5)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":120:30)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":121:12)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":121:5)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":122:5)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":137:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":122:8)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":122:20)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":122:18)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":123:5)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":126:5)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":128:5)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":125:19)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":125:9)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":130:9)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":136:9)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":131:13)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":131:17)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:13)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":135:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:19)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:17)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:22)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:24)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:23)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":133:13)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":134:35)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":134:17)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":134:22)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":134:23)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:29)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":132:28)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":138:5)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":148:5)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":138:8)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":138:20)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":138:18)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":139:5)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":141:9)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":147:9)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":142:13)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":142:17)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:13)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":146:13)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:19)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:17)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:22)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:24)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:23)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":144:13)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":145:33)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":145:38)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":145:39)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":145:17)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:29)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":143:28)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":152:1)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":179:1)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":154:5)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":154:14)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":155:5)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":155:30)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":156:12)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":156:5)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":157:5)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":167:5)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":157:8)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":157:20)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":157:18)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":158:5)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":160:9)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":166:9)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":161:13)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":161:17)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:13)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":165:13)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:19)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:17)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:22)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:24)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:23)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":163:13)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":164:35)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":164:17)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":164:22)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":164:23)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:29)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":162:28)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":168:5)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":178:5)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":168:8)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":168:20)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":168:18)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":169:5)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":171:9)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":177:9)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":172:13)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":172:17)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:13)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":176:13)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:19)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:17)
#loc277 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:22)
#loc278 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:24)
#loc279 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:23)
#loc280 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":174:13)
#loc281 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":175:33)
#loc282 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":175:38)
#loc283 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":175:39)
#loc284 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":175:17)
#loc285 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:29)
#loc286 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_declare_no_init_14.c":173:28)
#loc287 = loc(fused[#loc1, #loc2])
#loc288 = loc(fused[#loc3, #loc4])
#loc289 = loc(fused[#loc5, #loc6])
#loc290 = loc(fused[#loc7, #loc8])
#loc291 = loc(fused[#loc9, #loc10])
#loc292 = loc(fused[#loc12, #loc11])
#loc293 = loc(fused[#loc13, #loc14])
#loc294 = loc(fused[#loc15, #loc16])
#loc295 = loc(fused[#loc18, #loc14])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22])
#loc298 = loc(fused[#loc24, #loc20])
#loc299 = loc(fused[#loc25, #loc26])
#loc300 = loc(fused[#loc27, #loc28])
#loc301 = loc(fused[#loc29, #loc30])
#loc302 = loc(fused[#loc32, #loc31])
#loc303 = loc(fused[#loc33, #loc34])
#loc304 = loc(fused[#loc36, #loc30])
#loc305 = loc(fused[#loc42, #loc41])
#loc306 = loc(fused[#loc43, #loc44])
#loc307 = loc(fused[#loc45, #loc46])
#loc308 = loc(fused[#loc47, #loc48])
#loc309 = loc(fused[#loc49, #loc50])
#loc310 = loc(fused[#loc51, #loc52])
#loc311 = loc(fused[#loc53, #loc54])
#loc312 = loc(fused[#loc56, #loc57])
#loc313 = loc(fused[#loc58, #loc59])
#loc314 = loc(fused[#loc60, #loc61])
#loc315 = loc(fused[#loc63, #loc62])
#loc316 = loc(fused[#loc64, #loc65])
#loc317 = loc(fused[#loc66, #loc67])
#loc318 = loc(fused[#loc69, #loc65])
#loc319 = loc(fused[#loc70, #loc71])
#loc320 = loc(fused[#loc72, #loc73])
#loc321 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc322 = loc(fused[#loc79, #loc80])
#loc323 = loc(fused[#loc81, #loc82])
#loc324 = loc(fused[#loc83, #loc84])
#loc325 = loc(fused[#loc86, #loc85])
#loc326 = loc(fused[#loc87, #loc88])
#loc327 = loc(fused[#loc90, #loc84])
#loc328 = loc(fused[#loc92, #loc91])
#loc329 = loc(fused[#loc96, #loc95])
#loc330 = loc(fused[#loc97, #loc98])
#loc331 = loc(fused[#loc99, #loc100])
#loc332 = loc(fused[#loc101, #loc102])
#loc333 = loc(fused[#loc104, #loc103])
#loc334 = loc(fused[#loc105, #loc106])
#loc335 = loc(fused[#loc108, #loc102])
#loc336 = loc(fused[#loc114, #loc113])
#loc337 = loc(fused[#loc115, #loc116])
#loc338 = loc(fused[#loc117, #loc118])
#loc339 = loc(fused[#loc119, #loc120])
#loc340 = loc(fused[#loc122, #loc121])
#loc341 = loc(fused[#loc123, #loc124])
#loc342 = loc(fused[#loc125, #loc126])
#loc343 = loc(fused[#loc128, #loc124])
#loc344 = loc(fused[#loc129, #loc130])
#loc345 = loc(fused[#loc131, #loc132])
#loc346 = loc(fused[#loc134, #loc130])
#loc347 = loc(fused[#loc135, #loc136])
#loc348 = loc(fused[#loc137, #loc138])
#loc349 = loc(fused[#loc139, #loc140])
#loc350 = loc(fused[#loc142, #loc141])
#loc351 = loc(fused[#loc143, #loc144])
#loc352 = loc(fused[#loc146, #loc140])
#loc353 = loc(fused[#loc148, #loc147])
#loc354 = loc(fused[#loc152, #loc151])
#loc355 = loc(fused[#loc153, #loc154])
#loc356 = loc(fused[#loc155, #loc156])
#loc357 = loc(fused[#loc157, #loc158])
#loc358 = loc(fused[#loc160, #loc159])
#loc359 = loc(fused[#loc161, #loc162])
#loc360 = loc(fused[#loc164, #loc158])
#loc361 = loc(fused[#loc170, #loc169])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc173, #loc174])
#loc364 = loc(fused[#loc175, #loc176])
#loc365 = loc(fused[#loc178, #loc177])
#loc366 = loc(fused[#loc179, #loc180])
#loc367 = loc(fused[#loc181, #loc182])
#loc368 = loc(fused[#loc184, #loc185, #loc186, #loc180])
#loc369 = loc(fused[#loc189, #loc190])
#loc370 = loc(fused[#loc191, #loc192])
#loc371 = loc(fused[#loc193, #loc194])
#loc372 = loc(fused[#loc196, #loc195])
#loc373 = loc(fused[#loc197, #loc198])
#loc374 = loc(fused[#loc200, #loc194])
#loc375 = loc(fused[#loc202, #loc201])
#loc376 = loc(fused[#loc206, #loc205])
#loc377 = loc(fused[#loc207, #loc208])
#loc378 = loc(fused[#loc209, #loc210])
#loc379 = loc(fused[#loc212, #loc208])
#loc380 = loc(fused[#loc213, #loc214])
#loc381 = loc(fused[#loc215, #loc216])
#loc382 = loc(fused[#loc217, #loc218])
#loc383 = loc(fused[#loc220, #loc219])
#loc384 = loc(fused[#loc221, #loc222])
#loc385 = loc(fused[#loc224, #loc218])
#loc386 = loc(fused[#loc230, #loc229])
#loc387 = loc(fused[#loc231, #loc232])
#loc388 = loc(fused[#loc233, #loc234])
#loc389 = loc(fused[#loc235, #loc236])
#loc390 = loc(fused[#loc238, #loc237])
#loc391 = loc(fused[#loc239, #loc240])
#loc392 = loc(fused[#loc241, #loc242])
#loc393 = loc(fused[#loc244, #loc240])
#loc394 = loc(fused[#loc245, #loc246])
#loc395 = loc(fused[#loc247, #loc248])
#loc396 = loc(fused[#loc249, #loc250])
#loc397 = loc(fused[#loc252, #loc251])
#loc398 = loc(fused[#loc253, #loc254])
#loc399 = loc(fused[#loc256, #loc250])
#loc400 = loc(fused[#loc258, #loc257])
#loc401 = loc(fused[#loc262, #loc261])
#loc402 = loc(fused[#loc263, #loc264])
#loc403 = loc(fused[#loc265, #loc266])
#loc404 = loc(fused[#loc268, #loc264])
#loc405 = loc(fused[#loc269, #loc270])
#loc406 = loc(fused[#loc271, #loc272])
#loc407 = loc(fused[#loc273, #loc274])
#loc408 = loc(fused[#loc276, #loc275])
#loc409 = loc(fused[#loc277, #loc278])
#loc410 = loc(fused[#loc280, #loc274])
#loc411 = loc(fused[#loc286, #loc285])
