!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:44)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:44)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:23)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc415)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc416)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc417)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc418)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc419)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc420)
  cir.func private @close(!s32i) -> !s32i loc(#loc421)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc422)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc423)
  cir.func private @printIntLine(!s32i) loc(#loc424)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc24)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc426)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc429)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc430)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc431)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc432)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc433)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc434)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc44)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.br ^bb1 loc(#loc436)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc36)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    cir.br ^bb2 loc(#loc437)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc437)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc50)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc53)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb5 loc(#loc439)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc60)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc441)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc62)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc58)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc442)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc443)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc444)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc70)
    %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc445)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
    %30 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc446)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc78)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
    %35 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc447)
    cir.br ^bb9 loc(#loc448)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %37 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc449)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc450)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc450)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc91)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc452)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc93)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc84)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %45 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc96)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc96)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc96)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc96)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc96)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc96)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc96)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc97)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc453)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc99)
    cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.br ^bb13 loc(#loc455)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc105)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc106)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc106)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc106)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc457)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc106)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc106)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc106)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc106)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc106)
  ^bb18(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc106)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc106)
  ^bb20(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc106)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc458)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc110)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc111)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %75 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc459)
    %77 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc115)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.br ^bb3 loc(#loc49)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc49)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc461)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc121)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc462)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc463)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc124)
    cir.br ^bb29 loc(#loc119)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc119)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc464)
  ^bb31:  // pred: ^bb30
    %85 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc127)
    %86 = cir.const #cir.int<10> : !s32i loc(#loc128)
    %87 = cir.cast(integral, %86 : !s32i), !u64i loc(#loc128)
    %88 = cir.const #cir.int<4> : !u64i loc(#loc465)
    %89 = cir.binop(mul, %87, %88) : !u64i loc(#loc466)
    %90 = cir.call @malloc(%89) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
    %91 = cir.cast(bitcast, %90 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc467)
    cir.store %91, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc434)
    cir.br ^bb32 loc(#loc468)
  ^bb32:  // pred: ^bb31
    %92 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    %93 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
    %94 = cir.cast(bitcast, %93 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
    %95 = cir.cmp(eq, %92, %94) : !cir.ptr<!s32i>, !cir.bool loc(#loc469)
    cir.brcond %95 ^bb33, ^bb34 loc(#loc470)
  ^bb33:  // pred: ^bb32
    %96 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc136)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc138)
    cir.call @exit(%98) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
    cir.br ^bb34 loc(#loc132)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc132)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc471)
  ^bb36:  // pred: ^bb35
    %99 = cir.const #cir.int<0> : !s32i loc(#loc141)
    cir.store %99, %5 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    cir.br ^bb37 loc(#loc471)
  ^bb37:  // 2 preds: ^bb36, ^bb41
    %100 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %101 = cir.const #cir.int<10> : !s32i loc(#loc144)
    %102 = cir.cmp(lt, %100, %101) : !s32i, !cir.bool loc(#loc473)
    cir.brcond %102 ^bb38, ^bb42 loc(#loc145)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc474)
  ^bb39:  // pred: ^bb38
    %103 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %104 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %106 = cir.ptr_stride(%104 : !cir.ptr<!s32i>, %105 : !s32i), !cir.ptr<!s32i> loc(#loc150)
    cir.store %103, %106 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    cir.br ^bb40 loc(#loc140)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc140)
  ^bb41:  // pred: ^bb40
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %108 = cir.unary(inc, %107) : !s32i, !s32i loc(#loc152)
    cir.store %108, %5 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.br ^bb37 loc(#loc471)
  ^bb42:  // pred: ^bb37
    cir.br ^bb43 loc(#loc140)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc477)
  ^bb44:  // pred: ^bb43
    %109 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %111 = cir.cmp(ge, %109, %110) : !s32i, !cir.bool loc(#loc478)
    cir.brcond %111 ^bb45, ^bb54 loc(#loc479)
  ^bb45:  // pred: ^bb44
    %112 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %113 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
    %114 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %115 = cir.ptr_stride(%113 : !cir.ptr<!s32i>, %114 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    cir.store %112, %115 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.br ^bb46 loc(#loc481)
  ^bb46:  // pred: ^bb45
    %116 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %116, %5 : !s32i, !cir.ptr<!s32i> loc(#loc482)
    cir.br ^bb47 loc(#loc481)
  ^bb47:  // 2 preds: ^bb46, ^bb51
    %117 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %118 = cir.const #cir.int<10> : !s32i loc(#loc169)
    %119 = cir.cmp(lt, %117, %118) : !s32i, !cir.bool loc(#loc483)
    cir.brcond %119 ^bb48, ^bb52 loc(#loc170)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc484)
  ^bb49:  // pred: ^bb48
    %120 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %121 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %122 = cir.ptr_stride(%120 : !cir.ptr<!s32i>, %121 : !s32i), !cir.ptr<!s32i> loc(#loc174)
    %123 = cir.load %122 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.call @printIntLine(%123) : (!s32i) -> () loc(#loc175)
    cir.br ^bb50 loc(#loc165)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc165)
  ^bb51:  // pred: ^bb50
    %124 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %125 = cir.unary(inc, %124) : !s32i, !s32i loc(#loc177)
    cir.store %125, %5 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.br ^bb47 loc(#loc481)
  ^bb52:  // pred: ^bb47
    cir.br ^bb53 loc(#loc165)
  ^bb53:  // pred: ^bb52
    cir.br ^bb55 loc(#loc158)
  ^bb54:  // pred: ^bb44
    %126 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
    %127 = cir.cast(array_to_ptrdecay, %126 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%127) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.br ^bb55 loc(#loc154)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc154)
  ^bb56:  // pred: ^bb55
    %128 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %129 = cir.cast(bitcast, %128 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc179)
    cir.call @free(%129) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
    cir.return loc(#loc28)
  } loc(#loc427)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc487)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc183)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc488)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc185)
    cir.return loc(#loc182)
  } loc(#loc486)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc187)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc490)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc491)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc492)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc493)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc494)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc495)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc496)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc205)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.br ^bb1 loc(#loc498)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc197)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc493)
    cir.br ^bb2 loc(#loc499)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc499)
  ^bb3:  // pred: ^bb24
    %11 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc211)
    cir.brcond %12 ^bb4, ^bb25 loc(#loc211)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc212)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc214)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.br ^bb5 loc(#loc501)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc221)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc502)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc503)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc223)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc219)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc504)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc505)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc506)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc231)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc231)
    %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc507)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc233)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc233)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc234)
    %30 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc508)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc237)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc237)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc238)
    %35 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc509)
    cir.br ^bb9 loc(#loc510)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %37 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc511)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc512)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc512)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc248)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc249)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc513)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc514)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc251)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc242)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %45 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc253)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc253)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc254)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc254)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc254)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc254)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc254)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc254)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc254)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc255)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc515)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc257)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc257)
    cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.br ^bb13 loc(#loc517)
  ^bb13:  // pred: ^bb12
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc263)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc518)
    cir.brcond %63 ^bb14, ^bb15 loc(#loc264)
  ^bb14:  // pred: ^bb13
    %64 = cir.const #true loc(#loc264)
    cir.br ^bb20(%64 : !cir.bool) loc(#loc264)
  ^bb15:  // pred: ^bb13
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc266)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc519)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc264)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc264)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc264)
  ^bb17:  // pred: ^bb15
    %69 = cir.const #false loc(#loc264)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc264)
  ^bb18(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc264)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%70 : !cir.bool) loc(#loc264)
  ^bb20(%71: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc264)
  ^bb21:  // pred: ^bb20
    cir.brcond %71 ^bb22, ^bb23 loc(#loc520)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc268)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc261)
  ^bb24:  // pred: ^bb23
    %72 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc269)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %75 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc271)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc271)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc521)
    %77 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc272)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc273)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    cir.br ^bb3 loc(#loc210)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc210)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc523)
  ^bb27:  // pred: ^bb26
    %79 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc279)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc524)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc525)
  ^bb28:  // pred: ^bb27
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc282)
    cir.br ^bb29 loc(#loc277)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc277)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc526)
  ^bb31:  // pred: ^bb30
    %85 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc285)
    %86 = cir.const #cir.int<10> : !s32i loc(#loc286)
    %87 = cir.cast(integral, %86 : !s32i), !u64i loc(#loc286)
    %88 = cir.const #cir.int<4> : !u64i loc(#loc527)
    %89 = cir.binop(mul, %87, %88) : !u64i loc(#loc528)
    %90 = cir.call @malloc(%89) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc285)
    %91 = cir.cast(bitcast, %90 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc529)
    cir.store %91, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc496)
    cir.br ^bb32 loc(#loc530)
  ^bb32:  // pred: ^bb31
    %92 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc291)
    %93 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc292)
    %94 = cir.cast(bitcast, %93 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc292)
    %95 = cir.cmp(eq, %92, %94) : !cir.ptr<!s32i>, !cir.bool loc(#loc531)
    cir.brcond %95 ^bb33, ^bb34 loc(#loc532)
  ^bb33:  // pred: ^bb32
    %96 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc294)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc296)
    cir.call @exit(%98) : (!s32i) -> () extra(#fn_attr) loc(#loc294)
    cir.br ^bb34 loc(#loc290)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc290)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc533)
  ^bb36:  // pred: ^bb35
    %99 = cir.const #cir.int<0> : !s32i loc(#loc299)
    cir.store %99, %5 : !s32i, !cir.ptr<!s32i> loc(#loc534)
    cir.br ^bb37 loc(#loc533)
  ^bb37:  // 2 preds: ^bb36, ^bb41
    %100 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %101 = cir.const #cir.int<10> : !s32i loc(#loc302)
    %102 = cir.cmp(lt, %100, %101) : !s32i, !cir.bool loc(#loc535)
    cir.brcond %102 ^bb38, ^bb42 loc(#loc303)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc536)
  ^bb39:  // pred: ^bb38
    %103 = cir.const #cir.int<0> : !s32i loc(#loc305)
    %104 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc306)
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %106 = cir.ptr_stride(%104 : !cir.ptr<!s32i>, %105 : !s32i), !cir.ptr<!s32i> loc(#loc308)
    cir.store %103, %106 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb40 loc(#loc298)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc298)
  ^bb41:  // pred: ^bb40
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %108 = cir.unary(inc, %107) : !s32i, !s32i loc(#loc310)
    cir.store %108, %5 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb37 loc(#loc533)
  ^bb42:  // pred: ^bb37
    cir.br ^bb43 loc(#loc298)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc539)
  ^bb44:  // pred: ^bb43
    %109 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc314)
    %111 = cir.cmp(ge, %109, %110) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %111 ^bb45, ^bb50 loc(#loc315)
  ^bb45:  // pred: ^bb44
    %112 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %113 = cir.const #cir.int<10> : !s32i loc(#loc317)
    %114 = cir.cmp(lt, %112, %113) : !s32i, !cir.bool loc(#loc541)
    cir.brcond %114 ^bb46, ^bb47 loc(#loc315)
  ^bb46:  // pred: ^bb45
    %115 = cir.const #true loc(#loc315)
    cir.br ^bb48(%115 : !cir.bool) loc(#loc315)
  ^bb47:  // pred: ^bb45
    %116 = cir.const #false loc(#loc315)
    cir.br ^bb48(%116 : !cir.bool) loc(#loc315)
  ^bb48(%117: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:23)):  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc315)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51(%117 : !cir.bool) loc(#loc315)
  ^bb50:  // pred: ^bb44
    %118 = cir.const #false loc(#loc315)
    cir.br ^bb51(%118 : !cir.bool) loc(#loc315)
  ^bb51(%119: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:23)):  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc315)
  ^bb52:  // pred: ^bb51
    cir.brcond %119 ^bb53, ^bb62 loc(#loc542)
  ^bb53:  // pred: ^bb52
    %120 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %121 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc323)
    %122 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc324)
    %123 = cir.ptr_stride(%121 : !cir.ptr<!s32i>, %122 : !s32i), !cir.ptr<!s32i> loc(#loc325)
    cir.store %120, %123 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb54 loc(#loc544)
  ^bb54:  // pred: ^bb53
    %124 = cir.const #cir.int<0> : !s32i loc(#loc328)
    cir.store %124, %5 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    cir.br ^bb55 loc(#loc544)
  ^bb55:  // 2 preds: ^bb54, ^bb59
    %125 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    %126 = cir.const #cir.int<10> : !s32i loc(#loc331)
    %127 = cir.cmp(lt, %125, %126) : !s32i, !cir.bool loc(#loc546)
    cir.brcond %127 ^bb56, ^bb60 loc(#loc332)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc547)
  ^bb57:  // pred: ^bb56
    %128 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc334)
    %129 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %130 = cir.ptr_stride(%128 : !cir.ptr<!s32i>, %129 : !s32i), !cir.ptr<!s32i> loc(#loc336)
    %131 = cir.load %130 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.call @printIntLine(%131) : (!s32i) -> () loc(#loc337)
    cir.br ^bb58 loc(#loc327)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc327)
  ^bb59:  // pred: ^bb58
    %132 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    %133 = cir.unary(inc, %132) : !s32i, !s32i loc(#loc339)
    cir.store %133, %5 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb55 loc(#loc544)
  ^bb60:  // pred: ^bb55
    cir.br ^bb61 loc(#loc327)
  ^bb61:  // pred: ^bb60
    cir.br ^bb63 loc(#loc320)
  ^bb62:  // pred: ^bb52
    %134 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc187)
    %135 = cir.cast(array_to_ptrdecay, %134 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%135) : (!cir.ptr<!s8i>) -> () loc(#loc340)
    cir.br ^bb63 loc(#loc312)
  ^bb63:  // 2 preds: ^bb61, ^bb62
    cir.br ^bb64 loc(#loc312)
  ^bb64:  // pred: ^bb63
    %136 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc341)
    %137 = cir.cast(bitcast, %136 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc341)
    cir.call @free(%137) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc342)
    cir.return loc(#loc189)
  } loc(#loc489)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc550)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc551)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc552)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc351)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc352)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc553)
    cir.br ^bb1 loc(#loc554)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<7> : !s32i loc(#loc356)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    cir.br ^bb2 loc(#loc556)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc360)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc361)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc361)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc557)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc558)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc360)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc559)
    cir.store %12, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc552)
    cir.br ^bb3 loc(#loc560)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc366)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc367)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc367)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc561)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc562)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc369)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc370)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc371)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc369)
    cir.br ^bb5 loc(#loc365)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc365)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc563)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc374)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb8 loc(#loc563)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc377)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %23 ^bb9, ^bb13 loc(#loc378)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc566)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc380)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc381)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc383)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.br ^bb11 loc(#loc373)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc373)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc385)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    cir.br ^bb8 loc(#loc563)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc373)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc569)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc389)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc570)
    cir.brcond %32 ^bb16, ^bb25 loc(#loc571)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #cir.int<1> : !s32i loc(#loc393)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc394)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc396)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc572)
    cir.br ^bb17 loc(#loc573)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc399)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb18 loc(#loc573)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc402)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc575)
    cir.brcond %40 ^bb19, ^bb23 loc(#loc403)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc576)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc405)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc406)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc407)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc408)
    cir.br ^bb21 loc(#loc398)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc398)
  ^bb22:  // pred: ^bb21
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc410)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb18 loc(#loc573)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc398)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc391)
  ^bb25:  // pred: ^bb15
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc411)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc411)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc412)
    cir.br ^bb26 loc(#loc387)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc387)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc413)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc413)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc414)
    cir.return loc(#loc344)
  } loc(#loc549)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":131:23)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":44:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":135:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":46:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":46:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":56:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":56:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":57:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":57:28)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":58:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":58:32)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":59:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":59:41)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":110:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":110:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:54)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":48:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":48:12)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":48:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":49:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":49:10)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":60:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":95:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":95:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:45)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:58)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:29)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":70:69)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":71:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":74:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":71:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":71:34)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":72:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":73:17)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:30)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:47)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":75:48)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":76:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":76:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":77:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":77:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":77:59)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":78:38)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":78:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":78:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":78:46)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":82:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:25)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:58)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:59)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:68)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:82)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":79:88)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":80:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":81:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:31)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:46)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:59)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:77)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:80)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:26)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":85:81)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":89:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:31)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:47)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":86:61)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":87:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":88:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":91:39)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":91:25)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":91:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":93:25)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":93:20)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":93:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":93:36)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":96:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":99:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":96:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":96:30)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":97:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":98:26)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":98:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":107:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":107:10)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:31)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:38)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:43)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":111:53)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:39)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:23)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:30)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:36)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":112:35)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":117:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:18)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:14)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:21)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:25)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:23)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":115:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":116:25)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":116:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":116:20)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":116:21)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:30)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":114:29)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":120:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":132:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":120:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":120:21)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":121:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":128:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":130:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":122:28)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":122:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":122:20)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":122:24)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":127:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:21)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:17)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:24)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:28)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:26)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":125:13)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":126:30)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":126:37)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":126:38)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":126:17)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:33)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":124:32)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":131:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":133:14)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":133:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":275:1)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":279:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":277:5)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":277:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":278:5)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":278:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":228:23)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":142:1)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":232:1)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":144:5)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":144:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":154:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":154:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":155:9)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":155:28)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":156:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":156:32)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":157:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":157:41)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":208:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":208:13)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:54)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":146:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":146:12)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":146:5)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":147:5)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":147:10)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":158:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":193:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":193:16)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:36)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:45)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:58)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:29)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":168:69)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":169:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":172:13)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":169:17)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":169:34)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":170:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":171:17)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:20)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:21)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:30)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:33)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:47)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:13)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":173:48)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":174:34)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":174:13)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":175:49)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":175:39)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":175:13)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":175:59)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":176:38)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":176:32)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":176:13)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":176:46)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":180:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:25)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:58)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:59)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:68)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:82)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:17)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":177:88)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":178:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":179:17)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:31)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:46)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:59)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:77)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:80)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:26)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":183:81)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":187:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:17)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:31)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:47)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":184:61)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":185:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":186:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":189:39)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":189:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":189:13)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":191:25)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":191:20)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":191:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":191:36)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":194:9)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":197:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":194:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":194:30)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":195:9)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":196:26)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":196:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":205:5)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":205:10)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:31)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:38)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:43)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":209:53)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:9)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:39)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:13)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:23)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:29)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:30)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:36)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":210:35)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:9)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":215:9)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:18)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:14)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:21)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:25)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:23)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":213:9)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":214:25)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":214:13)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":214:20)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":214:21)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:30)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":212:29)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:9)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":229:9)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:13)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:21)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:26)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:34)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":217:36)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":218:9)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":225:9)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":227:9)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":219:28)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":219:13)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":219:20)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":219:24)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:13)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":224:13)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:21)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:17)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:24)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:28)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:26)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":222:13)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":223:30)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":223:37)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":223:38)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":223:17)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:33)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":221:32)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":228:13)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":230:14)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":230:9)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":235:1)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":273:1)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":237:5)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":237:9)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":248:9)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":248:13)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:9)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:54)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":239:13)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":239:12)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":239:5)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":240:5)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":240:10)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":244:12)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":244:5)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":245:5)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":245:10)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:31)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:38)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:43)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":249:53)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:9)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:39)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:13)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:23)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:29)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:30)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:36)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":250:35)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:9)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":255:9)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:18)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:14)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:21)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:25)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:23)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":253:9)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":254:25)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":254:13)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":254:20)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":254:21)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:30)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":252:29)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":258:9)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":270:9)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":258:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":258:21)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":259:9)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":266:9)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":268:9)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":260:28)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":260:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":260:20)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":260:24)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:13)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":265:13)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:21)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:17)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:24)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:28)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:26)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":263:13)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":264:30)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":264:37)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":264:38)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":264:17)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:33)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":262:32)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":269:23)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":269:13)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":271:14)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_18.c":271:9)
#loc415 = loc(fused[#loc1, #loc2])
#loc416 = loc(fused[#loc3, #loc4])
#loc417 = loc(fused[#loc6, #loc7])
#loc418 = loc(fused[#loc8, #loc9])
#loc419 = loc(fused[#loc10, #loc11])
#loc420 = loc(fused[#loc12, #loc13])
#loc421 = loc(fused[#loc14, #loc15])
#loc422 = loc(fused[#loc16, #loc17])
#loc423 = loc(fused[#loc18, #loc19])
#loc424 = loc(fused[#loc20, #loc21])
#loc425 = loc(fused[#loc22, #loc23])
#loc426 = loc(fused[#loc25, #loc26])
#loc427 = loc(fused[#loc27, #loc28])
#loc428 = loc(fused[#loc29, #loc30])
#loc429 = loc(fused[#loc31, #loc32])
#loc430 = loc(fused[#loc33, #loc34])
#loc431 = loc(fused[#loc35, #loc36])
#loc432 = loc(fused[#loc37, #loc38])
#loc433 = loc(fused[#loc39, #loc40])
#loc434 = loc(fused[#loc41, #loc42])
#loc435 = loc(fused[#loc45, #loc43])
#loc436 = loc(fused[#loc46, #loc47])
#loc437 = loc(fused[#loc48, #loc49])
#loc438 = loc(fused[#loc55, #loc56])
#loc439 = loc(fused[#loc57, #loc58])
#loc440 = loc(fused[#loc59, #loc60])
#loc441 = loc(fused[#loc61, #loc58])
#loc442 = loc(fused[#loc63, #loc64])
#loc443 = loc(fused[#loc66, #loc67])
#loc444 = loc(fused[#loc68, #loc69])
#loc445 = loc(fused[#loc72, #loc70])
#loc446 = loc(fused[#loc76, #loc77])
#loc447 = loc(fused[#loc81, #loc82])
#loc448 = loc(fused[#loc83, #loc84])
#loc449 = loc(fused[#loc86, #loc87])
#loc450 = loc(fused[#loc88, #loc89])
#loc451 = loc(fused[#loc90, #loc91])
#loc452 = loc(fused[#loc92, #loc84])
#loc453 = loc(fused[#loc96, #loc97])
#loc454 = loc(fused[#loc100, #loc101])
#loc455 = loc(fused[#loc102, #loc103])
#loc456 = loc(fused[#loc104, #loc105])
#loc457 = loc(fused[#loc107, #loc108])
#loc458 = loc(fused[#loc109, #loc103])
#loc459 = loc(fused[#loc113, #loc111])
#loc460 = loc(fused[#loc116, #loc117])
#loc461 = loc(fused[#loc118, #loc119])
#loc462 = loc(fused[#loc120, #loc121])
#loc463 = loc(fused[#loc122, #loc119])
#loc464 = loc(fused[#loc125, #loc126])
#loc465 = loc(fused[#loc129, #loc130])
#loc466 = loc(fused[#loc128, #loc130])
#loc467 = loc(fused[#loc127, #loc42])
#loc468 = loc(fused[#loc131, #loc132])
#loc469 = loc(fused[#loc133, #loc134])
#loc470 = loc(fused[#loc135, #loc132])
#loc471 = loc(fused[#loc139, #loc140])
#loc472 = loc(fused[#loc142, #loc141])
#loc473 = loc(fused[#loc143, #loc144])
#loc474 = loc(fused[#loc146, #loc140])
#loc475 = loc(fused[#loc148, #loc147])
#loc476 = loc(fused[#loc152, #loc151])
#loc477 = loc(fused[#loc153, #loc154])
#loc478 = loc(fused[#loc155, #loc156])
#loc479 = loc(fused[#loc157, #loc158, #loc159, #loc154])
#loc480 = loc(fused[#loc161, #loc160])
#loc481 = loc(fused[#loc164, #loc165])
#loc482 = loc(fused[#loc167, #loc166])
#loc483 = loc(fused[#loc168, #loc169])
#loc484 = loc(fused[#loc171, #loc165])
#loc485 = loc(fused[#loc177, #loc176])
#loc486 = loc(fused[#loc181, #loc182])
#loc487 = loc(fused[#loc183, #loc184])
#loc488 = loc(fused[#loc185, #loc186])
#loc489 = loc(fused[#loc188, #loc189])
#loc490 = loc(fused[#loc190, #loc191])
#loc491 = loc(fused[#loc192, #loc193])
#loc492 = loc(fused[#loc194, #loc195])
#loc493 = loc(fused[#loc196, #loc197])
#loc494 = loc(fused[#loc198, #loc199])
#loc495 = loc(fused[#loc200, #loc201])
#loc496 = loc(fused[#loc202, #loc203])
#loc497 = loc(fused[#loc206, #loc204])
#loc498 = loc(fused[#loc207, #loc208])
#loc499 = loc(fused[#loc209, #loc210])
#loc500 = loc(fused[#loc216, #loc217])
#loc501 = loc(fused[#loc218, #loc219])
#loc502 = loc(fused[#loc220, #loc221])
#loc503 = loc(fused[#loc222, #loc219])
#loc504 = loc(fused[#loc224, #loc225])
#loc505 = loc(fused[#loc227, #loc228])
#loc506 = loc(fused[#loc229, #loc230])
#loc507 = loc(fused[#loc232, #loc231])
#loc508 = loc(fused[#loc235, #loc236])
#loc509 = loc(fused[#loc239, #loc240])
#loc510 = loc(fused[#loc241, #loc242])
#loc511 = loc(fused[#loc244, #loc245])
#loc512 = loc(fused[#loc246, #loc247])
#loc513 = loc(fused[#loc248, #loc249])
#loc514 = loc(fused[#loc250, #loc242])
#loc515 = loc(fused[#loc254, #loc255])
#loc516 = loc(fused[#loc258, #loc259])
#loc517 = loc(fused[#loc260, #loc261])
#loc518 = loc(fused[#loc262, #loc263])
#loc519 = loc(fused[#loc265, #loc266])
#loc520 = loc(fused[#loc267, #loc261])
#loc521 = loc(fused[#loc271, #loc269])
#loc522 = loc(fused[#loc274, #loc275])
#loc523 = loc(fused[#loc276, #loc277])
#loc524 = loc(fused[#loc278, #loc279])
#loc525 = loc(fused[#loc280, #loc277])
#loc526 = loc(fused[#loc283, #loc284])
#loc527 = loc(fused[#loc287, #loc288])
#loc528 = loc(fused[#loc286, #loc288])
#loc529 = loc(fused[#loc285, #loc203])
#loc530 = loc(fused[#loc289, #loc290])
#loc531 = loc(fused[#loc291, #loc292])
#loc532 = loc(fused[#loc293, #loc290])
#loc533 = loc(fused[#loc297, #loc298])
#loc534 = loc(fused[#loc300, #loc299])
#loc535 = loc(fused[#loc301, #loc302])
#loc536 = loc(fused[#loc304, #loc298])
#loc537 = loc(fused[#loc306, #loc305])
#loc538 = loc(fused[#loc310, #loc309])
#loc539 = loc(fused[#loc311, #loc312])
#loc540 = loc(fused[#loc313, #loc314])
#loc541 = loc(fused[#loc316, #loc318])
#loc542 = loc(fused[#loc319, #loc320, #loc321, #loc312])
#loc543 = loc(fused[#loc323, #loc322])
#loc544 = loc(fused[#loc326, #loc327])
#loc545 = loc(fused[#loc329, #loc328])
#loc546 = loc(fused[#loc330, #loc331])
#loc547 = loc(fused[#loc333, #loc327])
#loc548 = loc(fused[#loc339, #loc338])
#loc549 = loc(fused[#loc343, #loc344])
#loc550 = loc(fused[#loc345, #loc346])
#loc551 = loc(fused[#loc347, #loc348])
#loc552 = loc(fused[#loc349, #loc350])
#loc553 = loc(fused[#loc353, #loc351])
#loc554 = loc(fused[#loc354, #loc355])
#loc555 = loc(fused[#loc357, #loc356])
#loc556 = loc(fused[#loc358, #loc359])
#loc557 = loc(fused[#loc362, #loc363])
#loc558 = loc(fused[#loc361, #loc363])
#loc559 = loc(fused[#loc360, #loc350])
#loc560 = loc(fused[#loc364, #loc365])
#loc561 = loc(fused[#loc366, #loc367])
#loc562 = loc(fused[#loc368, #loc365])
#loc563 = loc(fused[#loc372, #loc373])
#loc564 = loc(fused[#loc375, #loc374])
#loc565 = loc(fused[#loc376, #loc377])
#loc566 = loc(fused[#loc379, #loc373])
#loc567 = loc(fused[#loc381, #loc380])
#loc568 = loc(fused[#loc385, #loc384])
#loc569 = loc(fused[#loc386, #loc387])
#loc570 = loc(fused[#loc388, #loc389])
#loc571 = loc(fused[#loc390, #loc391, #loc392, #loc387])
#loc572 = loc(fused[#loc394, #loc393])
#loc573 = loc(fused[#loc397, #loc398])
#loc574 = loc(fused[#loc400, #loc399])
#loc575 = loc(fused[#loc401, #loc402])
#loc576 = loc(fused[#loc404, #loc398])
#loc577 = loc(fused[#loc410, #loc409])
