!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":28:23)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":28:27)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":36:24)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc268 = loc(fused[#loc17, #loc18])
#loc274 = loc(fused[#loc30, #loc31])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc260)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc261)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc262)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc263)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc264)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc265)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc266)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc268)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc22)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc23)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc270)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc26)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc272)
      } loc(#loc271)
    } loc(#loc269)
    cir.return loc(#loc16)
  } loc(#loc267)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc30, #loc31])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc274)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc32)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc35)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc36)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc276)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc38)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc39)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc278)
      } loc(#loc277)
    } loc(#loc275)
    cir.return loc(#loc29)
  } loc(#loc273)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc281)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc281)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc44)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc44)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc284)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc52)
          cir.store %5, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc284)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc53)
          %7 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
          %8 = cir.call @signal(%6, %7) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc55)
          cir.scope {
            %22 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc58)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc59)
            %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc286)
            cir.if %26 {
              %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc61)
              %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc62)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc62)
              cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc63)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
              cir.store %31, %32 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc288)
            } loc(#loc287)
          } loc(#loc285)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc65)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc289)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc290)
          cir.store %12, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc291)
          cir.scope {
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc72)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc73)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc293)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc76)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc77)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
            } loc(#loc294)
          } loc(#loc292)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc78)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
          cir.store %13, %14 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc295)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc81)
          %18 = cir.get_member %17[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc296)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %20 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc83)
          %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc84)
          cir.scope {
            %22 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc87)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc88)
            %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc298)
            cir.if %26 {
              %27 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc90)
              %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc91)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc91)
              cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc92)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc260)
              cir.store %31, %32 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc300)
            } loc(#loc299)
          } loc(#loc297)
        } loc(#loc283)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc302)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc97)
          cir.store %5, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc302)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc98)
          %7 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
          %8 = cir.call @signal(%6, %7) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc100)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc103)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc104)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc304)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc106)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc107)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc107)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc108)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc306)
            } loc(#loc305)
          } loc(#loc303)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc110)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc307)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc308)
          cir.store %12, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc309)
          cir.scope {
            %28 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc117)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc118)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc311)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc122)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc312)
          } loc(#loc310)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc123)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          cir.store %13, %14 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc313)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc125)
          %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc126)
          %18 = cir.get_member %17[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc314)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc127)
          %20 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc128)
          %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc129)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc130)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc131)
          %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc132)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc135)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc136)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc316)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc138)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc139)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc139)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc140)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc318)
            } loc(#loc317)
          } loc(#loc315)
          %25 = cir.const #cir.int<2> : !s32i loc(#loc142)
          %26 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc143)
          %27 = cir.call @signal(%25, %26) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc144)
        } loc(#loc301)
      } loc(#loc282)
    } loc(#loc280)
    cir.return loc(#loc41)
  } loc(#loc279)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc320)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc147)
    cir.return loc(#loc146)
  } loc(#loc319)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc323)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc323)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc153)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc153)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc326)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc161)
          cir.store %5, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc326)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
          %7 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc163)
          %8 = cir.call @signal(%6, %7) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc164)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc167)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc168)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc328)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc170)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc171)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc171)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc172)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc330)
            } loc(#loc329)
          } loc(#loc327)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc174)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc331)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc332)
          cir.store %12, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc333)
          cir.scope {
            %28 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc181)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc182)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc335)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc184)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc185)
              %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc186)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
            } loc(#loc336)
          } loc(#loc334)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc187)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          cir.store %13, %14 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc337)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc189)
          %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc190)
          %18 = cir.get_member %17[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc338)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc191)
          %20 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc192)
          %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc193)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc194)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc195)
          %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc196)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc199)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc200)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc340)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc202)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc203)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc203)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc204)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc342)
            } loc(#loc341)
          } loc(#loc339)
          %25 = cir.const #cir.int<2> : !s32i loc(#loc206)
          %26 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc207)
          %27 = cir.call @signal(%25, %26) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc208)
        } loc(#loc325)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc344)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc212)
          cir.store %5, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc344)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc213)
          %7 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc214)
          %8 = cir.call @signal(%6, %7) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc215)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc218)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc219)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc346)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc221)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc222)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc222)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc221)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc223)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc348)
            } loc(#loc347)
          } loc(#loc345)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc225)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc349)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc225)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc350)
          cir.store %12, %4 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc351)
          cir.scope {
            %28 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc232)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc233)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc233)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc353)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc235)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc236)
              %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc237)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc235)
            } loc(#loc354)
          } loc(#loc352)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc238)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          cir.store %13, %14 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc355)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc240)
          %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc241)
          %18 = cir.get_member %17[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc356)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc242)
          %20 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc243)
          %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc244)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc245)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc246)
          %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc247)
          cir.scope {
            %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
            %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc250)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc251)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc251)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc358)
            cir.if %32 {
              %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc253)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc254)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc254)
              cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc253)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc255)
              %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_12StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc261)
              cir.store %37, %38 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc360)
            } loc(#loc359)
          } loc(#loc357)
          %25 = cir.const #cir.int<2> : !s32i loc(#loc257)
          %26 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc258)
          %27 = cir.call @signal(%25, %26) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc259)
        } loc(#loc343)
      } loc(#loc324)
    } loc(#loc322)
    cir.return loc(#loc150)
  } loc(#loc321)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_12.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":26:86)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/signal.h":88:1)
#loc8 = loc("/usr/include/signal.h":89:6)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":28:1)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":34:1)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":29:1)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":30:5)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":33:5)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":30:9)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":30:77)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":31:5)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":32:81)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":32:9)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":22:18)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":36:1)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":42:1)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":37:1)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":38:5)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":41:5)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":38:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":38:78)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":39:5)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":40:82)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":40:9)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":46:1)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":122:1)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":48:5)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":121:5)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":48:8)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":48:33)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":49:5)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":85:5)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":87:5)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":50:9)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":84:9)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":51:13)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":51:49)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":52:20)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":52:28)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":52:13)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":53:13)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":57:13)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":53:17)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":53:85)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":54:13)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":55:17)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":55:22)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":56:84)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":56:17)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":58:50)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":58:57)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":58:79)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":58:80)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":58:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:53)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:17)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:37)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:43)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:44)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:50)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":59:49)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":60:80)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":60:13)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":61:85)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":61:13)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":69:20)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":69:28)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":69:13)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":79:13)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":83:13)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":79:17)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":79:85)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":80:13)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":81:17)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":81:22)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":82:84)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":82:17)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":88:9)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":120:9)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":89:13)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":89:49)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":90:20)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":90:28)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":90:13)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":91:13)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":95:13)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":91:17)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":91:86)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":92:13)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":93:17)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":93:22)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":94:85)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":94:17)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":96:50)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":96:57)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":96:79)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":96:80)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":96:13)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:13)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:53)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:17)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:37)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:43)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:44)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:50)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":97:49)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":98:81)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":98:13)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":99:86)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":99:13)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":107:20)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":107:28)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":107:13)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":113:20)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":113:28)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":113:13)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":114:13)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":118:13)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":114:17)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":114:86)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":115:13)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":116:17)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":116:22)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":117:85)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":117:17)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":119:20)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":119:28)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":119:13)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":205:1)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":208:1)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":207:5)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":207:11)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":129:1)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":203:1)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":131:5)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":202:5)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":131:8)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":131:33)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":132:5)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":166:5)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":168:5)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":133:9)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":165:9)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":134:13)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":134:49)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":135:20)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":135:28)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":135:13)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":136:13)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":140:13)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":136:17)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":136:86)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":137:13)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":138:17)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":138:22)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":139:85)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":139:17)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":141:50)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":141:57)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":141:79)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":141:80)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":141:13)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:13)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:53)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:17)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:37)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:43)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:44)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:50)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":142:49)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":143:81)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":143:13)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":144:86)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":144:13)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":152:20)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":152:28)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":152:13)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":158:20)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":158:28)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":158:13)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":159:13)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":163:13)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":159:17)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":159:86)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":160:13)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":161:17)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":161:22)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":162:85)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":162:17)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":164:20)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":164:28)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":164:13)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":169:9)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":201:9)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":170:13)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":170:49)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":171:20)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":171:28)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":171:13)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":172:13)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":176:13)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":172:17)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":172:86)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":173:13)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":174:17)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":174:22)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":175:85)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":175:17)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":177:50)
#loc226 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":177:57)
#loc227 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":177:79)
#loc228 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":177:80)
#loc229 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":177:13)
#loc230 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:13)
#loc231 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:53)
#loc232 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:17)
#loc233 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:37)
#loc234 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:43)
#loc235 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:44)
#loc236 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:50)
#loc237 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":178:49)
#loc238 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":179:81)
#loc239 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":179:13)
#loc240 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":180:86)
#loc241 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":180:13)
#loc242 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":188:20)
#loc243 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":188:28)
#loc244 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":188:13)
#loc245 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":194:20)
#loc246 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":194:28)
#loc247 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":194:13)
#loc248 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":195:13)
#loc249 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":199:13)
#loc250 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":195:17)
#loc251 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":195:86)
#loc252 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":196:13)
#loc253 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":197:17)
#loc254 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":197:22)
#loc255 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":198:85)
#loc256 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":198:17)
#loc257 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":200:20)
#loc258 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":200:28)
#loc259 = loc("CWE364_Signal_Handler_Race_Condition__basic_12.c":200:13)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc9, #loc10])
#loc265 = loc(fused[#loc11, #loc12])
#loc266 = loc(fused[#loc13, #loc14])
#loc267 = loc(fused[#loc15, #loc16])
#loc269 = loc(fused[#loc20, #loc21])
#loc270 = loc(fused[#loc22, #loc23])
#loc271 = loc(fused[#loc24, #loc21])
#loc272 = loc(fused[#loc26, #loc25])
#loc273 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc33, #loc34])
#loc276 = loc(fused[#loc35, #loc36])
#loc277 = loc(fused[#loc37, #loc34])
#loc278 = loc(fused[#loc39, #loc38])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc42, #loc43])
#loc281 = loc(fused[#loc44, #loc45])
#loc282 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc283 = loc(fused[#loc49, #loc50])
#loc284 = loc(fused[#loc51, #loc52])
#loc285 = loc(fused[#loc56, #loc57])
#loc286 = loc(fused[#loc58, #loc59])
#loc287 = loc(fused[#loc60, #loc57])
#loc288 = loc(fused[#loc64, #loc63])
#loc289 = loc(fused[#loc66, #loc67])
#loc290 = loc(fused[#loc65, #loc68])
#loc291 = loc(fused[#loc69, #loc68])
#loc292 = loc(fused[#loc70, #loc71])
#loc293 = loc(fused[#loc72, #loc73])
#loc294 = loc(fused[#loc74, #loc71])
#loc295 = loc(fused[#loc79, #loc78])
#loc296 = loc(fused[#loc81, #loc80])
#loc297 = loc(fused[#loc85, #loc86])
#loc298 = loc(fused[#loc87, #loc88])
#loc299 = loc(fused[#loc89, #loc86])
#loc300 = loc(fused[#loc93, #loc92])
#loc301 = loc(fused[#loc94, #loc95])
#loc302 = loc(fused[#loc96, #loc97])
#loc303 = loc(fused[#loc101, #loc102])
#loc304 = loc(fused[#loc103, #loc104])
#loc305 = loc(fused[#loc105, #loc102])
#loc306 = loc(fused[#loc109, #loc108])
#loc307 = loc(fused[#loc111, #loc112])
#loc308 = loc(fused[#loc110, #loc113])
#loc309 = loc(fused[#loc114, #loc113])
#loc310 = loc(fused[#loc115, #loc116])
#loc311 = loc(fused[#loc117, #loc118])
#loc312 = loc(fused[#loc119, #loc116])
#loc313 = loc(fused[#loc124, #loc123])
#loc314 = loc(fused[#loc126, #loc125])
#loc315 = loc(fused[#loc133, #loc134])
#loc316 = loc(fused[#loc135, #loc136])
#loc317 = loc(fused[#loc137, #loc134])
#loc318 = loc(fused[#loc141, #loc140])
#loc319 = loc(fused[#loc145, #loc146])
#loc320 = loc(fused[#loc147, #loc148])
#loc321 = loc(fused[#loc149, #loc150])
#loc322 = loc(fused[#loc151, #loc152])
#loc323 = loc(fused[#loc153, #loc154])
#loc324 = loc(fused[#loc155, #loc156, #loc157, #loc152])
#loc325 = loc(fused[#loc158, #loc159])
#loc326 = loc(fused[#loc160, #loc161])
#loc327 = loc(fused[#loc165, #loc166])
#loc328 = loc(fused[#loc167, #loc168])
#loc329 = loc(fused[#loc169, #loc166])
#loc330 = loc(fused[#loc173, #loc172])
#loc331 = loc(fused[#loc175, #loc176])
#loc332 = loc(fused[#loc174, #loc177])
#loc333 = loc(fused[#loc178, #loc177])
#loc334 = loc(fused[#loc179, #loc180])
#loc335 = loc(fused[#loc181, #loc182])
#loc336 = loc(fused[#loc183, #loc180])
#loc337 = loc(fused[#loc188, #loc187])
#loc338 = loc(fused[#loc190, #loc189])
#loc339 = loc(fused[#loc197, #loc198])
#loc340 = loc(fused[#loc199, #loc200])
#loc341 = loc(fused[#loc201, #loc198])
#loc342 = loc(fused[#loc205, #loc204])
#loc343 = loc(fused[#loc209, #loc210])
#loc344 = loc(fused[#loc211, #loc212])
#loc345 = loc(fused[#loc216, #loc217])
#loc346 = loc(fused[#loc218, #loc219])
#loc347 = loc(fused[#loc220, #loc217])
#loc348 = loc(fused[#loc224, #loc223])
#loc349 = loc(fused[#loc226, #loc227])
#loc350 = loc(fused[#loc225, #loc228])
#loc351 = loc(fused[#loc229, #loc228])
#loc352 = loc(fused[#loc230, #loc231])
#loc353 = loc(fused[#loc232, #loc233])
#loc354 = loc(fused[#loc234, #loc231])
#loc355 = loc(fused[#loc239, #loc238])
#loc356 = loc(fused[#loc241, #loc240])
#loc357 = loc(fused[#loc248, #loc249])
#loc358 = loc(fused[#loc250, #loc251])
#loc359 = loc(fused[#loc252, #loc249])
#loc360 = loc(fused[#loc256, #loc255])
