!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc237)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc238)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc243)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
  cir.func private @close(!s32i) -> !s32i loc(#loc246)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc24)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc248)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc252)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc238)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc251)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc252)
    %4 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc238)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc238)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc255)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc257)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc258)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc259)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc260)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc261)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc51)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc261)
        cir.scope {
          cir.do {
            cir.scope {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %22 = cir.const #cir.int<1> : !u32i loc(#loc61)
              %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc61)
              %24 = cir.const #cir.int<6> : !u32i loc(#loc62)
              %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc62)
              %26 = cir.call @socket(%21, %23, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
              cir.store %26, %14 : !s32i, !cir.ptr<!s32i> loc(#loc264)
              cir.scope {
                %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc69)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc266)
                cir.if %79 {
                  cir.break loc(#loc71)
                } loc(#loc267)
              } loc(#loc265)
              %27 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
              %28 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %29 = cir.const #cir.int<16> : !u64i loc(#loc269)
              cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
              %30 = cir.const #cir.int<2> : !s32i loc(#loc79)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc79)
              %32 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc271)
              %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
              %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc82)
              %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
              %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
              cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc272)
              %38 = cir.const #cir.int<27015> : !s32i loc(#loc87)
              %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc87)
              %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
              %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
              cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc273)
              cir.scope {
                %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %77 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
                %78 = cir.const #cir.int<16> : !u64i loc(#loc276)
                %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc276)
                %80 = cir.call @connect(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc100)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc277)
                cir.if %83 {
                  cir.break loc(#loc102)
                } loc(#loc278)
              } loc(#loc274)
              %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %43 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %44 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc106)
              %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
              %47 = cir.const #cir.int<1> : !u64i loc(#loc280)
              %48 = cir.const #cir.int<4096> : !s32i loc(#loc111)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc111)
              %50 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc112)
              %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc281)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc113)
              %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc282)
              %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc283)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc116)
              cir.store %58, %11 : !s32i, !cir.ptr<!s32i> loc(#loc284)
              cir.scope {
                %76 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc122)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc286)
                %80 = cir.ternary(%79, true {
                  %81 = cir.const #true loc(#loc123)
                  cir.yield %81 : !cir.bool loc(#loc123)
                }, false {
                  %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %82 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc287)
                  %84 = cir.ternary(%83, true {
                    %85 = cir.const #true loc(#loc123)
                    cir.yield %85 : !cir.bool loc(#loc123)
                  }, false {
                    %85 = cir.const #false loc(#loc123)
                    cir.yield %85 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %84 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %80 {
                  cir.break loc(#loc127)
                } loc(#loc288)
              } loc(#loc285)
              %59 = cir.const #cir.int<0> : !s8i loc(#loc128)
              %60 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %61 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %62 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc131)
              %64 = cir.const #cir.int<1> : !u64i loc(#loc289)
              %65 = cir.binop(div, %63, %64) : !u64i loc(#loc290)
              %66 = cir.binop(add, %61, %65) : !u64i loc(#loc291)
              %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc292)
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %69 = cir.const #cir.int<13> : !s8i loc(#loc136)
              %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc136)
              %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc137)
              cir.store %71, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
              cir.scope {
                %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                cir.if %77 {
                  %78 = cir.const #cir.int<0> : !s8i loc(#loc144)
                  %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                  cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc296)
                } loc(#loc295)
              } loc(#loc294)
              %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %73 = cir.const #cir.int<10> : !s8i loc(#loc148)
              %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc148)
              %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc149)
              cir.store %75, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
              cir.scope {
                %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                cir.if %77 {
                  %78 = cir.const #cir.int<0> : !s8i loc(#loc156)
                  %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc300)
                } loc(#loc299)
              } loc(#loc298)
            } loc(#loc263)
            cir.yield loc(#loc57)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc159)
            cir.condition(%22) loc(#loc159)
          } loc(#loc262)
        } loc(#loc262)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc163)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc163)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc302)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc166)
          } loc(#loc303)
        } loc(#loc301)
      } loc(#loc256)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
    } loc(#loc254)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc306)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc308)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc178)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc308)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc179)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc24)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc24)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc179)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc186)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc311)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc189)
          } loc(#loc312)
        } loc(#loc310)
      } loc(#loc307)
    } loc(#loc305)
    cir.return loc(#loc28)
  } loc(#loc249)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc192)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc316)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc317)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc237)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc316)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc317)
    %4 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc237)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc237)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc320)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc320)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc208)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
      %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc192)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc192)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    } loc(#loc319)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc323)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc325)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc221)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc325)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc222)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc224)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc224)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc222)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc326)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc229)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc230)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc328)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc233)
          } loc(#loc329)
        } loc(#loc327)
      } loc(#loc324)
    } loc(#loc322)
    cir.return loc(#loc194)
  } loc(#loc314)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() : () -> () loc(#loc236)
    cir.return loc(#loc235)
  } loc(#loc330)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":160:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":160:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":63:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":63:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":264:1)
#loc23 = loc("/usr/include/stdio.h":266:3)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:33)
#loc25 = loc("/usr/include/stdio.h":184:1)
#loc26 = loc("/usr/include/stdio.h":184:36)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":58:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":148:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":60:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":60:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":61:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":61:25)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":62:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":62:25)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":64:12)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":64:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":65:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":135:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:9)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:24)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:23)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":67:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":133:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":72:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":72:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":73:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":73:32)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":74:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":74:19)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":75:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":75:36)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:41)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:30)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:37)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":77:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":122:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":78:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":121:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:40)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:49)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:62)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:33)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:73)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:17)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":91:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:21)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:38)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":89:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":90:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:24)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:25)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:34)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:37)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:51)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:17)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:52)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":93:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":93:17)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:63)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:42)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:50)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":99:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:29)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:62)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:63)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:72)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:86)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:92)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":97:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":98:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:35)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:59)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:66)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:64)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:50)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:73)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:76)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:87)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:92)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:107)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:117)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:118)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:121)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:30)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:122)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":107:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:21)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:35)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:48)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:51)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:65)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":105:17)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":106:21)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:61)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:17)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:22)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:32)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:45)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:56)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:57)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:34)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:40)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:27)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:44)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":112:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":115:17)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":112:21)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":113:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:32)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:22)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:21)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:34)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:40)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:27)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:44)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":117:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":120:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":117:21)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":118:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:32)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:22)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:21)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":122:20)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":126:13)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:34)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":124:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":125:30)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":125:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:21)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:10)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":136:5)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":147:5)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:24)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:23)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":138:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":146:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":139:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":139:27)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:21)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:27)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:38)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":145:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:17)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:26)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":143:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":144:24)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":144:17)
#loc190 = loc("/usr/include/string.h":149:1)
#loc191 = loc("/usr/include/string.h":150:14)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:22)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":155:1)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":180:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":157:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":157:12)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":158:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":158:25)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":159:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":159:25)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":161:12)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":161:5)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":162:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":167:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:9)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:24)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:23)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:9)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:16)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:21)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:10)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":168:5)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":179:5)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:9)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:24)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:23)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":170:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":178:9)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":171:13)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":171:27)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:21)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:27)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:33)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:13)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:38)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:13)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":177:13)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:17)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:26)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":175:13)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":176:24)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":176:17)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":182:1)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":185:1)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":184:5)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc5, #loc6])
#loc240 = loc(fused[#loc7, #loc8])
#loc241 = loc(fused[#loc9, #loc10])
#loc242 = loc(fused[#loc12, #loc13])
#loc243 = loc(fused[#loc14, #loc15])
#loc244 = loc(fused[#loc16, #loc17])
#loc245 = loc(fused[#loc18, #loc19])
#loc246 = loc(fused[#loc20, #loc21])
#loc247 = loc(fused[#loc22, #loc23])
#loc248 = loc(fused[#loc25, #loc26])
#loc249 = loc(fused[#loc27, #loc28])
#loc250 = loc(fused[#loc29, #loc30])
#loc251 = loc(fused[#loc31, #loc32])
#loc252 = loc(fused[#loc33, #loc34])
#loc253 = loc(fused[#loc36, #loc35])
#loc254 = loc(fused[#loc37, #loc38])
#loc255 = loc(fused[#loc39, #loc40])
#loc256 = loc(fused[#loc42, #loc43])
#loc257 = loc(fused[#loc44, #loc45])
#loc258 = loc(fused[#loc46, #loc47])
#loc259 = loc(fused[#loc48, #loc49])
#loc260 = loc(fused[#loc50, #loc51])
#loc261 = loc(fused[#loc52, #loc53])
#loc262 = loc(fused[#loc56, #loc57])
#loc263 = loc(fused[#loc58, #loc59])
#loc264 = loc(fused[#loc64, #loc65])
#loc265 = loc(fused[#loc66, #loc67])
#loc266 = loc(fused[#loc68, #loc69])
#loc267 = loc(fused[#loc70, #loc67])
#loc268 = loc(fused[#loc72, #loc73])
#loc269 = loc(fused[#loc75, #loc76])
#loc270 = loc(fused[#loc77, #loc78])
#loc271 = loc(fused[#loc81, #loc79])
#loc272 = loc(fused[#loc85, #loc86])
#loc273 = loc(fused[#loc90, #loc91])
#loc274 = loc(fused[#loc92, #loc93])
#loc275 = loc(fused[#loc95, #loc96])
#loc276 = loc(fused[#loc97, #loc98])
#loc277 = loc(fused[#loc99, #loc100])
#loc278 = loc(fused[#loc101, #loc93])
#loc279 = loc(fused[#loc107, #loc108])
#loc280 = loc(fused[#loc109, #loc110])
#loc281 = loc(fused[#loc111, #loc112])
#loc282 = loc(fused[#loc111, #loc113])
#loc283 = loc(fused[#loc109, #loc114])
#loc284 = loc(fused[#loc117, #loc118])
#loc285 = loc(fused[#loc119, #loc120])
#loc286 = loc(fused[#loc121, #loc122])
#loc287 = loc(fused[#loc124, #loc125])
#loc288 = loc(fused[#loc126, #loc120])
#loc289 = loc(fused[#loc132, #loc133])
#loc290 = loc(fused[#loc131, #loc133])
#loc291 = loc(fused[#loc130, #loc133])
#loc292 = loc(fused[#loc129, #loc128])
#loc293 = loc(fused[#loc138, #loc139])
#loc294 = loc(fused[#loc140, #loc141])
#loc295 = loc(fused[#loc143, #loc141])
#loc296 = loc(fused[#loc146, #loc144])
#loc297 = loc(fused[#loc150, #loc151])
#loc298 = loc(fused[#loc152, #loc153])
#loc299 = loc(fused[#loc155, #loc153])
#loc300 = loc(fused[#loc158, #loc156])
#loc301 = loc(fused[#loc160, #loc161])
#loc302 = loc(fused[#loc162, #loc163])
#loc303 = loc(fused[#loc164, #loc161])
#loc304 = loc(fused[#loc169, #loc167])
#loc305 = loc(fused[#loc170, #loc171])
#loc306 = loc(fused[#loc172, #loc173])
#loc307 = loc(fused[#loc175, #loc176])
#loc308 = loc(fused[#loc177, #loc178])
#loc309 = loc(fused[#loc181, #loc182])
#loc310 = loc(fused[#loc183, #loc184])
#loc311 = loc(fused[#loc185, #loc186])
#loc312 = loc(fused[#loc187, #loc184])
#loc313 = loc(fused[#loc190, #loc191])
#loc314 = loc(fused[#loc193, #loc194])
#loc315 = loc(fused[#loc195, #loc196])
#loc316 = loc(fused[#loc197, #loc198])
#loc317 = loc(fused[#loc199, #loc200])
#loc318 = loc(fused[#loc202, #loc201])
#loc319 = loc(fused[#loc203, #loc204])
#loc320 = loc(fused[#loc205, #loc206])
#loc321 = loc(fused[#loc212, #loc210])
#loc322 = loc(fused[#loc213, #loc214])
#loc323 = loc(fused[#loc215, #loc216])
#loc324 = loc(fused[#loc218, #loc219])
#loc325 = loc(fused[#loc220, #loc221])
#loc326 = loc(fused[#loc225, #loc226])
#loc327 = loc(fused[#loc227, #loc228])
#loc328 = loc(fused[#loc229, #loc230])
#loc329 = loc(fused[#loc231, #loc228])
#loc330 = loc(fused[#loc234, #loc235])
