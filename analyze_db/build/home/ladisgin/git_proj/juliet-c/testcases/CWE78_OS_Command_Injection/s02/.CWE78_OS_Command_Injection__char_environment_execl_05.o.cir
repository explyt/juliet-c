!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc110)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc111)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execl_05_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc112)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc113)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc13)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc18)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc112)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execl_05_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc112)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc112)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc113)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %8 ^bb2, ^bb9 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc119)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc13)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc13)
    %14 = cir.call @getenv(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc44)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc47)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc49)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %27 = cir.binop(sub, %25, %26) : !u64i loc(#loc129)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc51)
    %30 = cir.binop(sub, %27, %29) : !u64i loc(#loc130)
    %31 = cir.call @strncat(%22, %23, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc31)
  ^bb10:  // pred: ^bb9
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc18)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc18)
    %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc52)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc52)
    %36 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %40 = cir.call @execl(%33, %35, %37, %38, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.return loc(#loc21)
  } loc(#loc118)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc131)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc111)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc134)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc78)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb4 loc(#loc80)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc85)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc85)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc86)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc86)
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %22 = cir.call @execl(%15, %17, %19, %20, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc71)
  } loc(#loc137)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc110)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc113)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc101)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc104)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc104)
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc105)
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc106)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc106)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %20 = cir.call @execl(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc109)
    cir.return loc(#loc92)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_05.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":113:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":113:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":92:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":92:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":63:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":63:28)
#loc7 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":55:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":55:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdlib.h":773:1)
#loc12 = loc("/usr/include/stdlib.h":773:50)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":70:41)
#loc14 = loc("/usr/include/string.h":152:1)
#loc15 = loc("/usr/include/string.h":153:29)
#loc16 = loc("/usr/include/unistd.h":594:1)
#loc17 = loc("/usr/include/unistd.h":595:14)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:11)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:47)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":60:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":82:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":69:13)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":69:41)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":70:13)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":70:53)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":62:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":62:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":64:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":64:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":65:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":78:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":65:8)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":66:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":67:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":77:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":69:30)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":69:37)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":70:34)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":72:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":76:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":72:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":72:32)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":73:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:25)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:30)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:29)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:39)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:52)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:56)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":75:64)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:29)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:61)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:75)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":81:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":125:1)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":129:1)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":127:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":127:14)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":128:5)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":128:14)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":56:1)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":56:26)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":97:19)
#loc67 = loc("/usr/include/string.h":149:1)
#loc68 = loc("/usr/include/string.h":150:14)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":102:22)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":89:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":107:1)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":91:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":91:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":93:12)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":93:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":94:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":103:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":94:8)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":95:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":98:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":100:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":97:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":102:9)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":102:16)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:11)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:29)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:47)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:61)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:75)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":106:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":110:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":123:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":112:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":112:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":114:12)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":114:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":115:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":119:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":115:8)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":116:5)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":118:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":118:16)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":118:22)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:11)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:29)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:47)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:61)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:75)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execl_05.c":122:5)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc26, #loc27])
#loc122 = loc(fused[#loc29, #loc28])
#loc123 = loc(fused[#loc30, #loc31])
#loc124 = loc(fused[#loc33, #loc31])
#loc125 = loc(fused[#loc34, #loc35])
#loc126 = loc(fused[#loc39, #loc40])
#loc127 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc43, #loc40])
#loc129 = loc(fused[#loc49, #loc50])
#loc130 = loc(fused[#loc49, #loc51])
#loc131 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc75, #loc74])
#loc140 = loc(fused[#loc76, #loc77])
#loc141 = loc(fused[#loc79, #loc80, #loc81, #loc77])
#loc142 = loc(fused[#loc91, #loc92])
#loc143 = loc(fused[#loc93, #loc94])
#loc144 = loc(fused[#loc96, #loc95])
#loc145 = loc(fused[#loc97, #loc98])
#loc146 = loc(fused[#loc100, #loc98])
