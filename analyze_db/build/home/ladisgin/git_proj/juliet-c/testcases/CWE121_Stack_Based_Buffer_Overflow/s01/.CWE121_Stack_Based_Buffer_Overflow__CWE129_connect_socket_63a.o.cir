!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:44)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc225)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc227)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc228)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc229)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private @close(!s32i) -> !s32i loc(#loc231)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_badSink(!cir.ptr<!s32i>) loc(#loc232)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc236)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc237)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc238)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb2 loc(#loc241)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc241)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc40)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc47)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc245)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc49)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc246)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc247)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc57)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc249)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc250)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc65)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc65)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc251)
    cir.br ^bb9 loc(#loc252)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc253)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc254)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc254)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc78)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc256)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc80)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc71)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc83)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc83)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc83)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc83)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc83)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc83)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc84)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc257)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc86)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb13 loc(#loc259)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc92)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc93)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc93)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc93)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc261)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc93)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc93)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc93)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc93)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc93)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc93)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc93)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc93)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc262)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc97)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc90)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc98)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb3 loc(#loc36)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc36)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc265)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc108)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc267)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc111)
    cir.br ^bb29 loc(#loc106)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc106)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc34)
  ^bb31:  // pred: ^bb30
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_badSink(%4) : (!cir.ptr<!s32i>) -> () loc(#loc112)
    cir.return loc(#loc19)
  } loc(#loc233)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc115)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc117)
    cir.return loc(#loc114)
  } loc(#loc268)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc271)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc126)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc128)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodG2BSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc130)
    cir.return loc(#loc122)
  } loc(#loc272)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodB2GSink(!cir.ptr<!s32i>) loc(#loc276)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc278)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc279)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc280)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc146)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc140)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb2 loc(#loc285)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc285)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc152)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc152)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc153)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc155)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc156)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb5 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc162)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc289)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc164)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc160)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc290)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc291)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc172)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc172)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc293)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc174)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc174)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc175)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc294)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc178)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc178)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc179)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc295)
    cir.br ^bb9 loc(#loc296)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc297)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc298)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc298)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc189)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc190)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc300)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc192)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc183)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc194)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc195)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc195)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc195)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc195)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc195)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc195)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc195)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc196)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc301)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc198)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc198)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb13 loc(#loc303)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc204)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc205)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc205)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc205)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc205)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc205)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc205)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc205)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc205)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc205)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc205)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc205)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc306)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc209)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc202)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc210)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc212)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc212)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc213)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc214)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb3 loc(#loc151)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc151)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc309)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc220)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc311)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc223)
    cir.br ^bb29 loc(#loc218)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc218)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc149)
  ^bb31:  // pred: ^bb30
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodB2GSink(%4) : (!cir.ptr<!s32i>) -> () loc(#loc224)
    cir.return loc(#loc134)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":45:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":45:89)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":47:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":109:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":57:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":57:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":58:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":58:28)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":59:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":59:32)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":60:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":60:41)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":49:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":49:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":51:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":51:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":51:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":52:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":107:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":61:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":96:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":96:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:45)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:58)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:29)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":71:69)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":72:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":75:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":72:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":72:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":73:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":74:17)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:20)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:21)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:47)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":76:48)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":77:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":77:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":78:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":78:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":78:59)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":79:38)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":79:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":79:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":79:46)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":83:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:25)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:58)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:59)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:68)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:82)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":80:88)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":81:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":82:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:31)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:46)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:59)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:77)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:80)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":86:81)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":90:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:31)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:47)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":87:61)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":88:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":89:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":92:39)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":92:25)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":92:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":94:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":94:20)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":94:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":94:36)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":97:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":100:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":97:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":97:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":98:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":99:26)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":99:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":108:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":196:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":200:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":198:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":198:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":199:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":199:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":116:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":116:90)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":118:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":127:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":120:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":120:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":122:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":122:12)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":122:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":125:12)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":125:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":126:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":130:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":130:90)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":132:1)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":194:1)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":142:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":142:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":143:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":143:28)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":144:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":144:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":145:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":145:41)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":134:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":134:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":136:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":136:12)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":136:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":137:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":192:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":146:9)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":181:17)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":181:16)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:36)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:45)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:58)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:29)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":156:69)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":157:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":160:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":157:17)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":157:34)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":158:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":159:17)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:20)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:21)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:30)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:33)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:47)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":161:48)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":162:34)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":162:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":163:49)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":163:39)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":163:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":163:59)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":164:38)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":164:32)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":164:13)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":164:46)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":168:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:25)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:58)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:59)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:68)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:82)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:17)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":165:88)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":166:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":167:17)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:31)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:46)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:59)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:77)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:80)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:26)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":171:81)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":175:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:31)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:47)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":172:61)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":173:13)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":174:17)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":177:39)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":177:25)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":177:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":179:25)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":179:20)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":179:13)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":179:36)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":182:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":185:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":182:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":182:30)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":183:9)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":184:26)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":184:13)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63a.c":193:5)
#loc225 = loc(fused[#loc1, #loc2])
#loc226 = loc(fused[#loc3, #loc4])
#loc227 = loc(fused[#loc6, #loc7])
#loc228 = loc(fused[#loc8, #loc9])
#loc229 = loc(fused[#loc10, #loc11])
#loc230 = loc(fused[#loc12, #loc13])
#loc231 = loc(fused[#loc14, #loc15])
#loc232 = loc(fused[#loc16, #loc17])
#loc233 = loc(fused[#loc18, #loc19])
#loc234 = loc(fused[#loc20, #loc21])
#loc235 = loc(fused[#loc22, #loc23])
#loc236 = loc(fused[#loc24, #loc25])
#loc237 = loc(fused[#loc26, #loc27])
#loc238 = loc(fused[#loc28, #loc29])
#loc239 = loc(fused[#loc32, #loc30])
#loc240 = loc(fused[#loc33, #loc34])
#loc241 = loc(fused[#loc35, #loc36])
#loc242 = loc(fused[#loc42, #loc43])
#loc243 = loc(fused[#loc44, #loc45])
#loc244 = loc(fused[#loc46, #loc47])
#loc245 = loc(fused[#loc48, #loc45])
#loc246 = loc(fused[#loc50, #loc51])
#loc247 = loc(fused[#loc53, #loc54])
#loc248 = loc(fused[#loc55, #loc56])
#loc249 = loc(fused[#loc59, #loc57])
#loc250 = loc(fused[#loc63, #loc64])
#loc251 = loc(fused[#loc68, #loc69])
#loc252 = loc(fused[#loc70, #loc71])
#loc253 = loc(fused[#loc73, #loc74])
#loc254 = loc(fused[#loc75, #loc76])
#loc255 = loc(fused[#loc77, #loc78])
#loc256 = loc(fused[#loc79, #loc71])
#loc257 = loc(fused[#loc83, #loc84])
#loc258 = loc(fused[#loc87, #loc88])
#loc259 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc94, #loc95])
#loc262 = loc(fused[#loc96, #loc90])
#loc263 = loc(fused[#loc100, #loc98])
#loc264 = loc(fused[#loc103, #loc104])
#loc265 = loc(fused[#loc105, #loc106])
#loc266 = loc(fused[#loc107, #loc108])
#loc267 = loc(fused[#loc109, #loc106])
#loc268 = loc(fused[#loc113, #loc114])
#loc269 = loc(fused[#loc115, #loc116])
#loc270 = loc(fused[#loc117, #loc118])
#loc271 = loc(fused[#loc119, #loc120])
#loc272 = loc(fused[#loc121, #loc122])
#loc273 = loc(fused[#loc123, #loc124])
#loc274 = loc(fused[#loc127, #loc125])
#loc275 = loc(fused[#loc129, #loc128])
#loc276 = loc(fused[#loc131, #loc132])
#loc277 = loc(fused[#loc133, #loc134])
#loc278 = loc(fused[#loc135, #loc136])
#loc279 = loc(fused[#loc137, #loc138])
#loc280 = loc(fused[#loc139, #loc140])
#loc281 = loc(fused[#loc141, #loc142])
#loc282 = loc(fused[#loc143, #loc144])
#loc283 = loc(fused[#loc147, #loc145])
#loc284 = loc(fused[#loc148, #loc149])
#loc285 = loc(fused[#loc150, #loc151])
#loc286 = loc(fused[#loc157, #loc158])
#loc287 = loc(fused[#loc159, #loc160])
#loc288 = loc(fused[#loc161, #loc162])
#loc289 = loc(fused[#loc163, #loc160])
#loc290 = loc(fused[#loc165, #loc166])
#loc291 = loc(fused[#loc168, #loc169])
#loc292 = loc(fused[#loc170, #loc171])
#loc293 = loc(fused[#loc173, #loc172])
#loc294 = loc(fused[#loc176, #loc177])
#loc295 = loc(fused[#loc180, #loc181])
#loc296 = loc(fused[#loc182, #loc183])
#loc297 = loc(fused[#loc185, #loc186])
#loc298 = loc(fused[#loc187, #loc188])
#loc299 = loc(fused[#loc189, #loc190])
#loc300 = loc(fused[#loc191, #loc183])
#loc301 = loc(fused[#loc195, #loc196])
#loc302 = loc(fused[#loc199, #loc200])
#loc303 = loc(fused[#loc201, #loc202])
#loc304 = loc(fused[#loc203, #loc204])
#loc305 = loc(fused[#loc206, #loc207])
#loc306 = loc(fused[#loc208, #loc202])
#loc307 = loc(fused[#loc212, #loc210])
#loc308 = loc(fused[#loc215, #loc216])
#loc309 = loc(fused[#loc217, #loc218])
#loc310 = loc(fused[#loc219, #loc220])
#loc311 = loc(fused[#loc221, #loc218])
