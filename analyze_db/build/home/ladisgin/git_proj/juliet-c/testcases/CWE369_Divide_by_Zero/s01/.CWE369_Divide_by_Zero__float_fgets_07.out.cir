!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":209:10)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":209:14)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":209:20)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":209:32)
#loc291 = loc(fused[#loc77, #loc78])
#loc292 = loc(fused[#loc79, #loc80])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc259)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc260)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc261)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc264)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc266)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc267)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc268)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc22)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc271)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc272)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc273)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc274)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc33)
    %9 = cir.const #cir.int<20> : !s32i loc(#loc34)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc276)
  ^bb5:  // pred: ^bb4
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc42)
    %18 = cir.cast(floating, %17 : !cir.double), !cir.float loc(#loc42)
    cir.store %18, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc277)
    cir.br ^bb7 loc(#loc39)
  ^bb6:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc25)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc278)
  ^bb12:  // pred: ^bb11
    %21 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %24 ^bb13, ^bb16 loc(#loc280)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc281)
  ^bb14:  // pred: ^bb13
    %25 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc53)
    %26 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc54)
    %27 = cir.cast(floating, %26 : !cir.float), !cir.double loc(#loc54)
    %28 = cir.binop(div, %25, %27) : !cir.double loc(#loc282)
    %29 = cir.cast(float_to_int, %28 : !cir.double), !s32i loc(#loc282)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc56)
    cir.br ^bb15 loc(#loc52)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc47)
  ^bb16:  // 2 preds: ^bb12, ^bb15
    cir.br ^bb17 loc(#loc47)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc15)
  } loc(#loc265)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc287)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc283)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc288)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE369_Divide_by_Zero__float_fgets_07_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc294)
    cir.call @CWE369_Divide_by_Zero__float_fgets_07_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    cir.return %17 : !s32i loc(#loc295)
  } loc(#loc290)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc297)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc298)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc299)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc105)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc300)
    cir.br ^bb1 loc(#loc301)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc110)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc303)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc304)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc305)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc116)
    %9 = cir.const #cir.int<20> : !s32i loc(#loc117)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc118)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc119)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc306)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc307)
  ^bb5:  // pred: ^bb4
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc124)
    %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc125)
    %18 = cir.cast(floating, %17 : !cir.double), !cir.float loc(#loc125)
    cir.store %18, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc308)
    cir.br ^bb7 loc(#loc122)
  ^bb6:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc309)
  ^bb12:  // pred: ^bb11
    %21 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc133)
    %24 = cir.cmp(ne, %22, %23) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %24 ^bb13, ^bb14 loc(#loc311)
  ^bb13:  // pred: ^bb12
    %25 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.br ^bb20 loc(#loc135)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc312)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc140)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc140)
    %29 = cir.fabs %28 : !cir.double loc(#loc140)
    %30 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc141)
    %31 = cir.cmp(gt, %29, %30) : !cir.double, !cir.bool loc(#loc313)
    cir.brcond %31 ^bb16, ^bb17 loc(#loc314)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc146)
    %33 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc147)
    %34 = cir.cast(floating, %33 : !cir.float), !cir.double loc(#loc147)
    %35 = cir.binop(div, %32, %34) : !cir.double loc(#loc315)
    %36 = cir.cast(float_to_int, %35 : !cir.double), !s32i loc(#loc315)
    cir.store %36, %1 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc149)
    cir.br ^bb18 loc(#loc144)
  ^bb17:  // pred: ^bb15
    %38 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc96)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.br ^bb18 loc(#loc139)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc139)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc131)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc131)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc98)
  } loc(#loc296)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc317)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc318)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc319)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc159)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc320)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc164)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc323)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc324)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc325)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc170)
    %9 = cir.const #cir.int<20> : !s32i loc(#loc171)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc172)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc326)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc327)
  ^bb5:  // pred: ^bb4
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc178)
    %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc179)
    %18 = cir.cast(floating, %17 : !cir.double), !cir.float loc(#loc179)
    cir.store %18, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc328)
    cir.br ^bb7 loc(#loc176)
  ^bb6:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc182)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb7 loc(#loc169)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc167)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc162)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc329)
  ^bb12:  // pred: ^bb11
    %21 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc187)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %24 ^bb13, ^bb19 loc(#loc331)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc332)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc191)
    %26 = cir.cast(floating, %25 : !cir.float), !cir.double loc(#loc191)
    %27 = cir.fabs %26 : !cir.double loc(#loc191)
    %28 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc192)
    %29 = cir.cmp(gt, %27, %28) : !cir.double, !cir.bool loc(#loc333)
    cir.brcond %29 ^bb15, ^bb16 loc(#loc334)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc197)
    %31 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc198)
    %32 = cir.cast(floating, %31 : !cir.float), !cir.double loc(#loc198)
    %33 = cir.binop(div, %30, %32) : !cir.double loc(#loc335)
    %34 = cir.cast(float_to_int, %33 : !cir.double), !s32i loc(#loc335)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc200)
    cir.br ^bb17 loc(#loc195)
  ^bb16:  // pred: ^bb14
    %36 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc201)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    cir.br ^bb17 loc(#loc190)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc190)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc185)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc185)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc152)
  } loc(#loc316)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc209)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc339)
    cir.br ^bb1 loc(#loc340)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc214)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc342)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc218)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc218)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb4 loc(#loc216)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc220)
    cir.store %9, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc343)
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc344)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc225)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc346)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc347)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc229)
    %15 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc230)
    %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc230)
    %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc348)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc348)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc232)
    cir.br ^bb9 loc(#loc228)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc223)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc223)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc204)
  } loc(#loc336)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc239)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc352)
    cir.br ^bb1 loc(#loc353)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc244)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc354)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc355)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc246)
    cir.store %7, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc356)
    cir.br ^bb3 loc(#loc242)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc242)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc357)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc259)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc251)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %11 ^bb6, ^bb9 loc(#loc359)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc360)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc255)
    %13 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc256)
    %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc256)
    %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc361)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc361)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc258)
    cir.br ^bb8 loc(#loc254)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc249)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc249)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc234)
  } loc(#loc349)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_07.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":27:1)
#loc2 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":27:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":48:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":31:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":60:1)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":39:13)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":39:45)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":56:13)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":56:44)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":33:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":33:11)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":35:12)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":35:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":36:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":51:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":36:8)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":36:20)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":37:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":38:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":50:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":49:13)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:23)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:36)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:53)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:17)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":41:63)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":42:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":45:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":47:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":44:36)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":44:31)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":44:17)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":44:47)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":48:17)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":52:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":59:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":52:8)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":52:20)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":53:5)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":54:9)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":58:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":56:32)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":56:40)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":57:26)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":57:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":192:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":198:1)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":194:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":194:14)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":195:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":195:14)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":196:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":196:14)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":197:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":197:14)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":214:15)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":216:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":219:15)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":221:15)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":209:1)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":224:1)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":210:1)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":212:27)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":212:22)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":212:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":214:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":215:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":215:48)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":216:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":219:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":220:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":220:47)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":221:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":223:12)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":223:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":91:19)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":103:23)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":67:1)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":106:1)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":75:13)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":75:45)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":98:13)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":98:44)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":69:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":69:11)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":71:12)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":71:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":72:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":87:5)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":72:8)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":72:20)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":73:5)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":74:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":86:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":85:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:23)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:36)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:53)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:17)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":77:63)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":78:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":81:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":83:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":80:36)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":80:31)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":80:17)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":80:47)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":84:27)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":84:17)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":88:5)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":105:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":88:8)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":88:20)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":89:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":92:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":94:5)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":91:9)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":96:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":104:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":96:17)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":96:25)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":96:12)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":97:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":100:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":102:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":98:32)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":98:40)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":99:26)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":99:13)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":103:13)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":109:1)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":143:1)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":117:13)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":117:45)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":135:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":135:44)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":111:5)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":111:11)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":113:12)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":113:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":114:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":129:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":114:8)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":114:20)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":115:5)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":116:9)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":128:9)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:13)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":127:13)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:23)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:36)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:53)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:17)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":119:63)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":120:13)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":123:13)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":125:13)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":122:36)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":122:31)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":122:17)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":122:47)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":126:27)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":126:17)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":130:5)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":142:5)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":130:8)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":130:20)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":131:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":133:9)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":141:9)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":133:17)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":133:25)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":133:12)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":134:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":137:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":139:9)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":135:32)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":135:40)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":136:26)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":136:13)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":140:23)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":140:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":146:1)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":169:1)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":165:13)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":165:44)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":148:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":148:11)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":150:12)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":150:5)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":151:5)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":160:5)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":151:8)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":151:20)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":152:5)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":155:5)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":157:5)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":154:19)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":154:9)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":159:16)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":159:9)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":161:5)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":168:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":161:8)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":161:20)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":162:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":163:9)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":167:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":165:32)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":165:40)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":166:26)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":166:13)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":172:1)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":190:1)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":186:13)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":186:44)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":174:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":174:11)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":176:12)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":176:5)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":177:5)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":181:5)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":177:8)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":177:20)
#loc245 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":178:5)
#loc246 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":180:16)
#loc247 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":180:9)
#loc248 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":182:5)
#loc249 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":189:5)
#loc250 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":182:8)
#loc251 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":182:20)
#loc252 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":183:5)
#loc253 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":184:9)
#loc254 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":188:9)
#loc255 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":186:32)
#loc256 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":186:40)
#loc257 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":187:26)
#loc258 = loc("CWE369_Divide_by_Zero__float_fgets_07.c":187:13)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc7, #loc8])
#loc263 = loc(fused[#loc9, #loc10])
#loc264 = loc(fused[#loc12, #loc13])
#loc265 = loc(fused[#loc14, #loc15])
#loc266 = loc(fused[#loc16, #loc17])
#loc267 = loc(fused[#loc18, #loc19])
#loc268 = loc(fused[#loc20, #loc21])
#loc269 = loc(fused[#loc23, #loc22])
#loc270 = loc(fused[#loc24, #loc25])
#loc271 = loc(fused[#loc26, #loc27])
#loc272 = loc(fused[#loc28, #loc25])
#loc273 = loc(fused[#loc29, #loc30])
#loc274 = loc(fused[#loc31, #loc32])
#loc275 = loc(fused[#loc36, #loc37])
#loc276 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc277 = loc(fused[#loc43, #loc44])
#loc278 = loc(fused[#loc46, #loc47])
#loc279 = loc(fused[#loc48, #loc49])
#loc280 = loc(fused[#loc50, #loc47])
#loc281 = loc(fused[#loc51, #loc52])
#loc282 = loc(fused[#loc53, #loc54])
#loc283 = loc(fused[#loc57, #loc58])
#loc284 = loc(fused[#loc59, #loc60])
#loc285 = loc(fused[#loc61, #loc62])
#loc286 = loc(fused[#loc63, #loc64])
#loc287 = loc(fused[#loc65, #loc66])
#loc288 = loc(fused[#loc67, #loc68])
#loc289 = loc(fused[#loc69, #loc70])
#loc290 = loc(fused[#loc75, #loc76])
#loc293 = loc(fused[#loc86, #loc87])
#loc294 = loc(fused[#loc90, #loc91])
#loc295 = loc(fused[#loc94, #loc93])
#loc296 = loc(fused[#loc97, #loc98])
#loc297 = loc(fused[#loc99, #loc100])
#loc298 = loc(fused[#loc101, #loc102])
#loc299 = loc(fused[#loc103, #loc104])
#loc300 = loc(fused[#loc106, #loc105])
#loc301 = loc(fused[#loc107, #loc108])
#loc302 = loc(fused[#loc109, #loc110])
#loc303 = loc(fused[#loc111, #loc108])
#loc304 = loc(fused[#loc112, #loc113])
#loc305 = loc(fused[#loc114, #loc115])
#loc306 = loc(fused[#loc119, #loc120])
#loc307 = loc(fused[#loc121, #loc122, #loc123, #loc115])
#loc308 = loc(fused[#loc126, #loc127])
#loc309 = loc(fused[#loc130, #loc131])
#loc310 = loc(fused[#loc132, #loc133])
#loc311 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc312 = loc(fused[#loc138, #loc139])
#loc313 = loc(fused[#loc142, #loc141])
#loc314 = loc(fused[#loc143, #loc144, #loc145, #loc139])
#loc315 = loc(fused[#loc146, #loc147])
#loc316 = loc(fused[#loc151, #loc152])
#loc317 = loc(fused[#loc153, #loc154])
#loc318 = loc(fused[#loc155, #loc156])
#loc319 = loc(fused[#loc157, #loc158])
#loc320 = loc(fused[#loc160, #loc159])
#loc321 = loc(fused[#loc161, #loc162])
#loc322 = loc(fused[#loc163, #loc164])
#loc323 = loc(fused[#loc165, #loc162])
#loc324 = loc(fused[#loc166, #loc167])
#loc325 = loc(fused[#loc168, #loc169])
#loc326 = loc(fused[#loc173, #loc174])
#loc327 = loc(fused[#loc175, #loc176, #loc177, #loc169])
#loc328 = loc(fused[#loc180, #loc181])
#loc329 = loc(fused[#loc184, #loc185])
#loc330 = loc(fused[#loc186, #loc187])
#loc331 = loc(fused[#loc188, #loc185])
#loc332 = loc(fused[#loc189, #loc190])
#loc333 = loc(fused[#loc193, #loc192])
#loc334 = loc(fused[#loc194, #loc195, #loc196, #loc190])
#loc335 = loc(fused[#loc197, #loc198])
#loc336 = loc(fused[#loc203, #loc204])
#loc337 = loc(fused[#loc205, #loc206])
#loc338 = loc(fused[#loc207, #loc208])
#loc339 = loc(fused[#loc210, #loc209])
#loc340 = loc(fused[#loc211, #loc212])
#loc341 = loc(fused[#loc213, #loc214])
#loc342 = loc(fused[#loc215, #loc216, #loc217, #loc212])
#loc343 = loc(fused[#loc221, #loc220])
#loc344 = loc(fused[#loc222, #loc223])
#loc345 = loc(fused[#loc224, #loc225])
#loc346 = loc(fused[#loc226, #loc223])
#loc347 = loc(fused[#loc227, #loc228])
#loc348 = loc(fused[#loc229, #loc230])
#loc349 = loc(fused[#loc233, #loc234])
#loc350 = loc(fused[#loc235, #loc236])
#loc351 = loc(fused[#loc237, #loc238])
#loc352 = loc(fused[#loc240, #loc239])
#loc353 = loc(fused[#loc241, #loc242])
#loc354 = loc(fused[#loc243, #loc244])
#loc355 = loc(fused[#loc245, #loc242])
#loc356 = loc(fused[#loc247, #loc246])
#loc357 = loc(fused[#loc248, #loc249])
#loc358 = loc(fused[#loc250, #loc251])
#loc359 = loc(fused[#loc252, #loc249])
#loc360 = loc(fused[#loc253, #loc254])
#loc361 = loc(fused[#loc255, #loc256])
