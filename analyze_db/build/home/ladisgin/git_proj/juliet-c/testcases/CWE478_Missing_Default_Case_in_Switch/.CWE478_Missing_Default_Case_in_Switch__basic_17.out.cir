!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":89:10)
#loc56 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":89:14)
#loc57 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":89:20)
#loc58 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":89:32)
#loc132 = loc(fused[#loc55, #loc56])
#loc133 = loc(fused[#loc57, #loc58])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE478_Missing_Default_Case_in_Switch/CWE478_Missing_Default_Case_in_Switch__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"shouldn't see this value\00" : !cir.array<!s8i x 25>> : !cir.array<!s8i x 25> {alignment = 1 : i64} loc(#loc1)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc4)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE478_Missing_Default_Case_in_Switch__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charString", init] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x"] {alignment = 4 : i64} loc(#loc114)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.br ^bb2 loc(#loc116)
  ^bb2:  // 2 preds: ^bb1, ^bb15
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc118)
    cir.brcond %6 ^bb3, ^bb16 loc(#loc21)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc119)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc120)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 25>> loc(#loc1)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 25>>), !cir.ptr<!s8i> loc(#loc1)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc121)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.br ^bb6 loc(#loc123)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    cir.switch.flat %12 : !s32i, ^bb11 [
      0: ^bb9,
      1: ^bb10
    ] loc(#loc29)
  ^bb8:  // no predecessors
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc4)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc4)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.br ^bb11 loc(#loc34)
  ^bb10:  // pred: ^bb7
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc5)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc5)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb11 loc(#loc36)
  ^bb11:  // 3 preds: ^bb7, ^bb9, ^bb10
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // pred: ^bb11
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc16)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc16)
  ^bb15:  // pred: ^bb14
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc40)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.br ^bb2 loc(#loc116)
  ^bb16:  // pred: ^bb2
    cir.br ^bb17 loc(#loc16)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc9)
  } loc(#loc112)
  cir.func no_proto @CWE478_Missing_Default_Case_in_Switch__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc127)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc129)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc62)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE478_Missing_Default_Case_in_Switch__basic_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE478_Missing_Default_Case_in_Switch__basic_17_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE478_Missing_Default_Case_in_Switch__basic_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE478_Missing_Default_Case_in_Switch__basic_17_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.return %17 : !s32i loc(#loc136)
  } loc(#loc131)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charString", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x"] {alignment = 4 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // 2 preds: ^bb1, ^bb16
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %6 ^bb3, ^bb17 loc(#loc87)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc145)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 25>> loc(#loc76)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 25>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc91)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc92)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc146)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    cir.switch.flat %12 : !s32i, ^bb11 [
      0: ^bb9,
      1: ^bb10
    ] loc(#loc95)
  ^bb8:  // no predecessors
    cir.br ^bb9 loc(#loc98)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc99)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc99)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.br ^bb12 loc(#loc101)
  ^bb10:  // pred: ^bb7
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc102)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.br ^bb12 loc(#loc104)
  ^bb11:  // pred: ^bb7
    cir.return loc(#loc105)
  ^bb12:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb13 loc(#loc96)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb14 loc(#loc90)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc82)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc82)
  ^bb16:  // pred: ^bb15
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc109)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb2 loc(#loc141)
  ^bb17:  // pred: ^bb2
    cir.br ^bb18 loc(#loc82)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc74)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE478_Missing_Default_Case_in_Switch/CWE478_Missing_Default_Case_in_Switch__basic_17.c":0:0)
#loc1 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":26:38)
#loc2 = loc("/usr/include/stdlib.h":573:1)
#loc3 = loc("/usr/include/stdlib.h":573:24)
#loc4 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":32:30)
#loc5 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":35:30)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":20:1)
#loc9 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":42:1)
#loc10 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":26:13)
#loc11 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":27:13)
#loc12 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":27:17)
#loc13 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":22:5)
#loc14 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":22:9)
#loc15 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:5)
#loc16 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":41:5)
#loc17 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:13)
#loc18 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:9)
#loc19 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:16)
#loc20 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:20)
#loc21 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:18)
#loc22 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":24:5)
#loc23 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":25:9)
#loc24 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":40:9)
#loc25 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":28:18)
#loc26 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":28:27)
#loc27 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":28:13)
#loc28 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":28:28)
#loc29 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":29:13)
#loc30 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":38:13)
#loc31 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":29:21)
#loc32 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":31:13)
#loc33 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":32:17)
#loc34 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":33:17)
#loc35 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":35:17)
#loc36 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":36:17)
#loc37 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":39:23)
#loc38 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":39:13)
#loc39 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:24)
#loc40 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":23:23)
#loc41 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":75:1)
#loc42 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":78:1)
#loc43 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":77:5)
#loc44 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":77:11)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":94:15)
#loc50 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":96:15)
#loc51 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":99:15)
#loc52 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":101:15)
#loc53 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":89:1)
#loc54 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":104:1)
#loc59 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":90:1)
#loc60 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":92:27)
#loc61 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":92:22)
#loc62 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":92:5)
#loc63 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":94:5)
#loc64 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":95:5)
#loc65 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":95:58)
#loc66 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":96:5)
#loc67 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":99:5)
#loc68 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":100:5)
#loc69 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":100:57)
#loc70 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":101:5)
#loc71 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":103:12)
#loc72 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":103:5)
#loc73 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":49:1)
#loc74 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":73:1)
#loc75 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":55:13)
#loc76 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":55:38)
#loc77 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":56:13)
#loc78 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":56:17)
#loc79 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":51:5)
#loc80 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":51:9)
#loc81 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:5)
#loc82 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":72:5)
#loc83 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:13)
#loc84 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:9)
#loc85 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:16)
#loc86 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:20)
#loc87 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:18)
#loc88 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":53:5)
#loc89 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":54:9)
#loc90 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":71:9)
#loc91 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":57:18)
#loc92 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":57:27)
#loc93 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":57:13)
#loc94 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":57:28)
#loc95 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":58:13)
#loc96 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":69:13)
#loc97 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":58:21)
#loc98 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":60:13)
#loc99 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":61:30)
#loc100 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":61:17)
#loc101 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":62:17)
#loc102 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":64:30)
#loc103 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":64:17)
#loc104 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":65:17)
#loc105 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":68:17)
#loc106 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":70:23)
#loc107 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":70:13)
#loc108 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:24)
#loc109 = loc("CWE478_Missing_Default_Case_in_Switch__basic_17.c":52:23)
#loc110 = loc(fused[#loc2, #loc3])
#loc111 = loc(fused[#loc6, #loc7])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc1])
#loc114 = loc(fused[#loc11, #loc12])
#loc115 = loc(fused[#loc13, #loc14])
#loc116 = loc(fused[#loc15, #loc16])
#loc117 = loc(fused[#loc18, #loc17])
#loc118 = loc(fused[#loc19, #loc20])
#loc119 = loc(fused[#loc22, #loc16])
#loc120 = loc(fused[#loc23, #loc24])
#loc121 = loc(fused[#loc25, #loc26])
#loc122 = loc(fused[#loc27, #loc28])
#loc123 = loc(fused[#loc29, #loc30])
#loc124 = loc(fused[#loc33, #loc4])
#loc125 = loc(fused[#loc35, #loc5])
#loc126 = loc(fused[#loc40, #loc39])
#loc127 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc43, #loc44])
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
#loc131 = loc(fused[#loc53, #loc54])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc72, #loc71])
#loc137 = loc(fused[#loc73, #loc74])
#loc138 = loc(fused[#loc75, #loc76])
#loc139 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc81, #loc82])
#loc142 = loc(fused[#loc84, #loc83])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc88, #loc82])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc100, #loc99])
#loc150 = loc(fused[#loc103, #loc102])
#loc151 = loc(fused[#loc109, #loc108])
