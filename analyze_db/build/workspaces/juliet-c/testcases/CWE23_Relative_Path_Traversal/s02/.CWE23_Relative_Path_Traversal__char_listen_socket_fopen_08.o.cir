!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc289)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc290)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_083badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc291)
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc8)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    cir.return %2 : !s32i loc(#loc293)
  } loc(#loc292)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc294)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc295)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc296)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc297)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc298)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc301)
  cir.func private @close(!s32i) -> !s32i loc(#loc302)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc31)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc304)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc291)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_083badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc291)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc291)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc38)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc42)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc309)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc312)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc313)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc314)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc315)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc316)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc317)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc54)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc54)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc56)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc316)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc59)
          cir.store %18, %11 : !u64i, !cir.ptr<!u64i> loc(#loc317)
          cir.scope {
            cir.do {
              cir.scope {
                %19 = cir.const #cir.int<2> : !s32i loc(#loc65)
                %20 = cir.const #cir.int<1> : !u32i loc(#loc66)
                %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc66)
                %22 = cir.const #cir.int<6> : !u32i loc(#loc67)
                %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc67)
                %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc68)
                cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc320)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc74)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc74)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc322)
                  cir.if %80 {
                    cir.break loc(#loc76)
                  } loc(#loc323)
                } loc(#loc321)
                %25 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc324)
                %26 = cir.const #cir.int<0> : !s32i loc(#loc79)
                %27 = cir.const #cir.int<16> : !u64i loc(#loc325)
                cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
                %28 = cir.const #cir.int<2> : !s32i loc(#loc84)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc84)
                %30 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc327)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc87)
                %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc87)
                %33 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
                %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
                cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc328)
                %35 = cir.const #cir.int<27015> : !s32i loc(#loc91)
                %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc91)
                %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc92)
                %38 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
                cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc329)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %78 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc331)
                  %79 = cir.const #cir.int<16> : !u64i loc(#loc332)
                  %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc332)
                  %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc103)
                  %82 = cir.const #cir.int<1> : !s32i loc(#loc104)
                  %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc104)
                  %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc333)
                  cir.if %84 {
                    cir.break loc(#loc106)
                  } loc(#loc334)
                } loc(#loc330)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %78 = cir.const #cir.int<5> : !s32i loc(#loc110)
                  %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc111)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc112)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc336)
                  cir.if %82 {
                    cir.break loc(#loc114)
                  } loc(#loc337)
                } loc(#loc335)
                %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc116)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc117)
                %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc118)
                cir.store %42, %10 : !s32i, !cir.ptr<!s32i> loc(#loc338)
                cir.scope {
                  %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc124)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc124)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc340)
                  cir.if %80 {
                    cir.break loc(#loc126)
                  } loc(#loc341)
                } loc(#loc339)
                %43 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
                %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc129)
                %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc130)
                %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc342)
                %48 = cir.const #cir.int<1> : !u64i loc(#loc343)
                %49 = cir.const #cir.int<4096> : !s32i loc(#loc135)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc135)
                %51 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc344)
                %53 = cir.const #cir.int<1> : !s32i loc(#loc137)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc137)
                %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc345)
                %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc346)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc139)
                %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
                %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc140)
                cir.store %59, %6 : !s32i, !cir.ptr<!s32i> loc(#loc347)
                cir.scope {
                  %77 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc146)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc146)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc349)
                  %81 = cir.ternary(%80, true {
                    %82 = cir.const #true loc(#loc147)
                    cir.yield %82 : !cir.bool loc(#loc147)
                  }, false {
                    %82 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                    %83 = cir.const #cir.int<0> : !s32i loc(#loc149)
                    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc350)
                    %85 = cir.ternary(%84, true {
                      %86 = cir.const #true loc(#loc147)
                      cir.yield %86 : !cir.bool loc(#loc147)
                    }, false {
                      %86 = cir.const #false loc(#loc147)
                      cir.yield %86 : !cir.bool loc(#loc147)
                    }) : (!cir.bool) -> !cir.bool loc(#loc147)
                    cir.yield %85 : !cir.bool loc(#loc147)
                  }) : (!cir.bool) -> !cir.bool loc(#loc147)
                  cir.if %81 {
                    cir.break loc(#loc151)
                  } loc(#loc351)
                } loc(#loc348)
                %60 = cir.const #cir.int<0> : !s8i loc(#loc152)
                %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                %62 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc154)
                %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc155)
                %65 = cir.const #cir.int<1> : !u64i loc(#loc352)
                %66 = cir.binop(div, %64, %65) : !u64i loc(#loc353)
                %67 = cir.binop(add, %62, %66) : !u64i loc(#loc354)
                %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc158)
                cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc355)
                %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                %70 = cir.const #cir.int<13> : !s8i loc(#loc160)
                %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc160)
                %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc161)
                cir.store %72, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s8i loc(#loc168)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc359)
                  } loc(#loc358)
                } loc(#loc357)
                %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
                %74 = cir.const #cir.int<10> : !s8i loc(#loc172)
                %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc172)
                %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc173)
                cir.store %76, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc178)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s8i loc(#loc180)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc363)
                  } loc(#loc362)
                } loc(#loc361)
              } loc(#loc319)
              cir.yield loc(#loc62)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc183)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc183)
              cir.condition(%20) loc(#loc183)
            } loc(#loc318)
          } loc(#loc318)
          cir.scope {
            %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc187)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc187)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc365)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc190)
            } loc(#loc366)
          } loc(#loc364)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc194)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc368)
            cir.if %22 {
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc197)
            } loc(#loc369)
          } loc(#loc367)
        } loc(#loc311)
      } loc(#loc310)
    } loc(#loc308)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc371)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc201)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc371)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc202)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
      %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc31)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc31)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc202)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc372)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc209)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc374)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc211)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc212)
        } loc(#loc375)
      } loc(#loc373)
    } loc(#loc370)
    cir.return loc(#loc35)
  } loc(#loc305)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc215)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc377)
    cir.return %2 : !s32i loc(#loc377)
  } loc(#loc376)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc219)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc222)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc290)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc290)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc290)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc227)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    cir.scope {
      %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc231)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc384)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc219)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc219)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc236)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc237)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc222)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc222)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc237)
      } loc(#loc385)
    } loc(#loc383)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc387)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc242)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc387)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc243)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
      %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc245)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc245)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc243)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc388)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc251)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc390)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc253)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc254)
        } loc(#loc391)
      } loc(#loc389)
    } loc(#loc386)
    cir.return loc(#loc224)
  } loc(#loc380)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc393)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc289)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc289)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc289)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc259)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc394)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc263)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc396)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc266)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc267)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc268)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc268)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc266)
      } loc(#loc397)
    } loc(#loc395)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc399)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc272)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc399)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc273)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
      %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc275)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc275)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc273)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc400)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc280)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc281)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc402)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc283)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc284)
        } loc(#loc403)
      } loc(#loc401)
    } loc(#loc398)
    cir.return loc(#loc256)
  } loc(#loc392)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_084goodEv() extra(#fn_attr) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B1Ev() : () -> () loc(#loc287)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08L8goodG2B2Ev() : () -> () loc(#loc288)
    cir.return loc(#loc286)
  } loc(#loc404)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":204:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":204:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":177:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":177:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":74:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":74:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":56:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":59:1)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":58:12)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":58:5)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc15 = loc("/usr/include/netinet/in.h":402:1)
#loc16 = loc("/usr/include/netinet/in.h":403:40)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc22 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc23 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc24 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc25 = loc("/usr/include/string.h":226:1)
#loc26 = loc("/usr/include/string.h":227:50)
#loc27 = loc("/usr/include/unistd.h":358:1)
#loc28 = loc("/usr/include/unistd.h":358:27)
#loc29 = loc("/usr/include/stdio.h":264:1)
#loc30 = loc("/usr/include/stdio.h":266:3)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":161:29)
#loc32 = loc("/usr/include/stdio.h":184:1)
#loc33 = loc("/usr/include/stdio.h":184:36)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":71:1)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":167:1)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":73:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":73:12)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":75:12)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":75:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":76:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":157:5)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":76:8)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":76:26)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":77:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":78:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":156:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":83:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":83:17)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":84:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":84:32)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":85:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":85:19)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":86:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":86:35)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":87:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":87:35)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":88:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":88:41)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":88:30)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":88:37)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":89:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":141:21)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":90:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":140:13)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:39)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:48)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:61)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:32)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":99:72)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":100:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":103:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":100:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":100:37)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":101:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":102:21)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:24)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:25)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:34)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:37)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:51)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":104:52)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":105:38)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":105:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":106:43)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":106:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":107:42)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":107:36)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":107:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":107:50)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":111:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:26)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:58)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:59)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:68)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:82)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:21)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":108:88)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":109:17)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":110:21)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":112:17)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":115:17)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":112:28)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":112:42)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":112:21)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":112:61)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":113:17)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":114:21)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:39)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:53)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:59)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:32)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":116:63)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":117:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":120:17)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":117:21)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":117:37)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":118:17)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":119:21)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:35)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:58)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:65)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:63)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:49)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:72)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:75)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:86)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:91)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:106)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:116)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:117)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:120)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:30)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:17)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":122:121)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":126:17)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:21)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:35)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:48)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:51)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":123:65)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":124:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":125:21)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:61)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:22)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:32)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:45)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:56)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":128:57)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":130:34)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":130:40)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":130:27)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":130:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":130:44)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":131:17)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":134:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":131:21)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":132:17)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":133:32)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":133:22)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":133:21)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":135:34)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":135:40)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":135:27)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":135:17)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":135:44)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":136:17)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":139:17)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":136:21)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":137:17)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":138:32)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":138:22)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":138:21)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":141:20)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":142:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":145:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":142:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":142:33)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":143:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":144:30)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":144:17)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":146:13)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":149:13)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":146:17)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":146:33)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":147:13)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":148:30)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":148:17)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":158:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":166:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":159:9)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":159:23)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":161:17)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":161:23)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":161:9)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":161:34)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":162:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":165:9)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":162:13)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":162:22)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":163:9)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":164:20)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":164:13)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":61:1)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":64:1)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":63:12)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":63:5)
#loc217 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc218 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":182:19)
#loc220 = loc("/usr/include/string.h":149:1)
#loc221 = loc("/usr/include/string.h":150:14)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":187:22)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":174:1)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":198:1)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":176:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":176:12)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":178:12)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":178:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":179:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":188:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":179:8)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":179:27)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":180:5)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":183:5)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":185:5)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":182:9)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":187:9)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":187:16)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":189:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":197:5)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":190:9)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":190:23)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":192:17)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":192:23)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":192:29)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":192:9)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":192:34)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":193:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":196:9)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":193:13)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":193:22)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":194:9)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":195:20)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":195:13)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":201:1)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":220:1)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":203:5)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":203:12)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":205:12)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":205:5)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":206:5)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":210:5)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":206:8)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":206:26)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":207:5)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":209:9)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":209:16)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":209:22)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":211:5)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":219:5)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":212:9)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":212:23)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":214:17)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":214:23)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":214:29)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":214:9)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":214:34)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":215:9)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":218:9)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":215:13)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":215:22)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":216:9)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":217:20)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":217:13)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":222:1)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":226:1)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":224:5)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_08.cpp":225:5)
#loc289 = loc(fused[#loc1, #loc2])
#loc290 = loc(fused[#loc3, #loc4])
#loc291 = loc(fused[#loc5, #loc6])
#loc292 = loc(fused[#loc7, #loc8])
#loc293 = loc(fused[#loc10, #loc9])
#loc294 = loc(fused[#loc11, #loc12])
#loc295 = loc(fused[#loc13, #loc14])
#loc296 = loc(fused[#loc15, #loc16])
#loc297 = loc(fused[#loc17, #loc18])
#loc298 = loc(fused[#loc19, #loc20])
#loc299 = loc(fused[#loc21, #loc22])
#loc300 = loc(fused[#loc23, #loc24])
#loc301 = loc(fused[#loc25, #loc26])
#loc302 = loc(fused[#loc27, #loc28])
#loc303 = loc(fused[#loc29, #loc30])
#loc304 = loc(fused[#loc32, #loc33])
#loc305 = loc(fused[#loc34, #loc35])
#loc306 = loc(fused[#loc36, #loc37])
#loc307 = loc(fused[#loc39, #loc38])
#loc308 = loc(fused[#loc40, #loc41])
#loc309 = loc(fused[#loc42, #loc43])
#loc310 = loc(fused[#loc44, #loc41])
#loc311 = loc(fused[#loc45, #loc46])
#loc312 = loc(fused[#loc47, #loc48])
#loc313 = loc(fused[#loc49, #loc50])
#loc314 = loc(fused[#loc51, #loc52])
#loc315 = loc(fused[#loc53, #loc54])
#loc316 = loc(fused[#loc55, #loc56])
#loc317 = loc(fused[#loc57, #loc58])
#loc318 = loc(fused[#loc61, #loc62])
#loc319 = loc(fused[#loc63, #loc64])
#loc320 = loc(fused[#loc69, #loc70])
#loc321 = loc(fused[#loc71, #loc72])
#loc322 = loc(fused[#loc73, #loc74])
#loc323 = loc(fused[#loc75, #loc72])
#loc324 = loc(fused[#loc77, #loc78])
#loc325 = loc(fused[#loc80, #loc81])
#loc326 = loc(fused[#loc82, #loc83])
#loc327 = loc(fused[#loc86, #loc84])
#loc328 = loc(fused[#loc90, #loc87])
#loc329 = loc(fused[#loc94, #loc95])
#loc330 = loc(fused[#loc96, #loc97])
#loc331 = loc(fused[#loc99, #loc100])
#loc332 = loc(fused[#loc101, #loc102])
#loc333 = loc(fused[#loc103, #loc104])
#loc334 = loc(fused[#loc105, #loc97])
#loc335 = loc(fused[#loc107, #loc108])
#loc336 = loc(fused[#loc111, #loc112])
#loc337 = loc(fused[#loc113, #loc108])
#loc338 = loc(fused[#loc119, #loc120])
#loc339 = loc(fused[#loc121, #loc122])
#loc340 = loc(fused[#loc123, #loc124])
#loc341 = loc(fused[#loc125, #loc122])
#loc342 = loc(fused[#loc131, #loc132])
#loc343 = loc(fused[#loc133, #loc134])
#loc344 = loc(fused[#loc135, #loc136])
#loc345 = loc(fused[#loc135, #loc137])
#loc346 = loc(fused[#loc133, #loc138])
#loc347 = loc(fused[#loc141, #loc142])
#loc348 = loc(fused[#loc143, #loc144])
#loc349 = loc(fused[#loc145, #loc146])
#loc350 = loc(fused[#loc148, #loc149])
#loc351 = loc(fused[#loc150, #loc144])
#loc352 = loc(fused[#loc156, #loc157])
#loc353 = loc(fused[#loc155, #loc157])
#loc354 = loc(fused[#loc154, #loc157])
#loc355 = loc(fused[#loc153, #loc152])
#loc356 = loc(fused[#loc162, #loc163])
#loc357 = loc(fused[#loc164, #loc165])
#loc358 = loc(fused[#loc167, #loc165])
#loc359 = loc(fused[#loc170, #loc168])
#loc360 = loc(fused[#loc174, #loc175])
#loc361 = loc(fused[#loc176, #loc177])
#loc362 = loc(fused[#loc179, #loc177])
#loc363 = loc(fused[#loc182, #loc180])
#loc364 = loc(fused[#loc184, #loc185])
#loc365 = loc(fused[#loc186, #loc187])
#loc366 = loc(fused[#loc188, #loc185])
#loc367 = loc(fused[#loc191, #loc192])
#loc368 = loc(fused[#loc193, #loc194])
#loc369 = loc(fused[#loc195, #loc192])
#loc370 = loc(fused[#loc198, #loc199])
#loc371 = loc(fused[#loc200, #loc201])
#loc372 = loc(fused[#loc204, #loc205])
#loc373 = loc(fused[#loc206, #loc207])
#loc374 = loc(fused[#loc208, #loc209])
#loc375 = loc(fused[#loc210, #loc207])
#loc376 = loc(fused[#loc213, #loc214])
#loc377 = loc(fused[#loc216, #loc215])
#loc378 = loc(fused[#loc217, #loc218])
#loc379 = loc(fused[#loc220, #loc221])
#loc380 = loc(fused[#loc223, #loc224])
#loc381 = loc(fused[#loc225, #loc226])
#loc382 = loc(fused[#loc228, #loc227])
#loc383 = loc(fused[#loc229, #loc230])
#loc384 = loc(fused[#loc231, #loc232])
#loc385 = loc(fused[#loc233, #loc234, #loc235, #loc230])
#loc386 = loc(fused[#loc239, #loc240])
#loc387 = loc(fused[#loc241, #loc242])
#loc388 = loc(fused[#loc246, #loc247])
#loc389 = loc(fused[#loc248, #loc249])
#loc390 = loc(fused[#loc250, #loc251])
#loc391 = loc(fused[#loc252, #loc249])
#loc392 = loc(fused[#loc255, #loc256])
#loc393 = loc(fused[#loc257, #loc258])
#loc394 = loc(fused[#loc260, #loc259])
#loc395 = loc(fused[#loc261, #loc262])
#loc396 = loc(fused[#loc263, #loc264])
#loc397 = loc(fused[#loc265, #loc262])
#loc398 = loc(fused[#loc269, #loc270])
#loc399 = loc(fused[#loc271, #loc272])
#loc400 = loc(fused[#loc276, #loc277])
#loc401 = loc(fused[#loc278, #loc279])
#loc402 = loc(fused[#loc280, #loc281])
#loc403 = loc(fused[#loc282, #loc279])
#loc404 = loc(fused[#loc285, #loc286])
