!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":27:21)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":27:27)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":60:26)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":60:32)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":94:26)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":94:32)
#loc139 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":123:25)
#loc140 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":123:31)
#loc171 = loc(fused[#loc12, #loc13])
#loc188 = loc(fused[#loc55, #loc56])
#loc202 = loc(fused[#loc98, #loc99])
#loc216 = loc(fused[#loc139, #loc140])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc166)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc167)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc168)
  cir.func private  @printIntLine(!s32i) loc(#loc169)
  cir.func internal private  @badSink(%arg0: !cir.float loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc14)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc168)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc175)
          %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc23)
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc24)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc24)
          %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc176)
          %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc176)
          cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc175)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc25)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc26)
        } loc(#loc174)
      } loc(#loc173)
    } loc(#loc172)
    cir.return loc(#loc11)
  } loc(#loc170)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fscanf_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc31)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc179)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc33)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc33)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %9 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc168)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %10 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc37)
    cir.call @badSink(%10) : (!cir.float) -> () loc(#loc38)
    cir.return loc(#loc28)
  } loc(#loc177)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fscanf_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc40)
  } loc(#loc181)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc185)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc52)
  cir.func internal private  @goodB2G1Sink(%arg0: !cir.float loc(fused[#loc55, #loc56])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc57)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc185)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc67)
          %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc67)
          %6 = cir.fabs %5 : !cir.double loc(#loc67)
          %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc68)
          %8 = cir.cmp(gt, %6, %7) : !cir.double, !s32i loc(#loc192)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc70)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc194)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc76)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc77)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc77)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc195)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc195)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc194)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc79)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc52)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc52)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc80)
          } loc(#loc193)
        } loc(#loc191)
      } loc(#loc190)
    } loc(#loc189)
    cir.return loc(#loc54)
  } loc(#loc187)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc85)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc198)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc87)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc89)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc89)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc87)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %9 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc185)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %10 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc92)
    cir.call @goodB2G1Sink(%10) : (!cir.float) -> () loc(#loc93)
    cir.return loc(#loc82)
  } loc(#loc196)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc200)
  cir.func internal private  @goodB2G2Sink(%arg0: !cir.float loc(fused[#loc98, #loc99])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc202)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc100)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc200)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc107)
          %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc107)
          %6 = cir.fabs %5 : !cir.double loc(#loc107)
          %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc108)
          %8 = cir.cmp(gt, %6, %7) : !cir.double, !s32i loc(#loc206)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc110)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc208)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc116)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc117)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc117)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc209)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc209)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc208)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc119)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc120)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc120)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          } loc(#loc207)
        } loc(#loc205)
      } loc(#loc204)
    } loc(#loc203)
    cir.return loc(#loc97)
  } loc(#loc201)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc126)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc212)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc128)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc129)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc130)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc130)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc128)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %9 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc200)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %10 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc133)
    cir.call @goodB2G2Sink(%10) : (!cir.float) -> () loc(#loc134)
    cir.return loc(#loc123)
  } loc(#loc210)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc214)
  cir.func internal private  @goodG2BSink(%arg0: !cir.float loc(fused[#loc139, #loc140])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc216)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc141)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc214)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc144)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc220)
          %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc150)
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc151)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc151)
          %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc221)
          %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc221)
          cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc153)
        } loc(#loc219)
      } loc(#loc218)
    } loc(#loc217)
    cir.return loc(#loc138)
  } loc(#loc215)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc158)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc224)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc160)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc225)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc214)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc164)
    cir.call @goodG2BSink(%5) : (!cir.float) -> () loc(#loc165)
    cir.return loc(#loc155)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":45:20)
#loc6 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":25:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":25:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":27:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":37:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":28:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":29:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":36:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":29:8)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":30:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":31:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":35:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":33:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":33:44)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":33:32)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":33:40)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":34:26)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":34:13)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":39:1)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":48:1)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":41:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":41:11)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":43:12)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":43:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":45:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":45:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":46:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":46:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":47:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":47:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":146:1)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":151:1)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":148:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":148:14)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":149:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":149:14)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":150:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":150:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":55:1)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":55:29)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":65:19)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":77:23)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":60:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":80:1)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":61:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":62:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":79:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":62:8)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":63:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":66:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":68:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":65:9)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":70:9)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":78:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":70:17)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":70:25)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":70:12)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":70:23)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":71:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":74:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":76:9)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":72:13)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":72:44)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":72:32)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":72:40)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":73:26)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":73:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":77:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":82:1)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":91:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":84:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":84:11)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":86:12)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":86:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":88:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":88:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":88:20)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":89:22)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":89:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":90:18)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":90:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":56:1)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":56:29)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":94:1)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":109:1)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":95:1)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":96:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":108:5)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":96:8)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":97:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":99:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":107:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":99:17)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":99:25)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":99:12)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":99:23)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":100:9)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":103:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":105:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":101:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":101:44)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":101:32)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":101:40)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":102:26)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":102:13)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":106:23)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":106:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":111:1)
#loc123 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":120:1)
#loc124 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":113:5)
#loc125 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":113:11)
#loc126 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":115:12)
#loc127 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":115:5)
#loc128 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":117:5)
#loc129 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":117:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":117:20)
#loc131 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":118:22)
#loc132 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":118:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":119:18)
#loc134 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":119:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":57:1)
#loc136 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":57:28)
#loc137 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":123:1)
#loc138 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":133:1)
#loc141 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":124:1)
#loc142 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":125:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":132:5)
#loc144 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":125:8)
#loc145 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":126:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":127:9)
#loc147 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":131:9)
#loc148 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":129:13)
#loc149 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":129:44)
#loc150 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":129:32)
#loc151 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":129:40)
#loc152 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":130:26)
#loc153 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":130:13)
#loc154 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":135:1)
#loc155 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":144:1)
#loc156 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":137:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":137:11)
#loc158 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":139:12)
#loc159 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":139:5)
#loc160 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":141:12)
#loc161 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":141:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":142:21)
#loc163 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":142:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":143:17)
#loc165 = loc("CWE369_Divide_by_Zero__float_fscanf_21.c":143:5)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc6, #loc7])
#loc169 = loc(fused[#loc8, #loc9])
#loc170 = loc(fused[#loc10, #loc11])
#loc172 = loc(fused[#loc15, #loc16])
#loc173 = loc(fused[#loc18, #loc16])
#loc174 = loc(fused[#loc19, #loc20])
#loc175 = loc(fused[#loc21, #loc22])
#loc176 = loc(fused[#loc23, #loc24])
#loc177 = loc(fused[#loc27, #loc28])
#loc178 = loc(fused[#loc29, #loc30])
#loc179 = loc(fused[#loc32, #loc31])
#loc180 = loc(fused[#loc36, #loc35])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc41, #loc42])
#loc183 = loc(fused[#loc43, #loc44])
#loc184 = loc(fused[#loc45, #loc46])
#loc185 = loc(fused[#loc47, #loc48])
#loc186 = loc(fused[#loc49, #loc50])
#loc187 = loc(fused[#loc53, #loc54])
#loc189 = loc(fused[#loc58, #loc59])
#loc190 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc191 = loc(fused[#loc65, #loc66])
#loc192 = loc(fused[#loc69, #loc68])
#loc193 = loc(fused[#loc71, #loc72, #loc73, #loc66])
#loc194 = loc(fused[#loc74, #loc75])
#loc195 = loc(fused[#loc76, #loc77])
#loc196 = loc(fused[#loc81, #loc82])
#loc197 = loc(fused[#loc83, #loc84])
#loc198 = loc(fused[#loc86, #loc85])
#loc199 = loc(fused[#loc91, #loc90])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc96, #loc97])
#loc203 = loc(fused[#loc101, #loc102])
#loc204 = loc(fused[#loc104, #loc102])
#loc205 = loc(fused[#loc105, #loc106])
#loc206 = loc(fused[#loc109, #loc108])
#loc207 = loc(fused[#loc111, #loc112, #loc113, #loc106])
#loc208 = loc(fused[#loc114, #loc115])
#loc209 = loc(fused[#loc116, #loc117])
#loc210 = loc(fused[#loc122, #loc123])
#loc211 = loc(fused[#loc124, #loc125])
#loc212 = loc(fused[#loc127, #loc126])
#loc213 = loc(fused[#loc132, #loc131])
#loc214 = loc(fused[#loc135, #loc136])
#loc215 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc142, #loc143])
#loc218 = loc(fused[#loc145, #loc143])
#loc219 = loc(fused[#loc146, #loc147])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc151])
#loc222 = loc(fused[#loc154, #loc155])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc159, #loc158])
#loc225 = loc(fused[#loc161, #loc160])
#loc226 = loc(fused[#loc163, #loc162])
