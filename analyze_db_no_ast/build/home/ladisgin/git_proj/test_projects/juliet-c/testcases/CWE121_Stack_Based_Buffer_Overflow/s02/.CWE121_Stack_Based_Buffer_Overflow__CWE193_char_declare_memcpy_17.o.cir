!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc98)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc99)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !s32i loc(#loc102)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc21)
        cir.condition(%8) loc(#loc21)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc23)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc25)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc105)
        } loc(#loc103)
        cir.yield loc(#loc16)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc30)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
        cir.yield loc(#loc100)
      } loc(#loc100)
    } loc(#loc100)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc108)
      %5 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc108)
      cir.store %5, %4 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc108)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
      %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc39)
      %15 = cir.binop(add, %12, %14) : !u64i loc(#loc109)
      %16 = cir.const #cir.int<1> : !u64i loc(#loc110)
      %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc111)
      cir.libc.memcpy %17 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc112)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc107)
    cir.return loc(#loc6)
  } loc(#loc95)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc113)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc118)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc119)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc63)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !s32i loc(#loc122)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc67)
        cir.condition(%8) loc(#loc67)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc69)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc71)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc74)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc125)
        } loc(#loc123)
        cir.yield loc(#loc62)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc76)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
        cir.yield loc(#loc120)
      } loc(#loc120)
    } loc(#loc120)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc128)
      %5 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc128)
      cir.store %5, %4 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc128)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc83)
      %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc84)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc83)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc85)
      %15 = cir.binop(add, %12, %14) : !u64i loc(#loc129)
      %16 = cir.const #cir.int<1> : !u64i loc(#loc130)
      %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc131)
      cir.libc.memcpy %17 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc132)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    } loc(#loc127)
    cir.return loc(#loc52)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":48:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":30:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":31:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":32:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":33:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":40:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":35:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":38:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":38:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":39:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":39:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":39:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":39:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":34:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":41:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":47:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":42:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":42:29)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:48)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:64)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":45:65)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":46:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":46:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":77:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":80:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":79:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":79:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":55:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":75:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":57:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":57:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":58:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":58:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":59:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":59:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":60:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":60:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":67:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:16)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:18)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":62:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":65:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":65:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":66:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":66:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":66:14)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":66:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":61:23)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":68:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":74:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":69:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":69:29)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:31)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:38)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:48)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:53)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:64)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:30)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":72:65)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":73:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_17.c":73:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc18, #loc17])
#loc102 = loc(fused[#loc19, #loc20])
#loc103 = loc(fused[#loc22, #loc16])
#loc104 = loc(fused[#loc24, #loc23])
#loc105 = loc(fused[#loc26, #loc25])
#loc106 = loc(fused[#loc30, #loc29])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc37, #loc39])
#loc110 = loc(fused[#loc40, #loc41])
#loc111 = loc(fused[#loc42, #loc41])
#loc112 = loc(fused[#loc43, #loc44])
#loc113 = loc(fused[#loc47, #loc48])
#loc114 = loc(fused[#loc49, #loc50])
#loc115 = loc(fused[#loc51, #loc52])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc64, #loc63])
#loc122 = loc(fused[#loc65, #loc66])
#loc123 = loc(fused[#loc68, #loc62])
#loc124 = loc(fused[#loc70, #loc69])
#loc125 = loc(fused[#loc72, #loc71])
#loc126 = loc(fused[#loc76, #loc75])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc79, #loc80])
#loc129 = loc(fused[#loc83, #loc85])
#loc130 = loc(fused[#loc86, #loc87])
#loc131 = loc(fused[#loc88, #loc87])
#loc132 = loc(fused[#loc89, #loc90])
