!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68_badData : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc71)
  cir.func private @printIntLine(!s32i) loc(#loc72)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc74)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc75)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc76)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    cir.store %4, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc74)
    cir.store %5, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc74)
    cir.br ^bb2 loc(#loc78)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc79)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc19)
    cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc80)
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc21)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc81)
    cir.brcond %11 ^bb5, ^bb9 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc26)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc26)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc29)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc32)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc84)
    cir.br ^bb4 loc(#loc79)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc35)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc36)
    cir.br ^bb11 loc(#loc16)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc14)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc73)
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68_goodG2BData : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc85)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc87)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    cir.store %4, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc87)
    cir.store %5, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc87)
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc53)
    cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc93)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc56)
    %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc94)
    cir.brcond %11 ^bb5, ^bb9 loc(#loc57)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc60)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc60)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc63)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc66)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc97)
    cir.br ^bb4 loc(#loc92)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc69)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc70)
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc40)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":19:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":41:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":30:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":30:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":32:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":32:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":28:18)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":40:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":31:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":39:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":37:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:18)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:25)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:29)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":35:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:34)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":36:35)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:35)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":34:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":38:26)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":38:31)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":38:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":38:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":20:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":20:14)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":48:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":63:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":52:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":52:29)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":54:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":54:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":50:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":50:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":51:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":62:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":53:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":61:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":59:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:22)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:18)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:25)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:29)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:27)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":57:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":58:35)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:35)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":56:34)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":60:26)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":60:31)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":60:32)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_68b.c":60:13)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc5, #loc6])
#loc74 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc9, #loc10])
#loc76 = loc(fused[#loc11, #loc12])
#loc77 = loc(fused[#loc13, #loc14])
#loc78 = loc(fused[#loc15, #loc16])
#loc79 = loc(fused[#loc17, #loc18])
#loc80 = loc(fused[#loc20, #loc19])
#loc81 = loc(fused[#loc21, #loc22])
#loc82 = loc(fused[#loc24, #loc18])
#loc83 = loc(fused[#loc27, #loc30])
#loc84 = loc(fused[#loc32, #loc31])
#loc85 = loc(fused[#loc37, #loc38])
#loc86 = loc(fused[#loc39, #loc40])
#loc87 = loc(fused[#loc41, #loc42])
#loc88 = loc(fused[#loc43, #loc44])
#loc89 = loc(fused[#loc45, #loc46])
#loc90 = loc(fused[#loc47, #loc48])
#loc91 = loc(fused[#loc49, #loc50])
#loc92 = loc(fused[#loc51, #loc52])
#loc93 = loc(fused[#loc54, #loc53])
#loc94 = loc(fused[#loc55, #loc56])
#loc95 = loc(fused[#loc58, #loc52])
#loc96 = loc(fused[#loc61, #loc64])
#loc97 = loc(fused[#loc66, #loc65])
