!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":77:10)
#loc51 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":77:14)
#loc52 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":77:20)
#loc53 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":77:32)
#loc118 = loc(fused[#loc50, #loc51])
#loc119 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__long_realloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
  cir.func private @printLongLine(!s64i) loc(#loc101)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc102)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__long_realloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc105)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc15)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc106)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc107)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc108)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc109)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%12) loc(#loc22)
      } do {
        %11 = cir.const #cir.int<5> : !s64i loc(#loc23)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc26)
        cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc111)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc29)
        %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc27)
        cir.call @printLongLine(%18) : (!s64i) -> () loc(#loc30)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc32)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
        cir.break loc(#loc33)
      } loc(#loc110)
    } loc(#loc110)
    cir.return loc(#loc8)
  } loc(#loc103)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__long_realloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc112)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc114)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__long_realloc_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call @CWE690_NULL_Deref_From_Return__long_realloc_16_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__long_realloc_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call @CWE690_NULL_Deref_From_Return__long_realloc_16_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.return %17 : !s32i loc(#loc122)
  } loc(#loc117)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc125)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc74)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc75)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc76)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc127)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc128)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc129)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%12) loc(#loc83)
      } do {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc87)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc132)
          cir.if %14 {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc89)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc90)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc92)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc134)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc93)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc94)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc95)
            %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc93)
            cir.call @printLongLine(%22) : (!s64i) -> () loc(#loc96)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc98)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
          } loc(#loc133)
        } loc(#loc131)
        cir.break loc(#loc99)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc69)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__long_realloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":24:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":24:35)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":37:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":25:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:20)
#loc14 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:28)
#loc15 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:36)
#loc17 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:47)
#loc18 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:48)
#loc19 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":28:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":29:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":36:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":29:11)
#loc23 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":32:19)
#loc24 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":32:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":32:14)
#loc26 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":32:15)
#loc27 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":33:23)
#loc28 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":33:28)
#loc29 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":33:29)
#loc30 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":33:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":34:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":34:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":35:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":63:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":66:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":65:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":65:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":82:15)
#loc45 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":84:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":87:15)
#loc47 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":89:15)
#loc48 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":77:1)
#loc49 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":92:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":78:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":80:27)
#loc56 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":80:22)
#loc57 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":80:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":82:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":83:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":83:57)
#loc61 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":84:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":87:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":88:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":88:56)
#loc65 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":89:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":91:12)
#loc67 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":91:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":44:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":61:1)
#loc70 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":46:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":46:12)
#loc72 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":47:12)
#loc73 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":47:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:20)
#loc75 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:28)
#loc76 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:34)
#loc77 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:36)
#loc78 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:47)
#loc79 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:48)
#loc80 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":49:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":50:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":60:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":50:11)
#loc84 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":53:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":58:9)
#loc86 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":53:13)
#loc87 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":53:21)
#loc88 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":54:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":55:23)
#loc90 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":55:13)
#loc91 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":55:18)
#loc92 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":55:19)
#loc93 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":56:27)
#loc94 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":56:32)
#loc95 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":56:33)
#loc96 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":56:13)
#loc97 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":57:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":57:18)
#loc99 = loc("CWE690_NULL_Deref_From_Return__long_realloc_16.c":59:9)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc9, #loc10])
#loc105 = loc(fused[#loc12, #loc11])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc15, #loc17])
#loc108 = loc(fused[#loc13, #loc18])
#loc109 = loc(fused[#loc19, #loc18])
#loc110 = loc(fused[#loc20, #loc21])
#loc111 = loc(fused[#loc24, #loc23])
#loc112 = loc(fused[#loc34, #loc35])
#loc113 = loc(fused[#loc36, #loc37])
#loc114 = loc(fused[#loc38, #loc39])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc48, #loc49])
#loc120 = loc(fused[#loc59, #loc60])
#loc121 = loc(fused[#loc63, #loc64])
#loc122 = loc(fused[#loc67, #loc66])
#loc123 = loc(fused[#loc68, #loc69])
#loc124 = loc(fused[#loc70, #loc71])
#loc125 = loc(fused[#loc73, #loc72])
#loc126 = loc(fused[#loc77, #loc78])
#loc127 = loc(fused[#loc76, #loc78])
#loc128 = loc(fused[#loc74, #loc79])
#loc129 = loc(fused[#loc80, #loc79])
#loc130 = loc(fused[#loc81, #loc82])
#loc131 = loc(fused[#loc84, #loc85])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc88, #loc85])
#loc134 = loc(fused[#loc90, #loc89])
