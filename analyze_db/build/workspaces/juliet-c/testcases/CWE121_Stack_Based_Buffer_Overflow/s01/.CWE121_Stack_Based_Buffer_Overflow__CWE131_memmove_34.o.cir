!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType = !cir.record<union "CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType" {!cir.ptr<!s32i>, !cir.ptr<!s32i>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc71)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc73)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc74)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc75)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %9 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
      %11 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc79)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc81)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc81)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc81)
        %15 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc26)
        %19 = cir.const #cir.int<10> : !s32i loc(#loc27)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc27)
        %21 = cir.const #cir.int<4> : !u64i loc(#loc82)
        %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc83)
        cir.libc.memmove %22 bytes from %18 to %16 : !cir.ptr<!void>, !u64i loc(#loc84)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc34)
        %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc35)
      } loc(#loc80)
    } loc(#loc78)
    cir.return loc(#loc4)
  } loc(#loc72)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc85)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc48)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc48)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc48)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc48)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc92)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
      cir.store %14, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
      cir.scope {
        %15 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc96)
        %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc96)
        cir.store %16, %15 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc96)
        %17 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc60)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc61)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc61)
        %21 = cir.const #cir.int<10> : !s32i loc(#loc62)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc62)
        %23 = cir.const #cir.int<4> : !u64i loc(#loc97)
        %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc98)
        cir.libc.memmove %24 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc99)
        %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc69)
        %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc67)
        cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc70)
      } loc(#loc95)
    } loc(#loc93)
    cir.return loc(#loc41)
  } loc(#loc87)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":44:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":29:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":29:11)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":30:69)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":31:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":33:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":33:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":34:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":21:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":43:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":36:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":36:30)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":22:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":42:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":38:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":38:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:35)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:38)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:48)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":40:49)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":41:26)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":41:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":41:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":41:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":70:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":73:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":72:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":72:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":51:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":68:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":53:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":53:11)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":54:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":54:69)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":55:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":55:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":57:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":57:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":58:26)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":58:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":59:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":67:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":60:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":60:30)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":61:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":66:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":62:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":62:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:21)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:35)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:38)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:48)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":64:49)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":65:26)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":65:31)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":65:32)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_34.c":65:13)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc5, #loc6])
#loc74 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc10, #loc9])
#loc76 = loc(fused[#loc12, #loc11])
#loc77 = loc(fused[#loc15, #loc13])
#loc78 = loc(fused[#loc16, #loc17])
#loc79 = loc(fused[#loc18, #loc19])
#loc80 = loc(fused[#loc21, #loc22])
#loc81 = loc(fused[#loc23, #loc24])
#loc82 = loc(fused[#loc28, #loc29])
#loc83 = loc(fused[#loc27, #loc29])
#loc84 = loc(fused[#loc30, #loc31])
#loc85 = loc(fused[#loc36, #loc37])
#loc86 = loc(fused[#loc38, #loc39])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc42, #loc43])
#loc89 = loc(fused[#loc44, #loc45])
#loc90 = loc(fused[#loc47, #loc46])
#loc91 = loc(fused[#loc49, #loc48])
#loc92 = loc(fused[#loc51, #loc50])
#loc93 = loc(fused[#loc52, #loc53])
#loc94 = loc(fused[#loc54, #loc55])
#loc95 = loc(fused[#loc56, #loc57])
#loc96 = loc(fused[#loc58, #loc59])
#loc97 = loc(fused[#loc63, #loc64])
#loc98 = loc(fused[#loc62, #loc64])
#loc99 = loc(fused[#loc65, #loc66])
