!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc131)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc13)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc136)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc17)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %26 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %26() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc4)
  } loc(#loc132)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc140)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc147)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc149)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc147)
      cir.store %6, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc147)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc45)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc150)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc51)
        cir.store %19, %4 : !u64i, !cir.ptr<!u64i> loc(#loc152)
        cir.for : cond {
          %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
          %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %22 = cir.cmp(lt, %20, %21) : !u64i, !cir.bool loc(#loc153)
          cir.condition(%22) loc(#loc55)
        } body {
          cir.scope {
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc59)
            %23 = cir.load %22 : !cir.ptr<!s8i>, !s8i loc(#loc57)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc61)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc61)
            cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc155)
          } loc(#loc154)
          cir.yield loc(#loc50)
        } step {
          %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc63)
          cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc156)
          cir.yield loc(#loc151)
        } loc(#loc151)
      } loc(#loc151)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc64)
      %12 = cir.const #cir.int<50> : !s32i loc(#loc65)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc65)
      %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc67)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc67)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc157)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    } loc(#loc146)
    cir.return loc(#loc35)
  } loc(#loc144)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc158)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc77)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc77)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc81)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc82)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc86)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc88)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %26 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc166)
    cir.call %26() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc73)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc170)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc172)
      %6 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc170)
      cir.store %6, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc170)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc106)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc106)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc112)
        cir.store %19, %4 : !u64i, !cir.ptr<!u64i> loc(#loc175)
        cir.for : cond {
          %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %22 = cir.cmp(lt, %20, %21) : !u64i, !cir.bool loc(#loc176)
          cir.condition(%22) loc(#loc116)
        } body {
          cir.scope {
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
            %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc120)
            %23 = cir.load %22 : !cir.ptr<!s8i>, !s8i loc(#loc118)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc121)
            %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc122)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc122)
            cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc178)
          } loc(#loc177)
          cir.yield loc(#loc111)
        } step {
          %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc124)
          cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc179)
          cir.yield loc(#loc174)
        } loc(#loc174)
      } loc(#loc174)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc125)
      %12 = cir.const #cir.int<50> : !s32i loc(#loc126)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc126)
      %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc128)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc180)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    } loc(#loc169)
    cir.return loc(#loc96)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":43:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":53:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":45:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":45:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":46:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":46:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":47:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":47:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:18)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:23)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":49:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":50:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":50:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":50:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":50:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":50:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":51:78)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":51:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":52:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":52:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":89:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":92:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":91:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":91:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":26:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":41:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":28:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":28:19)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":29:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":40:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":30:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":30:25)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":31:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":31:16)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":31:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":32:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":32:26)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":32:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":32:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":37:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:21)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":35:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":36:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":36:28)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":36:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":36:18)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":36:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:35)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":34:34)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":38:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":38:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":38:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":38:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":39:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":39:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":22:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":22:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":77:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":87:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":79:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":79:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":80:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":80:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":81:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":81:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:23)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":83:27)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":84:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":84:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":84:10)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":84:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":84:14)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":85:82)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":85:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":86:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":86:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":60:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":75:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":62:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":62:19)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":63:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":74:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":64:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":64:25)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":65:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":65:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":65:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":66:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":66:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":66:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":66:30)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":71:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:25)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":69:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":70:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":70:28)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":70:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":70:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":70:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:35)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":68:34)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":72:22)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":72:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":72:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":72:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":73:19)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_45.c":73:9)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc10, #loc9])
#loc136 = loc(fused[#loc15, #loc16])
#loc137 = loc(fused[#loc18, #loc17])
#loc138 = loc(fused[#loc23, #loc22])
#loc139 = loc(fused[#loc24, #loc25])
#loc140 = loc(fused[#loc26, #loc27])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc30, #loc31])
#loc143 = loc(fused[#loc32, #loc33])
#loc144 = loc(fused[#loc34, #loc35])
#loc145 = loc(fused[#loc36, #loc37])
#loc146 = loc(fused[#loc38, #loc39])
#loc147 = loc(fused[#loc40, #loc41])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc42, #loc44])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc52, #loc51])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc56, #loc50])
#loc155 = loc(fused[#loc61, #loc59])
#loc156 = loc(fused[#loc63, #loc62])
#loc157 = loc(fused[#loc67, #loc64])
#loc158 = loc(fused[#loc70, #loc71])
#loc159 = loc(fused[#loc72, #loc73])
#loc160 = loc(fused[#loc74, #loc75])
#loc161 = loc(fused[#loc76, #loc77])
#loc162 = loc(fused[#loc79, #loc78])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc87, #loc86])
#loc165 = loc(fused[#loc92, #loc91])
#loc166 = loc(fused[#loc93, #loc94])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc97, #loc98])
#loc169 = loc(fused[#loc99, #loc100])
#loc170 = loc(fused[#loc101, #loc102])
#loc171 = loc(fused[#loc103, #loc104])
#loc172 = loc(fused[#loc103, #loc105])
#loc173 = loc(fused[#loc108, #loc109])
#loc174 = loc(fused[#loc110, #loc111])
#loc175 = loc(fused[#loc113, #loc112])
#loc176 = loc(fused[#loc114, #loc115])
#loc177 = loc(fused[#loc117, #loc111])
#loc178 = loc(fused[#loc122, #loc120])
#loc179 = loc(fused[#loc124, #loc123])
#loc180 = loc(fused[#loc128, #loc125])
