!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":100:10)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":100:14)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":100:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":100:32)
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc137)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc134)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc30)
  cir.func @main(%arg0: !s32i loc(fused[#loc33, #loc34]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc35, #loc36])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc37)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc37)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc38)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc39)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc39)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc40)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc27)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_good() : () -> () loc(#loc42)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc28)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc29)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_bad() : () -> () loc(#loc46)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %17 : !s32i loc(#loc151)
  } loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc152)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc156)
      cir.store %4, %3 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc156)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc158)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc67)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc67)
          cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc160)
          cir.for : cond {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc70)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc70)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc161)
            cir.condition(%15) loc(#loc71)
          } body {
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc74)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc74)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
              %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc77)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            } loc(#loc162)
            cir.yield loc(#loc66)
          } step {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc80)
            cir.store %13, %5 : !u64i, !cir.ptr<!u64i> loc(#loc164)
            cir.yield loc(#loc159)
          } loc(#loc159)
        } loc(#loc159)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc83)
        %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc84)
      } loc(#loc157)
    } loc(#loc155)
    cir.return loc(#loc54)
  } loc(#loc153)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc165)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc168)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc95)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc88)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc176)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc176)
      cir.store %4, %3 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc176)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc115)
          cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc180)
          cir.for : cond {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc117)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc118)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc118)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc181)
            cir.condition(%15) loc(#loc119)
          } body {
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc121)
              %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc122)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc122)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
              %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc124)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc125)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc183)
            } loc(#loc182)
            cir.yield loc(#loc114)
          } step {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc128)
            cir.store %13, %5 : !u64i, !cir.ptr<!u64i> loc(#loc184)
            cir.yield loc(#loc179)
          } loc(#loc179)
        } loc(#loc179)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc130)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc131)
        %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc132)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc102)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":19:14)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":41:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":43:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":43:11)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":44:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":44:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":45:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":45:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":48:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":48:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":49:78)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":49:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":50:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":50:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":86:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":89:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":88:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":88:13)
#loc21 = loc("/usr/include/stdlib.h":575:1)
#loc22 = loc("/usr/include/stdlib.h":575:41)
#loc23 = loc("/usr/include/time.h":76:1)
#loc24 = loc("/usr/include/time.h":76:38)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":105:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":107:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":110:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":112:15)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":100:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":115:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":101:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":103:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":103:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":103:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":105:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":106:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":106:73)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":107:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":110:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":111:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":111:72)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":112:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":114:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":114:5)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":24:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":39:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":26:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":26:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":27:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":38:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":28:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":28:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":29:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":37:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":30:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":30:20)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":35:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:18)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:29)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":33:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:34)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:22)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:23)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":34:35)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:35)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":32:34)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":36:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":36:31)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":36:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":36:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":20:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":20:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":75:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":84:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":77:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":77:11)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":78:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":78:25)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":79:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":79:27)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":81:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":81:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":82:82)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":82:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":83:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":83:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":58:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":73:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":60:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":60:18)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":61:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":72:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":62:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":62:29)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":63:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":71:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":64:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":64:20)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":69:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:22)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:18)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:25)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:29)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:27)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":67:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:27)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:17)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:23)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":68:35)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:35)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":66:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":70:26)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":70:31)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":70:32)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_45.c":70:13)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc12, #loc11])
#loc139 = loc(fused[#loc14, #loc13])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc31, #loc32])
#loc149 = loc(fused[#loc42, #loc43])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc50, #loc49])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc55, #loc56])
#loc155 = loc(fused[#loc57, #loc58])
#loc156 = loc(fused[#loc59, #loc60])
#loc157 = loc(fused[#loc61, #loc62])
#loc158 = loc(fused[#loc63, #loc64])
#loc159 = loc(fused[#loc65, #loc66])
#loc160 = loc(fused[#loc68, #loc67])
#loc161 = loc(fused[#loc69, #loc70])
#loc162 = loc(fused[#loc72, #loc66])
#loc163 = loc(fused[#loc75, #loc78])
#loc164 = loc(fused[#loc80, #loc79])
#loc165 = loc(fused[#loc85, #loc86])
#loc166 = loc(fused[#loc87, #loc88])
#loc167 = loc(fused[#loc89, #loc90])
#loc168 = loc(fused[#loc91, #loc92])
#loc169 = loc(fused[#loc93, #loc94])
#loc170 = loc(fused[#loc96, #loc95])
#loc171 = loc(fused[#loc98, #loc97])
#loc172 = loc(fused[#loc99, #loc100])
#loc173 = loc(fused[#loc101, #loc102])
#loc174 = loc(fused[#loc103, #loc104])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc109, #loc110])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc116, #loc115])
#loc181 = loc(fused[#loc117, #loc118])
#loc182 = loc(fused[#loc120, #loc114])
#loc183 = loc(fused[#loc123, #loc126])
#loc184 = loc(fused[#loc128, #loc127])
