!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:37)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc123)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_execlp_17_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc124)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_execlp_17_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc30)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // 2 preds: ^bb1, ^bb29
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc137)
    cir.brcond %9 ^bb3, ^bb30 loc(#loc34)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %16 = cir.binop(sub, %14, %15) : !u64i loc(#loc141)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc44)
    %19 = cir.cmp(gt, %16, %18) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %19 ^bb7, ^bb25 loc(#loc143)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc51)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc145)
    %27 = cir.cast(integral, %26 : !u64i), !s32i loc(#loc145)
    %28 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %30 = cir.call @fgets(%22, %27, %29) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
    %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
    cir.brcond %33 ^bb9, ^bb22 loc(#loc147)
  ^bb9:  // pred: ^bb8
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb10 loc(#loc149)
  ^bb10:  // pred: ^bb9
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc66)
    %40 = cir.cmp(gt, %37, %39) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %40 ^bb11, ^bb16 loc(#loc67)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc70)
    %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc151)
    %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc68)
    %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc68)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc72)
    %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %50 ^bb12, ^bb13 loc(#loc67)
  ^bb12:  // pred: ^bb11
    %51 = cir.const #true loc(#loc67)
    cir.br ^bb14(%51 : !cir.bool) loc(#loc67)
  ^bb13:  // pred: ^bb11
    %52 = cir.const #false loc(#loc67)
    cir.br ^bb14(%52 : !cir.bool) loc(#loc67)
  ^bb14(%53: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:37)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc67)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17(%53 : !cir.bool) loc(#loc67)
  ^bb16:  // pred: ^bb10
    %54 = cir.const #false loc(#loc67)
    cir.br ^bb17(%54 : !cir.bool) loc(#loc67)
  ^bb17(%55: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:37)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc67)
  ^bb18:  // pred: ^bb17
    cir.brcond %55 ^bb19, ^bb20 loc(#loc153)
  ^bb19:  // pred: ^bb18
    %56 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc74)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %59 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc77)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc154)
    %63 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %57, %63 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb20 loc(#loc64)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc64)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc57)
  ^bb22:  // pred: ^bb8
    %64 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %67 = cir.cast(integral, %66 : !s32i), !s8i loc(#loc80)
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %69 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %70 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %67, %70 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb23 loc(#loc47)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc47)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc41)
  ^bb25:  // 2 preds: ^bb6, ^bb24
    cir.br ^bb26 loc(#loc41)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc37)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc29)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc29)
  ^bb29:  // pred: ^bb28
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %72 = cir.unary(inc, %71) nsw : !s32i, !s32i loc(#loc85)
    cir.store %72, %1 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb2 loc(#loc135)
  ^bb30:  // pred: ^bb2
    cir.br ^bb31 loc(#loc29)
  ^bb31:  // pred: ^bb30
    %73 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc16)
    %74 = cir.cast(array_to_ptrdecay, %73 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc16)
    %75 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %76 = cir.cast(array_to_ptrdecay, %75 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %77 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
    %78 = cir.cast(array_to_ptrdecay, %77 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
    %79 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %80 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %81 = cir.call @execlp(%74, %76, %78, %79, %80) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc89)
    cir.return loc(#loc19)
  } loc(#loc130)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execlp_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc158)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
    %3 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc111)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc113)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc96)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
    cir.br ^bb5 loc(#loc106)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc116)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb2 loc(#loc165)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc117)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc117)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc118)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc118)
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc119)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc119)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %24 = cir.call @execlp(%17, %19, %21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc122)
    cir.return loc(#loc98)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_17.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":94:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":94:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":49:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":49:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":72:31)
#loc14 = loc("/usr/include/unistd.h":605:1)
#loc15 = loc("/usr/include/unistd.h":606:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:12)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:38)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":45:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":83:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":55:13)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":55:41)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":47:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":47:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":48:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":48:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":50:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":50:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":78:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:16)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:20)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:18)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":52:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":53:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":77:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":55:30)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":55:37)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":57:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":76:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":57:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":57:21)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":57:31)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":58:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":75:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:27)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:31)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:47)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:51)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:61)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":60:71)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":61:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":69:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":71:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":64:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":64:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":64:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":64:42)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":68:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:35)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:40)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:45)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:53)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:54)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":65:59)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":66:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":67:43)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":67:25)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":67:30)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":67:38)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":67:39)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":72:21)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":74:37)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":74:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":74:26)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":74:33)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:24)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":51:23)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:52)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:66)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":82:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":107:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":110:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":109:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":109:13)
#loc94 = loc("/usr/include/string.h":149:1)
#loc95 = loc("/usr/include/string.h":150:14)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":99:22)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":90:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":105:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":92:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":92:9)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":93:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":93:12)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":95:12)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":95:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":100:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:9)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:16)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:20)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:18)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":97:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":99:9)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":99:16)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:24)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":96:23)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:12)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:25)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:38)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:52)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:66)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_execlp_17.c":104:5)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc22, #loc23])
#loc133 = loc(fused[#loc24, #loc25])
#loc134 = loc(fused[#loc27, #loc26])
#loc135 = loc(fused[#loc28, #loc29])
#loc136 = loc(fused[#loc31, #loc30])
#loc137 = loc(fused[#loc32, #loc33])
#loc138 = loc(fused[#loc35, #loc29])
#loc139 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc40, #loc41])
#loc141 = loc(fused[#loc42, #loc43])
#loc142 = loc(fused[#loc42, #loc44])
#loc143 = loc(fused[#loc45, #loc41])
#loc144 = loc(fused[#loc46, #loc47])
#loc145 = loc(fused[#loc51, #loc52])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc65, #loc66])
#loc151 = loc(fused[#loc69, #loc70])
#loc152 = loc(fused[#loc68, #loc72])
#loc153 = loc(fused[#loc73, #loc64])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc75, #loc74])
#loc156 = loc(fused[#loc81, #loc80])
#loc157 = loc(fused[#loc85, #loc84])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc92, #loc93])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc104, #loc103])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc108, #loc107])
#loc167 = loc(fused[#loc109, #loc110])
#loc168 = loc(fused[#loc112, #loc106])
#loc169 = loc(fused[#loc116, #loc115])
