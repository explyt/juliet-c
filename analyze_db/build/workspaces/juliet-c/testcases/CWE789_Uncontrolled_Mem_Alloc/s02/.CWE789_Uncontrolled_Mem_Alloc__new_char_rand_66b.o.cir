!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":31:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":31:31)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":60:18)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":60:35)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":84:18)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":84:35)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:41)
#true = #cir.bool<true> : !cir.bool
#loc116 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc43, #loc44])
#loc138 = loc(fused[#loc78, #loc79])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc112)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc8)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_667badSinkEPm(%arg0: !cir.ptr<!u64i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc118)
    cir.store %arg0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc17)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc18)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!u64i>, %4 : !s32i), !cir.ptr<!u64i> loc(#loc16)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %8 = cir.const #cir.int<5> : !u64i loc(#loc121)
    %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc122)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc123)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc31)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc35)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.delete.array %19 : <!s8i> loc(#loc39)
    cir.br ^bb5 loc(#loc28)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc8)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc10)
  } loc(#loc115)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6611goodG2BSinkEPm(%arg0: !cir.ptr<!u64i> loc(fused[#loc43, #loc44])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc49)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc50)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!u64i>, %4 : !s32i), !cir.ptr<!u64i> loc(#loc48)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %8 = cir.const #cir.int<5> : !u64i loc(#loc132)
    %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc133)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc63)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc67)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc69)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc69)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.delete.array %19 : <!s8i> loc(#loc72)
    cir.br ^bb5 loc(#loc60)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc73)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb5 loc(#loc55)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc55)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc53)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc42)
  } loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc75)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6611goodB2GSinkEPm(%arg0: !cir.ptr<!u64i> loc(fused[#loc78, #loc79])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    cir.store %arg0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc84)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc85)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!u64i>, %4 : !s32i), !cir.ptr<!u64i> loc(#loc83)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %8 = cir.const #cir.int<5> : !u64i loc(#loc143)
    %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc144)
    cir.brcond %9 ^bb3, ^bb8 loc(#loc94)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc145)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #true loc(#loc94)
    cir.br ^bb6(%14 : !cir.bool) loc(#loc94)
  ^bb5:  // pred: ^bb3
    %15 = cir.const #false loc(#loc94)
    cir.br ^bb6(%15 : !cir.bool) loc(#loc94)
  ^bb6(%16: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:41)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%16 : !cir.bool) loc(#loc94)
  ^bb8:  // pred: ^bb2
    %17 = cir.const #false loc(#loc94)
    cir.br ^bb9(%17 : !cir.bool) loc(#loc94)
  ^bb9(%18: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:41)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.brcond %18 ^bb11, ^bb12 loc(#loc146)
  ^bb11:  // pred: ^bb10
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc101)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %22 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc105)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc107)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc107)
    %26 = cir.call @strcpy(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.delete.array %28 : <!s8i> loc(#loc110)
    cir.br ^bb13 loc(#loc98)
  ^bb12:  // pred: ^bb10
    %29 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc75)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb13 loc(#loc90)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc90)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc88)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc77)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":44:30)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":50:23)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":31:1)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":53:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":36:9)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":36:16)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":34:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":34:30)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":32:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":34:19)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":34:29)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":35:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":52:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":40:9)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":51:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":40:13)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":40:20)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":40:39)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":41:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":47:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":49:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":42:33)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":31:6)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":42:24)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":42:37)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":42:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":44:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":44:20)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":45:23)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":45:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":46:23)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":50:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":60:1)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":81:1)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":64:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":64:16)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":62:5)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":62:30)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":61:1)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":62:19)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":62:29)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":63:5)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":80:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":68:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":79:9)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":68:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":68:20)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":68:39)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":69:9)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":75:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":77:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":70:33)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":60:6)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":70:24)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":70:37)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":70:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":72:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":72:20)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":72:30)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":73:23)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":73:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":74:23)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":78:23)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":78:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":102:23)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":84:1)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":105:1)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":88:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":88:16)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":86:5)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":86:30)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":85:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":86:19)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":86:29)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":87:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":104:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:9)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":103:9)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:20)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:39)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:44)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":92:51)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":93:9)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":99:9)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":101:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":94:33)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":84:6)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":94:24)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":94:37)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":94:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":96:13)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":96:20)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":96:30)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":97:23)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":97:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":98:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_66b.cpp":102:13)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc9, #loc10])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc20, #loc21])
#loc120 = loc(fused[#loc22, #loc23])
#loc121 = loc(fused[#loc25, #loc26])
#loc122 = loc(fused[#loc24, #loc26])
#loc123 = loc(fused[#loc27, #loc28, #loc29, #loc23])
#loc124 = loc(fused[#loc32, #loc33])
#loc125 = loc(fused[#loc34, #loc33])
#loc126 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc45, #loc46])
#loc129 = loc(fused[#loc47, #loc48])
#loc130 = loc(fused[#loc52, #loc53])
#loc131 = loc(fused[#loc54, #loc55])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc56, #loc58])
#loc134 = loc(fused[#loc59, #loc60, #loc61, #loc55])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc66, #loc65])
#loc137 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc87, #loc88])
#loc142 = loc(fused[#loc89, #loc90])
#loc143 = loc(fused[#loc92, #loc93])
#loc144 = loc(fused[#loc91, #loc93])
#loc145 = loc(fused[#loc95, #loc96])
#loc146 = loc(fused[#loc97, #loc98, #loc99, #loc90])
#loc147 = loc(fused[#loc102, #loc103])
#loc148 = loc(fused[#loc104, #loc103])
