!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc115)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc117)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc119)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc123)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc126)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc27)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc27)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc126)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc128)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !s32i loc(#loc129)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc34)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %17 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc40)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc41)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc41)
            %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc132)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc132)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc117)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc133)
            %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc46)
            cir.if %30 {
              %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
              %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
              cir.store %33, %4 : !u64i, !cir.ptr<!u64i> loc(#loc135)
              cir.scope {
                %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %35 = cir.const #cir.int<0> : !s32i loc(#loc57)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc57)
                %37 = cir.cmp(gt, %34, %36) : !u64i, !s32i loc(#loc137)
                %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc58)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                  %41 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc62)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc138)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc60)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc60)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc64)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !s32i loc(#loc139)
                  %50 = cir.cast(int_to_bool, %49 : !s32i), !cir.bool loc(#loc65)
                  %51 = cir.ternary(%50, true {
                    %52 = cir.const #true loc(#loc59)
                    cir.yield %52 : !cir.bool loc(#loc59)
                  }, false {
                    %52 = cir.const #false loc(#loc59)
                    cir.yield %52 : !cir.bool loc(#loc59)
                  }) : (!cir.bool) -> !cir.bool loc(#loc59)
                  cir.yield %51 : !cir.bool loc(#loc59)
                }, false {
                  %40 = cir.const #false loc(#loc59)
                  cir.yield %40 : !cir.bool loc(#loc59)
                }) : (!cir.bool) -> !cir.bool loc(#loc59)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc67)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                  %43 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc70)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc141)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc142)
                } loc(#loc140)
              } loc(#loc136)
            } else {
              %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc72)
              %33 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc73)
              %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
              %36 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc76)
              cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc143)
            } loc(#loc134)
          } loc(#loc131)
        } loc(#loc130)
      } loc(#loc127)
    } loc(#loc125)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc80)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc145)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc82)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc12)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc86)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc16)
  } loc(#loc121)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc147)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc152)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc152)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc102)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc93)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc107)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc108)
      %12 = cir.cmp(ne, %10, %11) : !s32i, !s32i loc(#loc155)
      %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc109)
      cir.if %13 {
        %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc111)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc111)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc114)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc95)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":60:27)
#loc10 = loc("/usr/include/stdlib.h":923:1)
#loc11 = loc("/usr/include/stdlib.h":923:41)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":69:19)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":36:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":72:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":38:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":38:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":39:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":39:26)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":40:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":40:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":41:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":65:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":43:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":43:37)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":43:26)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":43:33)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":45:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":64:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":45:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":45:17)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":45:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":45:25)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":46:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":63:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:23)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:28)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:27)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:43)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:47)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:57)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:67)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":48:64)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":49:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":57:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":59:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":52:27)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":52:34)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":52:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":52:38)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":56:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:31)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:29)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:36)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:41)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:49)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:50)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:55)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":53:52)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":54:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":55:39)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":55:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":55:26)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":55:34)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":55:35)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":60:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":62:33)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":62:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":62:22)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":62:29)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":67:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":71:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":67:16)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":67:9)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":67:25)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":67:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":68:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":69:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":70:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":70:14)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":94:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":97:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":96:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":96:13)
#loc91 = loc("/usr/include/string.h":149:1)
#loc92 = loc("/usr/include/string.h":150:14)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":85:18)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":79:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":92:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":81:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":81:12)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":82:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":82:26)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":83:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":83:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":85:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":85:12)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":87:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":91:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":87:16)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":87:9)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":87:25)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":87:22)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":88:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":89:19)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":89:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":90:9)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_01.c":90:14)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc17, #loc18])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc22, #loc21])
#loc125 = loc(fused[#loc23, #loc24])
#loc126 = loc(fused[#loc25, #loc26])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc31, #loc32])
#loc129 = loc(fused[#loc31, #loc33])
#loc130 = loc(fused[#loc35, #loc30])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc41, #loc42])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc47, #loc48, #loc49, #loc37])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc56, #loc57])
#loc138 = loc(fused[#loc61, #loc62])
#loc139 = loc(fused[#loc60, #loc64])
#loc140 = loc(fused[#loc66, #loc55])
#loc141 = loc(fused[#loc69, #loc70])
#loc142 = loc(fused[#loc68, #loc67])
#loc143 = loc(fused[#loc74, #loc73])
#loc144 = loc(fused[#loc77, #loc78])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc83, #loc78])
#loc147 = loc(fused[#loc87, #loc88])
#loc148 = loc(fused[#loc89, #loc90])
#loc149 = loc(fused[#loc91, #loc92])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc96, #loc97])
#loc152 = loc(fused[#loc98, #loc99])
#loc153 = loc(fused[#loc101, #loc100])
#loc154 = loc(fused[#loc104, #loc105])
#loc155 = loc(fused[#loc107, #loc108])
#loc156 = loc(fused[#loc110, #loc105])
