!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc203)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc205)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc209)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc14)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc210)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc209)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc16)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc16)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc212)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %23, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc216)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc217)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc30)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb8 loc(#loc217)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc33)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc219)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc45)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb8 loc(#loc217)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc27)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc224)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc225)
  ^bb17:  // pred: ^bb16
    %42 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc50)
    cir.store %43, %2 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb18 loc(#loc225)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc53)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc227)
    cir.brcond %47 ^bb19, ^bb23 loc(#loc54)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc228)
  ^bb20:  // pred: ^bb19
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.copy %53 to %50 : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.br ^bb21 loc(#loc49)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc49)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc62)
    cir.store %55, %2 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb18 loc(#loc225)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc49)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!ty__twoIntsStruct>, %57 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.call @printStructLine(%58) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc66)
    cir.br ^bb25 loc(#loc47)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc25)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc4)
  } loc(#loc204)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc230)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc235)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc237)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc239)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc87)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc87)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc87)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc240)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc239)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc89)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc89)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %22 = cir.cmp(ne, %20, %21) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %25 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %25, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc245)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc246)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc247)
  ^bb8:  // pred: ^bb7
    %26 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc106)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.br ^bb9 loc(#loc247)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc109)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc249)
    cir.brcond %31 ^bb10, ^bb14 loc(#loc110)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc250)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb12 loc(#loc105)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc105)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc119)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    cir.br ^bb9 loc(#loc247)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc105)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc103)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc254)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc255)
  ^bb18:  // pred: ^bb17
    %44 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc124)
    cir.store %45, %2 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb19 loc(#loc255)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc127)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc257)
    cir.brcond %49 ^bb20, ^bb24 loc(#loc128)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc258)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!ty__twoIntsStruct>, %53 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    cir.copy %55 to %52 : !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    cir.br ^bb22 loc(#loc123)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc123)
  ^bb23:  // pred: ^bb22
    %56 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc136)
    cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb19 loc(#loc255)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc123)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!ty__twoIntsStruct>, %59 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    cir.call @printStructLine(%60) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc140)
    cir.br ^bb26 loc(#loc121)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc101)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc77)
  } loc(#loc234)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc261)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc263)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc265)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc152)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc152)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc152)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc152)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc152)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc266)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc152)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc265)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc154)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc154)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc154)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc154)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc154)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<5> : !s32i loc(#loc157)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc158)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc269)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    cir.store %23, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc270)
    cir.br ^bb3 loc(#loc156)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc271)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc272)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc273)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc168)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.br ^bb8 loc(#loc273)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc171)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc171)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc172)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc276)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb11 loc(#loc167)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc167)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc181)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc279)
    cir.br ^bb8 loc(#loc273)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc167)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc165)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc280)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc281)
  ^bb17:  // pred: ^bb16
    %42 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc186)
    cir.store %43, %2 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb18 loc(#loc281)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc188)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc189)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc189)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc283)
    cir.brcond %47 ^bb19, ^bb23 loc(#loc190)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc284)
  ^bb20:  // pred: ^bb19
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.copy %53 to %50 : !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    cir.br ^bb21 loc(#loc185)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc185)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc197)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc198)
    cir.store %55, %2 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.br ^bb18 loc(#loc281)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc185)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!ty__twoIntsStruct>, %57 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    cir.call @printStructLine(%58) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc202)
    cir.br ^bb25 loc(#loc183)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc163)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc142)
  } loc(#loc260)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":25:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":57:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":37:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":37:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":39:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":39:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":48:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":48:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":27:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":28:54)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":29:55)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":35:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":30:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":30:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":31:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":34:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":34:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":36:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":56:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":46:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":45:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":42:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":43:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":43:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":43:17)
#loc39 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":44:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":44:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":44:17)
#loc43 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":41:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":55:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":53:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:25)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":51:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":52:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":52:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":52:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":52:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":52:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":50:34)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":54:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":54:35)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":54:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":54:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":136:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":140:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":138:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":138:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":139:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":139:14)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":72:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":64:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":100:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":80:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":80:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":82:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":82:20)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":91:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":91:20)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":66:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":66:21)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":67:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":67:54)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":68:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":68:55)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":69:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":78:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":69:8)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":69:27)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":70:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":73:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":75:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":72:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":77:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":77:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":79:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":99:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":81:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":89:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":88:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:29)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":85:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":86:36)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":86:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":86:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":87:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":87:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":87:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:35)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":84:34)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":90:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":98:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":96:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:29)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:27)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":94:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":95:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":95:22)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":95:23)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":95:34)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":95:27)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:35)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":93:34)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":97:30)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":97:35)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":97:36)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":97:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":103:1)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":134:1)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":114:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":114:33)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":116:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":116:20)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":125:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":125:20)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":105:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":105:21)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":106:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":106:54)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":107:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":107:55)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":108:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":112:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":108:8)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":108:27)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":109:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":111:16)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":111:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":113:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":133:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":115:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":123:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:13)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":122:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:22)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:18)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:25)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:29)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:27)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":119:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":120:36)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":120:24)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":120:17)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":121:36)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":121:24)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":121:17)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:35)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":118:34)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":124:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":132:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":130:13)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:22)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:18)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:25)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:29)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:27)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":128:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":129:17)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":129:22)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":129:23)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":129:34)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":129:27)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:35)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":127:34)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":131:30)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":131:35)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":131:36)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_06.c":131:13)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc210 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc19, #loc20])
#loc213 = loc(fused[#loc21, #loc18])
#loc214 = loc(fused[#loc23, #loc22])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc26, #loc27])
#loc217 = loc(fused[#loc28, #loc29])
#loc218 = loc(fused[#loc31, #loc30])
#loc219 = loc(fused[#loc32, #loc33])
#loc220 = loc(fused[#loc35, #loc29])
#loc221 = loc(fused[#loc38, #loc36])
#loc222 = loc(fused[#loc42, #loc40])
#loc223 = loc(fused[#loc45, #loc44])
#loc224 = loc(fused[#loc46, #loc47])
#loc225 = loc(fused[#loc48, #loc49])
#loc226 = loc(fused[#loc51, #loc50])
#loc227 = loc(fused[#loc52, #loc53])
#loc228 = loc(fused[#loc55, #loc49])
#loc229 = loc(fused[#loc62, #loc61])
#loc230 = loc(fused[#loc67, #loc68])
#loc231 = loc(fused[#loc69, #loc70])
#loc232 = loc(fused[#loc71, #loc72])
#loc233 = loc(fused[#loc73, #loc74])
#loc234 = loc(fused[#loc76, #loc77])
#loc235 = loc(fused[#loc78, #loc79])
#loc236 = loc(fused[#loc80, #loc81])
#loc237 = loc(fused[#loc82, #loc83])
#loc238 = loc(fused[#loc84, #loc85])
#loc239 = loc(fused[#loc86, #loc87])
#loc240 = loc(fused[#loc88, #loc89])
#loc241 = loc(fused[#loc90, #loc91])
#loc242 = loc(fused[#loc92, #loc93])
#loc243 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc244 = loc(fused[#loc99, #loc98])
#loc245 = loc(fused[#loc100, #loc101])
#loc246 = loc(fused[#loc102, #loc103])
#loc247 = loc(fused[#loc104, #loc105])
#loc248 = loc(fused[#loc107, #loc106])
#loc249 = loc(fused[#loc108, #loc109])
#loc250 = loc(fused[#loc111, #loc105])
#loc251 = loc(fused[#loc114, #loc112])
#loc252 = loc(fused[#loc117, #loc115])
#loc253 = loc(fused[#loc119, #loc118])
#loc254 = loc(fused[#loc120, #loc121])
#loc255 = loc(fused[#loc122, #loc123])
#loc256 = loc(fused[#loc125, #loc124])
#loc257 = loc(fused[#loc126, #loc127])
#loc258 = loc(fused[#loc129, #loc123])
#loc259 = loc(fused[#loc136, #loc135])
#loc260 = loc(fused[#loc141, #loc142])
#loc261 = loc(fused[#loc143, #loc144])
#loc262 = loc(fused[#loc145, #loc146])
#loc263 = loc(fused[#loc147, #loc148])
#loc264 = loc(fused[#loc149, #loc150])
#loc265 = loc(fused[#loc151, #loc152])
#loc266 = loc(fused[#loc153, #loc154])
#loc267 = loc(fused[#loc155, #loc156])
#loc268 = loc(fused[#loc157, #loc158])
#loc269 = loc(fused[#loc159, #loc156])
#loc270 = loc(fused[#loc161, #loc160])
#loc271 = loc(fused[#loc162, #loc163])
#loc272 = loc(fused[#loc164, #loc165])
#loc273 = loc(fused[#loc166, #loc167])
#loc274 = loc(fused[#loc169, #loc168])
#loc275 = loc(fused[#loc170, #loc171])
#loc276 = loc(fused[#loc173, #loc167])
#loc277 = loc(fused[#loc176, #loc174])
#loc278 = loc(fused[#loc179, #loc177])
#loc279 = loc(fused[#loc181, #loc180])
#loc280 = loc(fused[#loc182, #loc183])
#loc281 = loc(fused[#loc184, #loc185])
#loc282 = loc(fused[#loc187, #loc186])
#loc283 = loc(fused[#loc188, #loc189])
#loc284 = loc(fused[#loc191, #loc185])
#loc285 = loc(fused[#loc198, #loc197])
