!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":118:10)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":118:14)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":118:20)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":118:32)
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc88, #loc89])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc123)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execl_18_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc124)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc10)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc129)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc133)
    %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc134)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execl_18_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc133)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
    %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc138)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc40)
    %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %15 ^bb3, ^bb12 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc10)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc10)
    %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %21, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // pred: ^bb3
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc143)
    cir.brcond %25 ^bb5, ^bb10 loc(#loc144)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc145)
  ^bb6:  // pred: ^bb5
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc54)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc55)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %32 = cir.binop(sub, %30, %31) : !u64i loc(#loc146)
    %33 = cir.cast(integral, %32 : !u64i), !s32i loc(#loc146)
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
    %35 = cir.call @fgets(%28, %33, %34) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc58)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    %38 = cir.cmp(eq, %35, %37) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
    cir.brcond %38 ^bb7, ^bb8 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %39 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc62)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc65)
    cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb8 loc(#loc51)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc51)
  ^bb9:  // pred: ^bb8
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
    %47 = cir.call @fclose(%46) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc67)
    cir.br ^bb10 loc(#loc46)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc37)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc37)
  ^bb13:  // pred: ^bb12
    %48 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc20)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc20)
    %50 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc68)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc68)
    %52 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
    %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
    %56 = cir.call @execl(%49, %51, %53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc71)
    cir.return loc(#loc23)
  } loc(#loc131)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_18_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_18_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %6 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc117)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc117)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc118)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc118)
    %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc119)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc119)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc122)
    cir.return loc(#loc108)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":92:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":54:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":54:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:27)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:37)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":71:31)
#loc16 = loc("/usr/include/stdio.h":184:1)
#loc17 = loc("/usr/include/stdio.h":184:36)
#loc18 = loc("/usr/include/unistd.h":594:1)
#loc19 = loc("/usr/include/unistd.h":595:14)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:11)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:47)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":51:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":82:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":53:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":53:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:37)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":61:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":61:16)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":55:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":55:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":56:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":56:10)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:26)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:33)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":77:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:27)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":64:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:40)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":76:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":67:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":74:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:27)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:32)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:31)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:47)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:51)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:61)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:71)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":70:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":71:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:37)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:26)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":75:24)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":75:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:29)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:61)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:75)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":103:1)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":106:1)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":105:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":105:13)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":123:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":125:15)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":128:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":130:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":118:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":133:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":119:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":121:27)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":121:22)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":121:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":123:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":124:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":124:57)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":125:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":128:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":129:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":129:56)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":130:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":132:12)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":132:5)
#loc104 = loc("/usr/include/string.h":149:1)
#loc105 = loc("/usr/include/string.h":150:14)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:18)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":89:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":101:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":91:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":91:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":93:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":93:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":94:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":94:10)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:12)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:11)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:29)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:47)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:61)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:75)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:5)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc11, #loc12])
#loc128 = loc(fused[#loc13, #loc14])
#loc129 = loc(fused[#loc16, #loc17])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc22, #loc23])
#loc132 = loc(fused[#loc24, #loc25])
#loc133 = loc(fused[#loc26, #loc27])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc31, #loc30])
#loc136 = loc(fused[#loc32, #loc33])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc38, #loc40])
#loc140 = loc(fused[#loc41, #loc37])
#loc141 = loc(fused[#loc43, #loc44])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc47, #loc48])
#loc144 = loc(fused[#loc49, #loc46])
#loc145 = loc(fused[#loc50, #loc51])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc58, #loc59])
#loc148 = loc(fused[#loc60, #loc51])
#loc149 = loc(fused[#loc63, #loc62])
#loc150 = loc(fused[#loc72, #loc73])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc76, #loc77])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc103, #loc102])
#loc160 = loc(fused[#loc104, #loc105])
#loc161 = loc(fused[#loc107, #loc108])
#loc162 = loc(fused[#loc109, #loc110])
#loc163 = loc(fused[#loc112, #loc111])
#loc164 = loc(fused[#loc113, #loc114])
