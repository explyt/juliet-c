!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc219)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc221)
  cir.func @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc224)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc19)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc21)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    %8 = cir.ternary(%7, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
      cir.yield %21 : !u32i loc(#loc23)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc23)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc23)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc23)
      cir.yield %25 : !u32i loc(#loc23)
    }) : (!cir.bool) -> !u32i loc(#loc23)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc23)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.scope {
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc228)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc228)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc230)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc231)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc232)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc32)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc230)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc34)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
        %21 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc36)
        %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc36)
        cir.store %25, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc43)
          %28 = cir.cmp(eq, %26, %27) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc235)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc46)
            cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
          } loc(#loc236)
        } loc(#loc234)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc49)
          cir.store %27, %13 : !u64i, !cir.ptr<!u64i> loc(#loc238)
          cir.for : cond {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %29 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc52)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc239)
            cir.condition(%31) loc(#loc239)
          } body {
            cir.scope {
              cir.scope {
                %28 = cir.const #cir.int<50> : !u64i loc(#loc242)
                %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc58)
                %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                %33 = cir.const #cir.int<1> : !u64i loc(#loc243)
                %34 = cir.const #cir.int<50> : !u64i loc(#loc244)
                %35 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
                %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc58)
                %37 = cir.cmp(ne, %28, %36) : !u64i, !cir.bool loc(#loc245)
                cir.if %37 {
                  %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc67)
                  cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
                } loc(#loc246)
              } loc(#loc241)
            } loc(#loc240)
            cir.yield loc(#loc48)
          } step {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc69)
            cir.store %29, %13 : !u64i, !cir.ptr<!u64i> loc(#loc247)
            cir.yield loc(#loc237)
          } loc(#loc237)
        } loc(#loc237)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
          %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc72)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
            %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc75)
          } loc(#loc249)
        } loc(#loc248)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc15)
  } loc(#loc222)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc252)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc81)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc83)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc256)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc256)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc258)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc259)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc260)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc94)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc94)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc258)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc96)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc259)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
        %16 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc99)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
        %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc101)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc101)
        %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc99)
        cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc106)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc107)
          %23 = cir.cmp(eq, %21, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc263)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc110)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc264)
        } loc(#loc262)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc113)
          cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc266)
          cir.for : cond {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %24 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc116)
            %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc267)
            cir.condition(%26) loc(#loc267)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.const #cir.int<50> : !u64i loc(#loc270)
                %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc122)
                %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc123)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc123)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
                %28 = cir.const #cir.int<1> : !u64i loc(#loc271)
                %29 = cir.const #cir.int<50> : !u64i loc(#loc272)
                %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc128)
                %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc122)
                %32 = cir.cmp(ne, %23, %31) : !u64i, !cir.bool loc(#loc273)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc131)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc132)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
                } loc(#loc274)
              } loc(#loc269)
            } loc(#loc268)
            cir.yield loc(#loc112)
          } step {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc134)
            cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc275)
            cir.yield loc(#loc265)
          } loc(#loc265)
        } loc(#loc265)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
          %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc137)
          cir.if %22 {
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc139)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc140)
          } loc(#loc277)
        } loc(#loc276)
      } loc(#loc257)
    } loc(#loc255)
    cir.return loc(#loc77)
  } loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc141)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc280)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc149)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc151)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc151)
    %8 = cir.ternary(%7, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc151)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc151)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc151)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc151)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc151)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc151)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc151)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc151)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc151)
      cir.yield %21 : !u32i loc(#loc151)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc151)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc151)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc151)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc151)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc151)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc151)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc151)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc151)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc151)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc151)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc151)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc151)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc151)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc151)
      cir.yield %25 : !u32i loc(#loc151)
    }) : (!cir.bool) -> !u32i loc(#loc151)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc151)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.scope {
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc284)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc284)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc286)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc287)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc288)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc160)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc286)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc162)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc287)
        %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc141)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
        cir.scope {
          %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc167)
          %23 = cir.cmp(gt, %21, %22) : !s32i, !cir.bool loc(#loc290)
          %24 = cir.ternary(%23, true {
            %25 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            %26 = cir.const #cir.int<20> : !s32i loc(#loc170)
            %27 = cir.cmp(le, %25, %26) : !s32i, !cir.bool loc(#loc291)
            %28 = cir.ternary(%27, true {
              %29 = cir.const #true loc(#loc168)
              cir.yield %29 : !cir.bool loc(#loc168)
            }, false {
              %29 = cir.const #false loc(#loc168)
              cir.yield %29 : !cir.bool loc(#loc168)
            }) : (!cir.bool) -> !cir.bool loc(#loc168)
            cir.yield %28 : !cir.bool loc(#loc168)
          }, false {
            %25 = cir.const #false loc(#loc168)
            cir.yield %25 : !cir.bool loc(#loc168)
          }) : (!cir.bool) -> !cir.bool loc(#loc168)
          cir.if %24 {
            %25 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc172)
            %26 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
            %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc174)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc174)
            %29 = cir.call @fopen(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc172)
            cir.store %29, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc293)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc179)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc180)
              %32 = cir.cmp(eq, %30, %31) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc295)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc182)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc183)
                cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc182)
              } loc(#loc296)
            } loc(#loc294)
            cir.scope {
              %30 = cir.const #cir.int<0> : !s32i loc(#loc186)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc186)
              cir.store %31, %13 : !u64i, !cir.ptr<!u64i> loc(#loc298)
              cir.for : cond {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc188)
                %33 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc189)
                %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc299)
                cir.condition(%35) loc(#loc299)
              } body {
                cir.scope {
                  cir.scope {
                    %32 = cir.const #cir.int<50> : !u64i loc(#loc302)
                    %33 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc195)
                    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc196)
                    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc196)
                    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
                    %37 = cir.const #cir.int<1> : !u64i loc(#loc303)
                    %38 = cir.const #cir.int<50> : !u64i loc(#loc304)
                    %39 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
                    %40 = cir.call @fwrite(%36, %37, %38, %39) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc195)
                    %41 = cir.cmp(ne, %32, %40) : !u64i, !cir.bool loc(#loc305)
                    cir.if %41 {
                      %42 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc203)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc204)
                      cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
                    } loc(#loc306)
                  } loc(#loc301)
                } loc(#loc300)
                cir.yield loc(#loc185)
              } step {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc205)
                %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc206)
                cir.store %33, %13 : !u64i, !cir.ptr<!u64i> loc(#loc307)
                cir.yield loc(#loc297)
              } loc(#loc297)
            } loc(#loc297)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
              %31 = cir.cast(ptr_to_bool, %30 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc209)
              cir.if %31 {
                %32 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc211)
                %33 = cir.call @fclose(%32) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc212)
              } loc(#loc309)
            } loc(#loc308)
          } loc(#loc292)
        } loc(#loc289)
      } loc(#loc285)
    } loc(#loc283)
    cir.return loc(#loc143)
  } loc(#loc278)
  cir.func @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_33L7goodG2BEv() : () -> () loc(#loc215)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_33L7goodB2GEv() : () -> () loc(#loc216)
    cir.return loc(#loc214)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":40:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":41:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":27:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":61:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":29:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":29:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":30:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":30:21)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":32:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":32:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":32:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":34:13)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":34:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":35:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":60:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":36:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":36:21)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":37:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":59:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":38:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":38:24)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":39:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":39:27)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":40:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":41:21)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":41:27)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":41:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":41:41)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":42:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":45:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":42:17)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":42:26)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":43:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":44:17)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":44:22)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":54:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:22)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:18)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:25)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:37)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":49:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:17)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":53:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:21)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:36)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:41)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:58)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:69)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:72)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:87)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:90)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":50:95)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":51:17)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":52:21)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":52:26)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:45)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":48:44)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":55:13)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":58:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":55:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":56:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":57:24)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":57:17)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":68:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":102:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":70:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":70:9)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":71:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":71:21)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":73:14)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":73:13)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":73:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":75:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":75:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":76:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":101:5)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":77:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":77:21)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":78:9)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":100:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":79:13)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":79:24)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":80:13)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":80:27)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":81:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":81:36)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":82:21)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":82:27)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":82:37)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":82:13)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":82:41)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":83:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":86:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":83:17)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":83:26)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":84:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":85:17)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":85:22)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":95:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:22)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:18)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:25)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:37)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":90:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:17)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":94:17)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:21)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:36)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:41)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:48)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:58)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:69)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:72)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:87)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:90)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":91:95)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":92:17)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":93:21)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":93:26)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:45)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":89:44)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":96:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":99:13)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":96:17)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":97:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":98:24)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":98:17)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":118:36)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":105:1)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":138:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":107:5)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":107:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":108:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":108:21)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":110:14)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":110:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":110:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":112:13)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":112:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":113:5)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":137:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":114:9)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":114:21)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":115:9)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":136:9)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":116:13)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":116:24)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":117:13)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":117:27)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":118:13)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:13)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":135:13)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:17)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:25)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:27)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:30)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":120:39)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":121:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":122:25)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":122:31)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":122:41)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":122:17)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":122:45)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":123:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":126:17)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":123:21)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":123:30)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":124:17)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":125:21)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":125:26)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:17)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":130:17)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:26)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:22)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:29)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:41)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":128:17)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:21)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:108)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:25)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:40)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:45)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:52)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:62)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:73)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:76)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:91)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:94)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:99)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:102)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":129:107)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:49)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":127:48)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":131:17)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":134:17)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":131:21)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":132:17)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":133:28)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":133:21)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":140:1)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":144:1)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":142:5)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_33.cpp":143:5)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc4, #loc5])
#loc219 = loc(fused[#loc7, #loc8])
#loc220 = loc(fused[#loc9, #loc10])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc14, #loc15])
#loc223 = loc(fused[#loc16, #loc17])
#loc224 = loc(fused[#loc18, #loc19])
#loc225 = loc(fused[#loc22, #loc20])
#loc226 = loc(fused[#loc24, #loc23])
#loc227 = loc(fused[#loc25, #loc26])
#loc228 = loc(fused[#loc27, #loc28])
#loc229 = loc(fused[#loc29, #loc30])
#loc230 = loc(fused[#loc31, #loc32])
#loc231 = loc(fused[#loc33, #loc34])
#loc232 = loc(fused[#loc35, #loc3])
#loc233 = loc(fused[#loc38, #loc39])
#loc234 = loc(fused[#loc40, #loc41])
#loc235 = loc(fused[#loc42, #loc43])
#loc236 = loc(fused[#loc44, #loc41])
#loc237 = loc(fused[#loc47, #loc48])
#loc238 = loc(fused[#loc50, #loc49])
#loc239 = loc(fused[#loc51, #loc52])
#loc240 = loc(fused[#loc53, #loc48])
#loc241 = loc(fused[#loc54, #loc55])
#loc242 = loc(fused[#loc56, #loc57])
#loc243 = loc(fused[#loc59, #loc60])
#loc244 = loc(fused[#loc61, #loc62])
#loc245 = loc(fused[#loc56, #loc64])
#loc246 = loc(fused[#loc65, #loc55])
#loc247 = loc(fused[#loc69, #loc68])
#loc248 = loc(fused[#loc70, #loc71])
#loc249 = loc(fused[#loc73, #loc71])
#loc250 = loc(fused[#loc76, #loc77])
#loc251 = loc(fused[#loc78, #loc79])
#loc252 = loc(fused[#loc80, #loc81])
#loc253 = loc(fused[#loc84, #loc82])
#loc254 = loc(fused[#loc86, #loc85])
#loc255 = loc(fused[#loc87, #loc88])
#loc256 = loc(fused[#loc89, #loc90])
#loc257 = loc(fused[#loc91, #loc92])
#loc258 = loc(fused[#loc93, #loc94])
#loc259 = loc(fused[#loc95, #loc96])
#loc260 = loc(fused[#loc97, #loc98])
#loc261 = loc(fused[#loc102, #loc103])
#loc262 = loc(fused[#loc104, #loc105])
#loc263 = loc(fused[#loc106, #loc107])
#loc264 = loc(fused[#loc108, #loc105])
#loc265 = loc(fused[#loc111, #loc112])
#loc266 = loc(fused[#loc114, #loc113])
#loc267 = loc(fused[#loc115, #loc116])
#loc268 = loc(fused[#loc117, #loc112])
#loc269 = loc(fused[#loc118, #loc119])
#loc270 = loc(fused[#loc120, #loc121])
#loc271 = loc(fused[#loc124, #loc125])
#loc272 = loc(fused[#loc126, #loc127])
#loc273 = loc(fused[#loc120, #loc129])
#loc274 = loc(fused[#loc130, #loc119])
#loc275 = loc(fused[#loc134, #loc133])
#loc276 = loc(fused[#loc135, #loc136])
#loc277 = loc(fused[#loc138, #loc136])
#loc278 = loc(fused[#loc142, #loc143])
#loc279 = loc(fused[#loc144, #loc145])
#loc280 = loc(fused[#loc146, #loc147])
#loc281 = loc(fused[#loc150, #loc148])
#loc282 = loc(fused[#loc152, #loc151])
#loc283 = loc(fused[#loc153, #loc154])
#loc284 = loc(fused[#loc155, #loc156])
#loc285 = loc(fused[#loc157, #loc158])
#loc286 = loc(fused[#loc159, #loc160])
#loc287 = loc(fused[#loc161, #loc162])
#loc288 = loc(fused[#loc163, #loc141])
#loc289 = loc(fused[#loc164, #loc165])
#loc290 = loc(fused[#loc166, #loc167])
#loc291 = loc(fused[#loc169, #loc170])
#loc292 = loc(fused[#loc171, #loc165])
#loc293 = loc(fused[#loc175, #loc176])
#loc294 = loc(fused[#loc177, #loc178])
#loc295 = loc(fused[#loc179, #loc180])
#loc296 = loc(fused[#loc181, #loc178])
#loc297 = loc(fused[#loc184, #loc185])
#loc298 = loc(fused[#loc187, #loc186])
#loc299 = loc(fused[#loc188, #loc189])
#loc300 = loc(fused[#loc190, #loc185])
#loc301 = loc(fused[#loc191, #loc192])
#loc302 = loc(fused[#loc193, #loc194])
#loc303 = loc(fused[#loc197, #loc198])
#loc304 = loc(fused[#loc199, #loc200])
#loc305 = loc(fused[#loc193, #loc202])
#loc306 = loc(fused[#loc203, #loc192])
#loc307 = loc(fused[#loc206, #loc205])
#loc308 = loc(fused[#loc207, #loc208])
#loc309 = loc(fused[#loc210, #loc208])
#loc310 = loc(fused[#loc213, #loc214])
