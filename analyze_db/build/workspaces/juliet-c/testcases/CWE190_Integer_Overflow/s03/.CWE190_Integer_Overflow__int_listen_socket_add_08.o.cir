!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:48)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:48)
#loc426 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc523)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc524)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc525)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc527)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc528)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @close(!s32i) -> !s32i loc(#loc530)
  cir.func private @printIntLine(!s32i) loc(#loc531)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_add_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc533)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc534)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc535)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc536)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc537)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc538)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc539)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc540)
    cir.br ^bb1 loc(#loc541)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc542)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc39)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %10 ^bb2, ^bb48 loc(#loc543)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc544)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc26)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc28)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.br ^bb4 loc(#loc545)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc545)
  ^bb5:  // pred: ^bb36
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb6, ^bb37 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc546)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc51)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb8 loc(#loc548)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc58)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc550)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc60)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc551)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc552)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc553)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc68)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc554)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc71)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc555)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc75)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc75)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc556)
    cir.br ^bb12 loc(#loc557)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc558)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc559)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc559)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc87)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc88)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc560)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc561)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc90)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc81)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc562)
  ^bb16:  // pred: ^bb15
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc96)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %52 ^bb17, ^bb18 loc(#loc564)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc98)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc92)
  ^bb19:  // pred: ^bb18
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc100)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc101)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc102)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.br ^bb20 loc(#loc566)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc108)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %60 ^bb21, ^bb22 loc(#loc568)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc110)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc106)
  ^bb23:  // pred: ^bb22
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc113)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc113)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc113)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc113)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc113)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc113)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc114)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc569)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc116)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc570)
    cir.br ^bb24 loc(#loc571)
  ^bb24:  // pred: ^bb23
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc122)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc123)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc123)
    cir.br ^bb31(%81 : !cir.bool) loc(#loc123)
  ^bb26:  // pred: ^bb24
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc573)
    cir.brcond %84 ^bb27, ^bb28 loc(#loc123)
  ^bb27:  // pred: ^bb26
    %85 = cir.const #true loc(#loc123)
    cir.br ^bb29(%85 : !cir.bool) loc(#loc123)
  ^bb28:  // pred: ^bb26
    %86 = cir.const #false loc(#loc123)
    cir.br ^bb29(%86 : !cir.bool) loc(#loc123)
  ^bb29(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc123)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%87 : !cir.bool) loc(#loc123)
  ^bb31(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc123)
  ^bb32:  // pred: ^bb31
    cir.brcond %88 ^bb33, ^bb34 loc(#loc574)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc127)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc120)
  ^bb35:  // pred: ^bb34
    %89 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc128)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc575)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc132)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.br ^bb36 loc(#loc48)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc45)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc45)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc577)
  ^bb39:  // pred: ^bb38
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc138)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc578)
    cir.brcond %99 ^bb40, ^bb41 loc(#loc579)
  ^bb40:  // pred: ^bb39
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc141)
    cir.br ^bb41 loc(#loc136)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc136)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc580)
  ^bb43:  // pred: ^bb42
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %104 = cir.unary(minus, %103) nsw : !s32i, !s32i loc(#loc145)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc581)
    cir.brcond %105 ^bb44, ^bb45 loc(#loc582)
  ^bb44:  // pred: ^bb43
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc148)
    cir.br ^bb45 loc(#loc143)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc143)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc43)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc38)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc38)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc583)
  ^bb50:  // pred: ^bb49
    %108 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc584)
    %109 = cir.call %108() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc151)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc151)
    cir.brcond %110 ^bb51, ^bb54 loc(#loc585)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc586)
  ^bb52:  // pred: ^bb51
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %112 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %113 = cir.binop(add, %111, %112) nsw : !s32i loc(#loc156)
    cir.store %113, %5 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc158)
    cir.br ^bb53 loc(#loc155)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc150)
  ^bb54:  // 2 preds: ^bb50, ^bb53
    cir.br ^bb55 loc(#loc150)
  ^bb55:  // pred: ^bb54
    cir.return loc(#loc20)
  } loc(#loc532)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_add_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc588)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc589)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc590)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc591)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    cir.return loc(#loc160)
  } loc(#loc587)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc171)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc593)
    cir.return %2 : !s32i loc(#loc593)
  } loc(#loc592)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc594)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc176)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc596)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc597)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc598)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc599)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc600)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc601)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc602)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.br ^bb1 loc(#loc604)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc605)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc197)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %10 ^bb2, ^bb48 loc(#loc606)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc607)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc184)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc186)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    cir.br ^bb4 loc(#loc608)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc608)
  ^bb5:  // pred: ^bb36
    %15 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %16 ^bb6, ^bb37 loc(#loc204)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc609)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<2> : !s32i loc(#loc207)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc209)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc210)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc610)
    cir.br ^bb8 loc(#loc611)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc216)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc612)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc613)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc218)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc214)
  ^bb11:  // pred: ^bb10
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc614)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc615)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc616)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc226)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc226)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc617)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc228)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc618)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc230)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc230)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc231)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc619)
    cir.br ^bb12 loc(#loc620)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc621)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc622)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc622)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc241)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc242)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc623)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc624)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc244)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc235)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc625)
  ^bb16:  // pred: ^bb15
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc248)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc249)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc250)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc626)
    cir.brcond %52 ^bb17, ^bb18 loc(#loc627)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc252)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc246)
  ^bb19:  // pred: ^bb18
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc254)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc255)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc256)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc628)
    cir.br ^bb20 loc(#loc629)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc262)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc630)
    cir.brcond %60 ^bb21, ^bb22 loc(#loc631)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc264)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc260)
  ^bb23:  // pred: ^bb22
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc266)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc267)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc267)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc267)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc267)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc267)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc267)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc267)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc268)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc632)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc270)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc270)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc633)
    cir.br ^bb24 loc(#loc634)
  ^bb24:  // pred: ^bb23
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc276)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc635)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc277)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc277)
    cir.br ^bb31(%81 : !cir.bool) loc(#loc277)
  ^bb26:  // pred: ^bb24
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc279)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc636)
    cir.brcond %84 ^bb27, ^bb28 loc(#loc277)
  ^bb27:  // pred: ^bb26
    %85 = cir.const #true loc(#loc277)
    cir.br ^bb29(%85 : !cir.bool) loc(#loc277)
  ^bb28:  // pred: ^bb26
    %86 = cir.const #false loc(#loc277)
    cir.br ^bb29(%86 : !cir.bool) loc(#loc277)
  ^bb29(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc277)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%87 : !cir.bool) loc(#loc277)
  ^bb31(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc277)
  ^bb32:  // pred: ^bb31
    cir.brcond %88 ^bb33, ^bb34 loc(#loc637)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc281)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc274)
  ^bb35:  // pred: ^bb34
    %89 = cir.const #cir.int<0> : !s32i loc(#loc282)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc282)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc284)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc284)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc638)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc285)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc286)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    cir.br ^bb36 loc(#loc206)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc203)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc203)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc640)
  ^bb39:  // pred: ^bb38
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc292)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc292)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc641)
    cir.brcond %99 ^bb40, ^bb41 loc(#loc642)
  ^bb40:  // pred: ^bb39
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc295)
    cir.br ^bb41 loc(#loc290)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc290)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc643)
  ^bb43:  // pred: ^bb42
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc299)
    %104 = cir.unary(minus, %103) nsw : !s32i, !s32i loc(#loc299)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc644)
    cir.brcond %105 ^bb44, ^bb45 loc(#loc645)
  ^bb44:  // pred: ^bb43
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc302)
    cir.br ^bb45 loc(#loc297)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc297)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc201)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc196)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc196)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc646)
  ^bb50:  // pred: ^bb49
    %108 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc647)
    %109 = cir.call %108() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc305)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc305)
    cir.brcond %110 ^bb51, ^bb52 loc(#loc648)
  ^bb51:  // pred: ^bb50
    %111 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc175)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc310)
    cir.br ^bb58 loc(#loc308)
  ^bb52:  // pred: ^bb50
    cir.br ^bb53 loc(#loc649)
  ^bb53:  // pred: ^bb52
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %114 = cir.const #cir.int<2147483647> : !s32i loc(#loc314)
    %115 = cir.cmp(lt, %113, %114) : !s32i, !cir.bool loc(#loc650)
    cir.brcond %115 ^bb54, ^bb55 loc(#loc651)
  ^bb54:  // pred: ^bb53
    %116 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %117 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %118 = cir.binop(add, %116, %117) nsw : !s32i loc(#loc318)
    cir.store %118, %5 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    %119 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    cir.call @printIntLine(%119) : (!s32i) -> () loc(#loc320)
    cir.br ^bb56 loc(#loc316)
  ^bb55:  // pred: ^bb53
    %120 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc176)
    %121 = cir.cast(array_to_ptrdecay, %120 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%121) : (!cir.ptr<!s8i>) -> () loc(#loc321)
    cir.br ^bb56 loc(#loc312)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc312)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc304)
  ^bb58:  // 2 preds: ^bb51, ^bb57
    cir.br ^bb59 loc(#loc304)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc178)
  } loc(#loc595)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc324)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc653)
    cir.return %2 : !s32i loc(#loc653)
  } loc(#loc652)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc655)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc656)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc657)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc658)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc659)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc660)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc661)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc342)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.br ^bb1 loc(#loc663)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc664)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc346)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc346)
    cir.brcond %10 ^bb2, ^bb48 loc(#loc665)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc666)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc333)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc335)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc658)
    cir.br ^bb4 loc(#loc667)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc667)
  ^bb5:  // pred: ^bb36
    %15 = cir.const #cir.int<0> : !s32i loc(#loc353)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc353)
    cir.brcond %16 ^bb6, ^bb37 loc(#loc353)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc668)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<2> : !s32i loc(#loc356)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc357)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc358)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc359)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc669)
    cir.br ^bb8 loc(#loc670)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc364)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc365)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc671)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc672)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc367)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc363)
  ^bb11:  // pred: ^bb10
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc673)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc370)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc674)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc675)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc375)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc375)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc676)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc377)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc377)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc677)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc379)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc379)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc380)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc678)
    cir.br ^bb12 loc(#loc679)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc680)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc681)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc681)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc390)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc391)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc391)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc683)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc393)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc384)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc684)
  ^bb16:  // pred: ^bb15
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc397)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc398)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc399)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc399)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc685)
    cir.brcond %52 ^bb17, ^bb18 loc(#loc686)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc401)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc395)
  ^bb19:  // pred: ^bb18
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc402)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc403)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc404)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc405)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc687)
    cir.br ^bb20 loc(#loc688)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc411)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc689)
    cir.brcond %60 ^bb21, ^bb22 loc(#loc690)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc413)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc409)
  ^bb23:  // pred: ^bb22
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc414)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc415)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc415)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc416)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc416)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc416)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc416)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc416)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc416)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc416)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc417)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc417)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc691)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc418)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc419)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc419)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    cir.br ^bb24 loc(#loc693)
  ^bb24:  // pred: ^bb23
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc425)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc425)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc694)
    cir.brcond %80 ^bb25, ^bb26 loc(#loc426)
  ^bb25:  // pred: ^bb24
    %81 = cir.const #true loc(#loc426)
    cir.br ^bb31(%81 : !cir.bool) loc(#loc426)
  ^bb26:  // pred: ^bb24
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc428)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc695)
    cir.brcond %84 ^bb27, ^bb28 loc(#loc426)
  ^bb27:  // pred: ^bb26
    %85 = cir.const #true loc(#loc426)
    cir.br ^bb29(%85 : !cir.bool) loc(#loc426)
  ^bb28:  // pred: ^bb26
    %86 = cir.const #false loc(#loc426)
    cir.br ^bb29(%86 : !cir.bool) loc(#loc426)
  ^bb29(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc426)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%87 : !cir.bool) loc(#loc426)
  ^bb31(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc426)
  ^bb32:  // pred: ^bb31
    cir.brcond %88 ^bb33, ^bb34 loc(#loc696)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc430)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc423)
  ^bb35:  // pred: ^bb34
    %89 = cir.const #cir.int<0> : !s32i loc(#loc431)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc431)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc433)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc433)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc697)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc434)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc435)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc698)
    cir.br ^bb36 loc(#loc355)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc352)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc352)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc699)
  ^bb39:  // pred: ^bb38
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc440)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc441)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc441)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc700)
    cir.brcond %99 ^bb40, ^bb41 loc(#loc701)
  ^bb40:  // pred: ^bb39
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc443)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc444)
    cir.br ^bb41 loc(#loc439)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc439)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc702)
  ^bb43:  // pred: ^bb42
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc447)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc448)
    %104 = cir.unary(minus, %103) nsw : !s32i, !s32i loc(#loc448)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc703)
    cir.brcond %105 ^bb44, ^bb45 loc(#loc704)
  ^bb44:  // pred: ^bb43
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc451)
    cir.br ^bb45 loc(#loc446)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc446)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc350)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc345)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc345)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc705)
  ^bb50:  // pred: ^bb49
    %108 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc706)
    %109 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc454)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc454)
    cir.brcond %110 ^bb51, ^bb57 loc(#loc707)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc708)
  ^bb52:  // pred: ^bb51
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc459)
    %112 = cir.const #cir.int<2147483647> : !s32i loc(#loc460)
    %113 = cir.cmp(lt, %111, %112) : !s32i, !cir.bool loc(#loc709)
    cir.brcond %113 ^bb53, ^bb54 loc(#loc710)
  ^bb53:  // pred: ^bb52
    %114 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc464)
    %115 = cir.const #cir.int<1> : !s32i loc(#loc339)
    %116 = cir.binop(add, %114, %115) nsw : !s32i loc(#loc464)
    cir.store %116, %5 : !s32i, !cir.ptr<!s32i> loc(#loc660)
    %117 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    cir.call @printIntLine(%117) : (!s32i) -> () loc(#loc466)
    cir.br ^bb55 loc(#loc462)
  ^bb54:  // pred: ^bb52
    %118 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc467)
    %119 = cir.cast(array_to_ptrdecay, %118 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc467)
    cir.call @printLine(%119) : (!cir.ptr<!s8i>) -> () loc(#loc468)
    cir.br ^bb55 loc(#loc458)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc458)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc453)
  ^bb57:  // 2 preds: ^bb50, ^bb56
    cir.br ^bb58 loc(#loc453)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc327)
  } loc(#loc654)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc712)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc713)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc475)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc714)
    cir.br ^bb1 loc(#loc715)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc716)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc479)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc479)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc717)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc484)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc484)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc485)
    cir.br ^bb4 loc(#loc482)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc486)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc718)
    cir.br ^bb4 loc(#loc478)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc478)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc719)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc720)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc490)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc490)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc721)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc722)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc495)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc472)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc495)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc712)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc496)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc497)
    cir.br ^bb9 loc(#loc494)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc489)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc489)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc470)
  } loc(#loc711)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc724)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc725)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc504)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc726)
    cir.br ^bb1 loc(#loc727)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc728)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc508)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc508)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc729)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc511)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc730)
    cir.br ^bb3 loc(#loc507)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc507)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc731)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc732)
    %8 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc515)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc515)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc733)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc734)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc520)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc501)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc520)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc724)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc521)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc522)
    cir.br ^bb8 loc(#loc519)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc514)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc514)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc499)
  } loc(#loc723)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":57:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":142:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":69:13)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":69:17)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":70:13)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":70:32)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":71:13)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":71:35)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":72:13)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":72:35)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":73:13)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":73:45)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":138:13)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":138:33)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":59:5)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":59:9)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":61:12)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":61:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":62:5)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":133:5)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":62:8)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":62:26)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":63:5)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":64:9)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":132:9)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":74:13)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":117:21)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":117:20)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":75:13)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":116:13)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:39)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:48)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:61)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:32)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:17)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":84:72)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":85:17)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":88:17)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":85:21)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":85:37)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":86:17)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":87:21)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:24)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:25)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:34)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:37)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:51)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:17)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":89:52)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":90:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":90:17)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":91:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":91:17)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":92:42)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":92:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":92:17)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":92:50)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:17)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":96:17)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:26)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:58)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:59)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:68)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:82)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:21)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":93:88)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":94:17)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":95:21)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":97:17)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":100:17)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":97:28)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":97:42)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":97:21)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":97:61)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":98:17)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":99:21)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:39)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:53)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:59)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:32)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:17)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":101:63)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":102:17)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":105:17)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":102:21)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":102:37)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":103:17)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":104:21)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:35)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:49)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:62)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:80)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:83)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:30)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:17)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":107:84)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:17)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":111:17)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:21)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:35)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:51)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":108:65)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":109:17)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":110:21)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":113:43)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":113:29)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":113:17)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":115:29)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":115:24)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":115:17)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":115:40)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":118:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":121:13)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":118:17)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":118:33)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":119:13)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":120:30)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":120:17)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":122:13)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":125:13)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":122:17)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":122:33)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":123:13)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":124:30)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":124:17)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":134:5)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":141:5)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":134:8)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":134:26)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":135:5)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":136:9)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":140:9)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":138:26)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":139:26)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":139:13)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":386:1)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":392:1)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":388:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":388:14)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":389:5)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":389:14)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":390:5)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":390:14)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":391:5)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":391:14)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":45:1)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":48:1)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":47:12)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":47:5)
#loc173 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":229:19)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":241:23)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":149:1)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":244:1)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":161:13)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":161:17)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":162:13)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":162:32)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":163:13)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":163:35)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":164:13)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":164:35)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":165:13)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":165:45)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":236:13)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":236:33)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":151:5)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":151:9)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":153:12)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":153:5)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":154:5)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":225:5)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":154:8)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":154:26)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":155:5)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":156:9)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":224:9)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":166:13)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":209:21)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":209:20)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":167:13)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":208:13)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:39)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:48)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:61)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:32)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:17)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":176:72)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":177:17)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":180:17)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":177:21)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":177:37)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":178:17)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":179:21)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:24)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:25)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:34)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:37)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:51)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:17)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":181:52)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":182:38)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":182:17)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":183:43)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":183:17)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":184:42)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":184:36)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":184:17)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":184:50)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:17)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":188:17)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:26)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:58)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:59)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:68)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:82)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:21)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":185:88)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":186:17)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":187:21)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":189:17)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":192:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":189:28)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":189:42)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":189:21)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":189:61)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":190:17)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":191:21)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:39)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:53)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:59)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:32)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":193:63)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":194:17)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":197:17)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":194:21)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":194:37)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":195:17)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":196:21)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:35)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:49)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:62)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:80)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:83)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:30)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:17)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":199:84)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:17)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":203:17)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:21)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:35)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:51)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":200:65)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":201:17)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":202:21)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":205:43)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":205:29)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":205:17)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":207:29)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":207:24)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":207:17)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":207:40)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":210:13)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":213:13)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":210:17)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":210:33)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":211:13)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":212:30)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":212:17)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":214:13)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":217:13)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":214:17)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":214:33)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":215:13)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":216:30)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":216:17)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":226:5)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":243:5)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":226:8)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":226:27)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":227:5)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":230:5)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":232:5)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":229:9)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":234:9)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":242:9)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":234:13)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":234:20)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":235:9)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":238:9)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":240:9)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":236:26)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":237:26)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":237:13)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":241:13)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":50:1)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":53:1)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":52:12)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":52:5)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":247:1)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":337:1)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":259:13)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":259:17)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":260:13)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":260:32)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":261:13)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":261:35)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":262:13)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":262:35)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":263:13)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":263:45)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":329:13)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":329:33)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":249:5)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":249:9)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":251:12)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":251:5)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":252:5)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":323:5)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":252:8)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":252:26)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":253:5)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":254:9)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":322:9)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":264:13)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":307:21)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":307:20)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":265:13)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":306:13)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:39)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:48)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:61)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:32)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:17)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":274:72)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":275:17)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":278:17)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":275:21)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":275:37)
#loc366 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":276:17)
#loc367 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":277:21)
#loc368 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:24)
#loc369 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:25)
#loc370 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:34)
#loc371 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:37)
#loc372 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:51)
#loc373 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:17)
#loc374 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":279:52)
#loc375 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":280:38)
#loc376 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":280:17)
#loc377 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":281:43)
#loc378 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":281:17)
#loc379 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":282:42)
#loc380 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":282:36)
#loc381 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":282:17)
#loc382 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":282:50)
#loc383 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:17)
#loc384 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":286:17)
#loc385 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:26)
#loc386 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:58)
#loc387 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:59)
#loc388 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:68)
#loc389 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:82)
#loc390 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:21)
#loc391 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":283:88)
#loc392 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":284:17)
#loc393 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":285:21)
#loc394 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":287:17)
#loc395 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":290:17)
#loc396 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":287:28)
#loc397 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":287:42)
#loc398 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":287:21)
#loc399 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":287:61)
#loc400 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":288:17)
#loc401 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":289:21)
#loc402 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:39)
#loc403 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:53)
#loc404 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:59)
#loc405 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:32)
#loc406 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:17)
#loc407 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":291:63)
#loc408 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":292:17)
#loc409 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":295:17)
#loc410 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":292:21)
#loc411 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":292:37)
#loc412 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":293:17)
#loc413 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":294:21)
#loc414 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:35)
#loc415 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:49)
#loc416 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:62)
#loc417 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:80)
#loc418 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:83)
#loc419 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:30)
#loc420 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:17)
#loc421 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":297:84)
#loc422 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:17)
#loc423 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":301:17)
#loc424 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:21)
#loc425 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:35)
#loc427 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:51)
#loc428 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":298:65)
#loc429 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":299:17)
#loc430 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":300:21)
#loc431 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":303:43)
#loc432 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":303:29)
#loc433 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":303:17)
#loc434 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":305:29)
#loc435 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":305:24)
#loc436 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":305:17)
#loc437 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":305:40)
#loc438 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":308:13)
#loc439 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":311:13)
#loc440 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":308:17)
#loc441 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":308:33)
#loc442 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":309:13)
#loc443 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":310:30)
#loc444 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":310:17)
#loc445 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":312:13)
#loc446 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":315:13)
#loc447 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":312:17)
#loc448 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":312:33)
#loc449 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":313:13)
#loc450 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":314:30)
#loc451 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":314:17)
#loc452 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":324:5)
#loc453 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":336:5)
#loc454 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":324:8)
#loc455 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":324:26)
#loc456 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":325:5)
#loc457 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":327:9)
#loc458 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":335:9)
#loc459 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":327:13)
#loc460 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":327:20)
#loc461 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":328:9)
#loc462 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":331:9)
#loc463 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":333:9)
#loc464 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":329:26)
#loc465 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":330:26)
#loc466 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":330:13)
#loc467 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":334:23)
#loc468 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":334:13)
#loc469 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":340:1)
#loc470 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":363:1)
#loc471 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":359:13)
#loc472 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":359:33)
#loc473 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":342:5)
#loc474 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":342:9)
#loc475 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":344:12)
#loc476 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":344:5)
#loc477 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":345:5)
#loc478 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":354:5)
#loc479 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":345:8)
#loc480 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":345:27)
#loc481 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":346:5)
#loc482 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":349:5)
#loc483 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":351:5)
#loc484 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":348:19)
#loc485 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":348:9)
#loc486 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":353:16)
#loc487 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":353:9)
#loc488 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":355:5)
#loc489 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":362:5)
#loc490 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":355:8)
#loc491 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":355:26)
#loc492 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":356:5)
#loc493 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":357:9)
#loc494 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":361:9)
#loc495 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":359:26)
#loc496 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":360:26)
#loc497 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":360:13)
#loc498 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":366:1)
#loc499 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":384:1)
#loc500 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":380:13)
#loc501 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":380:33)
#loc502 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":368:5)
#loc503 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":368:9)
#loc504 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":370:12)
#loc505 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":370:5)
#loc506 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":371:5)
#loc507 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":375:5)
#loc508 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":371:8)
#loc509 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":371:26)
#loc510 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":372:5)
#loc511 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":374:16)
#loc512 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":374:9)
#loc513 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":376:5)
#loc514 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":383:5)
#loc515 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":376:8)
#loc516 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":376:26)
#loc517 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":377:5)
#loc518 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":378:9)
#loc519 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":382:9)
#loc520 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":380:26)
#loc521 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":381:26)
#loc522 = loc("CWE190_Integer_Overflow__int_listen_socket_add_08.c":381:13)
#loc523 = loc(fused[#loc1, #loc2])
#loc524 = loc(fused[#loc3, #loc4])
#loc525 = loc(fused[#loc5, #loc6])
#loc526 = loc(fused[#loc7, #loc8])
#loc527 = loc(fused[#loc9, #loc10])
#loc528 = loc(fused[#loc11, #loc12])
#loc529 = loc(fused[#loc13, #loc14])
#loc530 = loc(fused[#loc15, #loc16])
#loc531 = loc(fused[#loc17, #loc18])
#loc532 = loc(fused[#loc19, #loc20])
#loc533 = loc(fused[#loc21, #loc22])
#loc534 = loc(fused[#loc23, #loc24])
#loc535 = loc(fused[#loc25, #loc26])
#loc536 = loc(fused[#loc27, #loc28])
#loc537 = loc(fused[#loc29, #loc30])
#loc538 = loc(fused[#loc31, #loc32])
#loc539 = loc(fused[#loc33, #loc34])
#loc540 = loc(fused[#loc36, #loc35])
#loc541 = loc(fused[#loc37, #loc38])
#loc542 = loc(fused[#loc39, #loc40])
#loc543 = loc(fused[#loc41, #loc38])
#loc544 = loc(fused[#loc42, #loc43])
#loc545 = loc(fused[#loc44, #loc45])
#loc546 = loc(fused[#loc47, #loc48])
#loc547 = loc(fused[#loc53, #loc54])
#loc548 = loc(fused[#loc55, #loc56])
#loc549 = loc(fused[#loc57, #loc58])
#loc550 = loc(fused[#loc59, #loc56])
#loc551 = loc(fused[#loc61, #loc62])
#loc552 = loc(fused[#loc64, #loc65])
#loc553 = loc(fused[#loc66, #loc67])
#loc554 = loc(fused[#loc70, #loc68])
#loc555 = loc(fused[#loc74, #loc71])
#loc556 = loc(fused[#loc78, #loc79])
#loc557 = loc(fused[#loc80, #loc81])
#loc558 = loc(fused[#loc83, #loc84])
#loc559 = loc(fused[#loc85, #loc86])
#loc560 = loc(fused[#loc87, #loc88])
#loc561 = loc(fused[#loc89, #loc81])
#loc562 = loc(fused[#loc91, #loc92])
#loc563 = loc(fused[#loc95, #loc96])
#loc564 = loc(fused[#loc97, #loc92])
#loc565 = loc(fused[#loc103, #loc104])
#loc566 = loc(fused[#loc105, #loc106])
#loc567 = loc(fused[#loc107, #loc108])
#loc568 = loc(fused[#loc109, #loc106])
#loc569 = loc(fused[#loc113, #loc114])
#loc570 = loc(fused[#loc117, #loc118])
#loc571 = loc(fused[#loc119, #loc120])
#loc572 = loc(fused[#loc121, #loc122])
#loc573 = loc(fused[#loc124, #loc125])
#loc574 = loc(fused[#loc126, #loc120])
#loc575 = loc(fused[#loc130, #loc128])
#loc576 = loc(fused[#loc133, #loc134])
#loc577 = loc(fused[#loc135, #loc136])
#loc578 = loc(fused[#loc137, #loc138])
#loc579 = loc(fused[#loc139, #loc136])
#loc580 = loc(fused[#loc142, #loc143])
#loc581 = loc(fused[#loc144, #loc145])
#loc582 = loc(fused[#loc146, #loc143])
#loc583 = loc(fused[#loc149, #loc150])
#loc584 = loc(fused[#loc151, #loc152])
#loc585 = loc(fused[#loc153, #loc150])
#loc586 = loc(fused[#loc154, #loc155])
#loc587 = loc(fused[#loc159, #loc160])
#loc588 = loc(fused[#loc161, #loc162])
#loc589 = loc(fused[#loc163, #loc164])
#loc590 = loc(fused[#loc165, #loc166])
#loc591 = loc(fused[#loc167, #loc168])
#loc592 = loc(fused[#loc169, #loc170])
#loc593 = loc(fused[#loc172, #loc171])
#loc594 = loc(fused[#loc173, #loc174])
#loc595 = loc(fused[#loc177, #loc178])
#loc596 = loc(fused[#loc179, #loc180])
#loc597 = loc(fused[#loc181, #loc182])
#loc598 = loc(fused[#loc183, #loc184])
#loc599 = loc(fused[#loc185, #loc186])
#loc600 = loc(fused[#loc187, #loc188])
#loc601 = loc(fused[#loc189, #loc190])
#loc602 = loc(fused[#loc191, #loc192])
#loc603 = loc(fused[#loc194, #loc193])
#loc604 = loc(fused[#loc195, #loc196])
#loc605 = loc(fused[#loc197, #loc198])
#loc606 = loc(fused[#loc199, #loc196])
#loc607 = loc(fused[#loc200, #loc201])
#loc608 = loc(fused[#loc202, #loc203])
#loc609 = loc(fused[#loc205, #loc206])
#loc610 = loc(fused[#loc211, #loc212])
#loc611 = loc(fused[#loc213, #loc214])
#loc612 = loc(fused[#loc215, #loc216])
#loc613 = loc(fused[#loc217, #loc214])
#loc614 = loc(fused[#loc219, #loc220])
#loc615 = loc(fused[#loc222, #loc223])
#loc616 = loc(fused[#loc224, #loc225])
#loc617 = loc(fused[#loc227, #loc226])
#loc618 = loc(fused[#loc229, #loc228])
#loc619 = loc(fused[#loc232, #loc233])
#loc620 = loc(fused[#loc234, #loc235])
#loc621 = loc(fused[#loc237, #loc238])
#loc622 = loc(fused[#loc239, #loc240])
#loc623 = loc(fused[#loc241, #loc242])
#loc624 = loc(fused[#loc243, #loc235])
#loc625 = loc(fused[#loc245, #loc246])
#loc626 = loc(fused[#loc249, #loc250])
#loc627 = loc(fused[#loc251, #loc246])
#loc628 = loc(fused[#loc257, #loc258])
#loc629 = loc(fused[#loc259, #loc260])
#loc630 = loc(fused[#loc261, #loc262])
#loc631 = loc(fused[#loc263, #loc260])
#loc632 = loc(fused[#loc267, #loc268])
#loc633 = loc(fused[#loc271, #loc272])
#loc634 = loc(fused[#loc273, #loc274])
#loc635 = loc(fused[#loc275, #loc276])
#loc636 = loc(fused[#loc278, #loc279])
#loc637 = loc(fused[#loc280, #loc274])
#loc638 = loc(fused[#loc284, #loc282])
#loc639 = loc(fused[#loc287, #loc288])
#loc640 = loc(fused[#loc289, #loc290])
#loc641 = loc(fused[#loc291, #loc292])
#loc642 = loc(fused[#loc293, #loc290])
#loc643 = loc(fused[#loc296, #loc297])
#loc644 = loc(fused[#loc298, #loc299])
#loc645 = loc(fused[#loc300, #loc297])
#loc646 = loc(fused[#loc303, #loc304])
#loc647 = loc(fused[#loc305, #loc306])
#loc648 = loc(fused[#loc307, #loc308, #loc309, #loc304])
#loc649 = loc(fused[#loc311, #loc312])
#loc650 = loc(fused[#loc313, #loc314])
#loc651 = loc(fused[#loc315, #loc316, #loc317, #loc312])
#loc652 = loc(fused[#loc322, #loc323])
#loc653 = loc(fused[#loc325, #loc324])
#loc654 = loc(fused[#loc326, #loc327])
#loc655 = loc(fused[#loc328, #loc329])
#loc656 = loc(fused[#loc330, #loc331])
#loc657 = loc(fused[#loc332, #loc333])
#loc658 = loc(fused[#loc334, #loc335])
#loc659 = loc(fused[#loc336, #loc337])
#loc660 = loc(fused[#loc338, #loc339])
#loc661 = loc(fused[#loc340, #loc341])
#loc662 = loc(fused[#loc343, #loc342])
#loc663 = loc(fused[#loc344, #loc345])
#loc664 = loc(fused[#loc346, #loc347])
#loc665 = loc(fused[#loc348, #loc345])
#loc666 = loc(fused[#loc349, #loc350])
#loc667 = loc(fused[#loc351, #loc352])
#loc668 = loc(fused[#loc354, #loc355])
#loc669 = loc(fused[#loc360, #loc361])
#loc670 = loc(fused[#loc362, #loc363])
#loc671 = loc(fused[#loc364, #loc365])
#loc672 = loc(fused[#loc366, #loc363])
#loc673 = loc(fused[#loc368, #loc369])
#loc674 = loc(fused[#loc371, #loc372])
#loc675 = loc(fused[#loc373, #loc374])
#loc676 = loc(fused[#loc376, #loc375])
#loc677 = loc(fused[#loc378, #loc377])
#loc678 = loc(fused[#loc381, #loc382])
#loc679 = loc(fused[#loc383, #loc384])
#loc680 = loc(fused[#loc386, #loc387])
#loc681 = loc(fused[#loc388, #loc389])
#loc682 = loc(fused[#loc390, #loc391])
#loc683 = loc(fused[#loc392, #loc384])
#loc684 = loc(fused[#loc394, #loc395])
#loc685 = loc(fused[#loc398, #loc399])
#loc686 = loc(fused[#loc400, #loc395])
#loc687 = loc(fused[#loc406, #loc407])
#loc688 = loc(fused[#loc408, #loc409])
#loc689 = loc(fused[#loc410, #loc411])
#loc690 = loc(fused[#loc412, #loc409])
#loc691 = loc(fused[#loc416, #loc417])
#loc692 = loc(fused[#loc420, #loc421])
#loc693 = loc(fused[#loc422, #loc423])
#loc694 = loc(fused[#loc424, #loc425])
#loc695 = loc(fused[#loc427, #loc428])
#loc696 = loc(fused[#loc429, #loc423])
#loc697 = loc(fused[#loc433, #loc431])
#loc698 = loc(fused[#loc436, #loc437])
#loc699 = loc(fused[#loc438, #loc439])
#loc700 = loc(fused[#loc440, #loc441])
#loc701 = loc(fused[#loc442, #loc439])
#loc702 = loc(fused[#loc445, #loc446])
#loc703 = loc(fused[#loc447, #loc448])
#loc704 = loc(fused[#loc449, #loc446])
#loc705 = loc(fused[#loc452, #loc453])
#loc706 = loc(fused[#loc454, #loc455])
#loc707 = loc(fused[#loc456, #loc453])
#loc708 = loc(fused[#loc457, #loc458])
#loc709 = loc(fused[#loc459, #loc460])
#loc710 = loc(fused[#loc461, #loc462, #loc463, #loc458])
#loc711 = loc(fused[#loc469, #loc470])
#loc712 = loc(fused[#loc471, #loc472])
#loc713 = loc(fused[#loc473, #loc474])
#loc714 = loc(fused[#loc476, #loc475])
#loc715 = loc(fused[#loc477, #loc478])
#loc716 = loc(fused[#loc479, #loc480])
#loc717 = loc(fused[#loc481, #loc482, #loc483, #loc478])
#loc718 = loc(fused[#loc487, #loc486])
#loc719 = loc(fused[#loc488, #loc489])
#loc720 = loc(fused[#loc490, #loc491])
#loc721 = loc(fused[#loc492, #loc489])
#loc722 = loc(fused[#loc493, #loc494])
#loc723 = loc(fused[#loc498, #loc499])
#loc724 = loc(fused[#loc500, #loc501])
#loc725 = loc(fused[#loc502, #loc503])
#loc726 = loc(fused[#loc505, #loc504])
#loc727 = loc(fused[#loc506, #loc507])
#loc728 = loc(fused[#loc508, #loc509])
#loc729 = loc(fused[#loc510, #loc507])
#loc730 = loc(fused[#loc512, #loc511])
#loc731 = loc(fused[#loc513, #loc514])
#loc732 = loc(fused[#loc515, #loc516])
#loc733 = loc(fused[#loc517, #loc514])
#loc734 = loc(fused[#loc518, #loc519])
