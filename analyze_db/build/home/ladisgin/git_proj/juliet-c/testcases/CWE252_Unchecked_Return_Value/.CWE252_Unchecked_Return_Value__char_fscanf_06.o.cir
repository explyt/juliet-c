!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc80)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc83)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc86)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc87)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc88)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc83)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc83)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %13 = cir.call @__isoc99_fscanf(%9, %11, %12) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc82)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fscanf_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc95)
    cir.br ^bb1 loc(#loc96)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc97)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb10 loc(#loc43)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc94)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc94)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc50)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc52)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc52)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %15 = cir.call @__isoc99_fscanf(%11, %13, %14) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc50)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc54)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc101)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc102)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc31)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc47)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc33)
  } loc(#loc93)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc66)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc107)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc108)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc104)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc72)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc81)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc74)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc74)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %13 = cir.call @__isoc99_fscanf(%9, %11, %12) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc72)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc76)
    %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc111)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc64)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc58)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fscanf_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":39:27)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":29:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":42:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":36:13)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":36:36)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":37:13)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":37:27)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":31:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":41:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":31:8)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":31:27)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":32:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":33:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":40:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":39:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":39:20)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":39:37)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":91:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":95:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":93:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":93:11)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":94:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":94:11)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":54:19)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":66:27)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":49:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":70:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":61:13)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":61:36)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":62:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":62:27)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":51:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":69:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":51:8)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":51:27)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":52:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":55:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":57:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":54:9)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":58:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":68:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":67:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:17)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:24)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:31)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:41)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":64:50)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":65:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":66:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":73:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":89:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":80:13)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":80:36)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":81:13)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":81:27)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":75:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":88:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":75:8)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":75:27)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":76:5)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":77:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":87:9)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":86:13)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:17)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:24)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:31)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:41)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":83:50)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":84:13)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":85:27)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fscanf_06.c":85:17)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc14, #loc15])
#loc87 = loc(fused[#loc16, #loc13])
#loc88 = loc(fused[#loc17, #loc18])
#loc89 = loc(fused[#loc22, #loc23])
#loc90 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc26, #loc27])
#loc92 = loc(fused[#loc28, #loc29])
#loc93 = loc(fused[#loc32, #loc33])
#loc94 = loc(fused[#loc34, #loc35])
#loc95 = loc(fused[#loc36, #loc37])
#loc96 = loc(fused[#loc38, #loc39])
#loc97 = loc(fused[#loc40, #loc41])
#loc98 = loc(fused[#loc42, #loc43, #loc44, #loc39])
#loc99 = loc(fused[#loc46, #loc47])
#loc100 = loc(fused[#loc48, #loc49])
#loc101 = loc(fused[#loc50, #loc54])
#loc102 = loc(fused[#loc55, #loc49])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc67, #loc64])
#loc109 = loc(fused[#loc68, #loc69])
#loc110 = loc(fused[#loc70, #loc71])
#loc111 = loc(fused[#loc72, #loc76])
#loc112 = loc(fused[#loc77, #loc71])
