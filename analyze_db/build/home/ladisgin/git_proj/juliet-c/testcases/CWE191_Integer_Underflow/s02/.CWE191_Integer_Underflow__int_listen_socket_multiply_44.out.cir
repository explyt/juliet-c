!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":44:21)
#loc6 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":44:25)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":270:10)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":270:14)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":270:20)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":270:32)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":139:25)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":139:29)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":161:25)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":161:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc372 = loc(fused[#loc5, #loc6])
#loc439 = loc(fused[#loc177, #loc178])
#loc440 = loc(fused[#loc179, #loc180])
#loc445 = loc(fused[#loc197, #loc198])
#loc456 = loc(fused[#loc226, #loc227])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc370)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc372)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc374)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc376)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc14)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc15)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc376)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc17)
      } loc(#loc375)
    } loc(#loc373)
    cir.return loc(#loc4)
  } loc(#loc371)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc377)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc378)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc379)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc380)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc381)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc382)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc383)
  cir.func private @close(!s32i) -> !s32i loc(#loc384)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc386)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc387)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc387)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc390)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc391)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc392)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc393)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc394)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc49)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc392)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc51)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc51)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc393)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc56)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc57)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc58)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc59)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc396)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc65)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc398)
            cir.if %63 {
              cir.break loc(#loc67)
            } loc(#loc399)
          } loc(#loc397)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc400)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc401)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc402)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc75)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc403)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc78)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc404)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc82)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc82)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc83)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc405)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc407)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc408)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc408)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc94)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc95)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc409)
            cir.if %67 {
              cir.break loc(#loc97)
            } loc(#loc410)
          } loc(#loc406)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc101)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc102)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc103)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc412)
            cir.if %65 {
              cir.break loc(#loc105)
            } loc(#loc413)
          } loc(#loc411)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc107)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc108)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc414)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc115)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc416)
            cir.if %63 {
              cir.break loc(#loc117)
            } loc(#loc417)
          } loc(#loc415)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc120)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc120)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc120)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc120)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc120)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc120)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc120)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc121)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc121)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc418)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc123)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc419)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc129)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc421)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc130)
              cir.yield %65 : !cir.bool loc(#loc130)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc422)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc130)
                cir.yield %69 : !cir.bool loc(#loc130)
              }, false {
                %69 = cir.const #false loc(#loc130)
                cir.yield %69 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.yield %68 : !cir.bool loc(#loc130)
            }) : (!cir.bool) -> !cir.bool loc(#loc130)
            cir.if %64 {
              cir.break loc(#loc134)
            } loc(#loc423)
          } loc(#loc420)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc135)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc137)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc424)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc139)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
          cir.yield loc(#loc55)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc142)
          cir.condition(%16) loc(#loc142)
        } loc(#loc395)
      } loc(#loc395)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc146)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc146)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc427)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc149)
        } loc(#loc428)
      } loc(#loc426)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc153)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc430)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc156)
        } loc(#loc431)
      } loc(#loc429)
    } loc(#loc389)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc157)
    cir.return loc(#loc35)
  } loc(#loc385)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc433)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc434)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    cir.return loc(#loc160)
  } loc(#loc432)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc435)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc436)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc437)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc174)
  cir.func @main(%arg0: !s32i loc(fused[#loc177, #loc178]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc179, #loc180])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc440)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc181)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc182)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc183)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc183)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc184)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc171)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc441)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_44_good() : () -> () loc(#loc186)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc172)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc173)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc442)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_44_bad() : () -> () loc(#loc190)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc174)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc443)
    cir.return %17 : !s32i loc(#loc443)
  } loc(#loc438)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc197, #loc198])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc445)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc203)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc447)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc449)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc206)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc207)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc449)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc209)
      } loc(#loc448)
    } loc(#loc446)
    cir.return loc(#loc196)
  } loc(#loc444)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc451)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc452)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc215)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc452)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc216)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc219)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc221)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc221)
    cir.return loc(#loc211)
  } loc(#loc450)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc223)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc226, #loc227])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc456)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc232)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc458)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc237)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc237)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc237)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc237)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc238)
          %10 = cir.binop(div, %8, %9) : !s32i loc(#loc461)
          %11 = cir.cmp(gt, %4, %10) : !s32i, !cir.bool loc(#loc462)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc464)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc244)
            %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc245)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc464)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc247)
          } else {
            %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc223)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc223)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc248)
          } loc(#loc463)
        } loc(#loc460)
      } loc(#loc459)
    } loc(#loc457)
    cir.return loc(#loc225)
  } loc(#loc455)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc466)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc467)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc254)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc467)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc255)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc470)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc471)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc472)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc473)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc474)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc264)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc264)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc472)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc266)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc266)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc473)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc271)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc272)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc273)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc274)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc476)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc280)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc280)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc478)
            cir.if %63 {
              cir.break loc(#loc282)
            } loc(#loc479)
          } loc(#loc477)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc480)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc285)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc481)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc482)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc290)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc290)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc483)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc292)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc292)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc484)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc294)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc294)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc295)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc485)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc300)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc487)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc488)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc488)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc305)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc306)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc306)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc489)
            cir.if %67 {
              cir.break loc(#loc308)
            } loc(#loc490)
          } loc(#loc486)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc311)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc312)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc313)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc314)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc314)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc492)
            cir.if %65 {
              cir.break loc(#loc316)
            } loc(#loc493)
          } loc(#loc491)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc317)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc318)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc319)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc320)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc494)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc325)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc326)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc326)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc496)
            cir.if %63 {
              cir.break loc(#loc328)
            } loc(#loc497)
          } loc(#loc495)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc330)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc330)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc331)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc331)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc331)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc331)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc331)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc331)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc331)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc332)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc332)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc498)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc333)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc334)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc334)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc499)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc339)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc340)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc340)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc501)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc341)
              cir.yield %65 : !cir.bool loc(#loc341)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc343)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc502)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc341)
                cir.yield %69 : !cir.bool loc(#loc341)
              }, false {
                %69 = cir.const #false loc(#loc341)
                cir.yield %69 : !cir.bool loc(#loc341)
              }) : (!cir.bool) -> !cir.bool loc(#loc341)
              cir.yield %68 : !cir.bool loc(#loc341)
            }) : (!cir.bool) -> !cir.bool loc(#loc341)
            cir.if %64 {
              cir.break loc(#loc345)
            } loc(#loc503)
          } loc(#loc500)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc346)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc346)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc347)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc348)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc348)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc504)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc349)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc350)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
          cir.yield loc(#loc270)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc353)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc353)
          cir.condition(%16) loc(#loc353)
        } loc(#loc475)
      } loc(#loc475)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc356)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc357)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc357)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc507)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc359)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc360)
        } loc(#loc508)
      } loc(#loc506)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc363)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc364)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc364)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc510)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc366)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc367)
        } loc(#loc511)
      } loc(#loc509)
    } loc(#loc469)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc368)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc368)
    cir.return loc(#loc250)
  } loc(#loc465)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":44:1)
#loc4 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":52:1)
#loc7 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":45:1)
#loc8 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":46:5)
#loc9 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":51:5)
#loc10 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":46:8)
#loc11 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":46:15)
#loc12 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":47:5)
#loc13 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":49:9)
#loc14 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":49:29)
#loc15 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":49:22)
#loc16 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":50:22)
#loc17 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":50:9)
#loc18 = loc("/usr/include/sys/socket.h":102:1)
#loc19 = loc("/usr/include/sys/socket.h":102:62)
#loc20 = loc("/usr/include/netinet/in.h":404:1)
#loc21 = loc("/usr/include/netinet/in.h":405:40)
#loc22 = loc("/usr/include/sys/socket.h":112:1)
#loc23 = loc("/usr/include/sys/socket.h":113:6)
#loc24 = loc("/usr/include/sys/socket.h":296:1)
#loc25 = loc("/usr/include/sys/socket.h":296:39)
#loc26 = loc("/usr/include/sys/socket.h":306:1)
#loc27 = loc("/usr/include/sys/socket.h":307:38)
#loc28 = loc("/usr/include/sys/socket.h":145:1)
#loc29 = loc("/usr/include/sys/socket.h":145:68)
#loc30 = loc("/usr/include/stdlib.h":105:1)
#loc31 = loc("/usr/include/stdlib.h":106:33)
#loc32 = loc("/usr/include/unistd.h":358:1)
#loc33 = loc("/usr/include/unistd.h":358:27)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":54:1)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":132:1)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":56:5)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":56:9)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":58:5)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":58:29)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":60:12)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":60:5)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":61:5)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":129:5)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":66:9)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":66:13)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":67:9)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":67:28)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":68:9)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":68:31)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":69:9)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":69:31)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":70:9)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":70:41)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":71:9)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":114:17)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:35)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:44)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:57)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:28)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:13)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":81:68)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":82:13)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":85:13)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":82:17)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":82:33)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":83:13)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":84:17)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:20)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:21)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:30)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:33)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:47)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:13)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":86:48)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":87:34)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":87:13)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":88:39)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":88:13)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":89:38)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":89:32)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":89:13)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":89:46)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:13)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":93:13)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:22)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:54)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:55)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:64)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:78)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:17)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":90:84)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":91:13)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":92:17)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":94:13)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":97:13)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":94:24)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":94:38)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":94:17)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":94:57)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":95:13)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":96:17)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:35)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:49)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:55)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:28)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:13)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":98:59)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":99:13)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":102:13)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":99:17)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":99:33)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":100:13)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":101:17)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:31)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:45)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:58)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:76)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:79)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:26)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:13)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":104:80)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:13)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":108:13)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:17)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:31)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:44)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:47)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":105:61)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":106:13)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":107:17)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":110:39)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":110:25)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":110:13)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":112:25)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":112:20)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":112:13)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":112:36)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":114:16)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":115:9)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":118:9)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":115:13)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":115:29)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":116:9)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":117:26)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":117:13)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":119:9)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":122:9)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":119:13)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":119:29)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":120:9)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":121:26)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":121:13)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":131:5)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":131:13)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":256:1)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":260:1)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":258:5)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":258:13)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":259:5)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":259:13)
#loc165 = loc("/usr/include/stdlib.h":575:1)
#loc166 = loc("/usr/include/stdlib.h":575:41)
#loc167 = loc("/usr/include/time.h":76:1)
#loc168 = loc("/usr/include/time.h":76:38)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":275:15)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":277:15)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":280:15)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":282:15)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":270:1)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":285:1)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":271:1)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":273:27)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":273:22)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":273:5)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":275:5)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":276:5)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":276:66)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":277:5)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":280:5)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":281:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":281:65)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":282:5)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":284:12)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":284:5)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":139:1)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":147:1)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":140:1)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":141:5)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":146:5)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":141:8)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":141:15)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":142:5)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":144:9)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":144:29)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":144:22)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":145:22)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":145:9)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":149:1)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":158:1)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":151:5)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":151:9)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":152:5)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":152:29)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":154:12)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":154:5)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":156:13)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":156:12)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":156:5)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":157:5)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":157:13)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":173:23)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":161:1)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":176:1)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":162:1)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":163:5)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":175:5)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":163:8)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":163:15)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":164:5)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":166:9)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":174:9)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":166:13)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":166:21)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":166:29)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":166:30)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":167:9)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":170:9)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":172:9)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":168:13)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":168:33)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":168:26)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":169:26)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":169:13)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":173:13)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":178:1)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":254:1)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":180:5)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":180:9)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":181:5)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":181:29)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":183:12)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":183:5)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":184:5)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":252:5)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":189:9)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":189:13)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":190:9)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":190:28)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":191:9)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":191:31)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":192:9)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":192:31)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":193:9)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":193:41)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":194:9)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":237:17)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:35)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:44)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:57)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:28)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:13)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":204:68)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":205:13)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":208:13)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":205:17)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":205:33)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":206:13)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":207:17)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:20)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:21)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:30)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:33)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:47)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:13)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":209:48)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":210:34)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":210:13)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":211:39)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":211:13)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":212:38)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":212:32)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":212:13)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":212:46)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:13)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":216:13)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:22)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:54)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:55)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:64)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:78)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:17)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":213:84)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":214:13)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":215:17)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":217:13)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":220:13)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":217:24)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":217:38)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":217:17)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":217:57)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":218:13)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":219:17)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:35)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:49)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:55)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:28)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:13)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":221:59)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":222:13)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":225:13)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":222:17)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":222:33)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":223:13)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":224:17)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:31)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:45)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:58)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:76)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:79)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:26)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:13)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":227:80)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:13)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":231:13)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:17)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:31)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:44)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:47)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":228:61)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":229:13)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":230:17)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":233:39)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":233:25)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":233:13)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":235:25)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":235:20)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":235:13)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":235:36)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":237:16)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":238:9)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":241:9)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":238:13)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":238:29)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":239:9)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":240:26)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":240:13)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":242:9)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":245:9)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":242:13)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":242:29)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":243:9)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":244:26)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":244:13)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":253:5)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_44.c":253:13)
#loc370 = loc(fused[#loc1, #loc2])
#loc371 = loc(fused[#loc3, #loc4])
#loc373 = loc(fused[#loc8, #loc9])
#loc374 = loc(fused[#loc10, #loc11])
#loc375 = loc(fused[#loc12, #loc9])
#loc376 = loc(fused[#loc13, #loc14])
#loc377 = loc(fused[#loc18, #loc19])
#loc378 = loc(fused[#loc20, #loc21])
#loc379 = loc(fused[#loc22, #loc23])
#loc380 = loc(fused[#loc24, #loc25])
#loc381 = loc(fused[#loc26, #loc27])
#loc382 = loc(fused[#loc28, #loc29])
#loc383 = loc(fused[#loc30, #loc31])
#loc384 = loc(fused[#loc32, #loc33])
#loc385 = loc(fused[#loc34, #loc35])
#loc386 = loc(fused[#loc36, #loc37])
#loc387 = loc(fused[#loc38, #loc39])
#loc388 = loc(fused[#loc41, #loc40])
#loc389 = loc(fused[#loc42, #loc43])
#loc390 = loc(fused[#loc44, #loc45])
#loc391 = loc(fused[#loc46, #loc47])
#loc392 = loc(fused[#loc48, #loc49])
#loc393 = loc(fused[#loc50, #loc51])
#loc394 = loc(fused[#loc52, #loc53])
#loc395 = loc(fused[#loc54, #loc55])
#loc396 = loc(fused[#loc60, #loc61])
#loc397 = loc(fused[#loc62, #loc63])
#loc398 = loc(fused[#loc64, #loc65])
#loc399 = loc(fused[#loc66, #loc63])
#loc400 = loc(fused[#loc68, #loc69])
#loc401 = loc(fused[#loc71, #loc72])
#loc402 = loc(fused[#loc73, #loc74])
#loc403 = loc(fused[#loc77, #loc75])
#loc404 = loc(fused[#loc81, #loc78])
#loc405 = loc(fused[#loc85, #loc86])
#loc406 = loc(fused[#loc87, #loc88])
#loc407 = loc(fused[#loc90, #loc91])
#loc408 = loc(fused[#loc92, #loc93])
#loc409 = loc(fused[#loc94, #loc95])
#loc410 = loc(fused[#loc96, #loc88])
#loc411 = loc(fused[#loc98, #loc99])
#loc412 = loc(fused[#loc102, #loc103])
#loc413 = loc(fused[#loc104, #loc99])
#loc414 = loc(fused[#loc110, #loc111])
#loc415 = loc(fused[#loc112, #loc113])
#loc416 = loc(fused[#loc114, #loc115])
#loc417 = loc(fused[#loc116, #loc113])
#loc418 = loc(fused[#loc120, #loc121])
#loc419 = loc(fused[#loc124, #loc125])
#loc420 = loc(fused[#loc126, #loc127])
#loc421 = loc(fused[#loc128, #loc129])
#loc422 = loc(fused[#loc131, #loc132])
#loc423 = loc(fused[#loc133, #loc127])
#loc424 = loc(fused[#loc137, #loc135])
#loc425 = loc(fused[#loc140, #loc141])
#loc426 = loc(fused[#loc143, #loc144])
#loc427 = loc(fused[#loc145, #loc146])
#loc428 = loc(fused[#loc147, #loc144])
#loc429 = loc(fused[#loc150, #loc151])
#loc430 = loc(fused[#loc152, #loc153])
#loc431 = loc(fused[#loc154, #loc151])
#loc432 = loc(fused[#loc159, #loc160])
#loc433 = loc(fused[#loc161, #loc162])
#loc434 = loc(fused[#loc163, #loc164])
#loc435 = loc(fused[#loc165, #loc166])
#loc436 = loc(fused[#loc167, #loc168])
#loc437 = loc(fused[#loc169, #loc170])
#loc438 = loc(fused[#loc175, #loc176])
#loc441 = loc(fused[#loc186, #loc187])
#loc442 = loc(fused[#loc190, #loc191])
#loc443 = loc(fused[#loc194, #loc193])
#loc444 = loc(fused[#loc195, #loc196])
#loc446 = loc(fused[#loc200, #loc201])
#loc447 = loc(fused[#loc202, #loc203])
#loc448 = loc(fused[#loc204, #loc201])
#loc449 = loc(fused[#loc205, #loc206])
#loc450 = loc(fused[#loc210, #loc211])
#loc451 = loc(fused[#loc212, #loc213])
#loc452 = loc(fused[#loc214, #loc215])
#loc453 = loc(fused[#loc217, #loc216])
#loc454 = loc(fused[#loc220, #loc218])
#loc455 = loc(fused[#loc224, #loc225])
#loc457 = loc(fused[#loc229, #loc230])
#loc458 = loc(fused[#loc231, #loc232])
#loc459 = loc(fused[#loc233, #loc230])
#loc460 = loc(fused[#loc234, #loc235])
#loc461 = loc(fused[#loc237, #loc238])
#loc462 = loc(fused[#loc236, #loc239])
#loc463 = loc(fused[#loc240, #loc241, #loc242, #loc235])
#loc464 = loc(fused[#loc243, #loc244])
#loc465 = loc(fused[#loc249, #loc250])
#loc466 = loc(fused[#loc251, #loc252])
#loc467 = loc(fused[#loc253, #loc254])
#loc468 = loc(fused[#loc256, #loc255])
#loc469 = loc(fused[#loc257, #loc258])
#loc470 = loc(fused[#loc259, #loc260])
#loc471 = loc(fused[#loc261, #loc262])
#loc472 = loc(fused[#loc263, #loc264])
#loc473 = loc(fused[#loc265, #loc266])
#loc474 = loc(fused[#loc267, #loc268])
#loc475 = loc(fused[#loc269, #loc270])
#loc476 = loc(fused[#loc275, #loc276])
#loc477 = loc(fused[#loc277, #loc278])
#loc478 = loc(fused[#loc279, #loc280])
#loc479 = loc(fused[#loc281, #loc278])
#loc480 = loc(fused[#loc283, #loc284])
#loc481 = loc(fused[#loc286, #loc287])
#loc482 = loc(fused[#loc288, #loc289])
#loc483 = loc(fused[#loc291, #loc290])
#loc484 = loc(fused[#loc293, #loc292])
#loc485 = loc(fused[#loc296, #loc297])
#loc486 = loc(fused[#loc298, #loc299])
#loc487 = loc(fused[#loc301, #loc302])
#loc488 = loc(fused[#loc303, #loc304])
#loc489 = loc(fused[#loc305, #loc306])
#loc490 = loc(fused[#loc307, #loc299])
#loc491 = loc(fused[#loc309, #loc310])
#loc492 = loc(fused[#loc313, #loc314])
#loc493 = loc(fused[#loc315, #loc310])
#loc494 = loc(fused[#loc321, #loc322])
#loc495 = loc(fused[#loc323, #loc324])
#loc496 = loc(fused[#loc325, #loc326])
#loc497 = loc(fused[#loc327, #loc324])
#loc498 = loc(fused[#loc331, #loc332])
#loc499 = loc(fused[#loc335, #loc336])
#loc500 = loc(fused[#loc337, #loc338])
#loc501 = loc(fused[#loc339, #loc340])
#loc502 = loc(fused[#loc342, #loc343])
#loc503 = loc(fused[#loc344, #loc338])
#loc504 = loc(fused[#loc348, #loc346])
#loc505 = loc(fused[#loc351, #loc352])
#loc506 = loc(fused[#loc354, #loc355])
#loc507 = loc(fused[#loc356, #loc357])
#loc508 = loc(fused[#loc358, #loc355])
#loc509 = loc(fused[#loc361, #loc362])
#loc510 = loc(fused[#loc363, #loc364])
#loc511 = loc(fused[#loc365, #loc362])
