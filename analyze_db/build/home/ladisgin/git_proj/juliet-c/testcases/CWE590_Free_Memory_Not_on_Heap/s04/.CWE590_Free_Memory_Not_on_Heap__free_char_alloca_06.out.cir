!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":121:10)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":121:14)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":121:20)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":121:32)
#loc188 = loc(fused[#loc53, #loc54])
#loc189 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc170)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc175)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc178)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc19)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc19)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc19)
          %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc21)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc22)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc22)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc22)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc26)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc28)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc28)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc30)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc180)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
        } loc(#loc177)
      } loc(#loc176)
    } loc(#loc174)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc6)
  } loc(#loc171)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc85)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc86)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc199)
      cir.if %8 {
        %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc202)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc96)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc203)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc204)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
            cir.if %35 {
              %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc104)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc106)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
            } loc(#loc208)
          } loc(#loc206)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc108)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc109)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc110)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc109)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc109)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc209)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc113)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc115)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc116)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc115)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc210)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
        } loc(#loc201)
      } loc(#loc200)
    } loc(#loc198)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc122)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.return loc(#loc78)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc128)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc133)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc216)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc219)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc140)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc140)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc220)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc221)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
            cir.if %35 {
              %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc148)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc148)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc149)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc151)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
            } loc(#loc225)
          } loc(#loc223)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc153)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc154)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc155)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc154)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc154)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc158)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc158)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc160)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc161)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc160)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc162)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc227)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
        } loc(#loc218)
      } loc(#loc217)
    } loc(#loc215)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
    cir.return loc(#loc125)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":27:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":44:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":29:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":29:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":30:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":31:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":40:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":31:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":31:27)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":32:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":33:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":39:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":35:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":35:41)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:32)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:37)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:41)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":36:42)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":37:33)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":37:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":37:24)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":37:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":37:29)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":38:20)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":38:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":41:15)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":41:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":43:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":43:10)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":105:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":109:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":107:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":107:14)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":108:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":108:14)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":126:15)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":128:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":131:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":133:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":121:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":136:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":122:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":124:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":124:22)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":124:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":126:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":127:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":127:62)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":128:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":131:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":132:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":132:61)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":133:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":135:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":135:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":58:19)
#loc72 = loc("/usr/include/stdlib.h":672:1)
#loc73 = loc("/usr/include/stdlib.h":672:45)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":67:27)
#loc75 = loc("/usr/include/stdlib.h":756:1)
#loc76 = loc("/usr/include/stdlib.h":756:70)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":51:1)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":78:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":53:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":53:12)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":54:12)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":54:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":55:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":74:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":55:8)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":55:27)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":56:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":59:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":61:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":58:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":62:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":73:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:64)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:41)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:48)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:52)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":64:63)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":65:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":69:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":65:17)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":65:31)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":66:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":67:17)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":68:17)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":68:22)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:32)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:37)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:41)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:13)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":70:42)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":71:33)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":71:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":71:24)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":71:28)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":71:29)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":72:20)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":72:13)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":75:15)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":75:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":77:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":77:10)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":81:1)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":103:1)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":83:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":83:12)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":84:12)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":84:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":85:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":99:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":85:8)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":85:27)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":86:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":87:9)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":98:9)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:13)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:64)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:41)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:48)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:52)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":89:63)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":90:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":94:13)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":90:17)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":90:31)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":91:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":92:27)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":92:17)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":93:17)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":93:22)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:20)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:32)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:37)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:41)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:13)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":95:42)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":96:33)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":96:13)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":96:24)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":96:28)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":96:29)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":97:20)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":97:13)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":100:15)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":100:5)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":102:5)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_06.c":102:10)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc10, #loc9])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc15, #loc12])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc24, #loc25])
#loc180 = loc(fused[#loc27, #loc26])
#loc181 = loc(fused[#loc32, #loc31])
#loc182 = loc(fused[#loc37, #loc38])
#loc183 = loc(fused[#loc39, #loc40])
#loc184 = loc(fused[#loc41, #loc42])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc51, #loc52])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc66, #loc67])
#loc192 = loc(fused[#loc70, #loc69])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc75, #loc76])
#loc195 = loc(fused[#loc77, #loc78])
#loc196 = loc(fused[#loc79, #loc80])
#loc197 = loc(fused[#loc82, #loc81])
#loc198 = loc(fused[#loc83, #loc84])
#loc199 = loc(fused[#loc85, #loc86])
#loc200 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc201 = loc(fused[#loc91, #loc92])
#loc202 = loc(fused[#loc93, #loc94])
#loc203 = loc(fused[#loc97, #loc98])
#loc204 = loc(fused[#loc96, #loc98])
#loc205 = loc(fused[#loc95, #loc94])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc103, #loc100])
#loc209 = loc(fused[#loc111, #loc112])
#loc210 = loc(fused[#loc114, #loc113])
#loc211 = loc(fused[#loc119, #loc118])
#loc212 = loc(fused[#loc124, #loc125])
#loc213 = loc(fused[#loc126, #loc127])
#loc214 = loc(fused[#loc129, #loc128])
#loc215 = loc(fused[#loc130, #loc131])
#loc216 = loc(fused[#loc132, #loc133])
#loc217 = loc(fused[#loc134, #loc131])
#loc218 = loc(fused[#loc135, #loc136])
#loc219 = loc(fused[#loc137, #loc138])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc140, #loc142])
#loc222 = loc(fused[#loc139, #loc138])
#loc223 = loc(fused[#loc143, #loc144])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc147, #loc144])
#loc226 = loc(fused[#loc156, #loc157])
#loc227 = loc(fused[#loc159, #loc158])
#loc228 = loc(fused[#loc164, #loc163])
