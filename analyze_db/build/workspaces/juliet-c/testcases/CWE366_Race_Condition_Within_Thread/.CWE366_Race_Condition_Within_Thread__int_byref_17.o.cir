!s32i = !cir.int<s, 32>
!ty__stdThread = !cir.record<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":24:23)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":24:29)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:25)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:25)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":38:24)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":38:30)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:25)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:25)
#true = #cir.bool<true> : !cir.bool
#loc208 = loc(fused[#loc5, #loc6])
#loc251 = loc(fused[#loc109, #loc110])
module @"/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc206)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc209)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb2 loc(#loc211)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %7 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // pred: ^bb3
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc21)
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc26)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb2 loc(#loc211)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc207)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc217)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc218)
  cir.func private @printIntLine(!s32i) loc(#loc219)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valBadSink"] {alignment = 4 : i64} loc(#loc223)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc45)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb2 loc(#loc225)
  ^bb2:  // 2 preds: ^bb1, ^bb40
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %7 ^bb3, ^bb41 loc(#loc49)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc228)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc229)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %8, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc221)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc38)
    cir.store %9, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc222)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb6 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc57)
    %12 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc232)
    %13 = cir.call @stdThreadCreate(%11, %12, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc60)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc60)
    %15 = cir.unary(not, %14) : !cir.bool, !cir.bool loc(#loc60)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc233)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc62)
    cir.store %16, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc234)
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %17 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc66)
    %18 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc236)
    %19 = cir.call @stdThreadCreate(%17, %18, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc69)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc69)
    %21 = cir.unary(not, %20) : !cir.bool, !cir.bool loc(#loc69)
    cir.brcond %21 ^bb11, ^bb12 loc(#loc237)
  ^bb11:  // pred: ^bb10
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc71)
    cir.store %22, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc238)
    cir.br ^bb12 loc(#loc65)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc65)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc239)
  ^bb14:  // pred: ^bb13
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc75)
    %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc75)
    cir.brcond %24 ^bb15, ^bb20 loc(#loc76)
  ^bb15:  // pred: ^bb14
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc77)
    %26 = cir.call @stdThreadJoin(%25) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc78)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc78)
    cir.brcond %27 ^bb16, ^bb17 loc(#loc76)
  ^bb16:  // pred: ^bb15
    %28 = cir.const #true loc(#loc76)
    cir.br ^bb18(%28 : !cir.bool) loc(#loc76)
  ^bb17:  // pred: ^bb15
    %29 = cir.const #false loc(#loc76)
    cir.br ^bb18(%29 : !cir.bool) loc(#loc76)
  ^bb18(%30: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:25)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc76)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%30 : !cir.bool) loc(#loc76)
  ^bb20:  // pred: ^bb14
    %31 = cir.const #false loc(#loc76)
    cir.br ^bb21(%31 : !cir.bool) loc(#loc76)
  ^bb21(%32: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc76)
  ^bb22:  // pred: ^bb21
    cir.brcond %32 ^bb23, ^bb24 loc(#loc240)
  ^bb23:  // pred: ^bb22
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc80)
    %34 = cir.call @stdThreadDestroy(%33) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc81)
    cir.br ^bb24 loc(#loc74)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc74)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc241)
  ^bb26:  // pred: ^bb25
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc84)
    %36 = cir.cast(ptr_to_bool, %35 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc84)
    cir.brcond %36 ^bb27, ^bb32 loc(#loc85)
  ^bb27:  // pred: ^bb26
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc86)
    %38 = cir.call @stdThreadJoin(%37) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc87)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc87)
    cir.brcond %39 ^bb28, ^bb29 loc(#loc85)
  ^bb28:  // pred: ^bb27
    %40 = cir.const #true loc(#loc85)
    cir.br ^bb30(%40 : !cir.bool) loc(#loc85)
  ^bb29:  // pred: ^bb27
    %41 = cir.const #false loc(#loc85)
    cir.br ^bb30(%41 : !cir.bool) loc(#loc85)
  ^bb30(%42: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:25)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc85)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33(%42 : !cir.bool) loc(#loc85)
  ^bb32:  // pred: ^bb26
    %43 = cir.const #false loc(#loc85)
    cir.br ^bb33(%43 : !cir.bool) loc(#loc85)
  ^bb33(%44: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc85)
  ^bb34:  // pred: ^bb33
    cir.brcond %44 ^bb35, ^bb36 loc(#loc242)
  ^bb35:  // pred: ^bb34
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc89)
    %46 = cir.call @stdThreadDestroy(%45) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc90)
    cir.br ^bb36 loc(#loc83)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc83)
  ^bb37:  // pred: ^bb36
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc92)
    cir.br ^bb38 loc(#loc52)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc44)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc44)
  ^bb40:  // pred: ^bb39
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc94)
    cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb2 loc(#loc225)
  ^bb41:  // pred: ^bb2
    cir.br ^bb42 loc(#loc44)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc34)
  } loc(#loc220)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc245)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc244)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc246)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc247)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc248)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc249)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc109, #loc110])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc253)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc115)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc112)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc112)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc252)
    %5 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc247)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc116)
    cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc117)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb2 loc(#loc254)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %9 = cir.const #cir.int<1000000> : !s32i loc(#loc123)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc124)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc127)
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc119)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc132)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb2 loc(#loc254)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc119)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc247)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc133)
    cir.call @stdThreadLockRelease(%19) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc134)
    cir.return loc(#loc108)
  } loc(#loc250)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc260)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valGoodSink"] {alignment = 4 : i64} loc(#loc264)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb2 loc(#loc266)
  ^bb2:  // 2 preds: ^bb1, ^bb44
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %7 ^bb3, ^bb45 loc(#loc153)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc269)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc140)
    cir.store %8, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc262)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc142)
    cir.store %9, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc263)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc157)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb6 loc(#loc272)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc247)
    %12 = cir.call @stdThreadLockCreate(%11) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc161)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc161)
    %14 = cir.unary(not, %13) : !cir.bool, !cir.bool loc(#loc161)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc273)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc163)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc160)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc274)
  ^bb10:  // pred: ^bb9
    %15 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc166)
    %16 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc275)
    %17 = cir.call @stdThreadCreate(%15, %16, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc169)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc169)
    %19 = cir.unary(not, %18) : !cir.bool, !cir.bool loc(#loc169)
    cir.brcond %19 ^bb11, ^bb12 loc(#loc276)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc171)
    cir.store %20, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc277)
    cir.br ^bb12 loc(#loc165)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc278)
  ^bb14:  // pred: ^bb13
    %21 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc175)
    %22 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc279)
    %23 = cir.call @stdThreadCreate(%21, %22, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc178)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc178)
    %25 = cir.unary(not, %24) : !cir.bool, !cir.bool loc(#loc178)
    cir.brcond %25 ^bb15, ^bb16 loc(#loc280)
  ^bb15:  // pred: ^bb14
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc180)
    cir.store %26, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc281)
    cir.br ^bb16 loc(#loc174)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc174)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc282)
  ^bb18:  // pred: ^bb17
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc184)
    %28 = cir.cast(ptr_to_bool, %27 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc184)
    cir.brcond %28 ^bb19, ^bb24 loc(#loc185)
  ^bb19:  // pred: ^bb18
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc186)
    %30 = cir.call @stdThreadJoin(%29) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc187)
    %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %31 ^bb20, ^bb21 loc(#loc185)
  ^bb20:  // pred: ^bb19
    %32 = cir.const #true loc(#loc185)
    cir.br ^bb22(%32 : !cir.bool) loc(#loc185)
  ^bb21:  // pred: ^bb19
    %33 = cir.const #false loc(#loc185)
    cir.br ^bb22(%33 : !cir.bool) loc(#loc185)
  ^bb22(%34: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:25)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc185)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25(%34 : !cir.bool) loc(#loc185)
  ^bb24:  // pred: ^bb18
    %35 = cir.const #false loc(#loc185)
    cir.br ^bb25(%35 : !cir.bool) loc(#loc185)
  ^bb25(%36: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:25)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc185)
  ^bb26:  // pred: ^bb25
    cir.brcond %36 ^bb27, ^bb28 loc(#loc283)
  ^bb27:  // pred: ^bb26
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc189)
    %38 = cir.call @stdThreadDestroy(%37) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc190)
    cir.br ^bb28 loc(#loc183)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc183)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc284)
  ^bb30:  // pred: ^bb29
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc193)
    %40 = cir.cast(ptr_to_bool, %39 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc193)
    cir.brcond %40 ^bb31, ^bb36 loc(#loc194)
  ^bb31:  // pred: ^bb30
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc195)
    %42 = cir.call @stdThreadJoin(%41) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc196)
    %43 = cir.cast(int_to_bool, %42 : !s32i), !cir.bool loc(#loc196)
    cir.brcond %43 ^bb32, ^bb33 loc(#loc194)
  ^bb32:  // pred: ^bb31
    %44 = cir.const #true loc(#loc194)
    cir.br ^bb34(%44 : !cir.bool) loc(#loc194)
  ^bb33:  // pred: ^bb31
    %45 = cir.const #false loc(#loc194)
    cir.br ^bb34(%45 : !cir.bool) loc(#loc194)
  ^bb34(%46: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:25)):  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc194)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37(%46 : !cir.bool) loc(#loc194)
  ^bb36:  // pred: ^bb30
    %47 = cir.const #false loc(#loc194)
    cir.br ^bb37(%47 : !cir.bool) loc(#loc194)
  ^bb37(%48: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:25)):  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc194)
  ^bb38:  // pred: ^bb37
    cir.brcond %48 ^bb39, ^bb40 loc(#loc285)
  ^bb39:  // pred: ^bb38
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc198)
    %50 = cir.call @stdThreadDestroy(%49) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc199)
    cir.br ^bb40 loc(#loc192)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc192)
  ^bb41:  // pred: ^bb40
    %51 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc247)
    %52 = cir.load %51 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc200)
    cir.call @stdThreadLockDestroy(%52) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc201)
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc203)
    cir.br ^bb42 loc(#loc156)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc148)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc148)
  ^bb44:  // pred: ^bb43
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %55 = cir.unary(inc, %54) nsw : !s32i, !s32i loc(#loc205)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb2 loc(#loc266)
  ^bb45:  // pred: ^bb2
    cir.br ^bb46 loc(#loc148)
  ^bb46:  // pred: ^bb45
    cir.return loc(#loc138)
  } loc(#loc261)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_thread.h":14:1)
#loc2 = loc("../../testcasesupport/std_thread.h":14:74)
#loc3 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":24:1)
#loc4 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":36:1)
#loc7 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":26:5)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":26:27)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":27:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":27:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":25:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":35:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":33:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":34:22)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":34:21)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":34:33)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":34:10)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":34:9)
#loc25 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:31)
#loc26 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":32:30)
#loc27 = loc("../../testcasesupport/std_thread.h":15:1)
#loc28 = loc("../../testcasesupport/std_thread.h":15:35)
#loc29 = loc("../../testcasesupport/std_thread.h":16:1)
#loc30 = loc("../../testcasesupport/std_thread.h":16:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":55:1)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":84:1)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":61:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":61:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":62:13)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":62:33)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":63:13)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":63:17)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":57:5)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":57:9)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:5)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":83:5)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:13)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:9)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:16)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:20)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:18)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":59:5)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":60:9)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":82:9)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":64:26)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":64:13)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":65:13)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":68:13)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":65:34)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":65:52)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":65:53)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":65:18)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":66:13)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":67:27)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":67:17)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":69:13)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":72:13)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":69:34)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":69:52)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":69:53)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":69:18)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":70:13)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":71:27)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":71:17)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:13)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":76:13)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:17)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:42)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":73:28)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":74:13)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":75:34)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":75:17)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:13)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":80:13)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:17)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:42)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":77:28)
#loc88 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":78:13)
#loc89 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":79:34)
#loc90 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":79:17)
#loc91 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":81:26)
#loc92 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":81:13)
#loc93 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:24)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":58:23)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":127:1)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":130:1)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":129:5)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":129:11)
#loc99 = loc("../../testcasesupport/std_thread.h":18:1)
#loc100 = loc("../../testcasesupport/std_thread.h":18:44)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":22:1)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":22:34)
#loc103 = loc("../../testcasesupport/std_thread.h":19:1)
#loc104 = loc("../../testcasesupport/std_thread.h":19:45)
#loc105 = loc("../../testcasesupport/std_thread.h":20:1)
#loc106 = loc("../../testcasesupport/std_thread.h":20:45)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":38:1)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":51:1)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":40:5)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":40:28)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":41:5)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":41:9)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":39:1)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":45:26)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":45:5)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:5)
#loc119 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":49:5)
#loc120 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:14)
#loc121 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:10)
#loc122 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:17)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:21)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:19)
#loc125 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":47:5)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":48:22)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":48:21)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":48:33)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":48:10)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":48:9)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:31)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":46:30)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":50:26)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":50:5)
#loc135 = loc("../../testcasesupport/std_thread.h":21:1)
#loc136 = loc("../../testcasesupport/std_thread.h":21:45)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":91:1)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":125:1)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":97:13)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":97:33)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":98:13)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":98:33)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":99:13)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":99:17)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":93:5)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":93:9)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:5)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":124:5)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:13)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:9)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:16)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:20)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:18)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":95:5)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":96:9)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":123:9)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":100:27)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":100:13)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":101:13)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":104:13)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":101:18)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":102:13)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":103:17)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":105:13)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":108:13)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":105:34)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":105:53)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":105:54)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":105:18)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":106:13)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":107:27)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":107:17)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":109:13)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":112:13)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":109:34)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":109:53)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":109:54)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":109:18)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":110:13)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":111:27)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":111:17)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:13)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":116:13)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:17)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:42)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":113:28)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":114:13)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":115:34)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":115:17)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:13)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":120:13)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:17)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:42)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":117:28)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":118:13)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":119:34)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":119:17)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":121:34)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":121:13)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":122:26)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":122:13)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:24)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__int_byref_17.c":94:23)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc7, #loc8])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc12, #loc13])
#loc212 = loc(fused[#loc15, #loc14])
#loc213 = loc(fused[#loc16, #loc17])
#loc214 = loc(fused[#loc19, #loc13])
#loc215 = loc(fused[#loc24, #loc22])
#loc216 = loc(fused[#loc26, #loc25])
#loc217 = loc(fused[#loc27, #loc28])
#loc218 = loc(fused[#loc29, #loc30])
#loc219 = loc(fused[#loc31, #loc32])
#loc220 = loc(fused[#loc33, #loc34])
#loc221 = loc(fused[#loc35, #loc36])
#loc222 = loc(fused[#loc37, #loc38])
#loc223 = loc(fused[#loc39, #loc40])
#loc224 = loc(fused[#loc41, #loc42])
#loc225 = loc(fused[#loc43, #loc44])
#loc226 = loc(fused[#loc46, #loc45])
#loc227 = loc(fused[#loc47, #loc48])
#loc228 = loc(fused[#loc50, #loc44])
#loc229 = loc(fused[#loc51, #loc52])
#loc230 = loc(fused[#loc54, #loc53])
#loc231 = loc(fused[#loc55, #loc56])
#loc232 = loc(fused[#loc58, #loc59])
#loc233 = loc(fused[#loc61, #loc56])
#loc234 = loc(fused[#loc63, #loc62])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc67, #loc68])
#loc237 = loc(fused[#loc70, #loc65])
#loc238 = loc(fused[#loc72, #loc71])
#loc239 = loc(fused[#loc73, #loc74])
#loc240 = loc(fused[#loc79, #loc74])
#loc241 = loc(fused[#loc82, #loc83])
#loc242 = loc(fused[#loc88, #loc83])
#loc243 = loc(fused[#loc94, #loc93])
#loc244 = loc(fused[#loc95, #loc96])
#loc245 = loc(fused[#loc97, #loc98])
#loc246 = loc(fused[#loc99, #loc100])
#loc247 = loc(fused[#loc101, #loc102])
#loc248 = loc(fused[#loc103, #loc104])
#loc249 = loc(fused[#loc105, #loc106])
#loc250 = loc(fused[#loc107, #loc108])
#loc252 = loc(fused[#loc111, #loc112])
#loc253 = loc(fused[#loc113, #loc114])
#loc254 = loc(fused[#loc118, #loc119])
#loc255 = loc(fused[#loc121, #loc120])
#loc256 = loc(fused[#loc122, #loc123])
#loc257 = loc(fused[#loc125, #loc119])
#loc258 = loc(fused[#loc130, #loc128])
#loc259 = loc(fused[#loc132, #loc131])
#loc260 = loc(fused[#loc135, #loc136])
#loc261 = loc(fused[#loc137, #loc138])
#loc262 = loc(fused[#loc139, #loc140])
#loc263 = loc(fused[#loc141, #loc142])
#loc264 = loc(fused[#loc143, #loc144])
#loc265 = loc(fused[#loc145, #loc146])
#loc266 = loc(fused[#loc147, #loc148])
#loc267 = loc(fused[#loc150, #loc149])
#loc268 = loc(fused[#loc151, #loc152])
#loc269 = loc(fused[#loc154, #loc148])
#loc270 = loc(fused[#loc155, #loc156])
#loc271 = loc(fused[#loc158, #loc157])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc162, #loc160])
#loc274 = loc(fused[#loc164, #loc165])
#loc275 = loc(fused[#loc167, #loc168])
#loc276 = loc(fused[#loc170, #loc165])
#loc277 = loc(fused[#loc172, #loc171])
#loc278 = loc(fused[#loc173, #loc174])
#loc279 = loc(fused[#loc176, #loc177])
#loc280 = loc(fused[#loc179, #loc174])
#loc281 = loc(fused[#loc181, #loc180])
#loc282 = loc(fused[#loc182, #loc183])
#loc283 = loc(fused[#loc188, #loc183])
#loc284 = loc(fused[#loc191, #loc192])
#loc285 = loc(fused[#loc197, #loc192])
#loc286 = loc(fused[#loc205, #loc204])
