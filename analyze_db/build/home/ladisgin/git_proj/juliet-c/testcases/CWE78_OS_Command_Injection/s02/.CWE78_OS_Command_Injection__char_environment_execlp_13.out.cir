!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":137:10)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":137:14)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":137:20)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":137:32)
#loc168 = loc(fused[#loc75, #loc76])
#loc169 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc139)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc140)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_13_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc141)
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc142)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc143)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc13)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc18)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_13_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc142)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc33)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %9 ^bb2, ^bb9 loc(#loc154)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc13)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc13)
    %15 = cir.call @getenv(%14) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc45)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc50)
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc159)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
    %31 = cir.binop(sub, %28, %30) : !u64i loc(#loc160)
    %32 = cir.call @strncat(%23, %24, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc31)
  ^bb10:  // pred: ^bb9
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc18)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc18)
    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc53)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc53)
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %41 = cir.call @execlp(%34, %36, %38, %39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc56)
    cir.return loc(#loc21)
  } loc(#loc147)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_13_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_13_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %17 : !s32i loc(#loc172)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc140)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc142)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc106)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb4 loc(#loc108)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc111)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc96)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc96)
    %14 = cir.call @strcat(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc113)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc113)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc114)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc114)
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc115)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc115)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
    %23 = cir.call @execlp(%16, %18, %20, %21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc118)
    cir.return loc(#loc98)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc142)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc128)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc130)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %10 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc132)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc132)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc134)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc134)
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc135)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc135)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %21 = cir.call @execlp(%14, %16, %18, %19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc138)
    cir.return loc(#loc120)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_13.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":108:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":108:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":86:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":86:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":56:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":56:28)
#loc7 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc8 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdlib.h":773:1)
#loc12 = loc("/usr/include/stdlib.h":773:50)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":63:41)
#loc14 = loc("/usr/include/string.h":152:1)
#loc15 = loc("/usr/include/string.h":153:29)
#loc16 = loc("/usr/include/unistd.h":605:1)
#loc17 = loc("/usr/include/unistd.h":606:14)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:38)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":53:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":76:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":62:13)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":62:41)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":63:13)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":63:53)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":55:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":55:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":57:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":57:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":58:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":71:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":58:8)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":58:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":59:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":60:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":70:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":62:30)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":62:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":63:34)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":65:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":69:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":65:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":65:32)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":66:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:25)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:30)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:29)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:39)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:52)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:56)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":68:64)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:25)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:52)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:66)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":75:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":121:1)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":125:1)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":123:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":123:14)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":124:5)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":124:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":142:15)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":144:15)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":147:15)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":149:15)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":137:1)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":152:1)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":138:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":140:27)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":140:22)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":140:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":142:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":143:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":143:65)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":144:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":147:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":148:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":148:64)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":149:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":151:12)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":151:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":91:19)
#loc94 = loc("/usr/include/string.h":149:1)
#loc95 = loc("/usr/include/string.h":150:14)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":96:22)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":83:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":102:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":85:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":85:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":87:12)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":87:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":88:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":97:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":88:8)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":88:27)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":89:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":92:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":94:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":91:9)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":96:9)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":96:16)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:12)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:25)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:38)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:52)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:66)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":101:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":105:1)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":119:1)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":107:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":107:12)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":109:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":109:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":110:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":114:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":110:8)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":110:27)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":111:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":113:9)
#loc131 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":113:16)
#loc132 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":113:22)
#loc133 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:12)
#loc134 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:25)
#loc135 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:38)
#loc136 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:52)
#loc137 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:66)
#loc138 = loc("CWE78_OS_Command_Injection__char_environment_execlp_13.c":118:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc20, #loc21])
#loc148 = loc(fused[#loc22, #loc23])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc26, #loc27])
#loc151 = loc(fused[#loc29, #loc28])
#loc152 = loc(fused[#loc30, #loc31])
#loc153 = loc(fused[#loc32, #loc33])
#loc154 = loc(fused[#loc34, #loc31])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc40, #loc41])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc44, #loc41])
#loc159 = loc(fused[#loc50, #loc51])
#loc160 = loc(fused[#loc50, #loc52])
#loc161 = loc(fused[#loc57, #loc58])
#loc162 = loc(fused[#loc59, #loc60])
#loc163 = loc(fused[#loc61, #loc62])
#loc164 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc67, #loc68])
#loc167 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc92, #loc91])
#loc173 = loc(fused[#loc94, #loc95])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc102, #loc101])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc180 = loc(fused[#loc119, #loc120])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc124, #loc123])
#loc183 = loc(fused[#loc125, #loc126])
#loc184 = loc(fused[#loc127, #loc128])
#loc185 = loc(fused[#loc129, #loc126])
