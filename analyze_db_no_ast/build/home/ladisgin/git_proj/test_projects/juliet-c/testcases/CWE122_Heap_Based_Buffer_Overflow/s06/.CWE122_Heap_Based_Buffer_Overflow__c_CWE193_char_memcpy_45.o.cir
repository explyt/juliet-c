!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.global "private"  internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc117)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc121)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc122)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc126)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc23)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc27)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc127)
    } loc(#loc125)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %10 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc118)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc130)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func no_proto internal private  @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc138)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc138)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc138)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc51)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc54)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc139)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc140)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc141)
      cir.libc.memcpy %16 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc142)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    } loc(#loc137)
    cir.return loc(#loc43)
  } loc(#loc135)
  cir.global "private"  internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc143)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc72)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc73)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc73)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc73)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc147)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc148)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc152)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc84)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc86)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc88)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc153)
    } loc(#loc151)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %12 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %13 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %13() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc67)
  } loc(#loc144)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc159)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc159)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc102)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc103)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc103)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc105)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc160)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc161)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc162)
      cir.libc.memcpy %16 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc163)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc112)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    } loc(#loc158)
    cir.return loc(#loc94)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":26:15)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":44:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":53:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":46:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":46:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":47:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":47:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:20)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:27)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:30)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:41)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:42)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":49:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:14)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":50:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":51:74)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":51:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":52:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":52:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":84:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":87:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":86:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":86:13)
#loc36 = loc("/usr/include/string.h":407:1)
#loc37 = loc("/usr/include/string.h":408:33)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":31:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":42:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":33:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":33:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":34:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":41:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":35:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":35:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:22)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:31)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:38)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:48)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:53)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:64)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:30)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":38:65)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":39:19)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":39:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":40:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":40:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":27:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":27:15)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":73:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":82:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":75:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":75:12)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":76:12)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":76:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:20)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:28)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:31)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:34)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:45)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:27)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:46)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":78:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:33)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:24)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":79:29)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":80:78)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":80:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":81:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":81:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":60:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":71:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":62:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":62:19)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":63:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":70:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":64:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":64:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:16)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:22)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:31)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:38)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:48)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:53)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:64)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:30)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":67:65)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":68:19)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":68:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":69:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_45.c":69:14)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc12, #loc11])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc14, #loc16])
#loc123 = loc(fused[#loc13, #loc17])
#loc124 = loc(fused[#loc18, #loc17])
#loc125 = loc(fused[#loc19, #loc20])
#loc126 = loc(fused[#loc21, #loc22])
#loc127 = loc(fused[#loc24, #loc20])
#loc128 = loc(fused[#loc29, #loc28])
#loc129 = loc(fused[#loc30, #loc31])
#loc130 = loc(fused[#loc32, #loc33])
#loc131 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc42, #loc43])
#loc136 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc49])
#loc139 = loc(fused[#loc52, #loc54])
#loc140 = loc(fused[#loc55, #loc56])
#loc141 = loc(fused[#loc57, #loc56])
#loc142 = loc(fused[#loc58, #loc59])
#loc143 = loc(fused[#loc64, #loc65])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc71, #loc70])
#loc147 = loc(fused[#loc75, #loc76])
#loc148 = loc(fused[#loc77, #loc76])
#loc149 = loc(fused[#loc72, #loc78])
#loc150 = loc(fused[#loc79, #loc78])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc85, #loc81])
#loc154 = loc(fused[#loc90, #loc89])
#loc155 = loc(fused[#loc91, #loc92])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc99, #loc100])
#loc160 = loc(fused[#loc103, #loc105])
#loc161 = loc(fused[#loc106, #loc107])
#loc162 = loc(fused[#loc108, #loc107])
#loc163 = loc(fused[#loc109, #loc110])
