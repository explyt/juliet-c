!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:48)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":424:10)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":424:14)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":424:20)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":424:32)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:48)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:27)
#loc422 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:48)
#loc452 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc651 = loc(fused[#loc175, #loc176])
#loc652 = loc(fused[#loc177, #loc178])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc581)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc582)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc583)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc584)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc585)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc586)
  cir.func private @close(!s32i) -> !s32i loc(#loc587)
  cir.func private @printIntLine(!s32i) loc(#loc588)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc589)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc591)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc592)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc593)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc594)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc595)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc596)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc597)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc38)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    cir.br ^bb1 loc(#loc599)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc600)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc42)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %11 ^bb2, ^bb34 loc(#loc601)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc602)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    cir.br ^bb4 loc(#loc603)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc603)
  ^bb5:  // pred: ^bb26
    %14 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %15 ^bb6, ^bb27 loc(#loc49)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc52)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    cir.br ^bb7 loc(#loc605)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc59)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc606)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc607)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc61)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc608)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc609)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc610)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc69)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc611)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc612)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc77)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc77)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc613)
    cir.br ^bb11 loc(#loc614)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc615)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc616)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc616)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc90)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc617)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc618)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc92)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc83)
  ^bb14:  // pred: ^bb13
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %50 = cir.const #cir.int<3> : !s32i loc(#loc95)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc95)
    %52 = cir.const #cir.int<4> : !u64i loc(#loc95)
    %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc95)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc95)
    %56 = cir.binop(add, %53, %55) : !u64i loc(#loc95)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc96)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc619)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %61 = cir.call @recv(%47, %49, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
    %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc98)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    cir.br ^bb15 loc(#loc621)
  ^bb15:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc104)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc622)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc105)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc105)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc105)
  ^bb17:  // pred: ^bb15
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc623)
    cir.brcond %70 ^bb18, ^bb19 loc(#loc105)
  ^bb18:  // pred: ^bb17
    %71 = cir.const #true loc(#loc105)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc105)
  ^bb19:  // pred: ^bb17
    %72 = cir.const #false loc(#loc105)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc105)
  ^bb20(%73: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc105)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%73 : !cir.bool) loc(#loc105)
  ^bb22(%74: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc105)
  ^bb23:  // pred: ^bb22
    cir.brcond %74 ^bb24, ^bb25 loc(#loc624)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc109)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc102)
  ^bb26:  // pred: ^bb25
    %75 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc110)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc625)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
    cir.store %81, %6 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.br ^bb5 loc(#loc48)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc48)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc627)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc120)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc628)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc629)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc123)
    cir.br ^bb31 loc(#loc118)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc118)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc46)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc41)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc41)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc630)
  ^bb36:  // pred: ^bb35
    %88 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc631)
    %89 = cir.call %88() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %90 ^bb37, ^bb53 loc(#loc632)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc633)
  ^bb38:  // pred: ^bb37
    %91 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc596)
    cir.store %91, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc596)
    cir.br ^bb39 loc(#loc634)
  ^bb39:  // pred: ^bb38
    %92 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %93 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %94 = cir.cmp(ge, %92, %93) : !s32i, !cir.bool loc(#loc635)
    cir.brcond %94 ^bb40, ^bb49 loc(#loc636)
  ^bb40:  // pred: ^bb39
    %95 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %96 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %97 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
    %98 = cir.ptr_stride(%97 : !cir.ptr<!s32i>, %96 : !s32i), !cir.ptr<!s32i> loc(#loc140)
    cir.store %95, %98 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    cir.br ^bb41 loc(#loc638)
  ^bb41:  // pred: ^bb40
    %99 = cir.const #cir.int<0> : !s32i loc(#loc143)
    cir.store %99, %4 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    cir.br ^bb42 loc(#loc638)
  ^bb42:  // 2 preds: ^bb41, ^bb46
    %100 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %101 = cir.const #cir.int<10> : !s32i loc(#loc146)
    %102 = cir.cmp(lt, %100, %101) : !s32i, !cir.bool loc(#loc640)
    cir.brcond %102 ^bb43, ^bb47 loc(#loc147)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc641)
  ^bb44:  // pred: ^bb43
    %103 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %104 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
    %105 = cir.ptr_stride(%104 : !cir.ptr<!s32i>, %103 : !s32i), !cir.ptr<!s32i> loc(#loc150)
    %106 = cir.load %105 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.call @printIntLine(%106) : (!s32i) -> () loc(#loc151)
    cir.br ^bb45 loc(#loc142)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc142)
  ^bb46:  // pred: ^bb45
    %107 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %108 = cir.unary(inc, %107) : !s32i, !s32i loc(#loc153)
    cir.store %108, %4 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    cir.br ^bb42 loc(#loc638)
  ^bb47:  // pred: ^bb42
    cir.br ^bb48 loc(#loc142)
  ^bb48:  // pred: ^bb47
    cir.br ^bb50 loc(#loc136)
  ^bb49:  // pred: ^bb39
    %109 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
    %110 = cir.cast(array_to_ptrdecay, %109 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%110) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    cir.br ^bb50 loc(#loc132)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc132)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc130)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc125)
  ^bb53:  // 2 preds: ^bb36, ^bb52
    cir.br ^bb54 loc(#loc125)
  ^bb54:  // pred: ^bb53
    cir.return loc(#loc22)
  } loc(#loc590)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc644)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc645)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc646)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc647)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    cir.return loc(#loc156)
  } loc(#loc643)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc648)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc649)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc172)
  cir.func @main(%arg0: !s32i loc(fused[#loc175, #loc176]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc651)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc652)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc181)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc182)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc653)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_good() : () -> () loc(#loc184)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc171)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc654)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08_bad() : () -> () loc(#loc188)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc172)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc655)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc655)
    cir.return %17 : !s32i loc(#loc655)
  } loc(#loc650)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc195)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc657)
    cir.return %2 : !s32i loc(#loc657)
  } loc(#loc656)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc198)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc659)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc660)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc661)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc662)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc663)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc664)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc665)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc216)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc666)
    cir.br ^bb1 loc(#loc667)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc668)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc220)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc220)
    cir.brcond %11 ^bb2, ^bb34 loc(#loc669)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc670)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc206)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc661)
    cir.br ^bb4 loc(#loc671)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc671)
  ^bb5:  // pred: ^bb26
    %14 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc227)
    cir.brcond %15 ^bb6, ^bb27 loc(#loc227)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc230)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc672)
    cir.br ^bb7 loc(#loc673)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc237)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc674)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc675)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc239)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc676)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc242)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc677)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc678)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc247)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc247)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc679)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc249)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc249)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc250)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc680)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc253)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc253)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc681)
    cir.br ^bb11 loc(#loc682)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc683)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc684)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc684)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc264)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc265)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc685)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc686)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc267)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc258)
  ^bb14:  // pred: ^bb13
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
    %50 = cir.const #cir.int<3> : !s32i loc(#loc270)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc270)
    %52 = cir.const #cir.int<4> : !u64i loc(#loc270)
    %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc270)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc270)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc270)
    %56 = cir.binop(add, %53, %55) : !u64i loc(#loc270)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc271)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc687)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %61 = cir.call @recv(%47, %49, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
    %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc273)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc688)
    cir.br ^bb15 loc(#loc689)
  ^bb15:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc279)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc280)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc280)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc280)
  ^bb17:  // pred: ^bb15
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc282)
    %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc691)
    cir.brcond %70 ^bb18, ^bb19 loc(#loc280)
  ^bb18:  // pred: ^bb17
    %71 = cir.const #true loc(#loc280)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc280)
  ^bb19:  // pred: ^bb17
    %72 = cir.const #false loc(#loc280)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc280)
  ^bb20(%73: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc280)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%73 : !cir.bool) loc(#loc280)
  ^bb22(%74: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc280)
  ^bb23:  // pred: ^bb22
    cir.brcond %74 ^bb24, ^bb25 loc(#loc692)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc284)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc277)
  ^bb26:  // pred: ^bb25
    %75 = cir.const #cir.int<0> : !s32i loc(#loc285)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc285)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc287)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc287)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc693)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc289)
    cir.store %81, %6 : !s32i, !cir.ptr<!s32i> loc(#loc694)
    cir.br ^bb5 loc(#loc226)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc226)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc695)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc295)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc696)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc697)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc298)
    cir.br ^bb31 loc(#loc293)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc293)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc224)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc219)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc219)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc698)
  ^bb36:  // pred: ^bb35
    %88 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc699)
    %89 = cir.call %88() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc301)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc301)
    cir.brcond %90 ^bb37, ^bb38 loc(#loc700)
  ^bb37:  // pred: ^bb36
    %91 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc197)
    %92 = cir.cast(array_to_ptrdecay, %91 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc306)
    cir.br ^bb62 loc(#loc304)
  ^bb38:  // pred: ^bb36
    cir.br ^bb39 loc(#loc701)
  ^bb39:  // pred: ^bb38
    %93 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc664)
    cir.store %93, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc664)
    cir.br ^bb40 loc(#loc702)
  ^bb40:  // pred: ^bb39
    %94 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %95 = cir.const #cir.int<0> : !s32i loc(#loc312)
    %96 = cir.cmp(ge, %94, %95) : !s32i, !cir.bool loc(#loc703)
    cir.brcond %96 ^bb41, ^bb46 loc(#loc313)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    %98 = cir.const #cir.int<10> : !s32i loc(#loc315)
    %99 = cir.cmp(lt, %97, %98) : !s32i, !cir.bool loc(#loc704)
    cir.brcond %99 ^bb42, ^bb43 loc(#loc313)
  ^bb42:  // pred: ^bb41
    %100 = cir.const #true loc(#loc313)
    cir.br ^bb44(%100 : !cir.bool) loc(#loc313)
  ^bb43:  // pred: ^bb41
    %101 = cir.const #false loc(#loc313)
    cir.br ^bb44(%101 : !cir.bool) loc(#loc313)
  ^bb44(%102: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:27)):  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc313)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47(%102 : !cir.bool) loc(#loc313)
  ^bb46:  // pred: ^bb40
    %103 = cir.const #false loc(#loc313)
    cir.br ^bb47(%103 : !cir.bool) loc(#loc313)
  ^bb47(%104: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:27)):  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc313)
  ^bb48:  // pred: ^bb47
    cir.brcond %104 ^bb49, ^bb58 loc(#loc705)
  ^bb49:  // pred: ^bb48
    %105 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %106 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %107 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc322)
    %108 = cir.ptr_stride(%107 : !cir.ptr<!s32i>, %106 : !s32i), !cir.ptr<!s32i> loc(#loc322)
    cir.store %105, %108 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    cir.br ^bb50 loc(#loc707)
  ^bb50:  // pred: ^bb49
    %109 = cir.const #cir.int<0> : !s32i loc(#loc325)
    cir.store %109, %4 : !s32i, !cir.ptr<!s32i> loc(#loc708)
    cir.br ^bb51 loc(#loc707)
  ^bb51:  // 2 preds: ^bb50, ^bb55
    %110 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    %111 = cir.const #cir.int<10> : !s32i loc(#loc328)
    %112 = cir.cmp(lt, %110, %111) : !s32i, !cir.bool loc(#loc709)
    cir.brcond %112 ^bb52, ^bb56 loc(#loc329)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc710)
  ^bb53:  // pred: ^bb52
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    %114 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc332)
    %115 = cir.ptr_stride(%114 : !cir.ptr<!s32i>, %113 : !s32i), !cir.ptr<!s32i> loc(#loc332)
    %116 = cir.load %115 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc333)
    cir.br ^bb54 loc(#loc324)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc324)
  ^bb55:  // pred: ^bb54
    %117 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    %118 = cir.unary(inc, %117) : !s32i, !s32i loc(#loc335)
    cir.store %118, %4 : !s32i, !cir.ptr<!s32i> loc(#loc711)
    cir.br ^bb51 loc(#loc707)
  ^bb56:  // pred: ^bb51
    cir.br ^bb57 loc(#loc324)
  ^bb57:  // pred: ^bb56
    cir.br ^bb59 loc(#loc318)
  ^bb58:  // pred: ^bb48
    %119 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc198)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%120) : (!cir.ptr<!s8i>) -> () loc(#loc336)
    cir.br ^bb59 loc(#loc310)
  ^bb59:  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc310)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc308)
  ^bb61:  // pred: ^bb60
    cir.br ^bb62 loc(#loc300)
  ^bb62:  // 2 preds: ^bb37, ^bb61
    cir.br ^bb63 loc(#loc300)
  ^bb63:  // pred: ^bb62
    cir.return loc(#loc200)
  } loc(#loc658)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc339)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc713)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc713)
    cir.return %2 : !s32i loc(#loc713)
  } loc(#loc712)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc715)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc716)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc717)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc718)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc719)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc720)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc721)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc357)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc358)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc722)
    cir.br ^bb1 loc(#loc723)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc724)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc362)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc362)
    cir.brcond %11 ^bb2, ^bb34 loc(#loc725)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc726)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc348)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc348)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc717)
    cir.br ^bb4 loc(#loc727)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc727)
  ^bb5:  // pred: ^bb26
    %14 = cir.const #cir.int<0> : !s32i loc(#loc369)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc369)
    cir.brcond %15 ^bb6, ^bb27 loc(#loc369)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc370)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc371)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc372)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc373)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc728)
    cir.br ^bb7 loc(#loc729)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc379)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc379)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc730)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc731)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc381)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc377)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc732)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc384)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc733)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc734)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc389)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc389)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc735)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc391)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc391)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc392)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc736)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc395)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc395)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc396)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc737)
    cir.br ^bb11 loc(#loc738)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc739)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc740)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc740)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc406)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc407)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc407)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc741)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc742)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc409)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc400)
  ^bb14:  // pred: ^bb13
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc411)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc411)
    %50 = cir.const #cir.int<3> : !s32i loc(#loc412)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc412)
    %52 = cir.const #cir.int<4> : !u64i loc(#loc412)
    %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc412)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc412)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc412)
    %56 = cir.binop(add, %53, %55) : !u64i loc(#loc412)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc413)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc413)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc743)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc414)
    %61 = cir.call @recv(%47, %49, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc415)
    %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc415)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc744)
    cir.br ^bb15 loc(#loc745)
  ^bb15:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc421)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc421)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc746)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc422)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc422)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc422)
  ^bb17:  // pred: ^bb15
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc423)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc424)
    %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc747)
    cir.brcond %70 ^bb18, ^bb19 loc(#loc422)
  ^bb18:  // pred: ^bb17
    %71 = cir.const #true loc(#loc422)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc422)
  ^bb19:  // pred: ^bb17
    %72 = cir.const #false loc(#loc422)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc422)
  ^bb20(%73: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc422)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%73 : !cir.bool) loc(#loc422)
  ^bb22(%74: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc422)
  ^bb23:  // pred: ^bb22
    cir.brcond %74 ^bb24, ^bb25 loc(#loc748)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc426)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc419)
  ^bb26:  // pred: ^bb25
    %75 = cir.const #cir.int<0> : !s32i loc(#loc427)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc427)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc428)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc429)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc429)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc749)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc430)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc431)
    cir.store %81, %6 : !s32i, !cir.ptr<!s32i> loc(#loc750)
    cir.br ^bb5 loc(#loc368)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc368)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc751)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc436)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc437)
    %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc437)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc752)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc753)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc440)
    cir.br ^bb31 loc(#loc435)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc435)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc366)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc361)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc361)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc754)
  ^bb36:  // pred: ^bb35
    %88 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc755)
    %89 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc443)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc443)
    cir.brcond %90 ^bb37, ^bb61 loc(#loc756)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc757)
  ^bb38:  // pred: ^bb37
    %91 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc720)
    cir.store %91, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc720)
    cir.br ^bb39 loc(#loc758)
  ^bb39:  // pred: ^bb38
    %92 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    %93 = cir.const #cir.int<0> : !s32i loc(#loc451)
    %94 = cir.cmp(ge, %92, %93) : !s32i, !cir.bool loc(#loc759)
    cir.brcond %94 ^bb40, ^bb45 loc(#loc452)
  ^bb40:  // pred: ^bb39
    %95 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc454)
    %97 = cir.cmp(lt, %95, %96) : !s32i, !cir.bool loc(#loc760)
    cir.brcond %97 ^bb41, ^bb42 loc(#loc452)
  ^bb41:  // pred: ^bb40
    %98 = cir.const #true loc(#loc452)
    cir.br ^bb43(%98 : !cir.bool) loc(#loc452)
  ^bb42:  // pred: ^bb40
    %99 = cir.const #false loc(#loc452)
    cir.br ^bb43(%99 : !cir.bool) loc(#loc452)
  ^bb43(%100: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:27)):  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc452)
  ^bb44:  // pred: ^bb43
    cir.br ^bb46(%100 : !cir.bool) loc(#loc452)
  ^bb45:  // pred: ^bb39
    %101 = cir.const #false loc(#loc452)
    cir.br ^bb46(%101 : !cir.bool) loc(#loc452)
  ^bb46(%102: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:27)):  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc452)
  ^bb47:  // pred: ^bb46
    cir.brcond %102 ^bb48, ^bb57 loc(#loc761)
  ^bb48:  // pred: ^bb47
    %103 = cir.const #cir.int<1> : !s32i loc(#loc459)
    %104 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %105 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc461)
    %106 = cir.ptr_stride(%105 : !cir.ptr<!s32i>, %104 : !s32i), !cir.ptr<!s32i> loc(#loc461)
    cir.store %103, %106 : !s32i, !cir.ptr<!s32i> loc(#loc762)
    cir.br ^bb49 loc(#loc763)
  ^bb49:  // pred: ^bb48
    %107 = cir.const #cir.int<0> : !s32i loc(#loc464)
    cir.store %107, %4 : !s32i, !cir.ptr<!s32i> loc(#loc764)
    cir.br ^bb50 loc(#loc763)
  ^bb50:  // 2 preds: ^bb49, ^bb54
    %108 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc466)
    %109 = cir.const #cir.int<10> : !s32i loc(#loc467)
    %110 = cir.cmp(lt, %108, %109) : !s32i, !cir.bool loc(#loc765)
    cir.brcond %110 ^bb51, ^bb55 loc(#loc468)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc766)
  ^bb52:  // pred: ^bb51
    %111 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    %112 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc471)
    %113 = cir.ptr_stride(%112 : !cir.ptr<!s32i>, %111 : !s32i), !cir.ptr<!s32i> loc(#loc471)
    %114 = cir.load %113 : !cir.ptr<!s32i>, !s32i loc(#loc471)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc472)
    cir.br ^bb53 loc(#loc463)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc463)
  ^bb54:  // pred: ^bb53
    %115 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc473)
    %116 = cir.unary(inc, %115) : !s32i, !s32i loc(#loc474)
    cir.store %116, %4 : !s32i, !cir.ptr<!s32i> loc(#loc767)
    cir.br ^bb50 loc(#loc763)
  ^bb55:  // pred: ^bb50
    cir.br ^bb56 loc(#loc463)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58 loc(#loc457)
  ^bb57:  // pred: ^bb47
    %117 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc475)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc475)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc476)
    cir.br ^bb58 loc(#loc449)
  ^bb58:  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc449)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc447)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc442)
  ^bb61:  // 2 preds: ^bb36, ^bb60
    cir.br ^bb62 loc(#loc442)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc342)
  } loc(#loc714)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc769)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc770)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc771)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc485)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc486)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc772)
    cir.br ^bb1 loc(#loc773)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc774)
    %6 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc490)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc490)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc775)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc495)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc495)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc496)
    cir.br ^bb4 loc(#loc493)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc497)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc776)
    cir.br ^bb4 loc(#loc489)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc489)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc777)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc778)
    %12 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc501)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc501)
    cir.brcond %13 ^bb7, ^bb23 loc(#loc779)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc780)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc770)
    cir.store %14, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc770)
    cir.br ^bb9 loc(#loc781)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc508)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc509)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc782)
    cir.brcond %17 ^bb10, ^bb19 loc(#loc783)
  ^bb10:  // pred: ^bb9
    %18 = cir.const #cir.int<1> : !s32i loc(#loc513)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc514)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc515)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc515)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc784)
    cir.br ^bb11 loc(#loc785)
  ^bb11:  // pred: ^bb10
    %22 = cir.const #cir.int<0> : !s32i loc(#loc518)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc786)
    cir.br ^bb12 loc(#loc785)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc520)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc521)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc787)
    cir.brcond %25 ^bb13, ^bb17 loc(#loc522)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc788)
  ^bb14:  // pred: ^bb13
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc524)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc525)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc525)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc525)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc526)
    cir.br ^bb15 loc(#loc517)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc517)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc527)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc528)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc789)
    cir.br ^bb12 loc(#loc785)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc517)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc511)
  ^bb19:  // pred: ^bb9
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc529)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc529)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc530)
    cir.br ^bb20 loc(#loc507)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc507)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc505)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc500)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc500)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc478)
  } loc(#loc768)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc791)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc792)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc793)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc539)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc540)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc794)
    cir.br ^bb1 loc(#loc795)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc796)
    %6 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc544)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc544)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc797)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc547)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc798)
    cir.br ^bb3 loc(#loc543)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc543)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc799)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc800)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc551)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc551)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc801)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc802)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc792)
    cir.store %12, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc792)
    cir.br ^bb8 loc(#loc803)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc558)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc559)
    %15 = cir.cmp(ge, %13, %14) : !s32i, !cir.bool loc(#loc804)
    cir.brcond %15 ^bb9, ^bb18 loc(#loc805)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<1> : !s32i loc(#loc563)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc564)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc565)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc565)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc806)
    cir.br ^bb10 loc(#loc807)
  ^bb10:  // pred: ^bb9
    %20 = cir.const #cir.int<0> : !s32i loc(#loc568)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc808)
    cir.br ^bb11 loc(#loc807)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc570)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc571)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc809)
    cir.brcond %23 ^bb12, ^bb16 loc(#loc572)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc810)
  ^bb13:  // pred: ^bb12
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc574)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc575)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc575)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc575)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc576)
    cir.br ^bb14 loc(#loc567)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc567)
  ^bb15:  // pred: ^bb14
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc577)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc578)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc811)
    cir.br ^bb11 loc(#loc807)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc567)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc561)
  ^bb18:  // pred: ^bb8
    %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc579)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc579)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc580)
    cir.br ^bb19 loc(#loc557)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc557)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc555)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc550)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc550)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc532)
  } loc(#loc790)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":90:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":139:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":57:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":143:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":69:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":69:17)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":70:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":70:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":71:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":71:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":72:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":72:45)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":124:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":124:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":125:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":125:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":59:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":59:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":61:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":61:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":61:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":62:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":120:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":62:8)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":62:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":63:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":64:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":119:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":73:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":108:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":108:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:40)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:49)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:62)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":83:73)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":84:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":87:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":84:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":84:38)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":85:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":86:21)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:37)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:51)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":88:52)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":89:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":89:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":90:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":90:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":90:63)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":91:42)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":91:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":91:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":91:50)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":95:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:62)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:63)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:72)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:86)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":92:92)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":93:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":94:21)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:35)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:50)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:63)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:81)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:84)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:30)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":98:85)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:17)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":102:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:35)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:51)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":99:65)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":100:17)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":101:21)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":104:43)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":104:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":104:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":106:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":106:24)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":106:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":106:40)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":109:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":112:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":109:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":109:34)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":110:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":111:30)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":111:17)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":121:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":142:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":121:8)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":121:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":122:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":123:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":141:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":128:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":140:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":128:17)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":128:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":129:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":136:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":138:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":130:32)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":130:24)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":130:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":135:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:25)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:21)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:28)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:32)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:30)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":133:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":134:41)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":134:34)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":134:21)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:37)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":132:36)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":139:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":407:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":413:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":409:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":409:14)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":410:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":410:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":411:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":411:14)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":412:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":412:14)
#loc165 = loc("/usr/include/stdlib.h":575:1)
#loc166 = loc("/usr/include/stdlib.h":575:41)
#loc167 = loc("/usr/include/time.h":76:1)
#loc168 = loc("/usr/include/time.h":76:38)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":429:15)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":431:15)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":434:15)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":436:15)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":424:1)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":439:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":425:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":427:27)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":427:22)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":427:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":429:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":430:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":430:71)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":431:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":434:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":435:5)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":435:70)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":436:5)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":438:12)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":438:5)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":45:1)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":48:1)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":47:12)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":47:5)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":217:19)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":236:27)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":150:1)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":240:1)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":162:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":162:17)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":163:13)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":163:32)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":164:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":164:36)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":165:13)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":165:45)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":222:13)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":222:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":223:13)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":223:34)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":152:5)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":152:9)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":154:13)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":154:12)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":154:5)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":155:5)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":213:5)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":155:8)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":155:26)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":156:5)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":157:9)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":212:9)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":166:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":201:21)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":201:20)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:40)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:49)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:62)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:33)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:17)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":176:73)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":177:17)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":180:17)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":177:21)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":177:38)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":178:17)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":179:21)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:24)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:25)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:34)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:37)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:51)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":181:52)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":182:38)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":182:17)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":183:53)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":183:43)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":183:17)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":183:63)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":184:42)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":184:36)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":184:17)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":184:50)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:17)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":188:17)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:29)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:62)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:63)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:72)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:86)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:21)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":185:92)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":186:17)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":187:21)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:35)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:50)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:63)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:81)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:84)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:30)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:17)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":191:85)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:17)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":195:17)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:21)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:35)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:51)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":192:65)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":193:17)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":194:21)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":197:43)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":197:29)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":197:17)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":199:29)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":199:24)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":199:17)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":199:40)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":202:13)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":205:13)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":202:17)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":202:34)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":203:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":204:30)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":204:17)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":214:5)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":239:5)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":214:8)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":214:27)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":215:5)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":218:5)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":220:5)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":217:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":221:9)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":238:9)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:13)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":237:13)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:17)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:25)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:30)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:38)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":225:40)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":226:13)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":233:13)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":235:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":227:32)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":227:24)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":227:17)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:17)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":232:17)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:25)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:21)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:28)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:32)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:30)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":230:17)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":231:41)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":231:34)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":231:21)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:37)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":229:36)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":236:17)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":50:1)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":53:1)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":52:12)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":52:5)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":243:1)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":328:1)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":255:13)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":255:17)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":256:13)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":256:32)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":257:13)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":257:36)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":258:13)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":258:45)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":310:13)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":310:17)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":311:13)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":311:34)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":245:5)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":245:9)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":247:13)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":247:12)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":247:5)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":248:5)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":306:5)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":248:8)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":248:26)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":249:5)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":250:9)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":305:9)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":259:13)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":294:21)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":294:20)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:40)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:49)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:62)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:33)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:17)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":269:73)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":270:17)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":273:17)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":270:21)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":270:38)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":271:17)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":272:21)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:24)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:25)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:34)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:37)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:51)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:17)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":274:52)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":275:38)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":275:17)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":276:53)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":276:43)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":276:17)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":276:63)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":277:42)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":277:36)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":277:17)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":277:50)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:17)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":281:17)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:29)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:62)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:63)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:72)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:86)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:21)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":278:92)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":279:17)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":280:21)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:35)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:50)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:63)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:81)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:84)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:30)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:17)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":284:85)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:17)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":288:17)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:21)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:35)
#loc423 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:51)
#loc424 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":285:65)
#loc425 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":286:17)
#loc426 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":287:21)
#loc427 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":290:43)
#loc428 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":290:29)
#loc429 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":290:17)
#loc430 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":292:29)
#loc431 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":292:24)
#loc432 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":292:17)
#loc433 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":292:40)
#loc434 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":295:13)
#loc435 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":298:13)
#loc436 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":295:17)
#loc437 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":295:34)
#loc438 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":296:13)
#loc439 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":297:30)
#loc440 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":297:17)
#loc441 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":307:5)
#loc442 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":327:5)
#loc443 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":307:8)
#loc444 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":307:26)
#loc445 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":308:5)
#loc446 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":309:9)
#loc447 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":326:9)
#loc448 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:13)
#loc449 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":325:13)
#loc450 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:17)
#loc451 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:25)
#loc453 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:30)
#loc454 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:38)
#loc455 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":313:40)
#loc456 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":314:13)
#loc457 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":321:13)
#loc458 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":323:13)
#loc459 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":315:32)
#loc460 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":315:24)
#loc461 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":315:17)
#loc462 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:17)
#loc463 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":320:17)
#loc464 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:25)
#loc465 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:21)
#loc466 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:28)
#loc467 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:32)
#loc468 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:30)
#loc469 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":318:17)
#loc470 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":319:41)
#loc471 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":319:34)
#loc472 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":319:21)
#loc473 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:37)
#loc474 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":317:36)
#loc475 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":324:27)
#loc476 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":324:17)
#loc477 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":331:1)
#loc478 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":369:1)
#loc479 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":350:13)
#loc480 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":350:17)
#loc481 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":351:13)
#loc482 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":351:34)
#loc483 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":333:5)
#loc484 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":333:9)
#loc485 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":335:13)
#loc486 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":335:12)
#loc487 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":335:5)
#loc488 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":336:5)
#loc489 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":346:5)
#loc490 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":336:8)
#loc491 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":336:27)
#loc492 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":337:5)
#loc493 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":340:5)
#loc494 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":342:5)
#loc495 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":339:19)
#loc496 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":339:9)
#loc497 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":345:16)
#loc498 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":345:9)
#loc499 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":347:5)
#loc500 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":368:5)
#loc501 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":347:8)
#loc502 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":347:26)
#loc503 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":348:5)
#loc504 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":349:9)
#loc505 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":367:9)
#loc506 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":354:13)
#loc507 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":366:13)
#loc508 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":354:17)
#loc509 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":354:25)
#loc510 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":355:13)
#loc511 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":362:13)
#loc512 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":364:13)
#loc513 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":356:32)
#loc514 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":356:24)
#loc515 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":356:17)
#loc516 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:17)
#loc517 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":361:17)
#loc518 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:25)
#loc519 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:21)
#loc520 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:28)
#loc521 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:32)
#loc522 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:30)
#loc523 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":359:17)
#loc524 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":360:41)
#loc525 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":360:34)
#loc526 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":360:21)
#loc527 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:37)
#loc528 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":358:36)
#loc529 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":365:27)
#loc530 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":365:17)
#loc531 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":372:1)
#loc532 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":405:1)
#loc533 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":386:13)
#loc534 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":386:17)
#loc535 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":387:13)
#loc536 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":387:34)
#loc537 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":374:5)
#loc538 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":374:9)
#loc539 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":376:13)
#loc540 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":376:12)
#loc541 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":376:5)
#loc542 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":377:5)
#loc543 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":382:5)
#loc544 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":377:8)
#loc545 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":377:26)
#loc546 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":378:5)
#loc547 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":381:16)
#loc548 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":381:9)
#loc549 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":383:5)
#loc550 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":404:5)
#loc551 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":383:8)
#loc552 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":383:26)
#loc553 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":384:5)
#loc554 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":385:9)
#loc555 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":403:9)
#loc556 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":390:13)
#loc557 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":402:13)
#loc558 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":390:17)
#loc559 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":390:25)
#loc560 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":391:13)
#loc561 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":398:13)
#loc562 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":400:13)
#loc563 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":392:32)
#loc564 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":392:24)
#loc565 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":392:17)
#loc566 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:17)
#loc567 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":397:17)
#loc568 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:25)
#loc569 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:21)
#loc570 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:28)
#loc571 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:32)
#loc572 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:30)
#loc573 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":395:17)
#loc574 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":396:41)
#loc575 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":396:34)
#loc576 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":396:21)
#loc577 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:37)
#loc578 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":394:36)
#loc579 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":401:27)
#loc580 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_08.c":401:17)
#loc581 = loc(fused[#loc1, #loc2])
#loc582 = loc(fused[#loc3, #loc4])
#loc583 = loc(fused[#loc6, #loc7])
#loc584 = loc(fused[#loc8, #loc9])
#loc585 = loc(fused[#loc10, #loc11])
#loc586 = loc(fused[#loc12, #loc13])
#loc587 = loc(fused[#loc14, #loc15])
#loc588 = loc(fused[#loc16, #loc17])
#loc589 = loc(fused[#loc18, #loc19])
#loc590 = loc(fused[#loc21, #loc22])
#loc591 = loc(fused[#loc23, #loc24])
#loc592 = loc(fused[#loc25, #loc26])
#loc593 = loc(fused[#loc27, #loc28])
#loc594 = loc(fused[#loc29, #loc30])
#loc595 = loc(fused[#loc31, #loc32])
#loc596 = loc(fused[#loc33, #loc34])
#loc597 = loc(fused[#loc35, #loc36])
#loc598 = loc(fused[#loc39, #loc37])
#loc599 = loc(fused[#loc40, #loc41])
#loc600 = loc(fused[#loc42, #loc43])
#loc601 = loc(fused[#loc44, #loc41])
#loc602 = loc(fused[#loc45, #loc46])
#loc603 = loc(fused[#loc47, #loc48])
#loc604 = loc(fused[#loc54, #loc55])
#loc605 = loc(fused[#loc56, #loc57])
#loc606 = loc(fused[#loc58, #loc59])
#loc607 = loc(fused[#loc60, #loc57])
#loc608 = loc(fused[#loc62, #loc63])
#loc609 = loc(fused[#loc65, #loc66])
#loc610 = loc(fused[#loc67, #loc68])
#loc611 = loc(fused[#loc71, #loc69])
#loc612 = loc(fused[#loc75, #loc76])
#loc613 = loc(fused[#loc80, #loc81])
#loc614 = loc(fused[#loc82, #loc83])
#loc615 = loc(fused[#loc85, #loc86])
#loc616 = loc(fused[#loc87, #loc88])
#loc617 = loc(fused[#loc89, #loc90])
#loc618 = loc(fused[#loc91, #loc83])
#loc619 = loc(fused[#loc95, #loc96])
#loc620 = loc(fused[#loc99, #loc100])
#loc621 = loc(fused[#loc101, #loc102])
#loc622 = loc(fused[#loc103, #loc104])
#loc623 = loc(fused[#loc106, #loc107])
#loc624 = loc(fused[#loc108, #loc102])
#loc625 = loc(fused[#loc112, #loc110])
#loc626 = loc(fused[#loc115, #loc116])
#loc627 = loc(fused[#loc117, #loc118])
#loc628 = loc(fused[#loc119, #loc120])
#loc629 = loc(fused[#loc121, #loc118])
#loc630 = loc(fused[#loc124, #loc125])
#loc631 = loc(fused[#loc126, #loc127])
#loc632 = loc(fused[#loc128, #loc125])
#loc633 = loc(fused[#loc129, #loc130])
#loc634 = loc(fused[#loc131, #loc132])
#loc635 = loc(fused[#loc133, #loc134])
#loc636 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc637 = loc(fused[#loc140, #loc138])
#loc638 = loc(fused[#loc141, #loc142])
#loc639 = loc(fused[#loc144, #loc143])
#loc640 = loc(fused[#loc145, #loc146])
#loc641 = loc(fused[#loc148, #loc142])
#loc642 = loc(fused[#loc153, #loc152])
#loc643 = loc(fused[#loc155, #loc156])
#loc644 = loc(fused[#loc157, #loc158])
#loc645 = loc(fused[#loc159, #loc160])
#loc646 = loc(fused[#loc161, #loc162])
#loc647 = loc(fused[#loc163, #loc164])
#loc648 = loc(fused[#loc165, #loc166])
#loc649 = loc(fused[#loc167, #loc168])
#loc650 = loc(fused[#loc173, #loc174])
#loc653 = loc(fused[#loc184, #loc185])
#loc654 = loc(fused[#loc188, #loc189])
#loc655 = loc(fused[#loc192, #loc191])
#loc656 = loc(fused[#loc193, #loc194])
#loc657 = loc(fused[#loc196, #loc195])
#loc658 = loc(fused[#loc199, #loc200])
#loc659 = loc(fused[#loc201, #loc202])
#loc660 = loc(fused[#loc203, #loc204])
#loc661 = loc(fused[#loc205, #loc206])
#loc662 = loc(fused[#loc207, #loc208])
#loc663 = loc(fused[#loc209, #loc210])
#loc664 = loc(fused[#loc211, #loc212])
#loc665 = loc(fused[#loc213, #loc214])
#loc666 = loc(fused[#loc217, #loc215])
#loc667 = loc(fused[#loc218, #loc219])
#loc668 = loc(fused[#loc220, #loc221])
#loc669 = loc(fused[#loc222, #loc219])
#loc670 = loc(fused[#loc223, #loc224])
#loc671 = loc(fused[#loc225, #loc226])
#loc672 = loc(fused[#loc232, #loc233])
#loc673 = loc(fused[#loc234, #loc235])
#loc674 = loc(fused[#loc236, #loc237])
#loc675 = loc(fused[#loc238, #loc235])
#loc676 = loc(fused[#loc240, #loc241])
#loc677 = loc(fused[#loc243, #loc244])
#loc678 = loc(fused[#loc245, #loc246])
#loc679 = loc(fused[#loc248, #loc247])
#loc680 = loc(fused[#loc251, #loc252])
#loc681 = loc(fused[#loc255, #loc256])
#loc682 = loc(fused[#loc257, #loc258])
#loc683 = loc(fused[#loc260, #loc261])
#loc684 = loc(fused[#loc262, #loc263])
#loc685 = loc(fused[#loc264, #loc265])
#loc686 = loc(fused[#loc266, #loc258])
#loc687 = loc(fused[#loc270, #loc271])
#loc688 = loc(fused[#loc274, #loc275])
#loc689 = loc(fused[#loc276, #loc277])
#loc690 = loc(fused[#loc278, #loc279])
#loc691 = loc(fused[#loc281, #loc282])
#loc692 = loc(fused[#loc283, #loc277])
#loc693 = loc(fused[#loc287, #loc285])
#loc694 = loc(fused[#loc290, #loc291])
#loc695 = loc(fused[#loc292, #loc293])
#loc696 = loc(fused[#loc294, #loc295])
#loc697 = loc(fused[#loc296, #loc293])
#loc698 = loc(fused[#loc299, #loc300])
#loc699 = loc(fused[#loc301, #loc302])
#loc700 = loc(fused[#loc303, #loc304, #loc305, #loc300])
#loc701 = loc(fused[#loc307, #loc308])
#loc702 = loc(fused[#loc309, #loc310])
#loc703 = loc(fused[#loc311, #loc312])
#loc704 = loc(fused[#loc314, #loc316])
#loc705 = loc(fused[#loc317, #loc318, #loc319, #loc310])
#loc706 = loc(fused[#loc322, #loc320])
#loc707 = loc(fused[#loc323, #loc324])
#loc708 = loc(fused[#loc326, #loc325])
#loc709 = loc(fused[#loc327, #loc328])
#loc710 = loc(fused[#loc330, #loc324])
#loc711 = loc(fused[#loc335, #loc334])
#loc712 = loc(fused[#loc337, #loc338])
#loc713 = loc(fused[#loc340, #loc339])
#loc714 = loc(fused[#loc341, #loc342])
#loc715 = loc(fused[#loc343, #loc344])
#loc716 = loc(fused[#loc345, #loc346])
#loc717 = loc(fused[#loc347, #loc348])
#loc718 = loc(fused[#loc349, #loc350])
#loc719 = loc(fused[#loc351, #loc352])
#loc720 = loc(fused[#loc353, #loc354])
#loc721 = loc(fused[#loc355, #loc356])
#loc722 = loc(fused[#loc359, #loc357])
#loc723 = loc(fused[#loc360, #loc361])
#loc724 = loc(fused[#loc362, #loc363])
#loc725 = loc(fused[#loc364, #loc361])
#loc726 = loc(fused[#loc365, #loc366])
#loc727 = loc(fused[#loc367, #loc368])
#loc728 = loc(fused[#loc374, #loc375])
#loc729 = loc(fused[#loc376, #loc377])
#loc730 = loc(fused[#loc378, #loc379])
#loc731 = loc(fused[#loc380, #loc377])
#loc732 = loc(fused[#loc382, #loc383])
#loc733 = loc(fused[#loc385, #loc386])
#loc734 = loc(fused[#loc387, #loc388])
#loc735 = loc(fused[#loc390, #loc389])
#loc736 = loc(fused[#loc393, #loc394])
#loc737 = loc(fused[#loc397, #loc398])
#loc738 = loc(fused[#loc399, #loc400])
#loc739 = loc(fused[#loc402, #loc403])
#loc740 = loc(fused[#loc404, #loc405])
#loc741 = loc(fused[#loc406, #loc407])
#loc742 = loc(fused[#loc408, #loc400])
#loc743 = loc(fused[#loc412, #loc413])
#loc744 = loc(fused[#loc416, #loc417])
#loc745 = loc(fused[#loc418, #loc419])
#loc746 = loc(fused[#loc420, #loc421])
#loc747 = loc(fused[#loc423, #loc424])
#loc748 = loc(fused[#loc425, #loc419])
#loc749 = loc(fused[#loc429, #loc427])
#loc750 = loc(fused[#loc432, #loc433])
#loc751 = loc(fused[#loc434, #loc435])
#loc752 = loc(fused[#loc436, #loc437])
#loc753 = loc(fused[#loc438, #loc435])
#loc754 = loc(fused[#loc441, #loc442])
#loc755 = loc(fused[#loc443, #loc444])
#loc756 = loc(fused[#loc445, #loc442])
#loc757 = loc(fused[#loc446, #loc447])
#loc758 = loc(fused[#loc448, #loc449])
#loc759 = loc(fused[#loc450, #loc451])
#loc760 = loc(fused[#loc453, #loc455])
#loc761 = loc(fused[#loc456, #loc457, #loc458, #loc449])
#loc762 = loc(fused[#loc461, #loc459])
#loc763 = loc(fused[#loc462, #loc463])
#loc764 = loc(fused[#loc465, #loc464])
#loc765 = loc(fused[#loc466, #loc467])
#loc766 = loc(fused[#loc469, #loc463])
#loc767 = loc(fused[#loc474, #loc473])
#loc768 = loc(fused[#loc477, #loc478])
#loc769 = loc(fused[#loc479, #loc480])
#loc770 = loc(fused[#loc481, #loc482])
#loc771 = loc(fused[#loc483, #loc484])
#loc772 = loc(fused[#loc487, #loc485])
#loc773 = loc(fused[#loc488, #loc489])
#loc774 = loc(fused[#loc490, #loc491])
#loc775 = loc(fused[#loc492, #loc493, #loc494, #loc489])
#loc776 = loc(fused[#loc498, #loc497])
#loc777 = loc(fused[#loc499, #loc500])
#loc778 = loc(fused[#loc501, #loc502])
#loc779 = loc(fused[#loc503, #loc500])
#loc780 = loc(fused[#loc504, #loc505])
#loc781 = loc(fused[#loc506, #loc507])
#loc782 = loc(fused[#loc508, #loc509])
#loc783 = loc(fused[#loc510, #loc511, #loc512, #loc507])
#loc784 = loc(fused[#loc515, #loc513])
#loc785 = loc(fused[#loc516, #loc517])
#loc786 = loc(fused[#loc519, #loc518])
#loc787 = loc(fused[#loc520, #loc521])
#loc788 = loc(fused[#loc523, #loc517])
#loc789 = loc(fused[#loc528, #loc527])
#loc790 = loc(fused[#loc531, #loc532])
#loc791 = loc(fused[#loc533, #loc534])
#loc792 = loc(fused[#loc535, #loc536])
#loc793 = loc(fused[#loc537, #loc538])
#loc794 = loc(fused[#loc541, #loc539])
#loc795 = loc(fused[#loc542, #loc543])
#loc796 = loc(fused[#loc544, #loc545])
#loc797 = loc(fused[#loc546, #loc543])
#loc798 = loc(fused[#loc548, #loc547])
#loc799 = loc(fused[#loc549, #loc550])
#loc800 = loc(fused[#loc551, #loc552])
#loc801 = loc(fused[#loc553, #loc550])
#loc802 = loc(fused[#loc554, #loc555])
#loc803 = loc(fused[#loc556, #loc557])
#loc804 = loc(fused[#loc558, #loc559])
#loc805 = loc(fused[#loc560, #loc561, #loc562, #loc557])
#loc806 = loc(fused[#loc565, #loc563])
#loc807 = loc(fused[#loc566, #loc567])
#loc808 = loc(fused[#loc569, #loc568])
#loc809 = loc(fused[#loc570, #loc571])
#loc810 = loc(fused[#loc573, #loc567])
#loc811 = loc(fused[#loc578, #loc577])
