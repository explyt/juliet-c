!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":117:10)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":117:14)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":117:20)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":117:32)
#loc211 = loc(fused[#loc60, #loc61])
#loc212 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc191)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc192)
  cir.func private @printDoubleLine(!cir.double) loc(#loc193)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc200)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc201)
    cir.store %6, %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc196)
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc29)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc30)
    %10 = cir.cmp(eq, %7, %9) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc203)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc204)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    %14 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc17)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc35)
    cir.store %15, %1 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc197)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc36)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc38)
    %19 = cir.load %18 : !cir.ptr<!cir.double>, !cir.double loc(#loc39)
    cir.call @printDoubleLine(%19) : (!cir.double) -> () loc(#loc40)
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc41)
  ^bb11:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb12 loc(#loc43)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc19)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc13)
  } loc(#loc195)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc205)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_15_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc88)
    cir.br ^bb2 loc(#loc86)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc86)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb18 loc(#loc92)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc223)
    cir.store %9, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc218)
    cir.br ^bb7 loc(#loc224)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc100)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc101)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc225)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc226)
  ^bb8:  // pred: ^bb7
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc105)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb9 loc(#loc99)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc99)
  ^bb10:  // pred: ^bb9
    %17 = cir.const #cir.int<8> : !u64i loc(#loc227)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc228)
    cir.store %19, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc229)
    cir.br ^bb11 loc(#loc230)
  ^bb11:  // pred: ^bb10
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc113)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc114)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.double>, !cir.bool loc(#loc231)
    cir.brcond %23 ^bb12, ^bb13 loc(#loc232)
  ^bb12:  // pred: ^bb11
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc118)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb13 loc(#loc112)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc112)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc119)
    %28 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc120)
    cir.store %27, %28 : !cir.double, !cir.ptr<!cir.double> loc(#loc233)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc122)
    %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc123)
    cir.store %29, %30 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc234)
    cir.br ^bb15 loc(#loc235)
  ^bb15:  // pred: ^bb14
    %31 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc85)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc127)
    cir.store %32, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc219)
    %33 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc128)
    %34 = cir.load %33 : !cir.ptr<!cir.double>, !cir.double loc(#loc129)
    cir.call @printDoubleLine(%34) : (!cir.double) -> () loc(#loc130)
    cir.br ^bb16 loc(#loc126)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc131)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc131)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    cir.br ^bb17 loc(#loc94)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc133)
  ^bb18:  // 2 preds: ^bb4, ^bb17
    cir.br ^bb19 loc(#loc87)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc79)
  } loc(#loc216)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc144)
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb17 [
      6: ^bb4
    ] loc(#loc142)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc148)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc242)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc243)
    cir.store %7, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc238)
    cir.br ^bb6 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc153)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc154)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc245)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc158)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc152)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<8> : !u64i loc(#loc247)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc248)
    cir.store %17, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc249)
    cir.br ^bb10 loc(#loc250)
  ^bb10:  // pred: ^bb9
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc166)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc167)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!cir.double>, !cir.bool loc(#loc251)
    cir.brcond %21 ^bb11, ^bb12 loc(#loc252)
  ^bb11:  // pred: ^bb10
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc171)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb12 loc(#loc165)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    %25 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc172)
    %26 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc173)
    cir.store %25, %26 : !cir.double, !cir.ptr<!cir.double> loc(#loc253)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc175)
    %28 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc176)
    cir.store %27, %28 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc254)
    cir.br ^bb14 loc(#loc255)
  ^bb14:  // pred: ^bb13
    %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc141)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc180)
    cir.store %30, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc239)
    %31 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc181)
    %32 = cir.load %31 : !cir.ptr<!cir.double>, !cir.double loc(#loc182)
    cir.call @printDoubleLine(%32) : (!cir.double) -> () loc(#loc183)
    cir.br ^bb15 loc(#loc179)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc184)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc184)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
    cir.br ^bb16 loc(#loc147)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc186)
  ^bb17:  // pred: ^bb2
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc187)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb18 loc(#loc189)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc143)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc135)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":35:19)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":20:1)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":38:1)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":26:9)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":26:65)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":28:9)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":28:26)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":22:5)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":37:5)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":22:12)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":24:5)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":25:5)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":31:5)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":26:42)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":26:49)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":26:64)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:9)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:40)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:13)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:24)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:30)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:31)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:37)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":27:36)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":28:25)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":29:14)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":29:9)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":30:26)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":30:25)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":30:9)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":32:5)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":35:9)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":36:9)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":102:1)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":106:1)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":104:5)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":104:11)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":105:5)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":105:11)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":122:15)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":124:15)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":127:15)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":129:15)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":117:1)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":132:1)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":118:1)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":120:27)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":120:22)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":120:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":122:5)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":123:5)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":123:66)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":124:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":127:5)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":128:5)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":128:65)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":129:5)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":131:12)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":131:5)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":45:1)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":71:1)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":55:9)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":55:18)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":56:9)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":56:65)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":64:13)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":64:30)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":47:5)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":70:5)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":47:12)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":49:5)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":51:19)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":51:9)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":52:9)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":54:5)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":68:5)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":56:42)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":56:49)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":56:64)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:9)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:40)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:13)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:24)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:30)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:31)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:37)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":57:36)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":59:33)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":59:46)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":59:26)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":59:47)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":59:9)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:9)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:37)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:13)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:21)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:27)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:28)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:34)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":60:33)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":61:17)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":61:10)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":61:9)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":62:20)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":62:10)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":62:9)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":63:9)
#loc126 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":66:9)
#loc127 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":64:29)
#loc128 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":65:30)
#loc129 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":65:29)
#loc130 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":65:13)
#loc131 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":67:14)
#loc132 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":67:9)
#loc133 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":69:5)
#loc134 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":74:1)
#loc135 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":100:1)
#loc136 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":80:9)
#loc137 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":80:18)
#loc138 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":81:9)
#loc139 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":81:65)
#loc140 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":89:13)
#loc141 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":89:30)
#loc142 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":76:5)
#loc143 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":99:5)
#loc144 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":76:12)
#loc145 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":78:5)
#loc146 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":79:5)
#loc147 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":93:5)
#loc148 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":81:42)
#loc149 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":81:49)
#loc150 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":81:64)
#loc151 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:9)
#loc152 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:40)
#loc153 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:13)
#loc154 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:24)
#loc155 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:30)
#loc156 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:31)
#loc157 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:37)
#loc158 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":82:36)
#loc159 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":84:33)
#loc160 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":84:46)
#loc161 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":84:26)
#loc162 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":84:47)
#loc163 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":84:9)
#loc164 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:9)
#loc165 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:37)
#loc166 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:13)
#loc167 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:21)
#loc168 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:27)
#loc169 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:28)
#loc170 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:34)
#loc171 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":85:33)
#loc172 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":86:17)
#loc173 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":86:10)
#loc174 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":86:9)
#loc175 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":87:20)
#loc176 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":87:10)
#loc177 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":87:9)
#loc178 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":88:9)
#loc179 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":91:9)
#loc180 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":89:29)
#loc181 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":90:30)
#loc182 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":90:29)
#loc183 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":90:13)
#loc184 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":92:14)
#loc185 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":92:9)
#loc186 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":94:5)
#loc187 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":97:19)
#loc188 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":97:9)
#loc189 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_15.c":98:9)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc5, #loc6])
#loc193 = loc(fused[#loc7, #loc8])
#loc194 = loc(fused[#loc9, #loc10])
#loc195 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc14, #loc15])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc18, #loc19])
#loc199 = loc(fused[#loc22, #loc23])
#loc200 = loc(fused[#loc25, #loc26])
#loc201 = loc(fused[#loc24, #loc15])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc29, #loc30])
#loc204 = loc(fused[#loc31, #loc28])
#loc205 = loc(fused[#loc44, #loc45])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc58, #loc59])
#loc213 = loc(fused[#loc69, #loc70])
#loc214 = loc(fused[#loc73, #loc74])
#loc215 = loc(fused[#loc77, #loc76])
#loc216 = loc(fused[#loc78, #loc79])
#loc217 = loc(fused[#loc80, #loc81])
#loc218 = loc(fused[#loc82, #loc83])
#loc219 = loc(fused[#loc84, #loc85])
#loc220 = loc(fused[#loc86, #loc87])
#loc221 = loc(fused[#loc93, #loc94])
#loc222 = loc(fused[#loc96, #loc97])
#loc223 = loc(fused[#loc95, #loc83])
#loc224 = loc(fused[#loc98, #loc99])
#loc225 = loc(fused[#loc100, #loc101])
#loc226 = loc(fused[#loc102, #loc99])
#loc227 = loc(fused[#loc106, #loc107])
#loc228 = loc(fused[#loc108, #loc109])
#loc229 = loc(fused[#loc110, #loc109])
#loc230 = loc(fused[#loc111, #loc112])
#loc231 = loc(fused[#loc113, #loc114])
#loc232 = loc(fused[#loc115, #loc112])
#loc233 = loc(fused[#loc121, #loc119])
#loc234 = loc(fused[#loc124, #loc122])
#loc235 = loc(fused[#loc125, #loc126])
#loc236 = loc(fused[#loc134, #loc135])
#loc237 = loc(fused[#loc136, #loc137])
#loc238 = loc(fused[#loc138, #loc139])
#loc239 = loc(fused[#loc140, #loc141])
#loc240 = loc(fused[#loc142, #loc143])
#loc241 = loc(fused[#loc146, #loc147])
#loc242 = loc(fused[#loc149, #loc150])
#loc243 = loc(fused[#loc148, #loc139])
#loc244 = loc(fused[#loc151, #loc152])
#loc245 = loc(fused[#loc153, #loc154])
#loc246 = loc(fused[#loc155, #loc152])
#loc247 = loc(fused[#loc159, #loc160])
#loc248 = loc(fused[#loc161, #loc162])
#loc249 = loc(fused[#loc163, #loc162])
#loc250 = loc(fused[#loc164, #loc165])
#loc251 = loc(fused[#loc166, #loc167])
#loc252 = loc(fused[#loc168, #loc165])
#loc253 = loc(fused[#loc174, #loc172])
#loc254 = loc(fused[#loc177, #loc175])
#loc255 = loc(fused[#loc178, #loc179])
