!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":23:21)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":23:28)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":48:25)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":48:32)
#loc78 = loc(fused[#loc10, #loc11])
#loc91 = loc(fused[#loc43, #loc44])
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc76)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc78)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %1 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc13)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.call @strcpy(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc16)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc17)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc17)
    cir.return loc(#loc9)
  } loc(#loc77)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc26)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc29)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc30)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc30)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc84)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc85)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc35)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc22)
  } loc(#loc80)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc88)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc43, #loc44])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
      %4 = cir.cmp(ne, %1, %3) : !cir.ptr<!s8i>, !cir.bool loc(#loc93)
      cir.if %4 {
        %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc51)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc53)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
        %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc51)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc56)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
        cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc42)
  } loc(#loc90)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc63)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc97)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc64)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc67)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc67)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc99)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc100)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc72)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc72)
    cir.return loc(#loc59)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_44.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":26:18)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":23:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":29:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":24:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":26:5)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":27:15)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":27:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":28:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":28:10)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":31:1)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":41:1)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":33:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":33:12)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":35:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":35:32)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":36:12)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":36:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:20)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:27)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:30)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:41)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:42)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":38:5)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":40:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":40:13)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":69:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":72:1)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":71:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":71:13)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":48:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":57:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":49:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":51:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":56:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":51:9)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":51:17)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":52:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":53:9)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":53:16)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":53:22)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":54:19)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":54:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":55:9)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":55:14)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":59:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":67:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":61:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":61:12)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":62:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":62:32)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":63:12)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":63:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:20)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:27)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:30)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:41)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:42)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":65:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":66:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_44.c":66:13)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc4, #loc5])
#loc76 = loc(fused[#loc6, #loc7])
#loc77 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc19, #loc20])
#loc80 = loc(fused[#loc21, #loc22])
#loc81 = loc(fused[#loc23, #loc24])
#loc82 = loc(fused[#loc25, #loc26])
#loc83 = loc(fused[#loc28, #loc27])
#loc84 = loc(fused[#loc31, #loc32])
#loc85 = loc(fused[#loc30, #loc32])
#loc86 = loc(fused[#loc29, #loc33])
#loc87 = loc(fused[#loc34, #loc33])
#loc88 = loc(fused[#loc37, #loc38])
#loc89 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc41, #loc42])
#loc92 = loc(fused[#loc46, #loc47])
#loc93 = loc(fused[#loc48, #loc49])
#loc94 = loc(fused[#loc50, #loc47])
#loc95 = loc(fused[#loc58, #loc59])
#loc96 = loc(fused[#loc60, #loc61])
#loc97 = loc(fused[#loc62, #loc63])
#loc98 = loc(fused[#loc65, #loc64])
#loc99 = loc(fused[#loc68, #loc69])
#loc100 = loc(fused[#loc67, #loc69])
#loc101 = loc(fused[#loc66, #loc70])
#loc102 = loc(fused[#loc71, #loc70])
