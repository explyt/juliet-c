!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":114:10)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":114:14)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":114:20)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":114:32)
#loc231 = loc(fused[#loc154, #loc155])
#loc232 = loc(fused[#loc156, #loc157])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc170)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc171)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc175)
  cir.func private @printIntLine(!s32i) loc(#loc176)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc177)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc180)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc25)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc183)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc183)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc183)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc34)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc34)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc34)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc34)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc34)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc34)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc34)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc34)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
        } loc(#loc186)
      } loc(#loc184)
    } loc(#loc182)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc189)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc189)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc191)
        %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc192)
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc57)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc193)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc194)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc195)
        cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
        cir.scope {
          %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc65)
          %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc198)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc68)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc69)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
          } loc(#loc199)
        } loc(#loc197)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc72)
          cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc201)
          cir.for : cond {
            %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc75)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc202)
            cir.condition(%28) loc(#loc202)
          } body {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc78)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc79)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc203)
            cir.yield loc(#loc71)
          } step {
            %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc80)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc81)
            cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc204)
            cir.yield loc(#loc200)
          } loc(#loc200)
        } loc(#loc200)
        %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc84)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc82)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc85)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc86)
        %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc87)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc19)
  } loc(#loc178)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc207)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc95)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc97)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc211)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc211)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc213)
        %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc214)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc110)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc215)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc216)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
        cir.store %16, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
        cir.scope {
          %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
          %25 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc118)
          %26 = cir.cmp(eq, %24, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc122)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
          } loc(#loc221)
        } loc(#loc219)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc125)
          cir.store %25, %8 : !u64i, !cir.ptr<!u64i> loc(#loc223)
          cir.for : cond {
            %26 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc128)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc224)
            cir.condition(%29) loc(#loc224)
          } body {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
            %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc132)
            cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc225)
            cir.yield loc(#loc124)
          } step {
            %26 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc134)
            cir.store %27, %8 : !u64i, !cir.ptr<!u64i> loc(#loc226)
            cir.yield loc(#loc222)
          } loc(#loc222)
        } loc(#loc222)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc136)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc137)
        %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc138)
        %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc139)
        %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc140)
        cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
      } loc(#loc212)
    } loc(#loc210)
    cir.return loc(#loc89)
  } loc(#loc205)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33L7goodG2BEv() : () -> () loc(#loc143)
    cir.return loc(#loc142)
  } loc(#loc227)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc228)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc151)
  cir.func @main(%arg0: !s32i loc(fused[#loc154, #loc155]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc156, #loc157])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc153)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc158)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc159)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc160)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc161)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc148)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_334goodEv() : () -> () loc(#loc163)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc149)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc150)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_333badEv() : () -> () loc(#loc166)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc151)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc168)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.return %15 : !s32i loc(#loc233)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":42:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":26:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":62:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":28:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":28:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":29:20)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":31:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":31:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":31:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":32:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":44:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":33:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":33:45)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":43:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:19)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:32)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:49)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":35:59)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":36:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":39:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":41:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":38:25)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":38:20)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":38:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":38:36)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":42:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":45:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":61:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":46:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":46:20)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":47:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":60:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":48:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":48:20)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":49:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":49:18)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:32)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:39)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:46)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:56)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:57)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":52:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:47)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:31)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:38)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:44)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":53:43)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":57:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:22)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:18)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:25)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:37)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":56:33)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":56:17)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":56:28)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":56:29)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:44)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":54:43)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":58:26)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":58:37)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":58:38)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":58:13)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":59:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":59:18)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":69:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":94:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":71:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":71:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":72:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":72:20)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":74:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":74:12)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":74:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":76:12)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":76:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":77:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":93:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":78:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":78:20)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":79:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":92:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":80:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":80:20)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":81:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":81:18)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:32)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:39)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:46)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:56)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:57)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":84:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:47)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:31)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:37)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:38)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:44)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":85:43)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":89:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:22)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:18)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:37)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":88:33)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":88:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":88:28)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":88:29)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:44)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":86:43)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":90:26)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":90:37)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":90:38)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":90:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":91:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":91:18)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":96:1)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":99:1)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":98:5)
#loc144 = loc("/usr/include/stdlib.h":575:1)
#loc145 = loc("/usr/include/stdlib.h":575:41)
#loc146 = loc("/usr/include/time.h":76:1)
#loc147 = loc("/usr/include/time.h":76:38)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":119:15)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":121:15)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":124:15)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":126:15)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":114:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":129:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":115:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":117:27)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":117:22)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":117:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":119:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":120:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":121:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":124:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":125:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":126:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":128:12)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_33.cpp":128:5)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc10, #loc11])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc14, #loc15])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc26, #loc24])
#loc182 = loc(fused[#loc27, #loc28])
#loc183 = loc(fused[#loc29, #loc30])
#loc184 = loc(fused[#loc31, #loc32])
#loc185 = loc(fused[#loc36, #loc37])
#loc186 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc187 = loc(fused[#loc43, #loc44])
#loc188 = loc(fused[#loc46, #loc47])
#loc189 = loc(fused[#loc48, #loc49])
#loc190 = loc(fused[#loc50, #loc51])
#loc191 = loc(fused[#loc52, #loc53])
#loc192 = loc(fused[#loc54, #loc55])
#loc193 = loc(fused[#loc58, #loc59])
#loc194 = loc(fused[#loc57, #loc59])
#loc195 = loc(fused[#loc56, #loc60])
#loc196 = loc(fused[#loc61, #loc60])
#loc197 = loc(fused[#loc62, #loc63])
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc66, #loc63])
#loc200 = loc(fused[#loc70, #loc71])
#loc201 = loc(fused[#loc73, #loc72])
#loc202 = loc(fused[#loc74, #loc75])
#loc203 = loc(fused[#loc77, #loc76])
#loc204 = loc(fused[#loc81, #loc80])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc92, #loc93])
#loc208 = loc(fused[#loc96, #loc94])
#loc209 = loc(fused[#loc98, #loc97])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc103, #loc104])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc107, #loc108])
#loc215 = loc(fused[#loc111, #loc112])
#loc216 = loc(fused[#loc110, #loc112])
#loc217 = loc(fused[#loc109, #loc113])
#loc218 = loc(fused[#loc114, #loc113])
#loc219 = loc(fused[#loc115, #loc116])
#loc220 = loc(fused[#loc117, #loc118])
#loc221 = loc(fused[#loc119, #loc116])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc126, #loc125])
#loc224 = loc(fused[#loc127, #loc128])
#loc225 = loc(fused[#loc130, #loc129])
#loc226 = loc(fused[#loc134, #loc133])
#loc227 = loc(fused[#loc141, #loc142])
#loc228 = loc(fused[#loc144, #loc145])
#loc229 = loc(fused[#loc146, #loc147])
#loc230 = loc(fused[#loc152, #loc153])
#loc233 = loc(fused[#loc169, #loc168])
