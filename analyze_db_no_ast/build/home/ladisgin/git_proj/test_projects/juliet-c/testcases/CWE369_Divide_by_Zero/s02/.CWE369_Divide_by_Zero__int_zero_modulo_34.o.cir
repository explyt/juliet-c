!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__int_zero_modulo_34_unionType" {!s32i, !s32i}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc83)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_zero_modulo_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc86)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc91)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc91)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc92)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc24)
    } loc(#loc90)
    cir.return loc(#loc4)
  } loc(#loc84)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_zero_modulo_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc93)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc98)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc38)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc40)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc103)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc103)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc104)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc50)
    } loc(#loc102)
    cir.return loc(#loc32)
  } loc(#loc96)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc108)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc61)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc113)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_modulo_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc113)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !s32i loc(#loc115)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc75)
        cir.if %13 {
          %14 = cir.const #cir.int<100> : !s32i loc(#loc79)
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %16 = cir.binop(rem, %14, %15) : !s32i loc(#loc117)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc81)
        } else {
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc53)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc53)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        } loc(#loc116)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc55)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_modulo_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":28:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":42:1)
#loc5 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":30:5)
#loc6 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":30:9)
#loc7 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":31:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":31:57)
#loc9 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":33:13)
#loc10 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":33:12)
#loc11 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":33:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":35:12)
#loc13 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":35:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":36:26)
#loc15 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":22:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":36:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":37:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":41:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":38:9)
#loc20 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":38:28)
#loc21 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":23:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":40:22)
#loc23 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":40:28)
#loc24 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":40:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":89:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":93:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":91:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":91:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":92:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":92:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":49:1)
#loc32 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":63:1)
#loc33 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":51:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":51:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":52:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":52:57)
#loc37 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":54:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":54:12)
#loc39 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":54:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":56:12)
#loc41 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":56:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":57:26)
#loc43 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":57:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":58:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":62:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":59:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":59:28)
#loc48 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":61:22)
#loc49 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":61:28)
#loc50 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":61:9)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":84:23)
#loc54 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":66:1)
#loc55 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":87:1)
#loc56 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":68:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":68:9)
#loc58 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":69:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":69:57)
#loc60 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":71:13)
#loc61 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":71:12)
#loc62 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":71:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":73:12)
#loc64 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":73:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":74:26)
#loc66 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":74:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":75:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":86:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":76:9)
#loc70 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":76:28)
#loc71 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":78:9)
#loc72 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":85:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":78:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":78:21)
#loc75 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":78:18)
#loc76 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":79:9)
#loc77 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":81:9)
#loc78 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":83:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":80:26)
#loc80 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":80:32)
#loc81 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":80:13)
#loc82 = loc("CWE369_Divide_by_Zero__int_zero_modulo_34.c":84:13)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc11, #loc9])
#loc88 = loc(fused[#loc13, #loc12])
#loc89 = loc(fused[#loc16, #loc14])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc22, #loc23])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc29, #loc30])
#loc96 = loc(fused[#loc31, #loc32])
#loc97 = loc(fused[#loc33, #loc34])
#loc98 = loc(fused[#loc35, #loc36])
#loc99 = loc(fused[#loc39, #loc37])
#loc100 = loc(fused[#loc41, #loc40])
#loc101 = loc(fused[#loc43, #loc42])
#loc102 = loc(fused[#loc44, #loc45])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc51, #loc52])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc62, #loc60])
#loc110 = loc(fused[#loc64, #loc63])
#loc111 = loc(fused[#loc66, #loc65])
#loc112 = loc(fused[#loc67, #loc68])
#loc113 = loc(fused[#loc69, #loc70])
#loc114 = loc(fused[#loc71, #loc72])
#loc115 = loc(fused[#loc73, #loc74])
#loc116 = loc(fused[#loc76, #loc77, #loc78, #loc72])
#loc117 = loc(fused[#loc79, #loc80])
