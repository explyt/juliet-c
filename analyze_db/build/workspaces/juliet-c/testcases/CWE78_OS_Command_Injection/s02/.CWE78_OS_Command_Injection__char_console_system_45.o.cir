!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_45_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc130)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" internal dsolocal @CWE78_OS_Command_Injection__char_console_system_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc135)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc130)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_45_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc140)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc26)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc26)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc140)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc30)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc30)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc31)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc142)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc32)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc143)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc39)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc39)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc146)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc146)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc149)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc54)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc54)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc151)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc58)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc152)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc56)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc56)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc60)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc153)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc55)
                    cir.yield %51 : !cir.bool loc(#loc55)
                  }, false {
                    %51 = cir.const #false loc(#loc55)
                    cir.yield %51 : !cir.bool loc(#loc55)
                  }) : (!cir.bool) -> !cir.bool loc(#loc55)
                  cir.yield %50 : !cir.bool loc(#loc55)
                }, false {
                  %40 = cir.const #false loc(#loc55)
                  cir.yield %40 : !cir.bool loc(#loc55)
                }) : (!cir.bool) -> !cir.bool loc(#loc55)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc62)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc62)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc65)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc65)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc155)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc156)
                } loc(#loc154)
              } loc(#loc150)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc67)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc68)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc68)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc70)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc71)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc157)
            } loc(#loc148)
          } loc(#loc145)
        } loc(#loc144)
      } loc(#loc141)
    } loc(#loc139)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %5 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc17)
  } loc(#loc136)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc160)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc82)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      %4 = cir.call @system(%3) : (!cir.ptr<!s8i>) -> !s32i loc(#loc92)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc167)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc82)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc95)
        %9 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc97)
        cir.call @exit(%10) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc86)
  } loc(#loc164)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" internal dsolocal @CWE78_OS_Command_Injection__char_console_system_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc129)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc109)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc100)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %10 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %11() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc113)
    cir.return loc(#loc104)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      %4 = cir.call @system(%3) : (!cir.ptr<!s8i>) -> !s32i loc(#loc122)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc123)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc179)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc125)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc126)
        %9 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc127)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc128)
        cir.call @exit(%10) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc116)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_45.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":103:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":103:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":53:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":53:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":74:27)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":34:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":34:15)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":50:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":82:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":52:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":52:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":54:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":54:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":55:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":79:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":57:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":57:37)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":57:26)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":57:33)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":59:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":78:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":59:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":59:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":59:27)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":60:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":77:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:23)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:28)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:27)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:43)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:47)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:57)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":62:67)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":63:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":71:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":73:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":66:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":66:34)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":66:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":66:38)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":70:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:31)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:33)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:36)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:41)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:49)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:50)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":67:55)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":68:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":69:39)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":69:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":69:26)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":69:34)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":69:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":74:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":76:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":76:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":76:22)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":76:29)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":80:66)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":80:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":81:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":81:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":111:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":114:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":113:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":113:13)
#loc80 = loc("/usr/include/stdlib.h":923:1)
#loc81 = loc("/usr/include/stdlib.h":923:41)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":45:19)
#loc83 = loc("/usr/include/stdlib.h":756:1)
#loc84 = loc("/usr/include/stdlib.h":756:70)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":39:1)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":48:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":41:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":41:19)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":43:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":47:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":43:16)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":43:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":43:25)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":44:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":45:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":46:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":46:14)
#loc98 = loc("/usr/include/string.h":149:1)
#loc99 = loc("/usr/include/string.h":150:14)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":106:18)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":35:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":35:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":100:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":109:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":102:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":102:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":104:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":104:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":106:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":106:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":107:70)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":107:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":108:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":108:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":89:1)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":98:1)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":91:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":91:19)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":93:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":97:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":93:16)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":93:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":93:25)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":94:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":95:19)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":95:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":96:9)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_45.c":96:14)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc14, #loc15])
#loc136 = loc(fused[#loc16, #loc17])
#loc137 = loc(fused[#loc18, #loc19])
#loc138 = loc(fused[#loc21, #loc20])
#loc139 = loc(fused[#loc22, #loc23])
#loc140 = loc(fused[#loc24, #loc25])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc30, #loc31])
#loc143 = loc(fused[#loc30, #loc32])
#loc144 = loc(fused[#loc33, #loc29])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc42, #loc43])
#loc148 = loc(fused[#loc44, #loc45, #loc46, #loc35])
#loc149 = loc(fused[#loc49, #loc50])
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc53, #loc54])
#loc152 = loc(fused[#loc57, #loc58])
#loc153 = loc(fused[#loc56, #loc60])
#loc154 = loc(fused[#loc61, #loc52])
#loc155 = loc(fused[#loc64, #loc65])
#loc156 = loc(fused[#loc63, #loc62])
#loc157 = loc(fused[#loc69, #loc68])
#loc158 = loc(fused[#loc73, #loc72])
#loc159 = loc(fused[#loc74, #loc75])
#loc160 = loc(fused[#loc76, #loc77])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc80, #loc81])
#loc163 = loc(fused[#loc83, #loc84])
#loc164 = loc(fused[#loc85, #loc86])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc94, #loc90])
#loc169 = loc(fused[#loc98, #loc99])
#loc170 = loc(fused[#loc101, #loc102])
#loc171 = loc(fused[#loc103, #loc104])
#loc172 = loc(fused[#loc105, #loc106])
#loc173 = loc(fused[#loc108, #loc107])
#loc174 = loc(fused[#loc112, #loc111])
#loc175 = loc(fused[#loc113, #loc114])
#loc176 = loc(fused[#loc115, #loc116])
#loc177 = loc(fused[#loc117, #loc118])
#loc178 = loc(fused[#loc119, #loc120])
#loc179 = loc(fused[#loc122, #loc123])
#loc180 = loc(fused[#loc124, #loc120])
