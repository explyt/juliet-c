!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc63)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc65)
  cir.global external dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_add_68_badData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc66)
  cir.func no_proto private @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_badSink(...) loc(#loc67)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc69)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc70)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc65)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc65)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %9 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68_badData : !cir.ptr<!s64i> loc(#loc66)
    cir.store %8, %9 : !s64i, !cir.ptr<!s64i> loc(#loc71)
    %10 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc72)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc72)
    cir.call %11() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc12)
  } loc(#loc68)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc75)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc73)
  cir.global external dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_add_68_goodG2BData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc76)
  cir.global external dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_add_68_goodB2GData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc77)
  cir.func no_proto private @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_goodG2BSink(...) loc(#loc78)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc80)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc39)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc81)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc41)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc43)
    %5 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68_goodG2BData : !cir.ptr<!s64i> loc(#loc76)
    cir.store %4, %5 : !s64i, !cir.ptr<!s64i> loc(#loc83)
    %6 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc84)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %7() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc36)
  } loc(#loc79)
  cir.func no_proto private @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_goodB2GSink(...) loc(#loc85)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc53)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc88)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc55)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc89)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc89)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc55)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc59)
    %9 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68_goodB2GData : !cir.ptr<!s64i> loc(#loc77)
    cir.store %8, %9 : !s64i, !cir.ptr<!s64i> loc(#loc90)
    %10 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_68b_goodB2GSink : !cir.ptr<!cir.func<(...)>> loc(#loc91)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %11() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc50)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":35:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":35:24)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":21:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":21:9)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":28:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":28:62)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":30:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":38:1)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":32:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":32:13)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":33:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":35:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":36:62)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":36:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":37:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":37:61)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":70:1)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":74:1)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":72:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":72:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":73:5)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":73:13)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":22:1)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":22:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":23:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":23:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":45:1)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":45:66)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":49:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":57:1)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":51:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":51:13)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":52:12)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":52:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":54:12)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":54:5)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":55:66)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":55:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":56:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":56:65)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":46:1)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":46:66)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":60:1)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":68:1)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":62:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":62:13)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":63:12)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":63:5)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":65:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":65:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":65:20)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":65:24)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":66:66)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":66:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":67:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_68a.c":67:65)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc16, #loc15])
#loc71 = loc(fused[#loc20, #loc19])
#loc72 = loc(fused[#loc21, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc25, #loc26])
#loc75 = loc(fused[#loc27, #loc28])
#loc76 = loc(fused[#loc29, #loc30])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc33, #loc34])
#loc79 = loc(fused[#loc35, #loc36])
#loc80 = loc(fused[#loc37, #loc38])
#loc81 = loc(fused[#loc40, #loc39])
#loc82 = loc(fused[#loc42, #loc41])
#loc83 = loc(fused[#loc44, #loc43])
#loc84 = loc(fused[#loc45, #loc46])
#loc85 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc49, #loc50])
#loc87 = loc(fused[#loc51, #loc52])
#loc88 = loc(fused[#loc54, #loc53])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc60, #loc59])
#loc91 = loc(fused[#loc61, #loc62])
