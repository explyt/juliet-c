!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.func private @CWE416_Use_After_Free__malloc_free_int64_t_63b_badSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc143)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc147)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc148)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc149)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc150)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc24)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc152)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc28)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc153)
    } loc(#loc151)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc155)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc35)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc157)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc158)
          cir.condition(%18) loc(#loc39)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc41)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc44)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc160)
          } loc(#loc159)
          cir.yield loc(#loc34)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc46)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc161)
          cir.yield loc(#loc156)
        } loc(#loc156)
      } loc(#loc156)
    } loc(#loc154)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.call @CWE416_Use_After_Free__malloc_free_int64_t_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc49)
    cir.return loc(#loc10)
  } loc(#loc144)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_int64_t_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc162)
  cir.func private @CWE416_Use_After_Free__malloc_free_int64_t_63b_goodG2BSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc165)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc168)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc169)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc170)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc171)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc172)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc72)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc73)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc174)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc77)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
      } loc(#loc175)
    } loc(#loc173)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc84)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc84)
        cir.store %11, %9 : !u64i, !cir.ptr<!u64i> loc(#loc179)
        cir.for : cond {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc86)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc87)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc87)
          %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc180)
          cir.condition(%15) loc(#loc88)
        } body {
          cir.scope {
            %12 = cir.const #cir.int<5> : !s64i loc(#loc90)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
            %14 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc92)
            %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !u64i), !cir.ptr<!s64i> loc(#loc93)
            cir.store %12, %15 : !s64i, !cir.ptr<!s64i> loc(#loc182)
          } loc(#loc181)
          cir.yield loc(#loc83)
        } step {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc95)
          cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc183)
          cir.yield loc(#loc178)
        } loc(#loc178)
      } loc(#loc178)
    } loc(#loc176)
    cir.call @CWE416_Use_After_Free__malloc_free_int64_t_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc96)
    cir.return loc(#loc59)
  } loc(#loc166)
  cir.func private @CWE416_Use_After_Free__malloc_free_int64_t_63b_goodB2GSink(!cir.ptr<!cir.ptr<!s64i>>) loc(#loc184)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc187)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc105)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc106)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc189)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc190)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc191)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc113)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc114)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc193)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc118)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc125)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc125)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc198)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc127)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc128)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc128)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc199)
          cir.condition(%18) loc(#loc129)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<5> : !s64i loc(#loc131)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc132)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc134)
            cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc201)
          } loc(#loc200)
          cir.yield loc(#loc124)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc135)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc136)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          cir.yield loc(#loc197)
        } loc(#loc197)
      } loc(#loc197)
    } loc(#loc195)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc137)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc138)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc138)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
    cir.call @CWE416_Use_After_Free__malloc_free_int64_t_63b_goodB2GSink(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc139)
    cir.return loc(#loc100)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int64_t_63a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":25:1)
#loc8 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":25:80)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":27:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":44:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":29:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":29:15)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":31:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":31:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:23)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:30)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:34)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:48)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:49)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":32:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:33)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:17)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:23)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:30)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":33:29)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":34:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":40:5)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":35:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":35:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":39:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:17)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:24)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":37:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":38:23)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":38:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":38:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":38:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:30)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":36:29)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":42:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":42:10)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":43:5)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":93:1)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":97:1)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":95:5)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":95:13)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":96:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":96:13)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":51:1)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":51:81)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":53:1)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":69:1)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":55:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":55:15)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":57:12)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":57:5)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:23)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:30)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:34)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:48)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:49)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":58:5)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:5)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:33)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:9)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:17)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:23)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:24)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:30)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":59:29)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":60:5)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":66:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":61:9)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":61:16)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:9)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":65:9)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:17)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:13)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:20)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:24)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:22)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":63:9)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":64:23)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":64:13)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":64:18)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":64:19)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:30)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":62:29)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":68:5)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":72:1)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":72:81)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":74:1)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":91:1)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":76:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":76:15)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":78:12)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":78:5)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:23)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:30)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:34)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:48)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:49)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":79:5)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:5)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:33)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:17)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:23)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:24)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:30)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":80:29)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":81:5)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":87:5)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":82:9)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":82:16)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:9)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":86:9)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:17)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:13)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:20)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:24)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:22)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":84:9)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":85:23)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":85:13)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":85:18)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":85:19)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:30)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":83:29)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":89:5)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":89:10)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_int64_t_63a.c":90:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc14, #loc13])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc16, #loc18])
#loc149 = loc(fused[#loc15, #loc19])
#loc150 = loc(fused[#loc20, #loc19])
#loc151 = loc(fused[#loc21, #loc22])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc25, #loc22])
#loc154 = loc(fused[#loc29, #loc30])
#loc155 = loc(fused[#loc31, #loc32])
#loc156 = loc(fused[#loc33, #loc34])
#loc157 = loc(fused[#loc36, #loc35])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc40, #loc34])
#loc160 = loc(fused[#loc42, #loc41])
#loc161 = loc(fused[#loc46, #loc45])
#loc162 = loc(fused[#loc50, #loc51])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc56, #loc57])
#loc166 = loc(fused[#loc58, #loc59])
#loc167 = loc(fused[#loc60, #loc61])
#loc168 = loc(fused[#loc63, #loc62])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc65, #loc67])
#loc171 = loc(fused[#loc64, #loc68])
#loc172 = loc(fused[#loc69, #loc68])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc72, #loc73])
#loc175 = loc(fused[#loc74, #loc71])
#loc176 = loc(fused[#loc78, #loc79])
#loc177 = loc(fused[#loc80, #loc81])
#loc178 = loc(fused[#loc82, #loc83])
#loc179 = loc(fused[#loc85, #loc84])
#loc180 = loc(fused[#loc86, #loc87])
#loc181 = loc(fused[#loc89, #loc83])
#loc182 = loc(fused[#loc91, #loc90])
#loc183 = loc(fused[#loc95, #loc94])
#loc184 = loc(fused[#loc97, #loc98])
#loc185 = loc(fused[#loc99, #loc100])
#loc186 = loc(fused[#loc101, #loc102])
#loc187 = loc(fused[#loc104, #loc103])
#loc188 = loc(fused[#loc107, #loc108])
#loc189 = loc(fused[#loc106, #loc108])
#loc190 = loc(fused[#loc105, #loc109])
#loc191 = loc(fused[#loc110, #loc109])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc113, #loc114])
#loc194 = loc(fused[#loc115, #loc112])
#loc195 = loc(fused[#loc119, #loc120])
#loc196 = loc(fused[#loc121, #loc122])
#loc197 = loc(fused[#loc123, #loc124])
#loc198 = loc(fused[#loc126, #loc125])
#loc199 = loc(fused[#loc127, #loc128])
#loc200 = loc(fused[#loc130, #loc124])
#loc201 = loc(fused[#loc132, #loc131])
#loc202 = loc(fused[#loc136, #loc135])
