!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc184)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc188)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
      } loc(#loc189)
    } loc(#loc187)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc191)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc17)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc18)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc19)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc4)
  } loc(#loc185)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc194)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc195)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc21)
  } loc(#loc193)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %2 : !s32i loc(#loc199)
  } loc(#loc198)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc201)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc202)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc206)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc47)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
      cir.if %3 {
      } loc(#loc207)
    } loc(#loc205)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc209)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc52)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc52)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc58)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc211)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc58)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc212)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc213)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc65)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc66)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !cir.bool loc(#loc215)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc70)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc68)
          } loc(#loc216)
        } loc(#loc214)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc71)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc72)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc217)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc74)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc75)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc76)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc42)
  } loc(#loc203)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.return %2 : !s32i loc(#loc219)
  } loc(#loc218)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc223)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc87)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc87)
      cir.if %3 {
      } loc(#loc224)
    } loc(#loc222)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc92)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc92)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc95)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc228)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc95)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc229)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc230)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc103)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !cir.bool loc(#loc232)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc105)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc107)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc105)
          } loc(#loc233)
        } loc(#loc231)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc108)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc109)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc234)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc111)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc112)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc113)
      } loc(#loc227)
    } loc(#loc225)
    cir.return loc(#loc82)
  } loc(#loc220)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc238)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc120)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc120)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc126)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc127)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc240)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc127)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc241)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc242)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc134)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc135)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc244)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc139)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc137)
          } loc(#loc245)
        } loc(#loc243)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc140)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc141)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc246)
      } loc(#loc239)
    } loc(#loc237)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc248)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc145)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc145)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc148)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc149)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc150)
      } loc(#loc249)
    } loc(#loc247)
    cir.return loc(#loc115)
  } loc(#loc235)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc253)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc157)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc157)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc160)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc255)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc160)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc256)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc257)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc167)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc168)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !cir.bool loc(#loc259)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc170)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc171)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc172)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc170)
          } loc(#loc260)
        } loc(#loc258)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc173)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc174)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc261)
      } loc(#loc254)
    } loc(#loc252)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc263)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc178)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc178)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc181)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc182)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc183)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc152)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":37:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":44:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:8)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:26)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":41:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":49:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:8)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:26)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:25)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":144:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":150:1)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:14)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:14)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":25:1)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":28:1)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:12)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:5)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:19)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":57:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":79:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":64:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:8)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:26)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":61:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":78:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:8)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:27)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":66:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":69:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":71:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:9)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:26)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:33)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:46)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:47)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:37)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:21)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:27)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:28)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:34)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:33)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:17)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:10)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:26)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:25)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":30:1)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":33:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:12)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":82:1)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":99:1)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:14)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":89:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:8)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:26)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":86:5)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":98:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:8)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:26)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":91:5)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:26)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:33)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:46)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:47)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:9)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:37)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:21)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:27)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:28)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:34)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:33)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:17)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:10)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:9)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:26)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:25)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:9)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":102:1)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":123:1)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:14)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":117:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:8)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:27)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":106:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":109:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":111:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:19)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:9)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:26)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:33)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:46)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:47)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:9)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:9)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:37)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:13)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:21)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:27)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:28)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:34)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:33)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:17)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:10)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:9)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":122:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:8)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:26)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":119:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:26)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:25)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:9)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":126:1)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":142:1)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:5)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:14)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":136:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:8)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:26)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":130:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:26)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:33)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:46)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:47)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:37)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:13)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:21)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:27)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:28)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:34)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:33)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:10)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:9)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":141:5)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:8)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:26)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":138:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:26)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:25)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc8])
#loc190 = loc(fused[#loc12, #loc13])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc16, #loc13])
#loc193 = loc(fused[#loc20, #loc21])
#loc194 = loc(fused[#loc22, #loc23])
#loc195 = loc(fused[#loc24, #loc25])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc28, #loc29])
#loc198 = loc(fused[#loc30, #loc31])
#loc199 = loc(fused[#loc33, #loc32])
#loc200 = loc(fused[#loc34, #loc35])
#loc201 = loc(fused[#loc37, #loc38])
#loc202 = loc(fused[#loc39, #loc40])
#loc203 = loc(fused[#loc41, #loc42])
#loc204 = loc(fused[#loc43, #loc44])
#loc205 = loc(fused[#loc45, #loc46])
#loc206 = loc(fused[#loc47, #loc48])
#loc207 = loc(fused[#loc49, #loc46])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc211 = loc(fused[#loc59, #loc60])
#loc212 = loc(fused[#loc58, #loc61])
#loc213 = loc(fused[#loc62, #loc61])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc67, #loc64])
#loc217 = loc(fused[#loc73, #loc71])
#loc218 = loc(fused[#loc77, #loc78])
#loc219 = loc(fused[#loc80, #loc79])
#loc220 = loc(fused[#loc81, #loc82])
#loc221 = loc(fused[#loc83, #loc84])
#loc222 = loc(fused[#loc85, #loc86])
#loc223 = loc(fused[#loc87, #loc88])
#loc224 = loc(fused[#loc89, #loc86])
#loc225 = loc(fused[#loc90, #loc91])
#loc226 = loc(fused[#loc92, #loc93])
#loc227 = loc(fused[#loc94, #loc91])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc95, #loc98])
#loc230 = loc(fused[#loc99, #loc98])
#loc231 = loc(fused[#loc100, #loc101])
#loc232 = loc(fused[#loc102, #loc103])
#loc233 = loc(fused[#loc104, #loc101])
#loc234 = loc(fused[#loc110, #loc108])
#loc235 = loc(fused[#loc114, #loc115])
#loc236 = loc(fused[#loc116, #loc117])
#loc237 = loc(fused[#loc118, #loc119])
#loc238 = loc(fused[#loc120, #loc121])
#loc239 = loc(fused[#loc122, #loc123, #loc124, #loc119])
#loc240 = loc(fused[#loc128, #loc129])
#loc241 = loc(fused[#loc127, #loc130])
#loc242 = loc(fused[#loc131, #loc130])
#loc243 = loc(fused[#loc132, #loc133])
#loc244 = loc(fused[#loc134, #loc135])
#loc245 = loc(fused[#loc136, #loc133])
#loc246 = loc(fused[#loc142, #loc140])
#loc247 = loc(fused[#loc143, #loc144])
#loc248 = loc(fused[#loc145, #loc146])
#loc249 = loc(fused[#loc147, #loc144])
#loc250 = loc(fused[#loc151, #loc152])
#loc251 = loc(fused[#loc153, #loc154])
#loc252 = loc(fused[#loc155, #loc156])
#loc253 = loc(fused[#loc157, #loc158])
#loc254 = loc(fused[#loc159, #loc156])
#loc255 = loc(fused[#loc161, #loc162])
#loc256 = loc(fused[#loc160, #loc163])
#loc257 = loc(fused[#loc164, #loc163])
#loc258 = loc(fused[#loc165, #loc166])
#loc259 = loc(fused[#loc167, #loc168])
#loc260 = loc(fused[#loc169, #loc166])
#loc261 = loc(fused[#loc175, #loc173])
#loc262 = loc(fused[#loc176, #loc177])
#loc263 = loc(fused[#loc178, #loc179])
#loc264 = loc(fused[#loc180, #loc177])
