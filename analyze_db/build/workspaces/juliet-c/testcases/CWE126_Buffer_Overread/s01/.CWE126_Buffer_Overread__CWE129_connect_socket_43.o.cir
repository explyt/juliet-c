!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":47:23)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":47:28)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":133:27)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":133:32)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":162:27)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":162:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc300 = loc(fused[#loc18, #loc19])
#loc345 = loc(fused[#loc140, #loc141])
#loc356 = loc(fused[#loc171, #loc172])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc294)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc295)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc296)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @close(!s32i) -> !s32i loc(#loc298)
  cir.func internal private @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc300)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc302)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc303)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc304)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc305)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc28)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc304)
      cir.scope {
        cir.do {
          cir.scope {
            %7 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %8 = cir.const #cir.int<1> : !u32i loc(#loc36)
            %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc36)
            %10 = cir.const #cir.int<6> : !u32i loc(#loc37)
            %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc37)
            %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc308)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc44)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc310)
              cir.if %54 {
                cir.break loc(#loc46)
              } loc(#loc311)
            } loc(#loc309)
            %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc312)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc313)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc314)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc54)
            %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc315)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc316)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc62)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc317)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc319)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc320)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc320)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc75)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc321)
              cir.if %58 {
                cir.break loc(#loc77)
              } loc(#loc322)
            } loc(#loc318)
            %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc79)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc80)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc80)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc80)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc80)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc80)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc81)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc323)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc83)
            cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc324)
            cir.scope {
              %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc89)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc326)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc90)
                cir.yield %56 : !cir.bool loc(#loc90)
              }, false {
                %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc327)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc90)
                  cir.yield %60 : !cir.bool loc(#loc90)
                }, false {
                  %60 = cir.const #false loc(#loc90)
                  cir.yield %60 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %59 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %55 {
                cir.break loc(#loc94)
              } loc(#loc328)
            } loc(#loc325)
            %44 = cir.const #cir.int<0> : !s8i loc(#loc95)
            %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
            %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc329)
            %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
            %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc99)
            %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
            cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc330)
          } loc(#loc307)
          cir.yield loc(#loc32)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc102)
          cir.condition(%8) loc(#loc102)
        } loc(#loc306)
      } loc(#loc306)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc106)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc332)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc109)
        } loc(#loc333)
      } loc(#loc331)
    } loc(#loc301)
    cir.return loc(#loc17)
  } loc(#loc299)
  cir.func private @printIntLine(!s32i) loc(#loc334)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc114)
  cir.func @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc120)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.call @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc122)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc340)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc340)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc340)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc130)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc342)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc135)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc135)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc136)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc114)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc114)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc137)
        } loc(#loc343)
      } loc(#loc341)
    } loc(#loc339)
    cir.return loc(#loc116)
  } loc(#loc336)
  cir.func internal private @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc140, #loc141])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc345)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.return loc(#loc139)
  } loc(#loc344)
  cir.func internal private @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc348)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc150)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.call @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc152)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc351)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc351)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc351)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc353)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc165)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc165)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc165)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc166)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc167)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc167)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc168)
        } loc(#loc354)
      } loc(#loc352)
    } loc(#loc350)
    cir.return loc(#loc146)
  } loc(#loc347)
  cir.func internal private @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc171, #loc172])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc356)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc173)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc358)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc359)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc360)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc361)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc181)
      %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc181)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc360)
      cir.scope {
        cir.do {
          cir.scope {
            %7 = cir.const #cir.int<2> : !s32i loc(#loc188)
            %8 = cir.const #cir.int<1> : !u32i loc(#loc189)
            %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc189)
            %10 = cir.const #cir.int<6> : !u32i loc(#loc190)
            %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc190)
            %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
            cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc364)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc197)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc197)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc366)
              cir.if %54 {
                cir.break loc(#loc199)
              } loc(#loc367)
            } loc(#loc365)
            %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc368)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc202)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc369)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc370)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc207)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc207)
            %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc371)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc209)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc209)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc210)
            %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc372)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc213)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc213)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc214)
            %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc373)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc375)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc376)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc376)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc224)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc225)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc225)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc377)
              cir.if %58 {
                cir.break loc(#loc227)
              } loc(#loc378)
            } loc(#loc374)
            %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc228)
            %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc230)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc230)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc230)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc230)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc230)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc230)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc230)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc231)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc231)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc379)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc232)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc233)
            cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc380)
            cir.scope {
              %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc238)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc239)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc239)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc382)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc240)
                cir.yield %56 : !cir.bool loc(#loc240)
              }, false {
                %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc242)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc383)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc240)
                  cir.yield %60 : !cir.bool loc(#loc240)
                }, false {
                  %60 = cir.const #false loc(#loc240)
                  cir.yield %60 : !cir.bool loc(#loc240)
                }) : (!cir.bool) -> !cir.bool loc(#loc240)
                cir.yield %59 : !cir.bool loc(#loc240)
              }) : (!cir.bool) -> !cir.bool loc(#loc240)
              cir.if %55 {
                cir.break loc(#loc244)
              } loc(#loc384)
            } loc(#loc381)
            %44 = cir.const #cir.int<0> : !s8i loc(#loc245)
            %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
            %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc247)
            cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc385)
            %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
            %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc249)
            %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc250)
            cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc386)
          } loc(#loc363)
          cir.yield loc(#loc185)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc252)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc252)
          cir.condition(%8) loc(#loc252)
        } loc(#loc362)
      } loc(#loc362)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc256)
        %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc256)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc388)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc258)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc259)
        } loc(#loc389)
      } loc(#loc387)
    } loc(#loc357)
    cir.return loc(#loc170)
  } loc(#loc355)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc260)
  cir.func internal private @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc391)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc266)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.call @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc268)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc394)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc394)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc394)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc276)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc396)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc279)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc397)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc277)
            cir.yield %13 : !cir.bool loc(#loc277)
          }, false {
            %13 = cir.const #false loc(#loc277)
            cir.yield %13 : !cir.bool loc(#loc277)
          }) : (!cir.bool) -> !cir.bool loc(#loc277)
          cir.yield %12 : !cir.bool loc(#loc277)
        }, false {
          %9 = cir.const #false loc(#loc277)
          cir.yield %9 : !cir.bool loc(#loc277)
        }) : (!cir.bool) -> !cir.bool loc(#loc277)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc285)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc285)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc285)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc286)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc260)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc260)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc287)
        } loc(#loc398)
      } loc(#loc395)
    } loc(#loc393)
    cir.return loc(#loc262)
  } loc(#loc390)
  cir.func @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L7goodG2BEv() : () -> () loc(#loc290)
    cir.call @_ZN48CWE126_Buffer_Overread__CWE129_connect_socket_43L7goodB2GEv() : () -> () loc(#loc291)
    cir.return loc(#loc289)
  } loc(#loc399)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":75:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":47:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":105:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":48:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":49:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":104:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":54:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":54:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":55:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":55:28)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":56:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":56:32)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":57:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":57:41)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":58:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":93:17)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":59:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":92:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:36)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:45)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:58)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:29)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":68:69)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":69:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":72:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":69:17)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":69:34)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":70:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":71:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:20)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:21)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:30)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:33)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:47)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":73:48)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":74:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":74:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":75:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":75:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":75:59)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":76:38)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":76:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":76:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":76:46)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":80:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:25)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:58)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:59)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:68)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:82)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:17)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":77:88)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":78:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":79:17)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:31)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:46)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:59)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:77)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:80)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:26)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":83:81)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":87:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:17)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:31)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:44)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:47)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":84:61)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":85:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":86:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":89:39)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":89:25)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":89:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":91:25)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":91:20)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":91:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":91:36)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":93:16)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":94:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":97:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":94:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":94:30)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":95:9)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":96:26)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":96:13)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":123:23)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":107:1)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":126:1)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":109:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":109:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":111:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":111:12)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":111:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":112:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":113:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":125:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":114:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":114:30)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":117:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":124:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":117:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":117:21)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":118:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":120:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":122:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":119:33)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":119:26)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":119:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":123:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":133:1)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":138:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":134:1)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":137:12)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":137:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":140:1)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":159:1)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":142:5)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":142:9)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":144:13)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":144:12)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":144:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":145:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":146:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":158:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":147:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":147:30)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":150:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":157:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":150:13)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":150:21)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":151:9)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":153:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":155:9)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":152:33)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":152:26)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":152:13)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":156:23)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":156:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":162:1)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":220:1)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":163:1)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":164:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":219:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":169:9)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":169:13)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":170:9)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":170:28)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":171:9)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":171:32)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":172:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":172:41)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":173:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":208:17)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":174:9)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":207:9)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:36)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:45)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:58)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:29)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:13)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":183:69)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":184:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":187:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":184:17)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":184:34)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":185:13)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":186:17)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:20)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:21)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:30)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:33)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:47)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:13)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":188:48)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":189:34)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":189:13)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":190:49)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":190:39)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":190:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":190:59)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":191:38)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":191:32)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":191:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":191:46)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:13)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":195:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:25)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:58)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:59)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:68)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:82)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:17)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":192:88)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":193:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":194:17)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:31)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:46)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:59)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:77)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:80)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:26)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":198:81)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:13)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":202:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:17)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:31)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:44)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:47)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":199:61)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":200:13)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":201:17)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":204:39)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":204:25)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":204:13)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":206:25)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":206:20)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":206:13)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":206:36)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":208:16)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":209:9)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":212:9)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":209:13)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":209:30)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":210:9)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":211:26)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":211:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":237:23)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":222:1)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":240:1)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":224:5)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":224:9)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":226:13)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":226:12)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":226:5)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":227:5)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":228:5)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":239:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":229:9)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":229:30)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:9)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":238:9)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:13)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:21)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:23)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:26)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:34)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":231:36)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":232:9)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":234:9)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":236:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":233:33)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":233:26)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":233:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":237:13)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":242:1)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":246:1)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":244:5)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_43.cpp":245:5)
#loc292 = loc(fused[#loc1, #loc2])
#loc293 = loc(fused[#loc3, #loc4])
#loc294 = loc(fused[#loc6, #loc7])
#loc295 = loc(fused[#loc8, #loc9])
#loc296 = loc(fused[#loc10, #loc11])
#loc297 = loc(fused[#loc12, #loc13])
#loc298 = loc(fused[#loc14, #loc15])
#loc299 = loc(fused[#loc16, #loc17])
#loc301 = loc(fused[#loc21, #loc22])
#loc302 = loc(fused[#loc23, #loc24])
#loc303 = loc(fused[#loc25, #loc26])
#loc304 = loc(fused[#loc27, #loc28])
#loc305 = loc(fused[#loc29, #loc30])
#loc306 = loc(fused[#loc31, #loc32])
#loc307 = loc(fused[#loc33, #loc34])
#loc308 = loc(fused[#loc39, #loc40])
#loc309 = loc(fused[#loc41, #loc42])
#loc310 = loc(fused[#loc43, #loc44])
#loc311 = loc(fused[#loc45, #loc42])
#loc312 = loc(fused[#loc47, #loc48])
#loc313 = loc(fused[#loc50, #loc51])
#loc314 = loc(fused[#loc52, #loc53])
#loc315 = loc(fused[#loc56, #loc54])
#loc316 = loc(fused[#loc60, #loc61])
#loc317 = loc(fused[#loc65, #loc66])
#loc318 = loc(fused[#loc67, #loc68])
#loc319 = loc(fused[#loc70, #loc71])
#loc320 = loc(fused[#loc72, #loc73])
#loc321 = loc(fused[#loc74, #loc75])
#loc322 = loc(fused[#loc76, #loc68])
#loc323 = loc(fused[#loc80, #loc81])
#loc324 = loc(fused[#loc84, #loc85])
#loc325 = loc(fused[#loc86, #loc87])
#loc326 = loc(fused[#loc88, #loc89])
#loc327 = loc(fused[#loc91, #loc92])
#loc328 = loc(fused[#loc93, #loc87])
#loc329 = loc(fused[#loc97, #loc95])
#loc330 = loc(fused[#loc100, #loc101])
#loc331 = loc(fused[#loc103, #loc104])
#loc332 = loc(fused[#loc105, #loc106])
#loc333 = loc(fused[#loc107, #loc104])
#loc334 = loc(fused[#loc110, #loc111])
#loc335 = loc(fused[#loc112, #loc113])
#loc336 = loc(fused[#loc115, #loc116])
#loc337 = loc(fused[#loc117, #loc118])
#loc338 = loc(fused[#loc121, #loc119])
#loc339 = loc(fused[#loc123, #loc124])
#loc340 = loc(fused[#loc125, #loc126])
#loc341 = loc(fused[#loc127, #loc128])
#loc342 = loc(fused[#loc129, #loc130])
#loc343 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc344 = loc(fused[#loc138, #loc139])
#loc346 = loc(fused[#loc144, #loc143])
#loc347 = loc(fused[#loc145, #loc146])
#loc348 = loc(fused[#loc147, #loc148])
#loc349 = loc(fused[#loc151, #loc149])
#loc350 = loc(fused[#loc153, #loc154])
#loc351 = loc(fused[#loc155, #loc156])
#loc352 = loc(fused[#loc157, #loc158])
#loc353 = loc(fused[#loc159, #loc160])
#loc354 = loc(fused[#loc161, #loc162, #loc163, #loc158])
#loc355 = loc(fused[#loc169, #loc170])
#loc357 = loc(fused[#loc174, #loc175])
#loc358 = loc(fused[#loc176, #loc177])
#loc359 = loc(fused[#loc178, #loc179])
#loc360 = loc(fused[#loc180, #loc181])
#loc361 = loc(fused[#loc182, #loc183])
#loc362 = loc(fused[#loc184, #loc185])
#loc363 = loc(fused[#loc186, #loc187])
#loc364 = loc(fused[#loc192, #loc193])
#loc365 = loc(fused[#loc194, #loc195])
#loc366 = loc(fused[#loc196, #loc197])
#loc367 = loc(fused[#loc198, #loc195])
#loc368 = loc(fused[#loc200, #loc201])
#loc369 = loc(fused[#loc203, #loc204])
#loc370 = loc(fused[#loc205, #loc206])
#loc371 = loc(fused[#loc208, #loc207])
#loc372 = loc(fused[#loc211, #loc212])
#loc373 = loc(fused[#loc215, #loc216])
#loc374 = loc(fused[#loc217, #loc218])
#loc375 = loc(fused[#loc220, #loc221])
#loc376 = loc(fused[#loc222, #loc223])
#loc377 = loc(fused[#loc224, #loc225])
#loc378 = loc(fused[#loc226, #loc218])
#loc379 = loc(fused[#loc230, #loc231])
#loc380 = loc(fused[#loc234, #loc235])
#loc381 = loc(fused[#loc236, #loc237])
#loc382 = loc(fused[#loc238, #loc239])
#loc383 = loc(fused[#loc241, #loc242])
#loc384 = loc(fused[#loc243, #loc237])
#loc385 = loc(fused[#loc247, #loc245])
#loc386 = loc(fused[#loc250, #loc251])
#loc387 = loc(fused[#loc253, #loc254])
#loc388 = loc(fused[#loc255, #loc256])
#loc389 = loc(fused[#loc257, #loc254])
#loc390 = loc(fused[#loc261, #loc262])
#loc391 = loc(fused[#loc263, #loc264])
#loc392 = loc(fused[#loc267, #loc265])
#loc393 = loc(fused[#loc269, #loc270])
#loc394 = loc(fused[#loc271, #loc272])
#loc395 = loc(fused[#loc273, #loc274])
#loc396 = loc(fused[#loc275, #loc276])
#loc397 = loc(fused[#loc278, #loc280])
#loc398 = loc(fused[#loc281, #loc282, #loc283, #loc274])
#loc399 = loc(fused[#loc288, #loc289])
