!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":90:10)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":90:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":90:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":90:32)
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc139)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc140)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc146)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc153)
        cir.condition(%6) loc(#loc31)
      } body {
        cir.scope {
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
          %5 = cir.const #cir.int<10> : !s32i loc(#loc34)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc34)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc155)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc156)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
          cir.scope {
            %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
            %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc46)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
            } loc(#loc161)
          } loc(#loc159)
        } loc(#loc154)
        cir.yield loc(#loc26)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc48)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
        cir.yield loc(#loc151)
      } loc(#loc151)
    } loc(#loc151)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc140)
      %4 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc140)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc140)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc51)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc55)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc56)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc164)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc51)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    } loc(#loc163)
    cir.return loc(#loc18)
  } loc(#loc147)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc165)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc167)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc103)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc181)
        cir.condition(%6) loc(#loc107)
      } body {
        cir.scope {
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
          %5 = cir.const #cir.int<10> : !s32i loc(#loc110)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc110)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc110)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc183)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc184)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
          cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
          cir.scope {
            %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc124)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc189)
          } loc(#loc187)
        } loc(#loc182)
        cir.yield loc(#loc102)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc126)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        cir.yield loc(#loc179)
      } loc(#loc179)
    } loc(#loc179)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc139)
      %4 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc139)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc139)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc129)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc131)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc132)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc133)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc192)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc137)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
    } loc(#loc191)
    cir.return loc(#loc94)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":66:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":66:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":40:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":40:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":144:1)
#loc10 = loc("/usr/include/string.h":146:14)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":47:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":30:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":31:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":31:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":32:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":32:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":38:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:16)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:20)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:18)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":34:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:31)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:45)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:46)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":36:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:37)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:21)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:27)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:28)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:34)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":37:33)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":33:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":39:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":46:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:31)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:38)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":43:48)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":44:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":44:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":45:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":45:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":75:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":78:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":77:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":77:13)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":95:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":97:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":100:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":102:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":90:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":105:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":91:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":93:27)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":93:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":93:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":95:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":96:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":96:67)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":97:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":100:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":101:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":101:66)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":102:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":104:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":104:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":54:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":73:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":56:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":56:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":57:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":57:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":58:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":58:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":64:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:16)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:18)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":60:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:24)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:32)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:35)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:38)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:49)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:31)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:50)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":62:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:37)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:27)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:28)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":63:33)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:24)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":59:23)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":65:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":72:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:23)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:31)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:38)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":69:48)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":70:19)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":70:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":71:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_17.c":71:14)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc24, #loc23])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc28, #loc27])
#loc153 = loc(fused[#loc29, #loc30])
#loc154 = loc(fused[#loc32, #loc26])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc34, #loc36])
#loc157 = loc(fused[#loc33, #loc37])
#loc158 = loc(fused[#loc38, #loc37])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc43, #loc40])
#loc162 = loc(fused[#loc48, #loc47])
#loc163 = loc(fused[#loc49, #loc50])
#loc164 = loc(fused[#loc54, #loc56])
#loc165 = loc(fused[#loc61, #loc62])
#loc166 = loc(fused[#loc63, #loc64])
#loc167 = loc(fused[#loc65, #loc66])
#loc168 = loc(fused[#loc67, #loc68])
#loc169 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc84, #loc85])
#loc173 = loc(fused[#loc88, #loc89])
#loc174 = loc(fused[#loc92, #loc91])
#loc175 = loc(fused[#loc93, #loc94])
#loc176 = loc(fused[#loc95, #loc96])
#loc177 = loc(fused[#loc97, #loc98])
#loc178 = loc(fused[#loc100, #loc99])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc104, #loc103])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc108, #loc102])
#loc183 = loc(fused[#loc112, #loc113])
#loc184 = loc(fused[#loc114, #loc113])
#loc185 = loc(fused[#loc109, #loc115])
#loc186 = loc(fused[#loc116, #loc115])
#loc187 = loc(fused[#loc117, #loc118])
#loc188 = loc(fused[#loc119, #loc120])
#loc189 = loc(fused[#loc121, #loc118])
#loc190 = loc(fused[#loc126, #loc125])
#loc191 = loc(fused[#loc127, #loc128])
#loc192 = loc(fused[#loc132, #loc134])
