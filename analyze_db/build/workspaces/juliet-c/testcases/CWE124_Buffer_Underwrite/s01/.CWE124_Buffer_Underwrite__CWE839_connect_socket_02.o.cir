!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc541)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc542)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc543)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc544)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc545)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc546)
  cir.func private @close(!s32i) -> !s32i loc(#loc547)
  cir.func private @printIntLine(!s32i) loc(#loc548)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc549)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc551)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc552)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc556)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc557)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc558)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc559)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc39)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc558)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc46)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc47)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc48)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc562)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc55)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc55)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc564)
                  cir.if %56 {
                    cir.break loc(#loc57)
                  } loc(#loc565)
                } loc(#loc563)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc566)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc567)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc568)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc65)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc65)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc569)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc570)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc73)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc571)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc573)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc574)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc574)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc86)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc86)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc575)
                  cir.if %60 {
                    cir.break loc(#loc88)
                  } loc(#loc576)
                } loc(#loc572)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc91)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc91)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc91)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc91)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc91)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc91)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc91)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc92)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc577)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc93)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc94)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc578)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc100)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc580)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc101)
                    cir.yield %58 : !cir.bool loc(#loc101)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc103)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc581)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc101)
                      cir.yield %62 : !cir.bool loc(#loc101)
                    }, false {
                      %62 = cir.const #false loc(#loc101)
                      cir.yield %62 : !cir.bool loc(#loc101)
                    }) : (!cir.bool) -> !cir.bool loc(#loc101)
                    cir.yield %61 : !cir.bool loc(#loc101)
                  }) : (!cir.bool) -> !cir.bool loc(#loc101)
                  cir.if %57 {
                    cir.break loc(#loc105)
                  } loc(#loc582)
                } loc(#loc579)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc106)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc106)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc108)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc583)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc110)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc584)
              } loc(#loc561)
              cir.yield loc(#loc43)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%12) loc(#loc113)
            } loc(#loc560)
          } loc(#loc560)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc117)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc586)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc120)
            } loc(#loc587)
          } loc(#loc585)
        } loc(#loc555)
      } loc(#loc554)
    } loc(#loc553)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc123)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc591)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc592)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc592)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc592)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc134)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc594)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc138)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc140)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc596)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc143)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc598)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc146)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc599)
                  cir.condition(%18) loc(#loc147)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc151)
                  } loc(#loc600)
                  cir.yield loc(#loc142)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc153)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                  cir.yield loc(#loc597)
                } loc(#loc597)
              } loc(#loc597)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc154)
            } loc(#loc595)
          } loc(#loc593)
        } loc(#loc590)
      } loc(#loc589)
    } loc(#loc588)
    cir.return loc(#loc22)
  } loc(#loc550)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc603)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc604)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc605)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc606)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    cir.return loc(#loc156)
  } loc(#loc602)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc166)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc608)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc172)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc176)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc176)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc613)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc614)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc615)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc616)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc185)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc615)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc192)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc193)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc194)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc195)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc201)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc201)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc621)
                  cir.if %56 {
                    cir.break loc(#loc203)
                  } loc(#loc622)
                } loc(#loc620)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc623)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc206)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc624)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc625)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc211)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc211)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc626)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc213)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc213)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc214)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc627)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc217)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc217)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc218)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc628)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc630)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc631)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc631)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc228)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc229)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc229)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc632)
                  cir.if %60 {
                    cir.break loc(#loc231)
                  } loc(#loc633)
                } loc(#loc629)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc233)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc234)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc234)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc234)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc234)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc234)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc234)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc234)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc235)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc235)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc634)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc236)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc237)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc237)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc635)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc243)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc243)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc637)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc244)
                    cir.yield %58 : !cir.bool loc(#loc244)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc246)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc638)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc244)
                      cir.yield %62 : !cir.bool loc(#loc244)
                    }, false {
                      %62 = cir.const #false loc(#loc244)
                      cir.yield %62 : !cir.bool loc(#loc244)
                    }) : (!cir.bool) -> !cir.bool loc(#loc244)
                    cir.yield %61 : !cir.bool loc(#loc244)
                  }) : (!cir.bool) -> !cir.bool loc(#loc244)
                  cir.if %57 {
                    cir.break loc(#loc248)
                  } loc(#loc639)
                } loc(#loc636)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc249)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc249)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc251)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc640)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc252)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc253)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc641)
              } loc(#loc618)
              cir.yield loc(#loc189)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc256)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc256)
              cir.condition(%12) loc(#loc256)
            } loc(#loc617)
          } loc(#loc617)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc259)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc260)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc260)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc643)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc262)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc263)
            } loc(#loc644)
          } loc(#loc642)
        } loc(#loc612)
      } loc(#loc611)
    } loc(#loc610)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc266)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc266)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc165)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc165)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc270)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc648)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc649)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc649)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc649)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc280)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc651)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc283)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc652)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc281)
                cir.yield %16 : !cir.bool loc(#loc281)
              }, false {
                %16 = cir.const #false loc(#loc281)
                cir.yield %16 : !cir.bool loc(#loc281)
              }) : (!cir.bool) -> !cir.bool loc(#loc281)
              cir.yield %15 : !cir.bool loc(#loc281)
            }, false {
              %12 = cir.const #false loc(#loc281)
              cir.yield %12 : !cir.bool loc(#loc281)
            }) : (!cir.bool) -> !cir.bool loc(#loc281)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc288)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc290)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc290)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc654)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc293)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc656)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc296)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc657)
                  cir.condition(%19) loc(#loc297)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc300)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc300)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc300)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc301)
                  } loc(#loc658)
                  cir.yield loc(#loc292)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc303)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc659)
                  cir.yield loc(#loc655)
                } loc(#loc655)
              } loc(#loc655)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc166)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc166)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc304)
            } loc(#loc653)
          } loc(#loc650)
        } loc(#loc647)
      } loc(#loc646)
    } loc(#loc645)
    cir.return loc(#loc168)
  } loc(#loc607)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc661)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc309)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc310)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc314)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc314)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc666)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc667)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc668)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc669)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc323)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc323)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc668)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc330)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc331)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc332)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc672)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc339)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc339)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc674)
                  cir.if %56 {
                    cir.break loc(#loc341)
                  } loc(#loc675)
                } loc(#loc673)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc676)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc344)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc677)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc678)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc349)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc349)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc679)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc351)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc351)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc352)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc680)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc355)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc355)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc356)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc681)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc361)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc683)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc684)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc684)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc366)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc367)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc367)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc685)
                  cir.if %60 {
                    cir.break loc(#loc369)
                  } loc(#loc686)
                } loc(#loc682)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc371)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc371)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc372)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc372)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc372)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc372)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc372)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc372)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc372)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc373)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc373)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc687)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc374)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc375)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc375)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc688)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc381)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc381)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc690)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc382)
                    cir.yield %58 : !cir.bool loc(#loc382)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc384)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc691)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc382)
                      cir.yield %62 : !cir.bool loc(#loc382)
                    }, false {
                      %62 = cir.const #false loc(#loc382)
                      cir.yield %62 : !cir.bool loc(#loc382)
                    }) : (!cir.bool) -> !cir.bool loc(#loc382)
                    cir.yield %61 : !cir.bool loc(#loc382)
                  }) : (!cir.bool) -> !cir.bool loc(#loc382)
                  cir.if %57 {
                    cir.break loc(#loc386)
                  } loc(#loc692)
                } loc(#loc689)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc387)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc387)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc389)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc389)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc693)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc390)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc391)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc694)
              } loc(#loc671)
              cir.yield loc(#loc327)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc394)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc394)
              cir.condition(%12) loc(#loc394)
            } loc(#loc670)
          } loc(#loc670)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc397)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc398)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc398)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc696)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc400)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc401)
            } loc(#loc697)
          } loc(#loc695)
        } loc(#loc665)
      } loc(#loc664)
    } loc(#loc663)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc404)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc404)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc701)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc702)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc702)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc702)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc414)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc415)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc704)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc417)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc418)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc705)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc416)
                cir.yield %16 : !cir.bool loc(#loc416)
              }, false {
                %16 = cir.const #false loc(#loc416)
                cir.yield %16 : !cir.bool loc(#loc416)
              }) : (!cir.bool) -> !cir.bool loc(#loc416)
              cir.yield %15 : !cir.bool loc(#loc416)
            }, false {
              %12 = cir.const #false loc(#loc416)
              cir.yield %12 : !cir.bool loc(#loc416)
            }) : (!cir.bool) -> !cir.bool loc(#loc416)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc423)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc424)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc425)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc425)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc707)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc428)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc709)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc431)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc710)
                  cir.condition(%19) loc(#loc432)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc435)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc435)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc435)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc436)
                  } loc(#loc711)
                  cir.yield loc(#loc427)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc437)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc438)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc712)
                  cir.yield loc(#loc708)
                } loc(#loc708)
              } loc(#loc708)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc439)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc439)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc440)
            } loc(#loc706)
          } loc(#loc703)
        } loc(#loc700)
      } loc(#loc699)
    } loc(#loc698)
    cir.return loc(#loc306)
  } loc(#loc660)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc714)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc446)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc715)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc450)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc450)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc454)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc454)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc455)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc456)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc718)
      } loc(#loc717)
    } loc(#loc716)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc460)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc460)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc722)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc723)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc723)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc723)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc470)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc471)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc725)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc475)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc476)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc477)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc477)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc727)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc480)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc729)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc482)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc483)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc730)
                  cir.condition(%18) loc(#loc484)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc486)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc487)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc487)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc487)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc488)
                  } loc(#loc731)
                  cir.yield loc(#loc479)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc489)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc490)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc732)
                  cir.yield loc(#loc728)
                } loc(#loc728)
              } loc(#loc728)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc491)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc491)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc492)
            } loc(#loc726)
          } loc(#loc724)
        } loc(#loc721)
      } loc(#loc720)
    } loc(#loc719)
    cir.return loc(#loc442)
  } loc(#loc713)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc734)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc497)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc498)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc735)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc502)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc502)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc504)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc738)
      } loc(#loc737)
    } loc(#loc736)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc508)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc508)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc742)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc743)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc743)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc743)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc518)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc519)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc745)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc523)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc524)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc525)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc525)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc747)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc528)
                cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc749)
                cir.for : cond {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc530)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc531)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc750)
                  cir.condition(%18) loc(#loc532)
                } body {
                  cir.scope {
                    %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc534)
                    %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc535)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc535)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc535)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc536)
                  } loc(#loc751)
                  cir.yield loc(#loc527)
                } step {
                  %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc537)
                  %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc538)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc752)
                  cir.yield loc(#loc748)
                } loc(#loc748)
              } loc(#loc748)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc539)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc539)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc540)
            } loc(#loc746)
          } loc(#loc744)
        } loc(#loc741)
      } loc(#loc740)
    } loc(#loc739)
    cir.return loc(#loc494)
  } loc(#loc733)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":126:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":44:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":130:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":46:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":48:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":48:12)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":48:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":49:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":107:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":49:8)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":50:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":51:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":106:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":56:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":56:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":57:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":57:32)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":58:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":58:36)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":59:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":59:45)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":60:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":95:21)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":61:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":94:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:40)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:49)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:62)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:33)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":70:73)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":71:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":74:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":71:21)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":71:38)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":72:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":73:21)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:24)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:25)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:34)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:37)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:51)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:17)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":75:52)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":76:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":76:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":77:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":77:17)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":77:63)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":78:42)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":78:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":78:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":78:50)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":82:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:29)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:62)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:63)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:72)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:86)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:21)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":79:92)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":80:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":81:21)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:35)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:50)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:63)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:81)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:84)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:30)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:17)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":85:85)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:17)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":89:17)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:21)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:35)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:48)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:51)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":86:65)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":87:17)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":88:21)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":91:43)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":91:29)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":91:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":93:29)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":93:24)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":93:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":93:40)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":95:20)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":96:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":99:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":96:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":96:34)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":97:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":98:30)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":98:17)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":108:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":129:5)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":108:8)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":109:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":110:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":128:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":111:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":111:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":112:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":112:34)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":115:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":127:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":115:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":115:24)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":116:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":123:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":125:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":117:32)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":117:24)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":117:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":122:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:25)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:21)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:28)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:32)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":120:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":121:41)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":121:34)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":121:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:37)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":119:36)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":126:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":394:1)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":400:1)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":396:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":396:14)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":397:5)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":397:14)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":398:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":398:14)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":399:5)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":399:14)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":204:19)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":223:27)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":137:1)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":227:1)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":139:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":139:9)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":141:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":141:12)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":141:5)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":142:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":200:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":142:8)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":143:5)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":144:9)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":199:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":149:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":149:17)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":150:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":150:32)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":151:13)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":151:36)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":152:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":152:45)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":153:13)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":188:21)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":154:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":187:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:40)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:49)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:62)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:33)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:17)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":163:73)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":164:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":167:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":164:21)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":164:38)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":165:17)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":166:21)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:24)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:25)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:34)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:37)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:51)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":168:52)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":169:38)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":169:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":170:53)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":170:43)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":170:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":170:63)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":171:42)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":171:36)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":171:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":171:50)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":175:17)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:29)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:62)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:63)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:72)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:86)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:21)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":172:92)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":173:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":174:21)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:35)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:50)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:63)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:81)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:84)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:30)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":178:85)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":182:17)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:21)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:35)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:48)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:51)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":179:65)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":180:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":181:21)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":184:43)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":184:29)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":184:17)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":186:29)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":186:24)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":186:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":186:40)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":188:20)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":189:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":192:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":189:17)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":189:34)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":190:13)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":191:30)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":191:17)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":201:5)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":226:5)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":201:8)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":202:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":205:5)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":207:5)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":204:9)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":208:9)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":225:9)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":209:13)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":209:17)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":210:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":210:34)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:13)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":224:13)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:17)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:25)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:27)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:30)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:38)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":212:40)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":213:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":220:13)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":222:13)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":214:32)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":214:24)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":214:17)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:17)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":219:17)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:25)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:21)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:28)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:32)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:30)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":217:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":218:41)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":218:34)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":218:21)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:37)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":216:36)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":223:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":230:1)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":315:1)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":232:5)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":232:9)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":234:13)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":234:12)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":234:5)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":235:5)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":293:5)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":235:8)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":236:5)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":237:9)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":292:9)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":242:13)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":242:17)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":243:13)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":243:32)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":244:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":244:36)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":245:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":245:45)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":246:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":281:21)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":247:13)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":280:13)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:40)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:49)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:62)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:33)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:17)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":256:73)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":257:17)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":260:17)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":257:21)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":257:38)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":258:17)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":259:21)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:24)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:25)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:34)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:37)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:51)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:17)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":261:52)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":262:38)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":262:17)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":263:53)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":263:43)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":263:17)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":263:63)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":264:42)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":264:36)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":264:17)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":264:50)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:17)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":268:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:29)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:62)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:63)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:72)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:86)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:21)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":265:92)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":266:17)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":267:21)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:35)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:50)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:63)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:81)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:84)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:30)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:17)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":271:85)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:17)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":275:17)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:21)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:35)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:48)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:51)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":272:65)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":273:17)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":274:21)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":277:43)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":277:29)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":277:17)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":279:29)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":279:24)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":279:17)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":279:40)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":281:20)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":282:13)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":285:13)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":282:17)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":282:34)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":283:13)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":284:30)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":284:17)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":294:5)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":314:5)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":294:8)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":295:5)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":296:9)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":313:9)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":297:13)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":297:17)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":298:13)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":298:34)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:13)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":312:13)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:17)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:25)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:27)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:30)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:38)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":300:40)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":301:13)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":308:13)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":310:13)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":302:32)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":302:24)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":302:17)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:17)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":307:17)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:25)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:21)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:28)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:32)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:30)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":305:17)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":306:41)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":306:34)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":306:21)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:37)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":304:36)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":311:27)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":311:17)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":318:1)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":356:1)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":320:5)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":320:9)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":322:13)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":322:12)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":322:5)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":323:5)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":333:5)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":323:8)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":324:5)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":327:5)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":329:5)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":326:19)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":326:9)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":332:16)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":332:9)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":334:5)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":355:5)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":334:8)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":335:5)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":336:9)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":354:9)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":337:13)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":337:17)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":338:13)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":338:34)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":341:13)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":353:13)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":341:17)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":341:24)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":342:13)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":349:13)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":351:13)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":343:32)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":343:24)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":343:17)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:17)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":348:17)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:25)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:21)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:28)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:32)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:30)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":346:17)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":347:41)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":347:34)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":347:21)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:37)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":345:36)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":352:27)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":352:17)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":359:1)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":392:1)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":361:5)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":361:9)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":363:13)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":363:12)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":363:5)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":364:5)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":369:5)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":364:8)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":365:5)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":368:16)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":368:9)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":370:5)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":391:5)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":370:8)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":371:5)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":372:9)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":390:9)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":373:13)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":373:17)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":374:13)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":374:34)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":377:13)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":389:13)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":377:17)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":377:24)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":378:13)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":385:13)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":387:13)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":379:32)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":379:24)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":379:17)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:17)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":384:17)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:25)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:21)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:28)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:32)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:30)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":382:17)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":383:41)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":383:34)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":383:21)
#loc537 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:37)
#loc538 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":381:36)
#loc539 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":388:27)
#loc540 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_02.c":388:17)
#loc541 = loc(fused[#loc1, #loc2])
#loc542 = loc(fused[#loc3, #loc4])
#loc543 = loc(fused[#loc6, #loc7])
#loc544 = loc(fused[#loc8, #loc9])
#loc545 = loc(fused[#loc10, #loc11])
#loc546 = loc(fused[#loc12, #loc13])
#loc547 = loc(fused[#loc14, #loc15])
#loc548 = loc(fused[#loc16, #loc17])
#loc549 = loc(fused[#loc18, #loc19])
#loc550 = loc(fused[#loc21, #loc22])
#loc551 = loc(fused[#loc23, #loc24])
#loc552 = loc(fused[#loc27, #loc25])
#loc553 = loc(fused[#loc28, #loc29])
#loc554 = loc(fused[#loc31, #loc29])
#loc555 = loc(fused[#loc32, #loc33])
#loc556 = loc(fused[#loc34, #loc35])
#loc557 = loc(fused[#loc36, #loc37])
#loc558 = loc(fused[#loc38, #loc39])
#loc559 = loc(fused[#loc40, #loc41])
#loc560 = loc(fused[#loc42, #loc43])
#loc561 = loc(fused[#loc44, #loc45])
#loc562 = loc(fused[#loc50, #loc51])
#loc563 = loc(fused[#loc52, #loc53])
#loc564 = loc(fused[#loc54, #loc55])
#loc565 = loc(fused[#loc56, #loc53])
#loc566 = loc(fused[#loc58, #loc59])
#loc567 = loc(fused[#loc61, #loc62])
#loc568 = loc(fused[#loc63, #loc64])
#loc569 = loc(fused[#loc67, #loc65])
#loc570 = loc(fused[#loc71, #loc72])
#loc571 = loc(fused[#loc76, #loc77])
#loc572 = loc(fused[#loc78, #loc79])
#loc573 = loc(fused[#loc81, #loc82])
#loc574 = loc(fused[#loc83, #loc84])
#loc575 = loc(fused[#loc85, #loc86])
#loc576 = loc(fused[#loc87, #loc79])
#loc577 = loc(fused[#loc91, #loc92])
#loc578 = loc(fused[#loc95, #loc96])
#loc579 = loc(fused[#loc97, #loc98])
#loc580 = loc(fused[#loc99, #loc100])
#loc581 = loc(fused[#loc102, #loc103])
#loc582 = loc(fused[#loc104, #loc98])
#loc583 = loc(fused[#loc108, #loc106])
#loc584 = loc(fused[#loc111, #loc112])
#loc585 = loc(fused[#loc114, #loc115])
#loc586 = loc(fused[#loc116, #loc117])
#loc587 = loc(fused[#loc118, #loc115])
#loc588 = loc(fused[#loc121, #loc122])
#loc589 = loc(fused[#loc124, #loc122])
#loc590 = loc(fused[#loc125, #loc126])
#loc591 = loc(fused[#loc127, #loc128])
#loc592 = loc(fused[#loc129, #loc130])
#loc593 = loc(fused[#loc131, #loc132])
#loc594 = loc(fused[#loc133, #loc134])
#loc595 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc596 = loc(fused[#loc140, #loc138])
#loc597 = loc(fused[#loc141, #loc142])
#loc598 = loc(fused[#loc144, #loc143])
#loc599 = loc(fused[#loc145, #loc146])
#loc600 = loc(fused[#loc148, #loc142])
#loc601 = loc(fused[#loc153, #loc152])
#loc602 = loc(fused[#loc155, #loc156])
#loc603 = loc(fused[#loc157, #loc158])
#loc604 = loc(fused[#loc159, #loc160])
#loc605 = loc(fused[#loc161, #loc162])
#loc606 = loc(fused[#loc163, #loc164])
#loc607 = loc(fused[#loc167, #loc168])
#loc608 = loc(fused[#loc169, #loc170])
#loc609 = loc(fused[#loc173, #loc171])
#loc610 = loc(fused[#loc174, #loc175])
#loc611 = loc(fused[#loc177, #loc175])
#loc612 = loc(fused[#loc178, #loc179])
#loc613 = loc(fused[#loc180, #loc181])
#loc614 = loc(fused[#loc182, #loc183])
#loc615 = loc(fused[#loc184, #loc185])
#loc616 = loc(fused[#loc186, #loc187])
#loc617 = loc(fused[#loc188, #loc189])
#loc618 = loc(fused[#loc190, #loc191])
#loc619 = loc(fused[#loc196, #loc197])
#loc620 = loc(fused[#loc198, #loc199])
#loc621 = loc(fused[#loc200, #loc201])
#loc622 = loc(fused[#loc202, #loc199])
#loc623 = loc(fused[#loc204, #loc205])
#loc624 = loc(fused[#loc207, #loc208])
#loc625 = loc(fused[#loc209, #loc210])
#loc626 = loc(fused[#loc212, #loc211])
#loc627 = loc(fused[#loc215, #loc216])
#loc628 = loc(fused[#loc219, #loc220])
#loc629 = loc(fused[#loc221, #loc222])
#loc630 = loc(fused[#loc224, #loc225])
#loc631 = loc(fused[#loc226, #loc227])
#loc632 = loc(fused[#loc228, #loc229])
#loc633 = loc(fused[#loc230, #loc222])
#loc634 = loc(fused[#loc234, #loc235])
#loc635 = loc(fused[#loc238, #loc239])
#loc636 = loc(fused[#loc240, #loc241])
#loc637 = loc(fused[#loc242, #loc243])
#loc638 = loc(fused[#loc245, #loc246])
#loc639 = loc(fused[#loc247, #loc241])
#loc640 = loc(fused[#loc251, #loc249])
#loc641 = loc(fused[#loc254, #loc255])
#loc642 = loc(fused[#loc257, #loc258])
#loc643 = loc(fused[#loc259, #loc260])
#loc644 = loc(fused[#loc261, #loc258])
#loc645 = loc(fused[#loc264, #loc265])
#loc646 = loc(fused[#loc267, #loc268, #loc269, #loc265])
#loc647 = loc(fused[#loc271, #loc272])
#loc648 = loc(fused[#loc273, #loc274])
#loc649 = loc(fused[#loc275, #loc276])
#loc650 = loc(fused[#loc277, #loc278])
#loc651 = loc(fused[#loc279, #loc280])
#loc652 = loc(fused[#loc282, #loc284])
#loc653 = loc(fused[#loc285, #loc286, #loc287, #loc278])
#loc654 = loc(fused[#loc290, #loc288])
#loc655 = loc(fused[#loc291, #loc292])
#loc656 = loc(fused[#loc294, #loc293])
#loc657 = loc(fused[#loc295, #loc296])
#loc658 = loc(fused[#loc298, #loc292])
#loc659 = loc(fused[#loc303, #loc302])
#loc660 = loc(fused[#loc305, #loc306])
#loc661 = loc(fused[#loc307, #loc308])
#loc662 = loc(fused[#loc311, #loc309])
#loc663 = loc(fused[#loc312, #loc313])
#loc664 = loc(fused[#loc315, #loc313])
#loc665 = loc(fused[#loc316, #loc317])
#loc666 = loc(fused[#loc318, #loc319])
#loc667 = loc(fused[#loc320, #loc321])
#loc668 = loc(fused[#loc322, #loc323])
#loc669 = loc(fused[#loc324, #loc325])
#loc670 = loc(fused[#loc326, #loc327])
#loc671 = loc(fused[#loc328, #loc329])
#loc672 = loc(fused[#loc334, #loc335])
#loc673 = loc(fused[#loc336, #loc337])
#loc674 = loc(fused[#loc338, #loc339])
#loc675 = loc(fused[#loc340, #loc337])
#loc676 = loc(fused[#loc342, #loc343])
#loc677 = loc(fused[#loc345, #loc346])
#loc678 = loc(fused[#loc347, #loc348])
#loc679 = loc(fused[#loc350, #loc349])
#loc680 = loc(fused[#loc353, #loc354])
#loc681 = loc(fused[#loc357, #loc358])
#loc682 = loc(fused[#loc359, #loc360])
#loc683 = loc(fused[#loc362, #loc363])
#loc684 = loc(fused[#loc364, #loc365])
#loc685 = loc(fused[#loc366, #loc367])
#loc686 = loc(fused[#loc368, #loc360])
#loc687 = loc(fused[#loc372, #loc373])
#loc688 = loc(fused[#loc376, #loc377])
#loc689 = loc(fused[#loc378, #loc379])
#loc690 = loc(fused[#loc380, #loc381])
#loc691 = loc(fused[#loc383, #loc384])
#loc692 = loc(fused[#loc385, #loc379])
#loc693 = loc(fused[#loc389, #loc387])
#loc694 = loc(fused[#loc392, #loc393])
#loc695 = loc(fused[#loc395, #loc396])
#loc696 = loc(fused[#loc397, #loc398])
#loc697 = loc(fused[#loc399, #loc396])
#loc698 = loc(fused[#loc402, #loc403])
#loc699 = loc(fused[#loc405, #loc403])
#loc700 = loc(fused[#loc406, #loc407])
#loc701 = loc(fused[#loc408, #loc409])
#loc702 = loc(fused[#loc410, #loc411])
#loc703 = loc(fused[#loc412, #loc413])
#loc704 = loc(fused[#loc414, #loc415])
#loc705 = loc(fused[#loc417, #loc419])
#loc706 = loc(fused[#loc420, #loc421, #loc422, #loc413])
#loc707 = loc(fused[#loc425, #loc423])
#loc708 = loc(fused[#loc426, #loc427])
#loc709 = loc(fused[#loc429, #loc428])
#loc710 = loc(fused[#loc430, #loc431])
#loc711 = loc(fused[#loc433, #loc427])
#loc712 = loc(fused[#loc438, #loc437])
#loc713 = loc(fused[#loc441, #loc442])
#loc714 = loc(fused[#loc443, #loc444])
#loc715 = loc(fused[#loc447, #loc445])
#loc716 = loc(fused[#loc448, #loc449])
#loc717 = loc(fused[#loc451, #loc452, #loc453, #loc449])
#loc718 = loc(fused[#loc457, #loc456])
#loc719 = loc(fused[#loc458, #loc459])
#loc720 = loc(fused[#loc461, #loc459])
#loc721 = loc(fused[#loc462, #loc463])
#loc722 = loc(fused[#loc464, #loc465])
#loc723 = loc(fused[#loc466, #loc467])
#loc724 = loc(fused[#loc468, #loc469])
#loc725 = loc(fused[#loc470, #loc471])
#loc726 = loc(fused[#loc472, #loc473, #loc474, #loc469])
#loc727 = loc(fused[#loc477, #loc475])
#loc728 = loc(fused[#loc478, #loc479])
#loc729 = loc(fused[#loc481, #loc480])
#loc730 = loc(fused[#loc482, #loc483])
#loc731 = loc(fused[#loc485, #loc479])
#loc732 = loc(fused[#loc490, #loc489])
#loc733 = loc(fused[#loc493, #loc494])
#loc734 = loc(fused[#loc495, #loc496])
#loc735 = loc(fused[#loc499, #loc497])
#loc736 = loc(fused[#loc500, #loc501])
#loc737 = loc(fused[#loc503, #loc501])
#loc738 = loc(fused[#loc505, #loc504])
#loc739 = loc(fused[#loc506, #loc507])
#loc740 = loc(fused[#loc509, #loc507])
#loc741 = loc(fused[#loc510, #loc511])
#loc742 = loc(fused[#loc512, #loc513])
#loc743 = loc(fused[#loc514, #loc515])
#loc744 = loc(fused[#loc516, #loc517])
#loc745 = loc(fused[#loc518, #loc519])
#loc746 = loc(fused[#loc520, #loc521, #loc522, #loc517])
#loc747 = loc(fused[#loc525, #loc523])
#loc748 = loc(fused[#loc526, #loc527])
#loc749 = loc(fused[#loc529, #loc528])
#loc750 = loc(fused[#loc530, #loc531])
#loc751 = loc(fused[#loc533, #loc527])
#loc752 = loc(fused[#loc538, #loc537])
