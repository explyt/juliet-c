!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":122:10)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":122:14)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":122:20)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":122:32)
#true = #cir.bool<true> : !cir.bool
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc107, #loc108])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc153)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_18_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc154)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc155)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc156)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc16)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc160)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc154)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_18_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc154)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc154)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.goto "source" loc(#loc165)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc29)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.scope {
      %8 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc34)
      %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
      %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc167)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
      %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc168)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc42)
          %18 = cir.const #cir.int<100> : !s32i loc(#loc43)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
          %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc171)
          %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc171)
          %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc157)
          %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
          %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
          %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
          cir.if %28 {
            %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
            %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
            cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc174)
            cir.scope {
              %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %33 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc58)
              %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc176)
              %36 = cir.ternary(%35, true {
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc62)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc177)
                %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc60)
                %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc60)
                %45 = cir.const #cir.int<10> : !s32i loc(#loc64)
                %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc178)
                %47 = cir.ternary(%46, true {
                  %48 = cir.const #true loc(#loc59)
                  cir.yield %48 : !cir.bool loc(#loc59)
                }, false {
                  %48 = cir.const #false loc(#loc59)
                  cir.yield %48 : !cir.bool loc(#loc59)
                }) : (!cir.bool) -> !cir.bool loc(#loc59)
                cir.yield %47 : !cir.bool loc(#loc59)
              }, false {
                %37 = cir.const #false loc(#loc59)
                cir.yield %37 : !cir.bool loc(#loc59)
              }) : (!cir.bool) -> !cir.bool loc(#loc59)
              cir.if %36 {
                %37 = cir.const #cir.int<0> : !s32i loc(#loc66)
                %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc66)
                %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc69)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc180)
                %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc181)
              } loc(#loc179)
            } loc(#loc175)
          } else {
            %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
            %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc71)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc72)
            %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc72)
            %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc182)
          } loc(#loc173)
        } loc(#loc170)
      } loc(#loc169)
    } loc(#loc166)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc184)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc16)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc16)
      %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc81)
      cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
      cir.scope {
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc87)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc187)
        cir.if %16 {
          %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
          %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
        } loc(#loc188)
      } loc(#loc186)
    } loc(#loc183)
    cir.return loc(#loc20)
  } loc(#loc161)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc189)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc191)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc102)
  cir.func @main(%arg0: !s32i loc(fused[#loc105, #loc106]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc110)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc111)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc111)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc112)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc99)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_18_good() : () -> () loc(#loc114)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_18_bad() : () -> () loc(#loc118)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %17 : !s32i loc(#loc198)
  } loc(#loc193)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc153)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.goto "source" loc(#loc203)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc134)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc135)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc125)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc125)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc205)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc142)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc142)
      %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc143)
      cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc206)
      cir.scope {
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc149)
        %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc208)
        cir.if %17 {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc151)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc152)
        } loc(#loc209)
      } loc(#loc207)
    } loc(#loc204)
    cir.return loc(#loc127)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":90:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":90:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":42:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":42:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":65:27)
#loc14 = loc("/usr/include/stdio.h":893:1)
#loc15 = loc("/usr/include/stdio.h":894:3)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:28)
#loc17 = loc("/usr/include/stdio.h":887:1)
#loc18 = loc("/usr/include/stdio.h":887:36)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":39:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":80:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":41:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":41:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:37)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":43:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":43:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":44:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":44:10)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":45:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:26)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:33)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":69:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:27)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":51:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":68:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:23)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:28)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:43)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:47)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:57)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:67)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":54:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":62:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":64:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:27)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:34)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:38)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":61:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:36)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:41)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:49)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:50)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:55)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":59:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:39)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:26)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:34)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:35)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":65:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:33)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:22)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:29)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":71:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":79:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":72:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":72:15)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:22)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:16)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:31)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":78:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:21)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":76:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":77:20)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":77:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":107:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":110:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":109:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":109:13)
#loc95 = loc("/usr/include/stdlib.h":575:1)
#loc96 = loc("/usr/include/stdlib.h":575:41)
#loc97 = loc("/usr/include/time.h":76:1)
#loc98 = loc("/usr/include/time.h":76:38)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":127:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":129:15)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":132:15)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":134:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":122:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":137:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":123:1)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":125:27)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":125:22)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":125:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":127:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":128:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":128:60)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":129:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":132:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":133:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":133:59)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":134:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":136:12)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":136:5)
#loc123 = loc("/usr/include/string.h":149:1)
#loc124 = loc("/usr/include/string.h":150:14)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:18)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":87:1)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":105:1)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":89:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":89:12)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":91:12)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":91:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":92:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":92:10)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":93:1)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:12)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":96:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":104:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":97:9)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":97:15)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:22)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:28)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:16)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:31)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":103:9)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":101:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":102:20)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":102:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc14, #loc15])
#loc160 = loc(fused[#loc17, #loc18])
#loc161 = loc(fused[#loc19, #loc20])
#loc162 = loc(fused[#loc21, #loc22])
#loc163 = loc(fused[#loc23, #loc24])
#loc164 = loc(fused[#loc26, #loc25])
#loc165 = loc(fused[#loc27, #loc28])
#loc166 = loc(fused[#loc32, #loc33])
#loc167 = loc(fused[#loc34, #loc35])
#loc168 = loc(fused[#loc34, #loc36])
#loc169 = loc(fused[#loc37, #loc33])
#loc170 = loc(fused[#loc38, #loc39])
#loc171 = loc(fused[#loc43, #loc44])
#loc172 = loc(fused[#loc46, #loc47])
#loc173 = loc(fused[#loc48, #loc49, #loc50, #loc39])
#loc174 = loc(fused[#loc53, #loc54])
#loc175 = loc(fused[#loc55, #loc56])
#loc176 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc61, #loc62])
#loc178 = loc(fused[#loc60, #loc64])
#loc179 = loc(fused[#loc65, #loc56])
#loc180 = loc(fused[#loc68, #loc69])
#loc181 = loc(fused[#loc67, #loc66])
#loc182 = loc(fused[#loc73, #loc72])
#loc183 = loc(fused[#loc76, #loc77])
#loc184 = loc(fused[#loc78, #loc79])
#loc185 = loc(fused[#loc82, #loc83])
#loc186 = loc(fused[#loc84, #loc85])
#loc187 = loc(fused[#loc86, #loc87])
#loc188 = loc(fused[#loc88, #loc85])
#loc189 = loc(fused[#loc91, #loc92])
#loc190 = loc(fused[#loc93, #loc94])
#loc191 = loc(fused[#loc95, #loc96])
#loc192 = loc(fused[#loc97, #loc98])
#loc193 = loc(fused[#loc103, #loc104])
#loc196 = loc(fused[#loc114, #loc115])
#loc197 = loc(fused[#loc118, #loc119])
#loc198 = loc(fused[#loc122, #loc121])
#loc199 = loc(fused[#loc123, #loc124])
#loc200 = loc(fused[#loc126, #loc127])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc131, #loc130])
#loc203 = loc(fused[#loc132, #loc133])
#loc204 = loc(fused[#loc137, #loc138])
#loc205 = loc(fused[#loc139, #loc140])
#loc206 = loc(fused[#loc144, #loc145])
#loc207 = loc(fused[#loc146, #loc147])
#loc208 = loc(fused[#loc148, #loc149])
#loc209 = loc(fused[#loc150, #loc147])
