!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc37 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc11)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc108)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc13)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc16)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %16 ^bb8, ^bb11 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc7)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc30)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc35)
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc36)
  ^bb11:  // 2 preds: ^bb7, ^bb10
    cir.br ^bb12 loc(#loc21)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc5)
  } loc(#loc104)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc37)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc37)
    cir.return loc(#loc37)
  } loc(#loc37)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc45)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc45)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc45)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc47)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc50)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb4 loc(#loc53)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc49)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc123)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %16 ^bb8, ^bb11 loc(#loc56)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc124)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<4> : !u64i loc(#loc125)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc125)
    cir.call @_ZN11OneIntClassC2Ev(%20) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc41)
    cir.store %20, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc117)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc61)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc62)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc64)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc63)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc66)
    cir.br ^bb10 loc(#loc58)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc67)
  ^bb11:  // 2 preds: ^bb7, ^bb10
    cir.br ^bb12 loc(#loc55)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc39)
  } loc(#loc116)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc77)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc134)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %16 ^bb8, ^bb11 loc(#loc86)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<8> : !u64i loc(#loc136)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc71)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc93)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc97)
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc98)
  ^bb11:  // 2 preds: ^bb7, ^bb10
    cir.br ^bb12 loc(#loc85)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc69)
  } loc(#loc127)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodB2GEv() : () -> () loc(#loc101)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodG2BEv() : () -> () loc(#loc102)
    cir.return loc(#loc100)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":24:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":52:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:13)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:49)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":26:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":26:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":27:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":27:36)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":28:37)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":29:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":29:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":32:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":32:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":51:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":35:11)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":49:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:39)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:43)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":45:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":45:13)
#loc29 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":46:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":46:13)
#loc32 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:26)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":50:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":59:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":85:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:48)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":61:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":61:12)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":62:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":62:36)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":63:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":63:37)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":64:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":69:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":64:11)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":67:16)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":67:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":68:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":70:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":84:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":70:11)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":72:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":82:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:38)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:42)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":80:32)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":80:13)
#loc63 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:26)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":83:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":88:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":116:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:49)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":90:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":90:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":91:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":91:36)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":92:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":92:37)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":93:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":98:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":93:11)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":96:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":96:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":97:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":99:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":115:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":99:11)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":101:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":113:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:39)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:43)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":109:32)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":109:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":110:32)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":110:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:36)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":114:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":118:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":122:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":120:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":121:5)
#loc103 = loc(fused[#loc2, #loc3])
#loc104 = loc(fused[#loc4, #loc5])
#loc105 = loc(fused[#loc6, #loc7])
#loc106 = loc(fused[#loc8, #loc9])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc18, #loc17])
#loc111 = loc(fused[#loc20, #loc21])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc25, #loc7])
#loc114 = loc(fused[#loc28, #loc27])
#loc115 = loc(fused[#loc31, #loc30])
#loc116 = loc(fused[#loc38, #loc39])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc46, #loc47])
#loc121 = loc(fused[#loc48, #loc49])
#loc122 = loc(fused[#loc52, #loc51])
#loc123 = loc(fused[#loc54, #loc55])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc41])
#loc126 = loc(fused[#loc62, #loc61])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc70, #loc71])
#loc129 = loc(fused[#loc72, #loc73])
#loc130 = loc(fused[#loc74, #loc75])
#loc131 = loc(fused[#loc76, #loc77])
#loc132 = loc(fused[#loc78, #loc79])
#loc133 = loc(fused[#loc82, #loc81])
#loc134 = loc(fused[#loc84, #loc85])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc71])
#loc137 = loc(fused[#loc92, #loc91])
#loc138 = loc(fused[#loc94, #loc93])
#loc139 = loc(fused[#loc99, #loc100])
