!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc129)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc130)
  cir.func private @printIntLine(!s32i) loc(#loc131)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc136)
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc137)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc138)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
          cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
          cir.scope {
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc141)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc29)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc30)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc31)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
            } loc(#loc142)
          } loc(#loc140)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
          cir.copy %8 to %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
          %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc32)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc33)
          cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
          %12 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc36)
          %14 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc39)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc133)
    cir.return loc(#loc10)
  } loc(#loc132)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc53)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc151)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc152)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc153)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
          cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc156)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc73)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc74)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
            } loc(#loc157)
          } loc(#loc155)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc75)
          %9 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc158)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc77)
          %11 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc159)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
          cir.copy %2 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
          cir.scope {
            %16 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc161)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
            cir.copy %17 to %16 : !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
            %18 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc85)
            %20 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc87)
          } loc(#loc160)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc88)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
        } loc(#loc150)
      } loc(#loc149)
    } loc(#loc148)
    cir.return loc(#loc50)
  } loc(#loc147)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc94)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc94)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc166)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc167)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc102)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc168)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
          cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc171)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc112)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
            } loc(#loc172)
          } loc(#loc170)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %9 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc173)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc115)
          %11 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc174)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
          cir.copy %2 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
          cir.scope {
            %16 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc176)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
            cir.copy %17 to %16 : !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
            %18 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc122)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc123)
            %20 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc125)
          } loc(#loc175)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc126)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc127)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc163)
    cir.return loc(#loc91)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":26:1)
#loc10 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":39:1)
#loc11 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":28:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":38:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":28:8)
#loc14 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":29:5)
#loc15 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":30:9)
#loc16 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":37:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":31:13)
#loc18 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":31:84)
#loc19 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":33:13)
#loc20 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":33:35)
#loc21 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":31:56)
#loc22 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":31:63)
#loc23 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":31:83)
#loc24 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:13)
#loc25 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:44)
#loc26 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:17)
#loc27 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:28)
#loc28 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:34)
#loc29 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:35)
#loc30 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:41)
#loc31 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":32:40)
#loc32 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":34:13)
#loc33 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":34:18)
#loc34 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":35:31)
#loc36 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":35:13)
#loc37 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":36:31)
#loc39 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":36:13)
#loc40 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":94:1)
#loc41 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":98:1)
#loc42 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":96:5)
#loc43 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":96:11)
#loc44 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":97:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":97:11)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":51:19)
#loc49 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":46:1)
#loc50 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":70:1)
#loc51 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":48:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":69:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":48:8)
#loc54 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":49:5)
#loc55 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":52:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":54:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":51:9)
#loc58 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":55:9)
#loc59 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":68:9)
#loc60 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":56:13)
#loc61 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":56:27)
#loc62 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":57:13)
#loc63 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":57:84)
#loc64 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":57:56)
#loc65 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":57:63)
#loc66 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":57:83)
#loc67 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:13)
#loc68 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:44)
#loc69 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:17)
#loc70 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:28)
#loc71 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:34)
#loc72 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:35)
#loc73 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:41)
#loc74 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":58:40)
#loc75 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":59:27)
#loc76 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":59:13)
#loc77 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":60:27)
#loc78 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":60:13)
#loc79 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":61:14)
#loc80 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":62:13)
#loc81 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":66:13)
#loc82 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":63:17)
#loc83 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":63:39)
#loc84 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":64:35)
#loc85 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":64:17)
#loc86 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":65:35)
#loc87 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":65:17)
#loc88 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":67:13)
#loc89 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":67:18)
#loc90 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":73:1)
#loc91 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":92:1)
#loc92 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":75:5)
#loc93 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":91:5)
#loc94 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":75:8)
#loc95 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":76:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":77:9)
#loc97 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":90:9)
#loc98 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":78:13)
#loc99 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":78:27)
#loc100 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":79:13)
#loc101 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":79:84)
#loc102 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":79:56)
#loc103 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":79:63)
#loc104 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":79:83)
#loc105 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:13)
#loc106 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:44)
#loc107 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:17)
#loc108 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:28)
#loc109 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:34)
#loc110 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:35)
#loc111 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:41)
#loc112 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":80:40)
#loc113 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":81:27)
#loc114 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":81:13)
#loc115 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":82:27)
#loc116 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":82:13)
#loc117 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":83:14)
#loc118 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":84:13)
#loc119 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":88:13)
#loc120 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":85:17)
#loc121 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":85:39)
#loc122 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":86:35)
#loc123 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":86:17)
#loc124 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":87:35)
#loc125 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":87:17)
#loc126 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":89:13)
#loc127 = loc("CWE758_Undefined_Behavior__struct_malloc_use_04.c":89:18)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc14, #loc12])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc22, #loc23])
#loc139 = loc(fused[#loc21, #loc18])
#loc140 = loc(fused[#loc24, #loc25])
#loc141 = loc(fused[#loc26, #loc27])
#loc142 = loc(fused[#loc28, #loc25])
#loc143 = loc(fused[#loc40, #loc41])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc44, #loc45])
#loc146 = loc(fused[#loc46, #loc47])
#loc147 = loc(fused[#loc49, #loc50])
#loc148 = loc(fused[#loc51, #loc52])
#loc149 = loc(fused[#loc54, #loc55, #loc56, #loc52])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc62, #loc63])
#loc153 = loc(fused[#loc65, #loc66])
#loc154 = loc(fused[#loc64, #loc63])
#loc155 = loc(fused[#loc67, #loc68])
#loc156 = loc(fused[#loc69, #loc70])
#loc157 = loc(fused[#loc71, #loc68])
#loc158 = loc(fused[#loc76, #loc75])
#loc159 = loc(fused[#loc78, #loc77])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc90, #loc91])
#loc163 = loc(fused[#loc92, #loc93])
#loc164 = loc(fused[#loc95, #loc93])
#loc165 = loc(fused[#loc96, #loc97])
#loc166 = loc(fused[#loc98, #loc99])
#loc167 = loc(fused[#loc100, #loc101])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc102, #loc101])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc109, #loc106])
#loc173 = loc(fused[#loc114, #loc113])
#loc174 = loc(fused[#loc116, #loc115])
#loc175 = loc(fused[#loc118, #loc119])
#loc176 = loc(fused[#loc120, #loc121])
