!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int64_t_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc67)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc68)
  cir.func  @_ZN41CWE415_Double_Free__new_delete_int64_t_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc70)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc71)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%3) loc(#loc13)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc73)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc16)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc73)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc74)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc18)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc18)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc16)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc16)
        cir.break loc(#loc19)
      } loc(#loc72)
    } loc(#loc72)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%3) loc(#loc22)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc23)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc16)
        cir.call @_ZdlPvm(%3, %4) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc16)
        cir.break loc(#loc24)
      } loc(#loc75)
    } loc(#loc75)
    cir.return loc(#loc6)
  } loc(#loc69)
  cir.func internal private  @_ZN41CWE415_Double_Free__new_delete_int64_t_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc29)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc78)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
        cir.condition(%3) loc(#loc33)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc80)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc36)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc80)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc81)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc38)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc36)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc36)
        cir.break loc(#loc39)
      } loc(#loc79)
    } loc(#loc79)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
        cir.condition(%3) loc(#loc42)
      } do {
        cir.break loc(#loc43)
      } loc(#loc82)
    } loc(#loc82)
    cir.return loc(#loc26)
  } loc(#loc76)
  cir.func internal private  @_ZN41CWE415_Double_Free__new_delete_int64_t_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc85)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc52)
        cir.condition(%3) loc(#loc52)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc87)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc55)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc87)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc88)
        cir.break loc(#loc57)
      } loc(#loc86)
    } loc(#loc86)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc60)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc60)
        cir.condition(%3) loc(#loc60)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc61)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc55)
        cir.call @_ZdlPvm(%3, %4) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc55)
        cir.break loc(#loc62)
      } loc(#loc89)
    } loc(#loc89)
    cir.return loc(#loc45)
  } loc(#loc83)
  cir.func  @_ZN41CWE415_Double_Free__new_delete_int64_t_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE415_Double_Free__new_delete_int64_t_16L7goodB2GEv() : () -> () loc(#loc65)
    cir.call @_ZN41CWE415_Double_Free__new_delete_int64_t_16L7goodG2BEv() : () -> () loc(#loc66)
    cir.return loc(#loc64)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int64_t_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":26:1)
#loc6 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":44:1)
#loc7 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":28:5)
#loc8 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":28:15)
#loc9 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":30:12)
#loc10 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":30:5)
#loc11 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":31:5)
#loc12 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":37:5)
#loc13 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":31:11)
#loc14 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":33:16)
#loc15 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":33:20)
#loc16 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":26:6)
#loc17 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":33:9)
#loc18 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":35:16)
#loc19 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":36:9)
#loc20 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":38:5)
#loc21 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":43:5)
#loc22 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":38:11)
#loc23 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":41:16)
#loc24 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":42:9)
#loc25 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":51:1)
#loc26 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":70:1)
#loc27 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":53:5)
#loc28 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":53:15)
#loc29 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":55:12)
#loc30 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":55:5)
#loc31 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":56:5)
#loc32 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":62:5)
#loc33 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":56:11)
#loc34 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":58:16)
#loc35 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":58:20)
#loc36 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":51:13)
#loc37 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":58:9)
#loc38 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":60:16)
#loc39 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":61:9)
#loc40 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":63:5)
#loc41 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":69:5)
#loc42 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":63:11)
#loc43 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":68:9)
#loc44 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":73:1)
#loc45 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":90:1)
#loc46 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":75:5)
#loc47 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":75:15)
#loc48 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":77:12)
#loc49 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":77:5)
#loc50 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":78:5)
#loc51 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":83:5)
#loc52 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":78:11)
#loc53 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":80:16)
#loc54 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":80:20)
#loc55 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":73:13)
#loc56 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":80:9)
#loc57 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":82:9)
#loc58 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":84:5)
#loc59 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":89:5)
#loc60 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":84:11)
#loc61 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":87:16)
#loc62 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":88:9)
#loc63 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":92:1)
#loc64 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":96:1)
#loc65 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":94:5)
#loc66 = loc("CWE415_Double_Free__new_delete_int64_t_16.cpp":95:5)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc69 = loc(fused[#loc5, #loc6])
#loc70 = loc(fused[#loc7, #loc8])
#loc71 = loc(fused[#loc10, #loc9])
#loc72 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc14, #loc15])
#loc74 = loc(fused[#loc17, #loc15])
#loc75 = loc(fused[#loc20, #loc21])
#loc76 = loc(fused[#loc25, #loc26])
#loc77 = loc(fused[#loc27, #loc28])
#loc78 = loc(fused[#loc30, #loc29])
#loc79 = loc(fused[#loc31, #loc32])
#loc80 = loc(fused[#loc34, #loc35])
#loc81 = loc(fused[#loc37, #loc35])
#loc82 = loc(fused[#loc40, #loc41])
#loc83 = loc(fused[#loc44, #loc45])
#loc84 = loc(fused[#loc46, #loc47])
#loc85 = loc(fused[#loc49, #loc48])
#loc86 = loc(fused[#loc50, #loc51])
#loc87 = loc(fused[#loc53, #loc54])
#loc88 = loc(fused[#loc56, #loc54])
#loc89 = loc(fused[#loc58, #loc59])
#loc90 = loc(fused[#loc63, #loc64])
