!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc212)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc215)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc216)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc217)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @close(!s32i) -> !s32i loc(#loc219)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc220)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc221)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc226)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc31)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc31)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc229)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc230)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc231)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc232)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc43)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc231)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc50)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc52)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc235)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc59)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc237)
                  cir.if %58 {
                    cir.break loc(#loc61)
                  } loc(#loc238)
                } loc(#loc236)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc239)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc240)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc69)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc69)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc242)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc243)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc77)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc77)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc244)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc246)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc247)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc247)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc90)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc90)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc248)
                  cir.if %62 {
                    cir.break loc(#loc92)
                  } loc(#loc249)
                } loc(#loc245)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc95)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc95)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc95)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc95)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc95)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc95)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc95)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc96)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc250)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc97)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc98)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc251)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc104)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc104)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc253)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc105)
                    cir.yield %60 : !cir.bool loc(#loc105)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc107)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc254)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc105)
                      cir.yield %64 : !cir.bool loc(#loc105)
                    }, false {
                      %64 = cir.const #false loc(#loc105)
                      cir.yield %64 : !cir.bool loc(#loc105)
                    }) : (!cir.bool) -> !cir.bool loc(#loc105)
                    cir.yield %63 : !cir.bool loc(#loc105)
                  }) : (!cir.bool) -> !cir.bool loc(#loc105)
                  cir.if %59 {
                    cir.break loc(#loc109)
                  } loc(#loc255)
                } loc(#loc252)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc110)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc110)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc112)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc256)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc114)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
              } loc(#loc234)
              cir.yield loc(#loc47)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc117)
              cir.condition(%14) loc(#loc117)
            } loc(#loc233)
          } loc(#loc233)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc121)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc259)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc124)
            } loc(#loc260)
          } loc(#loc258)
        } loc(#loc228)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc125)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc125)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc263)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc264)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc264)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc264)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc135)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc136)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc136)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc136)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc265)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc140)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc140)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc141)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc142)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc141)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc143)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc266)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc147)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc268)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc149)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc152)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc153)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc155)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc270)
        } loc(#loc269)
      } loc(#loc267)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    } loc(#loc262)
    cir.return loc(#loc23)
  } loc(#loc222)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc272)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    cir.return loc(#loc159)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc167)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc277)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc277)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc171)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc171)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc176)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc176)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc179)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc179)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
      } loc(#loc278)
    } loc(#loc276)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc282)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc283)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc283)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc283)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc188)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc188)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc189)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc190)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc191)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc190)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc190)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc194)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc194)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc195)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc196)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc195)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc197)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc201)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc287)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc203)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc206)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc207)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc207)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc209)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc289)
        } loc(#loc288)
      } loc(#loc286)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    } loc(#loc281)
    cir.return loc(#loc163)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":76:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/string.h":144:1)
#loc19 = loc("/usr/include/string.h":146:14)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":43:1)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":126:1)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":45:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":45:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":47:13)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":47:12)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":47:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":48:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":111:5)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":48:8)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":48:33)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":49:5)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":106:5)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":108:5)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":50:9)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":105:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":55:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":55:17)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":56:13)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":56:32)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":57:13)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":57:36)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":58:13)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":58:45)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":59:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":94:21)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":60:13)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":93:13)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:40)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:49)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:62)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:33)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:17)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":69:73)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":70:17)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":73:17)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":70:21)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":70:38)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":71:17)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":72:21)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:24)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:25)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:34)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:37)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:51)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:17)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":74:52)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":75:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":75:17)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":76:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":76:17)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":76:63)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":77:42)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":77:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":77:17)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":77:50)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:17)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":81:17)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:29)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:62)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:63)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:72)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:86)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:21)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":78:92)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":79:17)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":80:21)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:35)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:50)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:63)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:81)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:84)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:30)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:17)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":84:85)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:17)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":88:17)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:21)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:35)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:48)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:51)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":85:65)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":86:17)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":87:21)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":90:43)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":90:29)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":90:17)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":92:29)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":92:24)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":92:17)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":92:40)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":94:20)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":95:13)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":98:13)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":95:17)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":95:34)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":96:13)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":97:30)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":97:17)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":110:16)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":110:20)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":110:9)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":112:5)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":125:5)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":113:9)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":113:24)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":114:9)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":114:26)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:16)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:24)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:29)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:33)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:9)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":115:34)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":116:25)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":116:16)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":116:20)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":116:9)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":117:9)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":123:9)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":117:13)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":117:20)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":118:9)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":121:13)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":121:21)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":121:27)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":121:35)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":122:26)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":122:18)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":122:13)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":124:19)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":124:9)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":165:1)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":168:1)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":167:5)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":167:13)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":134:1)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":163:1)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":136:5)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":136:9)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":138:13)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":138:12)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":138:5)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":139:5)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":148:5)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":139:8)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":139:33)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":140:5)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":143:5)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":145:5)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":142:16)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":142:20)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":142:9)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":147:16)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":147:20)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":147:9)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":149:5)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":162:5)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":150:9)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":150:24)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":151:9)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":151:26)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:16)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:24)
#loc190 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:29)
#loc191 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:33)
#loc192 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:9)
#loc193 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":152:34)
#loc194 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":153:25)
#loc195 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":153:16)
#loc196 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":153:20)
#loc197 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":153:9)
#loc198 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":154:9)
#loc199 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":160:9)
#loc200 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":154:13)
#loc201 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":154:20)
#loc202 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":155:9)
#loc203 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":158:13)
#loc204 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":158:21)
#loc205 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":158:27)
#loc206 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":158:35)
#loc207 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":159:26)
#loc208 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":159:18)
#loc209 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":159:13)
#loc210 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":161:19)
#loc211 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_12.c":161:9)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc8, #loc9])
#loc216 = loc(fused[#loc10, #loc11])
#loc217 = loc(fused[#loc12, #loc13])
#loc218 = loc(fused[#loc14, #loc15])
#loc219 = loc(fused[#loc16, #loc17])
#loc220 = loc(fused[#loc18, #loc19])
#loc221 = loc(fused[#loc20, #loc21])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc24, #loc25])
#loc224 = loc(fused[#loc28, #loc26])
#loc225 = loc(fused[#loc29, #loc30])
#loc226 = loc(fused[#loc31, #loc32])
#loc227 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc228 = loc(fused[#loc36, #loc37])
#loc229 = loc(fused[#loc38, #loc39])
#loc230 = loc(fused[#loc40, #loc41])
#loc231 = loc(fused[#loc42, #loc43])
#loc232 = loc(fused[#loc44, #loc45])
#loc233 = loc(fused[#loc46, #loc47])
#loc234 = loc(fused[#loc48, #loc49])
#loc235 = loc(fused[#loc54, #loc55])
#loc236 = loc(fused[#loc56, #loc57])
#loc237 = loc(fused[#loc58, #loc59])
#loc238 = loc(fused[#loc60, #loc57])
#loc239 = loc(fused[#loc62, #loc63])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc67, #loc68])
#loc242 = loc(fused[#loc71, #loc69])
#loc243 = loc(fused[#loc75, #loc76])
#loc244 = loc(fused[#loc80, #loc81])
#loc245 = loc(fused[#loc82, #loc83])
#loc246 = loc(fused[#loc85, #loc86])
#loc247 = loc(fused[#loc87, #loc88])
#loc248 = loc(fused[#loc89, #loc90])
#loc249 = loc(fused[#loc91, #loc83])
#loc250 = loc(fused[#loc95, #loc96])
#loc251 = loc(fused[#loc99, #loc100])
#loc252 = loc(fused[#loc101, #loc102])
#loc253 = loc(fused[#loc103, #loc104])
#loc254 = loc(fused[#loc106, #loc107])
#loc255 = loc(fused[#loc108, #loc102])
#loc256 = loc(fused[#loc112, #loc110])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc118, #loc119])
#loc259 = loc(fused[#loc120, #loc121])
#loc260 = loc(fused[#loc122, #loc119])
#loc261 = loc(fused[#loc127, #loc126])
#loc262 = loc(fused[#loc128, #loc129])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc132, #loc133])
#loc265 = loc(fused[#loc138, #loc139])
#loc266 = loc(fused[#loc143, #loc140])
#loc267 = loc(fused[#loc144, #loc145])
#loc268 = loc(fused[#loc146, #loc147])
#loc269 = loc(fused[#loc148, #loc145])
#loc270 = loc(fused[#loc155, #loc153])
#loc271 = loc(fused[#loc158, #loc159])
#loc272 = loc(fused[#loc160, #loc161])
#loc273 = loc(fused[#loc162, #loc163])
#loc274 = loc(fused[#loc164, #loc165])
#loc275 = loc(fused[#loc168, #loc166])
#loc276 = loc(fused[#loc169, #loc170])
#loc277 = loc(fused[#loc171, #loc172])
#loc278 = loc(fused[#loc173, #loc174, #loc175, #loc170])
#loc279 = loc(fused[#loc178, #loc177])
#loc280 = loc(fused[#loc181, #loc180])
#loc281 = loc(fused[#loc182, #loc183])
#loc282 = loc(fused[#loc184, #loc185])
#loc283 = loc(fused[#loc186, #loc187])
#loc284 = loc(fused[#loc192, #loc193])
#loc285 = loc(fused[#loc197, #loc194])
#loc286 = loc(fused[#loc198, #loc199])
#loc287 = loc(fused[#loc200, #loc201])
#loc288 = loc(fused[#loc202, #loc199])
#loc289 = loc(fused[#loc209, #loc207])
