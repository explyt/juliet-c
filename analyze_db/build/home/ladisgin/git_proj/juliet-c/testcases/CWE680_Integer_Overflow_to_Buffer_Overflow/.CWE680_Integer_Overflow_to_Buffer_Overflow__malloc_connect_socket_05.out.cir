!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":209:10)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":209:14)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":209:20)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":209:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc384 = loc(fused[#loc182, #loc183])
#loc385 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc312)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc313)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc314)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc315)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc316)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc317)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc318)
  cir.func private @close(!s32i) -> !s32i loc(#loc319)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc320)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc321)
  cir.func private @printIntLine(!s32i) loc(#loc322)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc323)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc31)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc312)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc35)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc330)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc331)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc332)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc333)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc44)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc332)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc49)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc51)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc335)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc58)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc337)
                cir.if %57 {
                  cir.break loc(#loc60)
                } loc(#loc338)
              } loc(#loc336)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc339)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc340)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc341)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc68)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc68)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc342)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc343)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc76)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc76)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc344)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc346)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc347)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc347)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc89)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc89)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc348)
                cir.if %61 {
                  cir.break loc(#loc91)
                } loc(#loc349)
              } loc(#loc345)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc94)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc94)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc94)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc94)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc94)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc94)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc94)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc95)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc350)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc96)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc97)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc351)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc103)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc353)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc104)
                  cir.yield %59 : !cir.bool loc(#loc104)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc106)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc354)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc104)
                    cir.yield %63 : !cir.bool loc(#loc104)
                  }, false {
                    %63 = cir.const #false loc(#loc104)
                    cir.yield %63 : !cir.bool loc(#loc104)
                  }) : (!cir.bool) -> !cir.bool loc(#loc104)
                  cir.yield %62 : !cir.bool loc(#loc104)
                }) : (!cir.bool) -> !cir.bool loc(#loc104)
                cir.if %58 {
                  cir.break loc(#loc108)
                } loc(#loc355)
              } loc(#loc352)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc109)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc109)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc111)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc356)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc113)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
              cir.yield loc(#loc48)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc116)
              cir.condition(%13) loc(#loc116)
            } loc(#loc334)
          } loc(#loc334)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc120)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc359)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc123)
            } loc(#loc360)
          } loc(#loc358)
        } loc(#loc329)
      } loc(#loc328)
    } loc(#loc327)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc362)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc363)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc364)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc365)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc366)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc367)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc369)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc143)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
        } loc(#loc370)
      } loc(#loc368)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc372)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc148)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc149)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc373)
          cir.condition(%24) loc(#loc150)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc155)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc375)
          } loc(#loc374)
          cir.yield loc(#loc145)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc157)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc376)
          cir.yield loc(#loc371)
        } loc(#loc371)
      } loc(#loc371)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc160)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc161)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc162)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
    } loc(#loc361)
    cir.return loc(#loc27)
  } loc(#loc324)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc168)
    cir.return loc(#loc165)
  } loc(#loc377)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc380)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc381)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc385)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc386)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc387)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    cir.return %17 : !s32i loc(#loc388)
  } loc(#loc383)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc389)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc202)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc391)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc208)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc389)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc212)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc212)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc216)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc217)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc395)
      } loc(#loc394)
    } loc(#loc393)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc397)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc398)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc225)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc226)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc399)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc400)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc225)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc401)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc402)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc233)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc234)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc234)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc404)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc236)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc237)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc238)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc236)
        } loc(#loc405)
      } loc(#loc403)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc241)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc241)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc407)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc243)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc244)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc408)
          cir.condition(%24) loc(#loc245)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc247)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc248)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc249)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc250)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc410)
          } loc(#loc409)
          cir.yield loc(#loc240)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc251)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc252)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc411)
          cir.yield loc(#loc406)
        } loc(#loc406)
      } loc(#loc406)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc254)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc255)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc253)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc256)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc257)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc258)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc258)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc257)
    } loc(#loc396)
    cir.return loc(#loc204)
  } loc(#loc390)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc413)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc264)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc312)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc268)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc268)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc270)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc417)
      } loc(#loc416)
    } loc(#loc415)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc419)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc420)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc278)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc279)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc421)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc422)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc278)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc423)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc424)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc286)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc287)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc426)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc289)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc290)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc291)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc289)
        } loc(#loc427)
      } loc(#loc425)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc294)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc294)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc429)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc296)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc297)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc430)
          cir.condition(%24) loc(#loc298)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc300)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc301)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc302)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc303)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc432)
          } loc(#loc431)
          cir.yield loc(#loc293)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc304)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc305)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc433)
          cir.yield loc(#loc428)
        } loc(#loc428)
      } loc(#loc428)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc306)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc307)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc308)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc306)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc309)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc310)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc311)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc310)
    } loc(#loc418)
    cir.return loc(#loc260)
  } loc(#loc412)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":45:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":50:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":128:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":52:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":52:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":54:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":54:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":54:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":55:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":113:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":55:8)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":56:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":57:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":112:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":62:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":62:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":63:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":63:32)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":64:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":64:36)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":65:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":65:45)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":66:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":101:21)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:49)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:62)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":76:73)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":77:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":80:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":77:21)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":77:38)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":78:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":79:21)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:34)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:51)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:17)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":81:52)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":82:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":82:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":83:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":83:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":83:63)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":84:42)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":84:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":84:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":84:50)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":88:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:62)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:63)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:72)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:86)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:21)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":85:92)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":86:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":87:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:35)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:50)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:63)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:81)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:84)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:30)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":91:85)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":95:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:35)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:48)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:51)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":92:65)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":93:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":94:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":97:43)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":97:29)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":97:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":99:29)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":99:24)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":99:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":99:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":101:20)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":102:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":105:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":102:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":102:34)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":103:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":104:30)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":104:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":114:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":127:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":115:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":115:16)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":116:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":116:14)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:42)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:52)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:53)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":119:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:27)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":120:39)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":124:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:18)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:14)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:21)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:33)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":122:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":123:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":123:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":123:24)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":123:25)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:40)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":121:39)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":125:22)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":125:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":125:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":125:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":126:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":126:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":193:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":197:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":195:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":195:14)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":196:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":196:14)
#loc170 = loc("/usr/include/stdlib.h":575:1)
#loc171 = loc("/usr/include/stdlib.h":575:41)
#loc172 = loc("/usr/include/time.h":76:1)
#loc173 = loc("/usr/include/time.h":76:38)
#loc174 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":214:15)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":216:15)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":219:15)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":221:15)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":209:1)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":224:1)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":210:1)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":212:27)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":212:22)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":212:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":214:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":215:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":215:79)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":216:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":219:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":220:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":220:78)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":221:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":223:12)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":223:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":46:1)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":46:26)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":143:19)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":135:1)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":164:1)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":137:5)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":137:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":139:13)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":139:12)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":139:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":140:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":149:5)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":140:8)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":141:5)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":144:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":146:5)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":143:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":148:16)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":148:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":150:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":163:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":151:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":151:16)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":152:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":152:14)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:28)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:35)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:42)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:52)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:53)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":155:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:43)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:13)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:27)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:33)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:34)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:40)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":156:39)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:9)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":160:9)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:18)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:14)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:21)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:33)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:23)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":158:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":159:29)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":159:13)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":159:24)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":159:25)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:40)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":157:39)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":161:22)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":161:33)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":161:34)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":161:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":162:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":162:14)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":167:1)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":191:1)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":169:5)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":169:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":171:13)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":171:12)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":171:5)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":172:5)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":176:5)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":172:8)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":173:5)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":175:16)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":175:9)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":177:5)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":190:5)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":178:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":178:16)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":179:9)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":179:14)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:28)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:35)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:42)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:52)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:53)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":182:9)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:43)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:13)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:27)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:33)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:34)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:40)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":183:39)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:9)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":187:9)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:18)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:14)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:21)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:33)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:23)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":185:9)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":186:29)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":186:13)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":186:24)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":186:25)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:40)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":184:39)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":188:22)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":188:33)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":188:34)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":188:9)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":189:9)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_05.c":189:14)
#loc312 = loc(fused[#loc1, #loc2])
#loc313 = loc(fused[#loc3, #loc4])
#loc314 = loc(fused[#loc5, #loc6])
#loc315 = loc(fused[#loc8, #loc9])
#loc316 = loc(fused[#loc10, #loc11])
#loc317 = loc(fused[#loc12, #loc13])
#loc318 = loc(fused[#loc14, #loc15])
#loc319 = loc(fused[#loc16, #loc17])
#loc320 = loc(fused[#loc18, #loc19])
#loc321 = loc(fused[#loc20, #loc21])
#loc322 = loc(fused[#loc22, #loc23])
#loc323 = loc(fused[#loc24, #loc25])
#loc324 = loc(fused[#loc26, #loc27])
#loc325 = loc(fused[#loc28, #loc29])
#loc326 = loc(fused[#loc32, #loc30])
#loc327 = loc(fused[#loc33, #loc34])
#loc328 = loc(fused[#loc36, #loc34])
#loc329 = loc(fused[#loc37, #loc38])
#loc330 = loc(fused[#loc39, #loc40])
#loc331 = loc(fused[#loc41, #loc42])
#loc332 = loc(fused[#loc43, #loc44])
#loc333 = loc(fused[#loc45, #loc46])
#loc334 = loc(fused[#loc47, #loc48])
#loc335 = loc(fused[#loc53, #loc54])
#loc336 = loc(fused[#loc55, #loc56])
#loc337 = loc(fused[#loc57, #loc58])
#loc338 = loc(fused[#loc59, #loc56])
#loc339 = loc(fused[#loc61, #loc62])
#loc340 = loc(fused[#loc64, #loc65])
#loc341 = loc(fused[#loc66, #loc67])
#loc342 = loc(fused[#loc70, #loc68])
#loc343 = loc(fused[#loc74, #loc75])
#loc344 = loc(fused[#loc79, #loc80])
#loc345 = loc(fused[#loc81, #loc82])
#loc346 = loc(fused[#loc84, #loc85])
#loc347 = loc(fused[#loc86, #loc87])
#loc348 = loc(fused[#loc88, #loc89])
#loc349 = loc(fused[#loc90, #loc82])
#loc350 = loc(fused[#loc94, #loc95])
#loc351 = loc(fused[#loc98, #loc99])
#loc352 = loc(fused[#loc100, #loc101])
#loc353 = loc(fused[#loc102, #loc103])
#loc354 = loc(fused[#loc105, #loc106])
#loc355 = loc(fused[#loc107, #loc101])
#loc356 = loc(fused[#loc111, #loc109])
#loc357 = loc(fused[#loc114, #loc115])
#loc358 = loc(fused[#loc117, #loc118])
#loc359 = loc(fused[#loc119, #loc120])
#loc360 = loc(fused[#loc121, #loc118])
#loc361 = loc(fused[#loc124, #loc125])
#loc362 = loc(fused[#loc126, #loc127])
#loc363 = loc(fused[#loc128, #loc129])
#loc364 = loc(fused[#loc132, #loc133])
#loc365 = loc(fused[#loc131, #loc133])
#loc366 = loc(fused[#loc130, #loc134])
#loc367 = loc(fused[#loc135, #loc134])
#loc368 = loc(fused[#loc136, #loc137])
#loc369 = loc(fused[#loc138, #loc139])
#loc370 = loc(fused[#loc140, #loc137])
#loc371 = loc(fused[#loc144, #loc145])
#loc372 = loc(fused[#loc147, #loc146])
#loc373 = loc(fused[#loc148, #loc149])
#loc374 = loc(fused[#loc151, #loc145])
#loc375 = loc(fused[#loc153, #loc152])
#loc376 = loc(fused[#loc157, #loc156])
#loc377 = loc(fused[#loc164, #loc165])
#loc378 = loc(fused[#loc166, #loc167])
#loc379 = loc(fused[#loc168, #loc169])
#loc380 = loc(fused[#loc170, #loc171])
#loc381 = loc(fused[#loc172, #loc173])
#loc382 = loc(fused[#loc174, #loc175])
#loc383 = loc(fused[#loc180, #loc181])
#loc386 = loc(fused[#loc191, #loc192])
#loc387 = loc(fused[#loc195, #loc196])
#loc388 = loc(fused[#loc199, #loc198])
#loc389 = loc(fused[#loc200, #loc201])
#loc390 = loc(fused[#loc203, #loc204])
#loc391 = loc(fused[#loc205, #loc206])
#loc392 = loc(fused[#loc209, #loc207])
#loc393 = loc(fused[#loc210, #loc211])
#loc394 = loc(fused[#loc213, #loc214, #loc215, #loc211])
#loc395 = loc(fused[#loc218, #loc217])
#loc396 = loc(fused[#loc219, #loc220])
#loc397 = loc(fused[#loc221, #loc222])
#loc398 = loc(fused[#loc223, #loc224])
#loc399 = loc(fused[#loc227, #loc228])
#loc400 = loc(fused[#loc226, #loc228])
#loc401 = loc(fused[#loc225, #loc229])
#loc402 = loc(fused[#loc230, #loc229])
#loc403 = loc(fused[#loc231, #loc232])
#loc404 = loc(fused[#loc233, #loc234])
#loc405 = loc(fused[#loc235, #loc232])
#loc406 = loc(fused[#loc239, #loc240])
#loc407 = loc(fused[#loc242, #loc241])
#loc408 = loc(fused[#loc243, #loc244])
#loc409 = loc(fused[#loc246, #loc240])
#loc410 = loc(fused[#loc248, #loc247])
#loc411 = loc(fused[#loc252, #loc251])
#loc412 = loc(fused[#loc259, #loc260])
#loc413 = loc(fused[#loc261, #loc262])
#loc414 = loc(fused[#loc265, #loc263])
#loc415 = loc(fused[#loc266, #loc267])
#loc416 = loc(fused[#loc269, #loc267])
#loc417 = loc(fused[#loc271, #loc270])
#loc418 = loc(fused[#loc272, #loc273])
#loc419 = loc(fused[#loc274, #loc275])
#loc420 = loc(fused[#loc276, #loc277])
#loc421 = loc(fused[#loc280, #loc281])
#loc422 = loc(fused[#loc279, #loc281])
#loc423 = loc(fused[#loc278, #loc282])
#loc424 = loc(fused[#loc283, #loc282])
#loc425 = loc(fused[#loc284, #loc285])
#loc426 = loc(fused[#loc286, #loc287])
#loc427 = loc(fused[#loc288, #loc285])
#loc428 = loc(fused[#loc292, #loc293])
#loc429 = loc(fused[#loc295, #loc294])
#loc430 = loc(fused[#loc296, #loc297])
#loc431 = loc(fused[#loc299, #loc293])
#loc432 = loc(fused[#loc301, #loc300])
#loc433 = loc(fused[#loc305, #loc304])
