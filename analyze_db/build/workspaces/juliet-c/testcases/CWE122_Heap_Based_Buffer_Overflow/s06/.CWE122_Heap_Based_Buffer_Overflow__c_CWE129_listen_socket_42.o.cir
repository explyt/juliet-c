!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":44:22)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":44:26)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":200:26)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":200:30)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":157:26)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":157:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc515 = loc(fused[#loc19, #loc20])
#loc598 = loc(fused[#loc231, #loc232])
#loc674 = loc(fused[#loc427, #loc428])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc507)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc508)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc509)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc510)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc511)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @close(!s32i) -> !s32i loc(#loc513)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc19, #loc20])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc515)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc18)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc517)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc518)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc519)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc520)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc521)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc29)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc519)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc31)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc520)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc38)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %15 = cir.const #cir.int<6> : !s32i loc(#loc40)
            %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
            cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc524)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc47)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc526)
              cir.if %61 {
                cir.break loc(#loc49)
              } loc(#loc527)
            } loc(#loc525)
            %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc528)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc529)
            cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc530)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc57)
            %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc57)
            %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
            cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc531)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc60)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc60)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc532)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc64)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc64)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc65)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc533)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc535)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc536)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc536)
              %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc76)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc77)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc77)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc537)
              cir.if %65 {
                cir.break loc(#loc79)
              } loc(#loc538)
            } loc(#loc534)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %59 = cir.const #cir.int<5> : !s32i loc(#loc83)
              %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc84)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc85)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc540)
              cir.if %63 {
                cir.break loc(#loc87)
              } loc(#loc541)
            } loc(#loc539)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc89)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc90)
            %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc91)
            cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc542)
            cir.scope {
              %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc97)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc544)
              cir.if %61 {
                cir.break loc(#loc99)
              } loc(#loc545)
            } loc(#loc543)
            %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc102)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc102)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc102)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc102)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc102)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc102)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc102)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc103)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc546)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc105)
            cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc547)
            cir.scope {
              %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc111)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc549)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc112)
                cir.yield %63 : !cir.bool loc(#loc112)
              }, false {
                %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc550)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc112)
                  cir.yield %67 : !cir.bool loc(#loc112)
                }, false {
                  %67 = cir.const #false loc(#loc112)
                  cir.yield %67 : !cir.bool loc(#loc112)
                }) : (!cir.bool) -> !cir.bool loc(#loc112)
                cir.yield %66 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.if %62 {
                cir.break loc(#loc116)
              } loc(#loc551)
            } loc(#loc548)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc117)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc117)
            %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc119)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc552)
            %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc121)
            cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc553)
          } loc(#loc523)
          cir.yield loc(#loc35)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc124)
          cir.condition(%14) loc(#loc124)
        } loc(#loc522)
      } loc(#loc522)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc128)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc555)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc130)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc131)
        } loc(#loc556)
      } loc(#loc554)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc135)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc558)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc559)
      } loc(#loc557)
    } loc(#loc516)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc560)
    cir.return %3 : !s32i loc(#loc560)
  } loc(#loc514)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc561)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc562)
  cir.func private @printIntLine(!s32i) loc(#loc563)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc564)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc565)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc567)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc160)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc571)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc572)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc169)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc170)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc170)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc573)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc574)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc575)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc572)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc176)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc577)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc179)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc180)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
        } loc(#loc578)
      } loc(#loc576)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc183)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc580)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc186)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc581)
          cir.condition(%20) loc(#loc187)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc189)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc192)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc583)
          } loc(#loc582)
          cir.yield loc(#loc182)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc194)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc584)
          cir.yield loc(#loc579)
        } loc(#loc579)
      } loc(#loc579)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc198)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc586)
        cir.if %19 {
          %20 = cir.const #cir.int<1> : !s32i loc(#loc202)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc205)
          cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc588)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc208)
            cir.store %24, %5 : !s32i, !cir.ptr<!s32i> loc(#loc590)
            cir.for : cond {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
              %26 = cir.const #cir.int<10> : !s32i loc(#loc211)
              %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc591)
              cir.condition(%27) loc(#loc212)
            } body {
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
                %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc216)
                %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc217)
              } loc(#loc592)
              cir.yield loc(#loc207)
            } step {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc219)
              cir.store %26, %5 : !s32i, !cir.ptr<!s32i> loc(#loc593)
              cir.yield loc(#loc589)
            } loc(#loc589)
          } loc(#loc589)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc149)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc149)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc220)
        } loc(#loc587)
      } loc(#loc585)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc221)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc222)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc221)
    } loc(#loc570)
    cir.return loc(#loc153)
  } loc(#loc566)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc595)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc225)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc596)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc227)
    cir.return loc(#loc224)
  } loc(#loc594)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc231, #loc232])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc598)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc230)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc600)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc601)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc602)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc603)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc604)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc241)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc241)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc602)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc243)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc243)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc603)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc250)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc251)
            %15 = cir.const #cir.int<6> : !s32i loc(#loc252)
            %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
            cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc607)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc258)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc259)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc259)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc609)
              cir.if %61 {
                cir.break loc(#loc261)
              } loc(#loc610)
            } loc(#loc608)
            %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc611)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc264)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc612)
            cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc613)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc269)
            %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc269)
            %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
            cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc614)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc271)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc271)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc615)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc273)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc273)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc274)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc616)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc618)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc619)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc619)
              %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc284)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc285)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc285)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc620)
              cir.if %65 {
                cir.break loc(#loc287)
              } loc(#loc621)
            } loc(#loc617)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc290)
              %59 = cir.const #cir.int<5> : !s32i loc(#loc291)
              %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc293)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc293)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc623)
              cir.if %63 {
                cir.break loc(#loc295)
              } loc(#loc624)
            } loc(#loc622)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc296)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc297)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc298)
            %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
            cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc625)
            cir.scope {
              %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc304)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc305)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc305)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc627)
              cir.if %61 {
                cir.break loc(#loc307)
              } loc(#loc628)
            } loc(#loc626)
            %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
            %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc310)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc310)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc310)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc310)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc310)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc310)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc310)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc311)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc311)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc629)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc312)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc313)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc313)
            cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc630)
            cir.scope {
              %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc318)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc319)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc319)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc632)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc320)
                cir.yield %63 : !cir.bool loc(#loc320)
              }, false {
                %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc321)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc322)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc633)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc320)
                  cir.yield %67 : !cir.bool loc(#loc320)
                }, false {
                  %67 = cir.const #false loc(#loc320)
                  cir.yield %67 : !cir.bool loc(#loc320)
                }) : (!cir.bool) -> !cir.bool loc(#loc320)
                cir.yield %66 : !cir.bool loc(#loc320)
              }) : (!cir.bool) -> !cir.bool loc(#loc320)
              cir.if %62 {
                cir.break loc(#loc324)
              } loc(#loc634)
            } loc(#loc631)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc325)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc325)
            %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc326)
            %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc327)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc327)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc635)
            %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc328)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc329)
            cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc636)
          } loc(#loc606)
          cir.yield loc(#loc247)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc332)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc332)
          cir.condition(%14) loc(#loc332)
        } loc(#loc605)
      } loc(#loc605)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc335)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc336)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc336)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc638)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc338)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc339)
        } loc(#loc639)
      } loc(#loc637)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc342)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc343)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc343)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc641)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc345)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc346)
        } loc(#loc642)
      } loc(#loc640)
    } loc(#loc599)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc643)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc643)
    cir.return %3 : !s32i loc(#loc643)
  } loc(#loc597)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc349)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc645)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc354)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc355)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc646)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc358)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc649)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc650)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc367)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc368)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc368)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc651)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc652)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc367)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc653)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc650)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc373)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc374)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc374)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc655)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc376)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc377)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc378)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc376)
        } loc(#loc656)
      } loc(#loc654)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc381)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc658)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc383)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc384)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc659)
          cir.condition(%20) loc(#loc385)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc387)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc388)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc389)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc390)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc661)
          } loc(#loc660)
          cir.yield loc(#loc380)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc391)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc392)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc662)
          cir.yield loc(#loc657)
        } loc(#loc657)
      } loc(#loc657)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc395)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc396)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc664)
        %20 = cir.ternary(%19, true {
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc398)
          %22 = cir.const #cir.int<10> : !s32i loc(#loc399)
          %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc665)
          %24 = cir.ternary(%23, true {
            %25 = cir.const #true loc(#loc397)
            cir.yield %25 : !cir.bool loc(#loc397)
          }, false {
            %25 = cir.const #false loc(#loc397)
            cir.yield %25 : !cir.bool loc(#loc397)
          }) : (!cir.bool) -> !cir.bool loc(#loc397)
          cir.yield %24 : !cir.bool loc(#loc397)
        }, false {
          %21 = cir.const #false loc(#loc397)
          cir.yield %21 : !cir.bool loc(#loc397)
        }) : (!cir.bool) -> !cir.bool loc(#loc397)
        cir.if %20 {
          %21 = cir.const #cir.int<1> : !s32i loc(#loc404)
          %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc405)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc406)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc407)
          cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc667)
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc410)
            cir.store %25, %5 : !s32i, !cir.ptr<!s32i> loc(#loc669)
            cir.for : cond {
              %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc412)
              %27 = cir.const #cir.int<10> : !s32i loc(#loc413)
              %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc670)
              cir.condition(%28) loc(#loc414)
            } body {
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc416)
                %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc417)
                %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc418)
                %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc416)
                cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc419)
              } loc(#loc671)
              cir.yield loc(#loc409)
            } step {
              %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc420)
              %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc421)
              cir.store %27, %5 : !s32i, !cir.ptr<!s32i> loc(#loc672)
              cir.yield loc(#loc668)
            } loc(#loc668)
          } loc(#loc668)
        } else {
          %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc349)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc349)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc422)
        } loc(#loc666)
      } loc(#loc663)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc423)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc424)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc424)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc423)
    } loc(#loc648)
    cir.return loc(#loc351)
  } loc(#loc644)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc427, #loc428])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc674)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc426)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc430)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc676)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc676)
    cir.return %4 : !s32i loc(#loc676)
  } loc(#loc673)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc678)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc438)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc439)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc679)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc442)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc680)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc682)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc683)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc451)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc452)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc452)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc684)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc685)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc451)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc686)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc683)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc457)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc458)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc458)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc688)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc460)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc461)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc462)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc460)
        } loc(#loc689)
      } loc(#loc687)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc465)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc691)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc467)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc468)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc692)
          cir.condition(%20) loc(#loc469)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc471)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc472)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc473)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc474)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc694)
          } loc(#loc693)
          cir.yield loc(#loc464)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc475)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc476)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc695)
          cir.yield loc(#loc690)
        } loc(#loc690)
      } loc(#loc690)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc479)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc480)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc697)
        cir.if %19 {
          %20 = cir.const #cir.int<1> : !s32i loc(#loc484)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc485)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc486)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc487)
          cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc699)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc490)
            cir.store %24, %5 : !s32i, !cir.ptr<!s32i> loc(#loc701)
            cir.for : cond {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc492)
              %26 = cir.const #cir.int<10> : !s32i loc(#loc493)
              %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc702)
              cir.condition(%27) loc(#loc494)
            } body {
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc496)
                %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc497)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc498)
                %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc496)
                cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc499)
              } loc(#loc703)
              cir.yield loc(#loc489)
            } step {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc500)
              %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc501)
              cir.store %26, %5 : !s32i, !cir.ptr<!s32i> loc(#loc704)
              cir.yield loc(#loc700)
            } loc(#loc700)
          } loc(#loc700)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc502)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc502)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc503)
        } loc(#loc698)
      } loc(#loc696)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc504)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc505)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc505)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc504)
    } loc(#loc681)
    cir.return loc(#loc435)
  } loc(#loc677)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":44:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":116:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":45:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":46:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":114:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":51:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":51:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":52:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":52:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":53:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":53:31)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":54:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":54:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":55:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":55:41)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":56:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":99:17)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":57:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":98:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:35)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:44)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:57)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":66:68)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":67:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":70:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":67:17)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":67:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":68:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":69:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:20)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:21)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:47)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":71:48)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":72:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":72:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":73:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":73:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":74:38)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":74:32)
#loc66 = loc("/usr/include/netinet/in.h":250:15)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":74:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":74:46)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":78:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:22)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:54)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:55)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:64)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:78)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":75:84)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":76:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":77:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":79:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":82:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":79:24)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":79:38)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":79:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":79:57)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":80:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":81:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:35)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:49)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:55)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:28)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":83:59)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":84:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":87:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":84:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":84:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":85:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":86:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:45)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:58)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:76)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:79)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:26)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":89:80)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":93:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:31)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:44)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:47)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":90:61)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":91:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":92:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":95:39)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":95:25)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":95:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":97:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":97:20)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":97:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":97:36)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":99:16)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":100:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":103:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":100:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":100:29)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":101:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":102:26)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":102:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":104:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":107:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":104:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":104:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":105:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":106:26)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":106:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":115:12)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":115:5)
#loc141 = loc("/usr/include/stdlib.h":672:1)
#loc142 = loc("/usr/include/stdlib.h":672:45)
#loc143 = loc("/usr/include/stdlib.h":756:1)
#loc144 = loc("/usr/include/stdlib.h":756:70)
#loc145 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc147 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc148 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":146:23)
#loc150 = loc("/usr/include/stdlib.h":687:1)
#loc151 = loc("/usr/include/stdlib.h":687:32)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":118:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":150:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":120:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":120:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":122:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":122:12)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":122:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":123:22)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":123:12)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":123:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":123:26)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":124:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":149:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":125:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":125:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:54)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:31)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:38)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:43)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":126:53)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:39)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:23)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:29)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:30)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:36)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":127:35)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":132:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:18)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:14)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:21)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:25)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:23)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":130:9)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":131:25)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":131:13)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":131:20)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":131:21)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:30)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":129:29)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":135:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":147:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":135:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":135:21)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":136:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":143:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":145:9)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":137:28)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":137:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":137:20)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":137:24)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":142:13)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:21)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:17)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:24)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:28)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:26)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":140:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":141:30)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":141:37)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":141:38)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":141:17)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:33)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":139:32)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":146:13)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":148:9)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":148:14)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":307:1)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":311:1)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":309:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":309:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":310:5)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":310:13)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":200:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":272:1)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":201:1)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":202:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":270:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":207:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":207:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":208:9)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":208:28)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":209:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":209:31)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":210:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":210:31)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":211:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":211:41)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":212:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":255:17)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":213:9)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":254:9)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:35)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:44)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:57)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:28)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":222:68)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":223:13)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":226:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":223:17)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":223:33)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":224:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":225:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:20)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:21)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:30)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:33)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:47)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":227:48)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":228:34)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":228:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":229:39)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":229:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":230:38)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":230:32)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":230:13)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":230:46)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:13)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":234:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:22)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:54)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:55)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:64)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:78)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":231:84)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":232:13)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":233:17)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":235:13)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":238:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":235:24)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":235:38)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":235:17)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":235:57)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":236:13)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":237:17)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:35)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:49)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:55)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:28)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:13)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":239:59)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":240:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":243:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":240:17)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":240:33)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":241:13)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":242:17)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:31)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:45)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:58)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:76)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:79)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:26)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:13)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":245:80)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:13)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":249:13)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:17)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:31)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:44)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:47)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":246:61)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":247:13)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":248:17)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":251:39)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":251:25)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":251:13)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":253:25)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":253:20)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":253:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":253:36)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":255:16)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":256:9)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":259:9)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":256:13)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":256:29)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":257:9)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":258:26)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":258:13)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":260:9)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":263:9)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":260:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":260:29)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":261:9)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":262:26)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":262:13)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":271:12)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":271:5)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":301:23)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":274:1)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":305:1)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":276:5)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":276:9)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":278:13)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":278:12)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":278:5)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":279:26)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":279:12)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":279:5)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":279:30)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":280:5)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":304:5)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":281:9)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":281:13)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:9)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:54)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:31)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:38)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:43)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":282:53)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:9)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:39)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:23)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:29)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:30)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:36)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":283:35)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:9)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":288:9)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:18)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:14)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:21)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:25)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:23)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":286:9)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":287:25)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":287:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":287:20)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":287:21)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:30)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":285:29)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:9)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":302:9)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:21)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:23)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:26)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:34)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":290:36)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":291:9)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":298:9)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":300:9)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":292:28)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":292:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":292:20)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":292:24)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:13)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":297:13)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:21)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:17)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:24)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:28)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:26)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":295:13)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":296:30)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":296:37)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":296:38)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":296:17)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:33)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":294:32)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":301:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":303:9)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":303:14)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":157:1)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":163:1)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":158:1)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":161:12)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":161:5)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":162:12)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":162:5)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":165:1)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":197:1)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":167:5)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":167:9)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":169:13)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":169:12)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":169:5)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":170:26)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":170:12)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":170:5)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":170:30)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":171:5)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":196:5)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":172:9)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":172:13)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:9)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:54)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:31)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:38)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:43)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":173:53)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:9)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:39)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:13)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:23)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:29)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:30)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:36)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":174:35)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:9)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":179:9)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:18)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:14)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:21)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:25)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:23)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":177:9)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":178:25)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":178:13)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":178:20)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":178:21)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:30)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":176:29)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":182:9)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":194:9)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":182:13)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":182:21)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":183:9)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":190:9)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":192:9)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":184:28)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":184:13)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":184:20)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":184:24)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:13)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":189:13)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:21)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:17)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:24)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:28)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:26)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":187:13)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":188:30)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":188:37)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":188:38)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":188:17)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:33)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":186:32)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":193:23)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":193:13)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":195:9)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_42.c":195:14)
#loc506 = loc(fused[#loc1, #loc2])
#loc507 = loc(fused[#loc3, #loc4])
#loc508 = loc(fused[#loc5, #loc6])
#loc509 = loc(fused[#loc7, #loc8])
#loc510 = loc(fused[#loc9, #loc10])
#loc511 = loc(fused[#loc11, #loc12])
#loc512 = loc(fused[#loc13, #loc14])
#loc513 = loc(fused[#loc15, #loc16])
#loc514 = loc(fused[#loc17, #loc18])
#loc516 = loc(fused[#loc22, #loc23])
#loc517 = loc(fused[#loc24, #loc25])
#loc518 = loc(fused[#loc26, #loc27])
#loc519 = loc(fused[#loc28, #loc29])
#loc520 = loc(fused[#loc30, #loc31])
#loc521 = loc(fused[#loc32, #loc33])
#loc522 = loc(fused[#loc34, #loc35])
#loc523 = loc(fused[#loc36, #loc37])
#loc524 = loc(fused[#loc42, #loc43])
#loc525 = loc(fused[#loc44, #loc45])
#loc526 = loc(fused[#loc46, #loc47])
#loc527 = loc(fused[#loc48, #loc45])
#loc528 = loc(fused[#loc50, #loc51])
#loc529 = loc(fused[#loc53, #loc54])
#loc530 = loc(fused[#loc55, #loc56])
#loc531 = loc(fused[#loc59, #loc57])
#loc532 = loc(fused[#loc63, #loc60])
#loc533 = loc(fused[#loc67, #loc68])
#loc534 = loc(fused[#loc69, #loc70])
#loc535 = loc(fused[#loc72, #loc73])
#loc536 = loc(fused[#loc74, #loc75])
#loc537 = loc(fused[#loc76, #loc77])
#loc538 = loc(fused[#loc78, #loc70])
#loc539 = loc(fused[#loc80, #loc81])
#loc540 = loc(fused[#loc84, #loc85])
#loc541 = loc(fused[#loc86, #loc81])
#loc542 = loc(fused[#loc92, #loc93])
#loc543 = loc(fused[#loc94, #loc95])
#loc544 = loc(fused[#loc96, #loc97])
#loc545 = loc(fused[#loc98, #loc95])
#loc546 = loc(fused[#loc102, #loc103])
#loc547 = loc(fused[#loc106, #loc107])
#loc548 = loc(fused[#loc108, #loc109])
#loc549 = loc(fused[#loc110, #loc111])
#loc550 = loc(fused[#loc113, #loc114])
#loc551 = loc(fused[#loc115, #loc109])
#loc552 = loc(fused[#loc119, #loc117])
#loc553 = loc(fused[#loc122, #loc123])
#loc554 = loc(fused[#loc125, #loc126])
#loc555 = loc(fused[#loc127, #loc128])
#loc556 = loc(fused[#loc129, #loc126])
#loc557 = loc(fused[#loc132, #loc133])
#loc558 = loc(fused[#loc134, #loc135])
#loc559 = loc(fused[#loc136, #loc133])
#loc560 = loc(fused[#loc140, #loc139])
#loc561 = loc(fused[#loc141, #loc142])
#loc562 = loc(fused[#loc143, #loc144])
#loc563 = loc(fused[#loc145, #loc146])
#loc564 = loc(fused[#loc147, #loc148])
#loc565 = loc(fused[#loc150, #loc151])
#loc566 = loc(fused[#loc152, #loc153])
#loc567 = loc(fused[#loc154, #loc155])
#loc568 = loc(fused[#loc158, #loc156])
#loc569 = loc(fused[#loc161, #loc162])
#loc570 = loc(fused[#loc163, #loc164])
#loc571 = loc(fused[#loc165, #loc166])
#loc572 = loc(fused[#loc167, #loc168])
#loc573 = loc(fused[#loc171, #loc172])
#loc574 = loc(fused[#loc170, #loc172])
#loc575 = loc(fused[#loc169, #loc168])
#loc576 = loc(fused[#loc173, #loc174])
#loc577 = loc(fused[#loc175, #loc176])
#loc578 = loc(fused[#loc177, #loc174])
#loc579 = loc(fused[#loc181, #loc182])
#loc580 = loc(fused[#loc184, #loc183])
#loc581 = loc(fused[#loc185, #loc186])
#loc582 = loc(fused[#loc188, #loc182])
#loc583 = loc(fused[#loc190, #loc189])
#loc584 = loc(fused[#loc194, #loc193])
#loc585 = loc(fused[#loc195, #loc196])
#loc586 = loc(fused[#loc197, #loc198])
#loc587 = loc(fused[#loc199, #loc200, #loc201, #loc196])
#loc588 = loc(fused[#loc203, #loc202])
#loc589 = loc(fused[#loc206, #loc207])
#loc590 = loc(fused[#loc209, #loc208])
#loc591 = loc(fused[#loc210, #loc211])
#loc592 = loc(fused[#loc213, #loc207])
#loc593 = loc(fused[#loc219, #loc218])
#loc594 = loc(fused[#loc223, #loc224])
#loc595 = loc(fused[#loc225, #loc226])
#loc596 = loc(fused[#loc227, #loc228])
#loc597 = loc(fused[#loc229, #loc230])
#loc599 = loc(fused[#loc234, #loc235])
#loc600 = loc(fused[#loc236, #loc237])
#loc601 = loc(fused[#loc238, #loc239])
#loc602 = loc(fused[#loc240, #loc241])
#loc603 = loc(fused[#loc242, #loc243])
#loc604 = loc(fused[#loc244, #loc245])
#loc605 = loc(fused[#loc246, #loc247])
#loc606 = loc(fused[#loc248, #loc249])
#loc607 = loc(fused[#loc254, #loc255])
#loc608 = loc(fused[#loc256, #loc257])
#loc609 = loc(fused[#loc258, #loc259])
#loc610 = loc(fused[#loc260, #loc257])
#loc611 = loc(fused[#loc262, #loc263])
#loc612 = loc(fused[#loc265, #loc266])
#loc613 = loc(fused[#loc267, #loc268])
#loc614 = loc(fused[#loc270, #loc269])
#loc615 = loc(fused[#loc272, #loc271])
#loc616 = loc(fused[#loc275, #loc276])
#loc617 = loc(fused[#loc277, #loc278])
#loc618 = loc(fused[#loc280, #loc281])
#loc619 = loc(fused[#loc282, #loc283])
#loc620 = loc(fused[#loc284, #loc285])
#loc621 = loc(fused[#loc286, #loc278])
#loc622 = loc(fused[#loc288, #loc289])
#loc623 = loc(fused[#loc292, #loc293])
#loc624 = loc(fused[#loc294, #loc289])
#loc625 = loc(fused[#loc300, #loc301])
#loc626 = loc(fused[#loc302, #loc303])
#loc627 = loc(fused[#loc304, #loc305])
#loc628 = loc(fused[#loc306, #loc303])
#loc629 = loc(fused[#loc310, #loc311])
#loc630 = loc(fused[#loc314, #loc315])
#loc631 = loc(fused[#loc316, #loc317])
#loc632 = loc(fused[#loc318, #loc319])
#loc633 = loc(fused[#loc321, #loc322])
#loc634 = loc(fused[#loc323, #loc317])
#loc635 = loc(fused[#loc327, #loc325])
#loc636 = loc(fused[#loc330, #loc331])
#loc637 = loc(fused[#loc333, #loc334])
#loc638 = loc(fused[#loc335, #loc336])
#loc639 = loc(fused[#loc337, #loc334])
#loc640 = loc(fused[#loc340, #loc341])
#loc641 = loc(fused[#loc342, #loc343])
#loc642 = loc(fused[#loc344, #loc341])
#loc643 = loc(fused[#loc348, #loc347])
#loc644 = loc(fused[#loc350, #loc351])
#loc645 = loc(fused[#loc352, #loc353])
#loc646 = loc(fused[#loc356, #loc354])
#loc647 = loc(fused[#loc359, #loc360])
#loc648 = loc(fused[#loc361, #loc362])
#loc649 = loc(fused[#loc363, #loc364])
#loc650 = loc(fused[#loc365, #loc366])
#loc651 = loc(fused[#loc369, #loc370])
#loc652 = loc(fused[#loc368, #loc370])
#loc653 = loc(fused[#loc367, #loc366])
#loc654 = loc(fused[#loc371, #loc372])
#loc655 = loc(fused[#loc373, #loc374])
#loc656 = loc(fused[#loc375, #loc372])
#loc657 = loc(fused[#loc379, #loc380])
#loc658 = loc(fused[#loc382, #loc381])
#loc659 = loc(fused[#loc383, #loc384])
#loc660 = loc(fused[#loc386, #loc380])
#loc661 = loc(fused[#loc388, #loc387])
#loc662 = loc(fused[#loc392, #loc391])
#loc663 = loc(fused[#loc393, #loc394])
#loc664 = loc(fused[#loc395, #loc396])
#loc665 = loc(fused[#loc398, #loc400])
#loc666 = loc(fused[#loc401, #loc402, #loc403, #loc394])
#loc667 = loc(fused[#loc405, #loc404])
#loc668 = loc(fused[#loc408, #loc409])
#loc669 = loc(fused[#loc411, #loc410])
#loc670 = loc(fused[#loc412, #loc413])
#loc671 = loc(fused[#loc415, #loc409])
#loc672 = loc(fused[#loc421, #loc420])
#loc673 = loc(fused[#loc425, #loc426])
#loc675 = loc(fused[#loc431, #loc430])
#loc676 = loc(fused[#loc433, #loc432])
#loc677 = loc(fused[#loc434, #loc435])
#loc678 = loc(fused[#loc436, #loc437])
#loc679 = loc(fused[#loc440, #loc438])
#loc680 = loc(fused[#loc443, #loc444])
#loc681 = loc(fused[#loc445, #loc446])
#loc682 = loc(fused[#loc447, #loc448])
#loc683 = loc(fused[#loc449, #loc450])
#loc684 = loc(fused[#loc453, #loc454])
#loc685 = loc(fused[#loc452, #loc454])
#loc686 = loc(fused[#loc451, #loc450])
#loc687 = loc(fused[#loc455, #loc456])
#loc688 = loc(fused[#loc457, #loc458])
#loc689 = loc(fused[#loc459, #loc456])
#loc690 = loc(fused[#loc463, #loc464])
#loc691 = loc(fused[#loc466, #loc465])
#loc692 = loc(fused[#loc467, #loc468])
#loc693 = loc(fused[#loc470, #loc464])
#loc694 = loc(fused[#loc472, #loc471])
#loc695 = loc(fused[#loc476, #loc475])
#loc696 = loc(fused[#loc477, #loc478])
#loc697 = loc(fused[#loc479, #loc480])
#loc698 = loc(fused[#loc481, #loc482, #loc483, #loc478])
#loc699 = loc(fused[#loc485, #loc484])
#loc700 = loc(fused[#loc488, #loc489])
#loc701 = loc(fused[#loc491, #loc490])
#loc702 = loc(fused[#loc492, #loc493])
#loc703 = loc(fused[#loc495, #loc489])
#loc704 = loc(fused[#loc501, #loc500])
