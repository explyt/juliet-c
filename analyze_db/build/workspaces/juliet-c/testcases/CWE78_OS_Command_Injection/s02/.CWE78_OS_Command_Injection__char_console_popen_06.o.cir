!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc169)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc170)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_06_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc18)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc171)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_06_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc29)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc182)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc185)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc185)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc40)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc187)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc42)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc188)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc48)
                %21 = cir.const #cir.int<100> : !s32i loc(#loc49)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc191)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc191)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
                %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc57)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc57)
                  cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc194)
                  cir.scope {
                    %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc64)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc64)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc196)
                    %39 = cir.ternary(%38, true {
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc68)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc68)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc197)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                      %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc66)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc66)
                      %48 = cir.const #cir.int<10> : !s32i loc(#loc70)
                      %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc198)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc65)
                        cir.yield %51 : !cir.bool loc(#loc65)
                      }, false {
                        %51 = cir.const #false loc(#loc65)
                        cir.yield %51 : !cir.bool loc(#loc65)
                      }) : (!cir.bool) -> !cir.bool loc(#loc65)
                      cir.yield %50 : !cir.bool loc(#loc65)
                    }, false {
                      %40 = cir.const #false loc(#loc65)
                      cir.yield %40 : !cir.bool loc(#loc65)
                    }) : (!cir.bool) -> !cir.bool loc(#loc65)
                    cir.if %39 {
                      %40 = cir.const #cir.int<0> : !s32i loc(#loc72)
                      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc72)
                      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                      %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                      %44 = cir.const #cir.int<1> : !s32i loc(#loc75)
                      %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc75)
                      %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc200)
                      %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                      cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc201)
                    } loc(#loc199)
                  } loc(#loc195)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc77)
                  %34 = cir.const #cir.int<0> : !s32i loc(#loc78)
                  %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc78)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                  %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                  %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                  cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc202)
                } loc(#loc193)
              } loc(#loc190)
            } loc(#loc189)
          } loc(#loc186)
        } loc(#loc184)
      } loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc204)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc18)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc18)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc87)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc93)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc207)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc96)
        } loc(#loc208)
      } loc(#loc206)
    } loc(#loc203)
    cir.return loc(#loc22)
  } loc(#loc178)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc99)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc211)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc101)
    cir.return loc(#loc98)
  } loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc103)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc170)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc115)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc116)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc217)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc120)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc121)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc106)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc106)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
      } loc(#loc218)
    } loc(#loc216)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc220)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc128)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc128)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc129)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc135)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc223)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
        } loc(#loc224)
      } loc(#loc222)
    } loc(#loc219)
    cir.return loc(#loc108)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc148)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc229)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc152)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc152)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc232)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc158)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc158)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc159)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc233)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc164)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc165)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc235)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc167)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc168)
        } loc(#loc236)
      } loc(#loc234)
    } loc(#loc231)
    cir.return loc(#loc140)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_06.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":122:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":122:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":95:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":95:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":46:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":46:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":69:31)
#loc16 = loc("/usr/include/stdio.h":903:1)
#loc17 = loc("/usr/include/stdio.h":904:3)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":79:28)
#loc19 = loc("/usr/include/stdio.h":897:1)
#loc20 = loc("/usr/include/stdio.h":897:36)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":43:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":85:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":45:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":45:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":47:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":47:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":48:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":75:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":48:8)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":48:27)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":49:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":50:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":74:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":52:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":52:41)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":52:30)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":52:37)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":54:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":73:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":54:17)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":54:21)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":54:31)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":55:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":72:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:27)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:32)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:47)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:51)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:61)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":57:71)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":58:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":66:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":68:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":61:31)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":61:38)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":61:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":61:42)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":65:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:25)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:35)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:37)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:40)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:45)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:53)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:54)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":62:59)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":63:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":64:43)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":64:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":64:30)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":64:38)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":64:39)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":69:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":71:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":71:21)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":71:26)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":71:33)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":76:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":84:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":77:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":77:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":79:22)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":79:16)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":79:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":79:31)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":80:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":83:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":80:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":80:21)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":81:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":82:20)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":82:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":140:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":144:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":142:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":142:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":143:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":143:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":100:19)
#loc104 = loc("/usr/include/string.h":149:1)
#loc105 = loc("/usr/include/string.h":150:14)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":105:22)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":92:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":116:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":94:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":94:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":96:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":96:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":97:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":106:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":97:8)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":97:27)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":98:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":101:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":103:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":100:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":105:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":105:16)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":107:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":115:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":108:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":108:15)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":110:22)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":110:28)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":110:16)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":110:9)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":110:31)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":111:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":114:9)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":111:13)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":111:21)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":112:9)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":113:20)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":113:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":119:1)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":138:1)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":121:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":121:12)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":123:12)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":123:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":124:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":128:5)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":124:8)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":124:27)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":125:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":127:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":127:16)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":127:22)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":129:5)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":137:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":130:9)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":130:15)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":132:22)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":132:28)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":132:16)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":132:9)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":132:31)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":133:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":136:9)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":133:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":133:21)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":134:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":135:20)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_06.c":135:13)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc16, #loc17])
#loc177 = loc(fused[#loc19, #loc20])
#loc178 = loc(fused[#loc21, #loc22])
#loc179 = loc(fused[#loc23, #loc24])
#loc180 = loc(fused[#loc26, #loc25])
#loc181 = loc(fused[#loc27, #loc28])
#loc182 = loc(fused[#loc29, #loc30])
#loc183 = loc(fused[#loc31, #loc28])
#loc184 = loc(fused[#loc32, #loc33])
#loc185 = loc(fused[#loc34, #loc35])
#loc186 = loc(fused[#loc38, #loc39])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc40, #loc42])
#loc189 = loc(fused[#loc43, #loc39])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc49, #loc50])
#loc192 = loc(fused[#loc52, #loc53])
#loc193 = loc(fused[#loc54, #loc55, #loc56, #loc45])
#loc194 = loc(fused[#loc59, #loc60])
#loc195 = loc(fused[#loc61, #loc62])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc67, #loc68])
#loc198 = loc(fused[#loc66, #loc70])
#loc199 = loc(fused[#loc71, #loc62])
#loc200 = loc(fused[#loc74, #loc75])
#loc201 = loc(fused[#loc73, #loc72])
#loc202 = loc(fused[#loc79, #loc78])
#loc203 = loc(fused[#loc82, #loc83])
#loc204 = loc(fused[#loc84, #loc85])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc92, #loc93])
#loc208 = loc(fused[#loc94, #loc91])
#loc209 = loc(fused[#loc97, #loc98])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc104, #loc105])
#loc213 = loc(fused[#loc107, #loc108])
#loc214 = loc(fused[#loc109, #loc110])
#loc215 = loc(fused[#loc112, #loc111])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc115, #loc116])
#loc218 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc219 = loc(fused[#loc123, #loc124])
#loc220 = loc(fused[#loc125, #loc126])
#loc221 = loc(fused[#loc130, #loc131])
#loc222 = loc(fused[#loc132, #loc133])
#loc223 = loc(fused[#loc134, #loc135])
#loc224 = loc(fused[#loc136, #loc133])
#loc225 = loc(fused[#loc139, #loc140])
#loc226 = loc(fused[#loc141, #loc142])
#loc227 = loc(fused[#loc144, #loc143])
#loc228 = loc(fused[#loc145, #loc146])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc149, #loc146])
#loc231 = loc(fused[#loc153, #loc154])
#loc232 = loc(fused[#loc155, #loc156])
#loc233 = loc(fused[#loc160, #loc161])
#loc234 = loc(fused[#loc162, #loc163])
#loc235 = loc(fused[#loc164, #loc165])
#loc236 = loc(fused[#loc166, #loc163])
