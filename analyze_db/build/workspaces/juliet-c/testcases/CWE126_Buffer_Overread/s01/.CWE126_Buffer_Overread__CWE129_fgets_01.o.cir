!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc141)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc141)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc141)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc35)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc144)
      } loc(#loc142)
    } loc(#loc140)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc147)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc147)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc147)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc149)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc51)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc52)
        } else {
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc14)
  } loc(#loc137)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc151)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc67)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc159)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc159)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc159)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc76)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc161)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc81)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc81)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc82)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc83)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc83)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
        } loc(#loc162)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc61)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc91)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc167)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc167)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc167)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc100)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc100)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc100)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc100)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc100)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc100)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc100)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc100)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc111)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc111)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc112)
        } loc(#loc170)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc173)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc173)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc173)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc175)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc123)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc176)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc121)
            cir.yield %13 : !cir.bool loc(#loc121)
          }, false {
            %13 = cir.const #false loc(#loc121)
            cir.yield %13 : !cir.bool loc(#loc121)
          }) : (!cir.bool) -> !cir.bool loc(#loc121)
          cir.yield %12 : !cir.bool loc(#loc121)
        }, false {
          %9 = cir.const #false loc(#loc121)
          cir.yield %9 : !cir.bool loc(#loc121)
        }) : (!cir.bool) -> !cir.bool loc(#loc121)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc129)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc130)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc85)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        } loc(#loc177)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc87)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":52:23)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":55:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":41:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":30:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":30:45)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":40:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:19)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:32)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:49)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:59)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":33:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":36:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":38:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:25)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:20)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:36)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":39:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":42:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":54:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":43:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":43:30)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":53:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:21)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":47:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":49:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":51:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:33)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:26)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":52:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":118:1)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":122:1)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":120:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":120:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":121:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":121:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":62:1)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":83:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":64:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":64:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:12)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":69:12)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":69:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":70:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":82:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":71:9)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":71:30)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:9)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":81:9)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:21)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":75:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":77:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":79:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:33)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:26)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":80:23)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":80:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":113:23)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":86:1)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":116:1)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":88:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":88:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:12)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":91:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":103:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":92:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":92:45)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":102:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:19)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:32)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:49)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:59)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":95:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":98:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":100:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:25)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:20)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:36)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":101:23)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":101:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":104:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":115:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":105:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":105:30)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":114:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:21)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:23)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:26)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:34)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:36)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":108:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":110:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":112:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:33)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:26)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":113:13)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc10, #loc11])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc15, #loc16])
#loc139 = loc(fused[#loc19, #loc17])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc29, #loc30])
#loc144 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc145 = loc(fused[#loc36, #loc37])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc43, #loc44])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc47, #loc48, #loc49, #loc44])
#loc151 = loc(fused[#loc54, #loc55])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc58, #loc59])
#loc154 = loc(fused[#loc60, #loc61])
#loc155 = loc(fused[#loc62, #loc63])
#loc156 = loc(fused[#loc66, #loc64])
#loc157 = loc(fused[#loc68, #loc67])
#loc158 = loc(fused[#loc69, #loc70])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc75, #loc76])
#loc162 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc92, #loc90])
#loc166 = loc(fused[#loc93, #loc94])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc97, #loc98])
#loc169 = loc(fused[#loc102, #loc103])
#loc170 = loc(fused[#loc104, #loc105, #loc106, #loc98])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc113, #loc114])
#loc173 = loc(fused[#loc115, #loc116])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc119, #loc120])
#loc176 = loc(fused[#loc122, #loc124])
#loc177 = loc(fused[#loc125, #loc126, #loc127, #loc118])
