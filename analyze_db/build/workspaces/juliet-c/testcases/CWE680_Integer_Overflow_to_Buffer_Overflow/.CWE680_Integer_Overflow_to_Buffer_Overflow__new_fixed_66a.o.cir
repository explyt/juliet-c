!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_667badSinkEPi(!cir.ptr<!s32i>) loc(#loc42)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_663badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc45)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc12)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %6 = cir.binop(div, %4, %5) : !s32i loc(#loc47)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc47)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc18)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc18)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc19)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_667badSinkEPi(%13) : (!cir.ptr<!s32i>) -> () loc(#loc20)
    cir.return loc(#loc4)
  } loc(#loc43)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_6611goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc50)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc52)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc53)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc30)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc32)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc36)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %5, %8 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc37)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_6611goodG2BSinkEPi(%9) : (!cir.ptr<!s32i>) -> () loc(#loc38)
    cir.return loc(#loc24)
  } loc(#loc51)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_664goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66L7goodG2BEv() : () -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":25:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":25:29)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":27:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":40:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":29:5)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":29:9)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":30:5)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":30:20)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":32:13)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":32:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":32:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":34:12)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":34:22)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":34:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":34:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":38:20)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":38:15)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":38:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":39:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":39:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":49:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":49:33)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":51:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":61:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":53:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":53:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":54:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":54:20)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":56:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":56:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":56:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":58:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":58:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":59:20)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":59:15)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":59:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":60:17)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":60:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":63:1)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":66:1)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_66a.cpp":65:5)
#loc42 = loc(fused[#loc1, #loc2])
#loc43 = loc(fused[#loc3, #loc4])
#loc44 = loc(fused[#loc5, #loc6])
#loc45 = loc(fused[#loc7, #loc8])
#loc46 = loc(fused[#loc11, #loc9])
#loc47 = loc(fused[#loc12, #loc13])
#loc48 = loc(fused[#loc15, #loc14])
#loc49 = loc(fused[#loc18, #loc16])
#loc50 = loc(fused[#loc21, #loc22])
#loc51 = loc(fused[#loc23, #loc24])
#loc52 = loc(fused[#loc25, #loc26])
#loc53 = loc(fused[#loc27, #loc28])
#loc54 = loc(fused[#loc31, #loc29])
#loc55 = loc(fused[#loc33, #loc32])
#loc56 = loc(fused[#loc36, #loc34])
#loc57 = loc(fused[#loc39, #loc40])
