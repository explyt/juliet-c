!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc226)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc227)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc229)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc230)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc24)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%4) loc(#loc28)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc239)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc239)
            cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc239)
            cir.scope {
              %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc36)
              %6 = cir.const #cir.int<3> : !s32i loc(#loc37)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc37)
              %8 = cir.const #cir.int<8> : !u64i loc(#loc37)
              %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc37)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc37)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
              %12 = cir.binop(add, %9, %11) : !u64i loc(#loc37)
              %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc37)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
              %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
              cir.if %19 {
                %20 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc44)
                %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc45)
                %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc47)
                %24 = cir.call @strtoul(%21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc44)
                cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc243)
              } else {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc50)
              } loc(#loc242)
            } loc(#loc240)
          } loc(#loc238)
          cir.break loc(#loc51)
        } loc(#loc237)
        cir.yield loc(#loc27)
      } loc(#loc236)
    } loc(#loc236)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc54)
        cir.condition(%4) loc(#loc54)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc247)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc249)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc250)
              cir.if %6 {
                %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc68)
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                %9 = cir.const #cir.int<1> : !u64i loc(#loc252)
                %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc253)
                %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
                cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
                cir.scope {
                  %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
                  %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
                  %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
                  cir.if %25 {
                    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
                    %27 = cir.const #cir.int<1> : !s32i loc(#loc80)
                    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc81)
                    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
                  } loc(#loc258)
                } loc(#loc256)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc82)
                %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
                %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc85)
                %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc86)
                %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
                %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
                cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc86)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc88)
              } loc(#loc251)
            } loc(#loc248)
          } loc(#loc246)
          cir.break loc(#loc89)
        } loc(#loc245)
        cir.yield loc(#loc53)
      } loc(#loc244)
    } loc(#loc244)
    cir.return loc(#loc21)
  } loc(#loc233)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc92)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc94)
    cir.return loc(#loc91)
  } loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc101)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc105)
        cir.condition(%4) loc(#loc105)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc268)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc268)
            cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc268)
            cir.scope {
              %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
              %6 = cir.const #cir.int<3> : !s32i loc(#loc114)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc114)
              %8 = cir.const #cir.int<8> : !u64i loc(#loc114)
              %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc114)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc114)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc114)
              %12 = cir.binop(add, %9, %11) : !u64i loc(#loc114)
              %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc114)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
              %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
              cir.if %19 {
                %20 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc121)
                %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc122)
                %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc124)
                %24 = cir.call @strtoul(%21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc121)
                cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc272)
              } else {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc128)
              } loc(#loc271)
            } loc(#loc269)
          } loc(#loc267)
          cir.break loc(#loc129)
        } loc(#loc266)
        cir.yield loc(#loc104)
      } loc(#loc265)
    } loc(#loc265)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc132)
        cir.condition(%4) loc(#loc132)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc276)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc278)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc279)
              %7 = cir.ternary(%6, true {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
                %9 = cir.const #cir.int<100> : !s32i loc(#loc145)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc145)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc280)
                %12 = cir.ternary(%11, true {
                  %13 = cir.const #true loc(#loc143)
                  cir.yield %13 : !cir.bool loc(#loc143)
                }, false {
                  %13 = cir.const #false loc(#loc143)
                  cir.yield %13 : !cir.bool loc(#loc143)
                }) : (!cir.bool) -> !cir.bool loc(#loc143)
                cir.yield %12 : !cir.bool loc(#loc143)
              }, false {
                %8 = cir.const #false loc(#loc143)
                cir.yield %8 : !cir.bool loc(#loc143)
              }) : (!cir.bool) -> !cir.bool loc(#loc143)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc149)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc282)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc283)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc284)
                cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
                cir.scope {
                  %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc160)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc161)
                    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc162)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc160)
                  } loc(#loc288)
                } loc(#loc286)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc163)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc165)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc165)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
                %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc167)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc168)
                %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc168)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc96)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc96)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc170)
              } loc(#loc281)
            } loc(#loc277)
          } loc(#loc275)
          cir.break loc(#loc171)
        } loc(#loc274)
        cir.yield loc(#loc131)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc98)
  } loc(#loc262)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc290)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc176)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc180)
        cir.condition(%4) loc(#loc180)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<20> : !s32i loc(#loc182)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc182)
          cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc294)
          cir.break loc(#loc184)
        } loc(#loc293)
        cir.yield loc(#loc179)
      } loc(#loc292)
    } loc(#loc292)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc187)
        cir.condition(%4) loc(#loc187)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc298)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc195)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc300)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc301)
              cir.if %6 {
                %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc201)
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc202)
                %9 = cir.const #cir.int<1> : !u64i loc(#loc303)
                %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc304)
                %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
                cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
                cir.scope {
                  %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
                  %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
                  %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
                  cir.if %25 {
                    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc212)
                    %27 = cir.const #cir.int<1> : !s32i loc(#loc213)
                    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc214)
                    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc212)
                  } loc(#loc309)
                } loc(#loc307)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc215)
                %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc217)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc217)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc215)
                %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc219)
                %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc220)
                %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
                %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc221)
                cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc220)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc222)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc222)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc223)
              } loc(#loc302)
            } loc(#loc299)
          } loc(#loc297)
          cir.break loc(#loc224)
        } loc(#loc296)
        cir.yield loc(#loc186)
      } loc(#loc295)
    } loc(#loc295)
    cir.return loc(#loc173)
  } loc(#loc289)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":47:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:34)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":70:27)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":75:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":34:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":35:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":51:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":35:11)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":36:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":37:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":49:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":38:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":38:49)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":48:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:23)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:36)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:53)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:17)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":40:63)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":41:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":44:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":46:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:24)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:32)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:45)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:51)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":43:52)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":47:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":50:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":52:5)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":74:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":52:11)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":53:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":54:9)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":72:9)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":55:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":55:20)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":71:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:24)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":59:43)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":60:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":67:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":69:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:36)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:43)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:48)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:59)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:60)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":61:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:49)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:21)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:33)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:39)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:40)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:46)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":62:45)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":64:24)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":65:27)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":65:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":66:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":66:22)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":70:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":73:9)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":166:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":170:1)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":168:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":168:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":169:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":169:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":122:27)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":82:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":127:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":84:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":84:12)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":86:12)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":86:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":87:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":103:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":87:11)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":88:5)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":89:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":101:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":90:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":90:49)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":100:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:23)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:36)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:53)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":92:63)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":93:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":96:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":98:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:24)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:32)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:45)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:51)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":95:52)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":99:27)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":99:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":102:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":104:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":126:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":104:11)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":105:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":106:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":124:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":107:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":107:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":123:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:24)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:43)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:45)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:48)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":111:55)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":112:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":119:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":121:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:36)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:43)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:48)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:59)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:60)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":113:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:49)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:21)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:33)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:39)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:40)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:46)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":114:45)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:24)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":116:34)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":117:27)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":117:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":118:17)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":118:22)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":122:17)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":125:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":130:1)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":164:1)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":132:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":132:12)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":134:12)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":134:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":135:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":140:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":135:11)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":136:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":138:16)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":138:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":139:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":141:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":163:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":141:11)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":142:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":143:9)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":161:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":144:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":144:20)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":160:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:24)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":148:43)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":149:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":156:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":158:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:36)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:43)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:48)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:59)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:60)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":150:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:49)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:21)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:33)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:39)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:40)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:46)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":151:45)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:24)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":153:34)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":154:27)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":154:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":155:17)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":155:22)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":159:27)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":159:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_16.c":162:9)
#loc225 = loc(fused[#loc1, #loc2])
#loc226 = loc(fused[#loc3, #loc4])
#loc227 = loc(fused[#loc5, #loc6])
#loc228 = loc(fused[#loc7, #loc8])
#loc229 = loc(fused[#loc10, #loc11])
#loc230 = loc(fused[#loc12, #loc13])
#loc231 = loc(fused[#loc14, #loc15])
#loc232 = loc(fused[#loc17, #loc18])
#loc233 = loc(fused[#loc20, #loc21])
#loc234 = loc(fused[#loc22, #loc23])
#loc235 = loc(fused[#loc25, #loc24])
#loc236 = loc(fused[#loc26, #loc27])
#loc237 = loc(fused[#loc29, #loc27])
#loc238 = loc(fused[#loc30, #loc31])
#loc239 = loc(fused[#loc32, #loc33])
#loc240 = loc(fused[#loc34, #loc35])
#loc241 = loc(fused[#loc39, #loc40])
#loc242 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc243 = loc(fused[#loc48, #loc49])
#loc244 = loc(fused[#loc52, #loc53])
#loc245 = loc(fused[#loc55, #loc53])
#loc246 = loc(fused[#loc56, #loc57])
#loc247 = loc(fused[#loc58, #loc59])
#loc248 = loc(fused[#loc60, #loc61])
#loc249 = loc(fused[#loc63, #loc64])
#loc250 = loc(fused[#loc62, #loc64])
#loc251 = loc(fused[#loc65, #loc66, #loc67, #loc61])
#loc252 = loc(fused[#loc70, #loc71])
#loc253 = loc(fused[#loc69, #loc71])
#loc254 = loc(fused[#loc68, #loc72])
#loc255 = loc(fused[#loc73, #loc72])
#loc256 = loc(fused[#loc74, #loc75])
#loc257 = loc(fused[#loc76, #loc77])
#loc258 = loc(fused[#loc78, #loc75])
#loc259 = loc(fused[#loc90, #loc91])
#loc260 = loc(fused[#loc92, #loc93])
#loc261 = loc(fused[#loc94, #loc95])
#loc262 = loc(fused[#loc97, #loc98])
#loc263 = loc(fused[#loc99, #loc100])
#loc264 = loc(fused[#loc102, #loc101])
#loc265 = loc(fused[#loc103, #loc104])
#loc266 = loc(fused[#loc106, #loc104])
#loc267 = loc(fused[#loc107, #loc108])
#loc268 = loc(fused[#loc109, #loc110])
#loc269 = loc(fused[#loc111, #loc112])
#loc270 = loc(fused[#loc116, #loc117])
#loc271 = loc(fused[#loc118, #loc119, #loc120, #loc112])
#loc272 = loc(fused[#loc125, #loc126])
#loc273 = loc(fused[#loc130, #loc131])
#loc274 = loc(fused[#loc133, #loc131])
#loc275 = loc(fused[#loc134, #loc135])
#loc276 = loc(fused[#loc136, #loc137])
#loc277 = loc(fused[#loc138, #loc139])
#loc278 = loc(fused[#loc141, #loc142])
#loc279 = loc(fused[#loc140, #loc142])
#loc280 = loc(fused[#loc144, #loc145])
#loc281 = loc(fused[#loc146, #loc147, #loc148, #loc139])
#loc282 = loc(fused[#loc151, #loc152])
#loc283 = loc(fused[#loc150, #loc152])
#loc284 = loc(fused[#loc149, #loc153])
#loc285 = loc(fused[#loc154, #loc153])
#loc286 = loc(fused[#loc155, #loc156])
#loc287 = loc(fused[#loc157, #loc158])
#loc288 = loc(fused[#loc159, #loc156])
#loc289 = loc(fused[#loc172, #loc173])
#loc290 = loc(fused[#loc174, #loc175])
#loc291 = loc(fused[#loc177, #loc176])
#loc292 = loc(fused[#loc178, #loc179])
#loc293 = loc(fused[#loc181, #loc179])
#loc294 = loc(fused[#loc183, #loc182])
#loc295 = loc(fused[#loc185, #loc186])
#loc296 = loc(fused[#loc188, #loc186])
#loc297 = loc(fused[#loc189, #loc190])
#loc298 = loc(fused[#loc191, #loc192])
#loc299 = loc(fused[#loc193, #loc194])
#loc300 = loc(fused[#loc196, #loc197])
#loc301 = loc(fused[#loc195, #loc197])
#loc302 = loc(fused[#loc198, #loc199, #loc200, #loc194])
#loc303 = loc(fused[#loc203, #loc204])
#loc304 = loc(fused[#loc202, #loc204])
#loc305 = loc(fused[#loc201, #loc205])
#loc306 = loc(fused[#loc206, #loc205])
#loc307 = loc(fused[#loc207, #loc208])
#loc308 = loc(fused[#loc209, #loc210])
#loc309 = loc(fused[#loc211, #loc208])
