!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_max_preinc_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE190_Integer_Overflow__char_max_preinc_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc73)
  cir.func private @CWE190_Integer_Overflow__char_max_preinc_22_badSink(!s8i) loc(#loc74)
  cir.func no_proto @CWE190_Integer_Overflow__char_max_preinc_22_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc76)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc9)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc77)
    %3 = cir.const #cir.int<127> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc11)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc78)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %6 = cir.get_global @CWE190_Integer_Overflow__char_max_preinc_22_badGlobal : !cir.ptr<!s32i> loc(#loc73)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc15)
    cir.call @CWE190_Integer_Overflow__char_max_preinc_22_badSink(%7) : (!s8i) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc75)
  cir.global external dsolocal @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc80)
  cir.global external dsolocal @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc81)
  cir.global external dsolocal @CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc82)
  cir.func no_proto @CWE190_Integer_Overflow__char_max_preinc_22_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc85)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc24)
  } loc(#loc83)
  cir.func private @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Sink(!s8i) loc(#loc87)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc89)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc37)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc37)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc90)
    %3 = cir.const #cir.int<127> : !s32i loc(#loc39)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc39)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc91)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %6 = cir.get_global @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc80)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc43)
    cir.call @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G1Sink(%7) : (!s8i) -> () loc(#loc44)
    cir.return loc(#loc34)
  } loc(#loc88)
  cir.func private @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Sink(!s8i) loc(#loc93)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc95)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc51)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc51)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc96)
    %3 = cir.const #cir.int<127> : !s32i loc(#loc53)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc53)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %6 = cir.get_global @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc81)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc57)
    cir.call @CWE190_Integer_Overflow__char_max_preinc_22_goodB2G2Sink(%7) : (!s8i) -> () loc(#loc58)
    cir.return loc(#loc48)
  } loc(#loc94)
  cir.func private @CWE190_Integer_Overflow__char_max_preinc_22_goodG2BSink(!s8i) loc(#loc99)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc101)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc65)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc65)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc67)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %6 = cir.get_global @CWE190_Integer_Overflow__char_max_preinc_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc82)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc71)
    cir.call @CWE190_Integer_Overflow__char_max_preinc_22_goodG2BSink(%7) : (!s8i) -> () loc(#loc72)
    cir.return loc(#loc62)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_max_preinc_22a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":23:61)
#loc3 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":25:1)
#loc4 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":25:67)
#loc5 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":27:1)
#loc6 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":35:1)
#loc7 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":29:5)
#loc8 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":29:10)
#loc9 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":30:12)
#loc10 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":30:5)
#loc11 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":32:12)
#loc12 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":32:5)
#loc13 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":33:61)
#loc14 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":33:5)
#loc15 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":34:57)
#loc16 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":34:5)
#loc17 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":42:1)
#loc18 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":42:66)
#loc19 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":43:1)
#loc20 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":43:66)
#loc21 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":44:1)
#loc22 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":44:65)
#loc23 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":85:1)
#loc24 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":90:1)
#loc25 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":87:5)
#loc26 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":87:14)
#loc27 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":88:5)
#loc28 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":88:14)
#loc29 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":89:5)
#loc30 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":89:13)
#loc31 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":47:1)
#loc32 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":47:72)
#loc33 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":49:1)
#loc34 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":57:1)
#loc35 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":51:5)
#loc36 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":51:10)
#loc37 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":52:12)
#loc38 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":52:5)
#loc39 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":54:12)
#loc40 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":54:5)
#loc41 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":55:66)
#loc42 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":55:5)
#loc43 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":56:62)
#loc44 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":56:5)
#loc45 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":60:1)
#loc46 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":60:72)
#loc47 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":62:1)
#loc48 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":70:1)
#loc49 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":64:5)
#loc50 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":64:10)
#loc51 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":65:12)
#loc52 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":65:5)
#loc53 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":67:12)
#loc54 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":67:5)
#loc55 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":68:66)
#loc56 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":68:5)
#loc57 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":69:62)
#loc58 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":69:5)
#loc59 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":73:1)
#loc60 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":73:71)
#loc61 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":75:1)
#loc62 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":83:1)
#loc63 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":77:5)
#loc64 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":77:10)
#loc65 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":78:12)
#loc66 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":78:5)
#loc67 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":80:12)
#loc68 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":80:5)
#loc69 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":81:65)
#loc70 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":81:5)
#loc71 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":82:61)
#loc72 = loc("CWE190_Integer_Overflow__char_max_preinc_22a.c":82:5)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc5, #loc6])
#loc76 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc10, #loc9])
#loc78 = loc(fused[#loc12, #loc11])
#loc79 = loc(fused[#loc14, #loc13])
#loc80 = loc(fused[#loc17, #loc18])
#loc81 = loc(fused[#loc19, #loc20])
#loc82 = loc(fused[#loc21, #loc22])
#loc83 = loc(fused[#loc23, #loc24])
#loc84 = loc(fused[#loc25, #loc26])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc35, #loc36])
#loc90 = loc(fused[#loc38, #loc37])
#loc91 = loc(fused[#loc40, #loc39])
#loc92 = loc(fused[#loc42, #loc41])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc52, #loc51])
#loc97 = loc(fused[#loc54, #loc53])
#loc98 = loc(fused[#loc56, #loc55])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc63, #loc64])
#loc102 = loc(fused[#loc66, #loc65])
#loc103 = loc(fused[#loc68, #loc67])
#loc104 = loc(fused[#loc70, #loc69])
