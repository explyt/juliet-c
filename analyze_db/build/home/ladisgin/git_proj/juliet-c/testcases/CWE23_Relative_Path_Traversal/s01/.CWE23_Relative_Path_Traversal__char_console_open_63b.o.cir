!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":40:14)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":40:23)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":59:18)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":59:27)
#loc64 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc35, #loc36])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_63b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc61)
  cir.func private @close(!s32i) -> !s32i loc(#loc62)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_637badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc64)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %3 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc19)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc68)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc20)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc21)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc69)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc22)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc29)
    %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc72)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc73)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc32)
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc63)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_6311goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc75)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc47)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc79)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc48)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc49)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc80)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc50)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb2 loc(#loc82)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc57)
    %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc83)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc84)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc60)
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc54)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc34)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("/usr/include/unistd.h":358:1)
#loc4 = loc("/usr/include/unistd.h":358:27)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":40:1)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":52:1)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":44:9)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":44:13)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":42:5)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":42:20)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":41:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":42:19)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":43:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":51:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:25)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:31)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:38)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:47)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:55)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:20)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:9)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":46:63)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":47:9)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":50:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":47:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":47:26)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":47:25)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":48:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":49:19)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":49:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":59:1)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":71:1)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":63:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":63:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":61:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":61:20)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":60:1)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":61:19)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":62:5)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":70:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:25)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:31)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:38)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:47)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:55)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:20)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:9)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":65:63)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":66:9)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":69:9)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":66:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":66:26)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":66:25)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":67:9)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":68:19)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_63b.cpp":68:13)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc11, #loc12])
#loc67 = loc(fused[#loc15, #loc16])
#loc68 = loc(fused[#loc18, #loc19])
#loc69 = loc(fused[#loc20, #loc21])
#loc70 = loc(fused[#loc23, #loc24])
#loc71 = loc(fused[#loc25, #loc26])
#loc72 = loc(fused[#loc27, #loc28])
#loc73 = loc(fused[#loc30, #loc26])
#loc74 = loc(fused[#loc33, #loc34])
#loc76 = loc(fused[#loc37, #loc38])
#loc77 = loc(fused[#loc39, #loc40])
#loc78 = loc(fused[#loc43, #loc44])
#loc79 = loc(fused[#loc46, #loc47])
#loc80 = loc(fused[#loc48, #loc49])
#loc81 = loc(fused[#loc51, #loc52])
#loc82 = loc(fused[#loc53, #loc54])
#loc83 = loc(fused[#loc55, #loc56])
#loc84 = loc(fused[#loc58, #loc54])
