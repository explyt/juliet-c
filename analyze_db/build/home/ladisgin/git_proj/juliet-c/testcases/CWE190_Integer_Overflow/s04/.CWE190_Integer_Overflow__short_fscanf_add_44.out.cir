!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":22:21)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":22:27)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":106:10)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":106:14)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":106:20)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":106:32)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":48:25)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":48:31)
#loc95 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":68:25)
#loc96 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":68:31)
#loc126 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc70, #loc71])
#loc157 = loc(fused[#loc95, #loc96])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_add_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc124)
  cir.func internal private @badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc127)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc126)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc9)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s16i), !s32i loc(#loc12)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc12)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc12)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc127)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc13)
    %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc13)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc14)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc125)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc129)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_add_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc25)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc133)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc26)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc134)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc28)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc19)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc19)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc28)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc30)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc30)
    cir.return loc(#loc21)
  } loc(#loc131)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_add_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_add_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE190_Integer_Overflow__short_fscanf_add_44_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_add_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE190_Integer_Overflow__short_fscanf_add_44_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %17 : !s32i loc(#loc146)
  } loc(#loc141)
  cir.func internal private @goodG2BSink(%arg0: !s16i loc(fused[#loc70, #loc71])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc149)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc148)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc74)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc77)
    %3 = cir.cast(integral, %2 : !s16i), !s32i loc(#loc77)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc77)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc77)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc149)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc78)
    %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc78)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc79)
    cir.br ^bb2 loc(#loc76)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc69)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc85)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc153)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc86)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc154)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc88)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc155)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc90)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc91)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc90)
    cir.return loc(#loc81)
  } loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc92)
  cir.func internal private @goodB2GSink(%arg0: !s16i loc(fused[#loc95, #loc96])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc158)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc157)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc99)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc102)
    %3 = cir.cast(integral, %2 : !s16i), !s32i loc(#loc102)
    %4 = cir.const #cir.int<32767> : !s32i loc(#loc103)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc160)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc161)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc107)
    %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc107)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc107)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc107)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc158)
    %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc108)
    %12 = cir.cast(integral, %11 : !s16i), !s32i loc(#loc108)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc109)
    cir.br ^bb4 loc(#loc105)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc92)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc94)
  } loc(#loc156)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc116)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc164)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc117)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc165)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc119)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc121)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc121)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc119)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc122)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc123)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc122)
    cir.return loc(#loc112)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_add_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":22:1)
#loc4 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":29:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":26:9)
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":26:31)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":23:1)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":24:5)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":28:5)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":26:24)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":27:22)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":27:9)
#loc15 = loc("/usr/include/stdio.h":463:1)
#loc16 = loc("/usr/include/stdio.h":465:33)
#loc17 = loc("/usr/include/stdio.h":149:1)
#loc18 = loc("/usr/include/stdio.h":149:14)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":38:20)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":31:1)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":41:1)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":33:5)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":33:11)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":35:5)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":35:31)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":36:12)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":36:5)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":38:5)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":38:13)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":40:5)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":40:13)
#loc32 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":92:1)
#loc33 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":96:1)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":94:5)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":94:13)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":95:5)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":95:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":111:15)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":113:15)
#loc46 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":116:15)
#loc47 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":118:15)
#loc48 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":106:1)
#loc49 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":121:1)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":107:1)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":109:27)
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":109:22)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":109:5)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":111:5)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":112:5)
#loc60 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":112:55)
#loc61 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":113:5)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":116:5)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":117:5)
#loc64 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":117:54)
#loc65 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":118:5)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":120:12)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":120:5)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":48:1)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":55:1)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":52:9)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":52:31)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":49:1)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":50:5)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":54:5)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":52:24)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":53:22)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":53:9)
#loc80 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":57:1)
#loc81 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":65:1)
#loc82 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":59:5)
#loc83 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":59:11)
#loc84 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":60:5)
#loc85 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":60:31)
#loc86 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":61:12)
#loc87 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":61:5)
#loc88 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":63:12)
#loc89 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":63:5)
#loc90 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":64:5)
#loc91 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":64:13)
#loc92 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":78:19)
#loc93 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":68:1)
#loc94 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":80:1)
#loc97 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":73:9)
#loc98 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":73:31)
#loc99 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":69:1)
#loc100 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":71:5)
#loc101 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":79:5)
#loc102 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":71:9)
#loc103 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":71:16)
#loc104 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":72:5)
#loc105 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":75:5)
#loc106 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":77:5)
#loc107 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":73:24)
#loc108 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":74:22)
#loc109 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":74:9)
#loc110 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":78:9)
#loc111 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":82:1)
#loc112 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":90:1)
#loc113 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":84:5)
#loc114 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":84:11)
#loc115 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":85:5)
#loc116 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":85:31)
#loc117 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":86:12)
#loc118 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":86:5)
#loc119 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":88:5)
#loc120 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":88:13)
#loc121 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":88:20)
#loc122 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":89:5)
#loc123 = loc("CWE190_Integer_Overflow__short_fscanf_add_44.c":89:13)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc15, #loc16])
#loc130 = loc(fused[#loc17, #loc18])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc22, #loc23])
#loc133 = loc(fused[#loc24, #loc25])
#loc134 = loc(fused[#loc27, #loc26])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc48, #loc49])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc67, #loc66])
#loc147 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc75, #loc76])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc84, #loc85])
#loc154 = loc(fused[#loc87, #loc86])
#loc155 = loc(fused[#loc89, #loc88])
#loc156 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc162 = loc(fused[#loc111, #loc112])
#loc163 = loc(fused[#loc113, #loc114])
#loc164 = loc(fused[#loc115, #loc116])
#loc165 = loc(fused[#loc118, #loc117])
