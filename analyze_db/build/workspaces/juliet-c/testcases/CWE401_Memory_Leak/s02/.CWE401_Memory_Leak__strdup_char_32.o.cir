!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodB2G.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc113)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_32_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc114)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc120)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc114)
        %10 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_32_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc114)
        cir.copy %10 to %9 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc114)
        %11 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc26)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc27)
        %13 = cir.call @strdup(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
        cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
        %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc31)
      } loc(#loc124)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    } loc(#loc122)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    } loc(#loc127)
    cir.return loc(#loc10)
  } loc(#loc117)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc129)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc135)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc57)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc64)
      %9 = cir.const #cir.int<1> : !u64i loc(#loc64)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc64)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc64)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc64)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc64)
      cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
      %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc66)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc48)
      %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc48)
      %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
      %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %21 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      cir.store %20, %21 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    } loc(#loc138)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    } loc(#loc142)
    cir.return loc(#loc50)
  } loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc148)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc147)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc113)
        %10 = cir.get_global @__const.goodB2G.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
        cir.copy %10 to %9 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
        %11 = cir.get_global @strdup : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc98)
        %13 = cir.call @strdup(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
        cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
        %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } loc(#loc152)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    } loc(#loc150)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc156)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc111)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    } loc(#loc155)
    cir.return loc(#loc81)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_32.c":87:13)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_32.c":87:31)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_32.c":33:13)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_32.c":33:31)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_32.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_32.c":47:1)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_32.c":26:5)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_32.c":26:12)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_32.c":27:5)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_32.c":27:25)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_32.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_32.c":28:25)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_32.c":29:12)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_32.c":29:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_32.c":30:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_32.c":40:5)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_32.c":31:9)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_32.c":31:24)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_32.c":31:23)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_32.c":32:9)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_32.c":38:9)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_32.c":35:20)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_32.c":35:27)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_32.c":35:13)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_32.c":35:35)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_32.c":37:23)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_32.c":37:13)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_32.c":39:21)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_32.c":39:10)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_32.c":39:9)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_32.c":41:5)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_32.c":46:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_32.c":42:9)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_32.c":42:24)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_32.c":42:23)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_32.c":102:1)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_32.c":106:1)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_32.c":104:5)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_32.c":104:13)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_32.c":105:5)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_32.c":105:13)
#loc46 = loc("/usr/include/string.h":141:1)
#loc47 = loc("/usr/include/string.h":142:14)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_32.c":65:22)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_32.c":54:1)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_32.c":75:1)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_32.c":56:5)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_32.c":56:12)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_32.c":57:5)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_32.c":57:25)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_32.c":58:5)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_32.c":58:25)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_32.c":59:12)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_32.c":59:5)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_32.c":60:5)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_32.c":68:5)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_32.c":61:9)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_32.c":61:24)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_32.c":61:23)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_32.c":63:24)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_32.c":63:9)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_32.c":65:9)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_32.c":65:16)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_32.c":66:19)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_32.c":66:9)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_32.c":67:21)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_32.c":67:10)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_32.c":67:9)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_32.c":69:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_32.c":74:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_32.c":70:9)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_32.c":70:24)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_32.c":70:23)
#loc78 = loc("/usr/include/stdlib.h":687:1)
#loc79 = loc("/usr/include/stdlib.h":687:32)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_32.c":78:1)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_32.c":100:1)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_32.c":80:5)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_32.c":80:12)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_32.c":81:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_32.c":81:25)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_32.c":82:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_32.c":82:25)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_32.c":83:12)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_32.c":83:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_32.c":84:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_32.c":94:5)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_32.c":85:9)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_32.c":85:24)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_32.c":85:23)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_32.c":86:9)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_32.c":92:9)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_32.c":89:20)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_32.c":89:27)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_32.c":89:13)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_32.c":89:35)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_32.c":91:23)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_32.c":91:13)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_32.c":93:21)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_32.c":93:10)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_32.c":93:9)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_32.c":95:5)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_32.c":99:5)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_32.c":96:9)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_32.c":96:24)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_32.c":96:23)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_32.c":98:9)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_32.c":98:14)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc18, #loc17])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc34, #loc32])
#loc127 = loc(fused[#loc35, #loc36])
#loc128 = loc(fused[#loc37, #loc38])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc44, #loc45])
#loc132 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc51, #loc52])
#loc135 = loc(fused[#loc53, #loc54])
#loc136 = loc(fused[#loc55, #loc56])
#loc137 = loc(fused[#loc58, #loc57])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc61, #loc62])
#loc140 = loc(fused[#loc65, #loc64])
#loc141 = loc(fused[#loc72, #loc70])
#loc142 = loc(fused[#loc73, #loc74])
#loc143 = loc(fused[#loc75, #loc76])
#loc144 = loc(fused[#loc78, #loc79])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc82, #loc83])
#loc147 = loc(fused[#loc84, #loc85])
#loc148 = loc(fused[#loc86, #loc87])
#loc149 = loc(fused[#loc89, #loc88])
#loc150 = loc(fused[#loc90, #loc91])
#loc151 = loc(fused[#loc92, #loc93])
#loc152 = loc(fused[#loc95, #loc96])
#loc153 = loc(fused[#loc99, #loc100])
#loc154 = loc(fused[#loc105, #loc103])
#loc155 = loc(fused[#loc106, #loc107])
#loc156 = loc(fused[#loc108, #loc109])
