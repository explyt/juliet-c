!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":130:10)
#loc51 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":130:14)
#loc52 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":130:20)
#loc53 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":130:32)
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"2\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Invalid Number\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc135)
    cir.brcond %3 ^bb2, ^bb15 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc21)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc138)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb4 loc(#loc139)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // pred: ^bb4
    cir.switch.flat %7 : !s32i, ^bb11 [
      0: ^bb7,
      1: ^bb9,
      2: ^bb10
    ] loc(#loc22)
  ^bb6:  // no predecessors
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb12 loc(#loc29)
  ^bb10:  // pred: ^bb5
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb12 loc(#loc31)
  ^bb11:  // pred: ^bb5
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // 3 preds: ^bb9, ^bb10, ^bb11
    cir.br ^bb13 loc(#loc23)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc19)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc14)
  ^bb15:  // 2 preds: ^bb1, ^bb14
    cir.br ^bb16 loc(#loc14)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc10)
  } loc(#loc132)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc140)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE484_Omitted_Break_Statement_in_Switch__basic_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE484_Omitted_Break_Statement_in_Switch__basic_06_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE484_Omitted_Break_Statement_in_Switch__basic_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE484_Omitted_Break_Statement_in_Switch__basic_06_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc76)
    %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc154)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb15 loc(#loc78)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc83)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc84)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc157)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // pred: ^bb5
    cir.switch.flat %9 : !s32i, ^bb11 [
      0: ^bb8,
      1: ^bb9,
      2: ^bb10
    ] loc(#loc85)
  ^bb7:  // no predecessors
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc89)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb12 loc(#loc91)
  ^bb9:  // pred: ^bb6
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc92)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb12 loc(#loc94)
  ^bb10:  // pred: ^bb6
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc95)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb12 loc(#loc97)
  ^bb11:  // pred: ^bb6
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb12 loc(#loc100)
  ^bb12:  // 4 preds: ^bb8, ^bb9, ^bb10, ^bb11
    cir.br ^bb13 loc(#loc86)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc82)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc74)
  ^bb15:  // 2 preds: ^bb2, ^bb14
    cir.br ^bb16 loc(#loc74)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc70)
  } loc(#loc151)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %3 ^bb2, ^bb14 loc(#loc163)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc112)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc113)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc165)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.switch.flat %7 : !s32i, ^bb10 [
      0: ^bb7,
      1: ^bb8,
      2: ^bb9
    ] loc(#loc114)
  ^bb6:  // no predecessors
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc118)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb11 loc(#loc120)
  ^bb8:  // pred: ^bb5
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc121)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb11 loc(#loc123)
  ^bb9:  // pred: ^bb5
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc124)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb11 loc(#loc126)
  ^bb10:  // pred: ^bb5
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc127)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // 4 preds: ^bb7, ^bb8, ^bb9, ^bb10
    cir.br ^bb12 loc(#loc115)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc111)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc106)
  ^bb14:  // 2 preds: ^bb1, ^bb13
    cir.br ^bb15 loc(#loc106)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc102)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":35:27)
#loc6 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":37:27)
#loc7 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":40:27)
#loc8 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":43:27)
#loc9 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":25:1)
#loc10 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":48:1)
#loc11 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:13)
#loc12 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:32)
#loc13 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:5)
#loc14 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":47:5)
#loc15 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:8)
#loc16 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:27)
#loc17 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":28:5)
#loc18 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":29:9)
#loc19 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":46:9)
#loc20 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:22)
#loc21 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:31)
#loc22 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":32:13)
#loc23 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":45:13)
#loc24 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":32:21)
#loc25 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":34:13)
#loc26 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":35:17)
#loc27 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":36:13)
#loc28 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":37:17)
#loc29 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":38:17)
#loc30 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":40:17)
#loc31 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":41:17)
#loc32 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":43:17)
#loc33 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":44:17)
#loc34 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":115:1)
#loc35 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":119:1)
#loc36 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":117:5)
#loc37 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":117:11)
#loc38 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":118:5)
#loc39 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":118:11)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":135:15)
#loc45 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":137:15)
#loc46 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":140:15)
#loc47 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":142:15)
#loc48 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":130:1)
#loc49 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":145:1)
#loc54 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":131:1)
#loc55 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":133:27)
#loc56 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":133:22)
#loc57 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":133:5)
#loc58 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":135:5)
#loc59 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":136:5)
#loc60 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":136:61)
#loc61 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":137:5)
#loc62 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":140:5)
#loc63 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":141:5)
#loc64 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":141:60)
#loc65 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":142:5)
#loc66 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":144:12)
#loc67 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":144:5)
#loc68 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":60:19)
#loc69 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":55:1)
#loc70 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":85:1)
#loc71 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:13)
#loc72 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:32)
#loc73 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:5)
#loc74 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":84:5)
#loc75 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:8)
#loc76 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:27)
#loc77 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":58:5)
#loc78 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":61:5)
#loc79 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":63:5)
#loc80 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":60:9)
#loc81 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":64:9)
#loc82 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":83:9)
#loc83 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:22)
#loc84 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:31)
#loc85 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":68:13)
#loc86 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":82:13)
#loc87 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":68:21)
#loc88 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":70:13)
#loc89 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":71:27)
#loc90 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":71:17)
#loc91 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":72:17)
#loc92 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":74:27)
#loc93 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":74:17)
#loc94 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":75:17)
#loc95 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":77:27)
#loc96 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":77:17)
#loc97 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":78:17)
#loc98 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":80:27)
#loc99 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":80:17)
#loc100 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":81:17)
#loc101 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":88:1)
#loc102 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":113:1)
#loc103 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:13)
#loc104 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:32)
#loc105 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:5)
#loc106 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":112:5)
#loc107 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:8)
#loc108 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:27)
#loc109 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":91:5)
#loc110 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":92:9)
#loc111 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":111:9)
#loc112 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:22)
#loc113 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:31)
#loc114 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":96:13)
#loc115 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":110:13)
#loc116 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":96:21)
#loc117 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":98:13)
#loc118 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":99:27)
#loc119 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":99:17)
#loc120 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":100:17)
#loc121 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":102:27)
#loc122 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":102:17)
#loc123 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":103:17)
#loc124 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":105:27)
#loc125 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":105:17)
#loc126 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":106:17)
#loc127 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":108:27)
#loc128 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":108:17)
#loc129 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":109:17)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc14])
#loc137 = loc(fused[#loc18, #loc19])
#loc138 = loc(fused[#loc20, #loc21])
#loc139 = loc(fused[#loc22, #loc23])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc36, #loc37])
#loc142 = loc(fused[#loc38, #loc39])
#loc143 = loc(fused[#loc40, #loc41])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc48, #loc49])
#loc148 = loc(fused[#loc59, #loc60])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc67, #loc66])
#loc151 = loc(fused[#loc69, #loc70])
#loc152 = loc(fused[#loc71, #loc72])
#loc153 = loc(fused[#loc73, #loc74])
#loc154 = loc(fused[#loc75, #loc76])
#loc155 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc156 = loc(fused[#loc81, #loc82])
#loc157 = loc(fused[#loc83, #loc84])
#loc158 = loc(fused[#loc85, #loc86])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc105, #loc106])
#loc162 = loc(fused[#loc107, #loc108])
#loc163 = loc(fused[#loc109, #loc106])
#loc164 = loc(fused[#loc110, #loc111])
#loc165 = loc(fused[#loc112, #loc113])
#loc166 = loc(fused[#loc114, #loc115])
