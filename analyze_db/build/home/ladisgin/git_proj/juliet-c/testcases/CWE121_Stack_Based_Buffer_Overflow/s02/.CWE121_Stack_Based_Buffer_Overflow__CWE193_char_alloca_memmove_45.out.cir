!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":100:10)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":100:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":100:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":100:32)
#loc134 = loc(fused[#loc41, #loc42])
#loc135 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc117)
  cir.global "private" constant cir_private @__const.badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc118)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc119)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc12)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc123)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc17)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %26 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %27 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %27() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc8)
  } loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc128)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.return %17 : !s32i loc(#loc138)
  } loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc139)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__const.badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc118)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc118)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc68)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc70)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc69)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc71)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc143)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc145)
    cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc146)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc62)
  } loc(#loc140)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc86)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc86)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc86)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc86)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc86)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc88)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc88)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc88)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc88)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc91)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %26 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %27 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %27() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc82)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__const.goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc117)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc117)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc107)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc107)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc109)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc159)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc160)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc161)
    cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc162)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb2 loc(#loc104)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc100)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":65:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":65:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":35:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":35:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":26:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":43:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":54:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":45:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":45:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":46:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":46:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":47:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":47:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":50:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":50:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:15)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":52:81)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":52:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":53:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":53:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":86:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":89:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":88:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":88:13)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":105:15)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":107:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":110:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":112:15)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":100:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":115:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":101:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":103:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":103:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":103:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":105:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":106:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":106:76)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":107:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":110:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":111:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":111:75)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":112:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":114:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":114:5)
#loc59 = loc("/usr/include/string.h":407:1)
#loc60 = loc("/usr/include/string.h":408:33)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":31:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":41:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":33:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":33:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":34:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":40:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:23)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:32)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:39)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:49)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:54)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:65)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:31)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:66)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":39:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":39:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":27:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":27:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":73:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":84:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":75:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":75:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":76:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":76:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":77:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":77:37)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":80:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":80:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:15)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:10)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:11)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":82:85)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":82:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":83:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":83:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":61:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":71:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":63:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":63:19)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":64:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":70:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:32)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:39)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:49)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:54)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:65)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:31)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:66)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":69:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":69:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc16, #loc15])
#loc125 = loc(fused[#loc18, #loc17])
#loc126 = loc(fused[#loc22, #loc21])
#loc127 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc25, #loc26])
#loc129 = loc(fused[#loc27, #loc28])
#loc130 = loc(fused[#loc29, #loc30])
#loc131 = loc(fused[#loc31, #loc32])
#loc132 = loc(fused[#loc33, #loc34])
#loc133 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc54, #loc55])
#loc138 = loc(fused[#loc58, #loc57])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc69, #loc71])
#loc144 = loc(fused[#loc72, #loc73])
#loc145 = loc(fused[#loc74, #loc73])
#loc146 = loc(fused[#loc75, #loc76])
#loc147 = loc(fused[#loc79, #loc80])
#loc148 = loc(fused[#loc81, #loc82])
#loc149 = loc(fused[#loc83, #loc84])
#loc150 = loc(fused[#loc85, #loc86])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc90, #loc89])
#loc153 = loc(fused[#loc92, #loc91])
#loc154 = loc(fused[#loc96, #loc95])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc101, #loc102])
#loc158 = loc(fused[#loc103, #loc104])
#loc159 = loc(fused[#loc107, #loc109])
#loc160 = loc(fused[#loc110, #loc111])
#loc161 = loc(fused[#loc112, #loc111])
#loc162 = loc(fused[#loc113, #loc114])
