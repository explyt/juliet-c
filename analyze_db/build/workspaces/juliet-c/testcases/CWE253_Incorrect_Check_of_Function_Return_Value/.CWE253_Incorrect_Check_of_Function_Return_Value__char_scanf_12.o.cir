!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc89)
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc94)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc94)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc97)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc97)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc26)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc26)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc28)
            %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc100)
            cir.if %14 {
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc8)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc8)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc30)
            } loc(#loc101)
          } loc(#loc99)
        } loc(#loc96)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc103)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc103)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc103)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc39)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc40)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc40)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc39)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc42)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc106)
            cir.if %15 {
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc44)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc107)
          } loc(#loc105)
        } loc(#loc102)
      } loc(#loc95)
    } loc(#loc93)
    cir.return loc(#loc10)
  } loc(#loc92)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc108)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc112)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc112)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc54)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc54)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc67)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc68)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc68)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc67)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc70)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc70)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc118)
            cir.if %15 {
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc72)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc72)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc73)
            } loc(#loc119)
          } loc(#loc117)
        } loc(#loc114)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc121)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc82)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc83)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc83)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc82)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc85)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc124)
            cir.if %15 {
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc87)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc88)
            } loc(#loc125)
          } loc(#loc123)
        } loc(#loc120)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc51)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":466:1)
#loc4 = loc("/usr/include/stdio.h":466:12)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":35:23)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":37:27)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":55:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":26:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":54:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":26:8)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":26:33)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":27:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":40:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":42:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":28:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":39:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":31:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":31:36)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":32:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":32:27)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":35:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":38:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":35:17)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":35:33)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":35:42)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":36:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":37:17)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":43:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":53:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":46:13)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":46:36)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":47:13)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":47:27)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":49:13)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":52:13)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":49:17)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":49:23)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":49:33)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":49:42)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":50:13)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":51:27)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":51:17)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":94:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":97:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":96:5)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":96:11)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":62:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":92:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":64:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":91:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":64:8)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":64:33)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":65:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":77:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":79:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":66:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":76:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":69:13)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":69:36)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":70:13)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":70:27)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":72:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":75:13)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":72:17)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":72:23)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":72:33)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":72:42)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":73:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":74:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":74:17)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":80:9)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":90:9)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":83:13)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":83:36)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":84:13)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":84:27)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":86:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":89:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":86:17)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":86:23)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":86:33)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":86:42)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":87:13)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":88:27)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_12.c":88:17)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc11, #loc12])
#loc94 = loc(fused[#loc13, #loc14])
#loc95 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc20, #loc21])
#loc98 = loc(fused[#loc22, #loc23])
#loc99 = loc(fused[#loc24, #loc25])
#loc100 = loc(fused[#loc26, #loc28])
#loc101 = loc(fused[#loc29, #loc25])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc33, #loc34])
#loc104 = loc(fused[#loc35, #loc36])
#loc105 = loc(fused[#loc37, #loc38])
#loc106 = loc(fused[#loc39, #loc42])
#loc107 = loc(fused[#loc43, #loc38])
#loc108 = loc(fused[#loc46, #loc47])
#loc109 = loc(fused[#loc48, #loc49])
#loc110 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc114 = loc(fused[#loc59, #loc60])
#loc115 = loc(fused[#loc61, #loc62])
#loc116 = loc(fused[#loc63, #loc64])
#loc117 = loc(fused[#loc65, #loc66])
#loc118 = loc(fused[#loc67, #loc70])
#loc119 = loc(fused[#loc71, #loc66])
#loc120 = loc(fused[#loc74, #loc75])
#loc121 = loc(fused[#loc76, #loc77])
#loc122 = loc(fused[#loc78, #loc79])
#loc123 = loc(fused[#loc80, #loc81])
#loc124 = loc(fused[#loc82, #loc85])
#loc125 = loc(fused[#loc86, #loc81])
