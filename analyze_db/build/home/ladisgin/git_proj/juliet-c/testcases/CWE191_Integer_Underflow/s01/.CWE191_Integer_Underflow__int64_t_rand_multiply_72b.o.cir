!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":28:14)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":28:30)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":45:18)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":45:34)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":57:18)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":57:34)
#loc88 = loc(fused[#loc4, #loc5])
#loc92 = loc(fused[#loc19, #loc20])
#loc99 = loc(fused[#loc38, #loc39])
#loc107 = loc(fused[#loc60, #loc61])
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" {!cir.ptr<!s64i>, !cir.ptr<!s64i>, !cir.ptr<!s64i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>::_Vector_impl" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E = !cir.struct<class "std::vector<long, std::allocator<long>>" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZNSt6vectorIlSaIlEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!s64i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>>, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s64i>, %9 : !u64i), !cir.ptr<!s64i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc89)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc89)
    cir.return %11 : !cir.ptr<!s64i> loc(#loc89)
  } loc(#loc87)
  cir.func private @printLongLongLine(!s64i) loc(#loc90)
  cir.func @_ZN50CWE191_Integer_Underflow__int64_t_rand_multiply_727badSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc25)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc27)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc27)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc30)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc31)
    %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc96)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc97)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc22)
    %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc33)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc93)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc34)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc35)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc18)
  } loc(#loc91)
  cir.func @_ZN50CWE191_Integer_Underflow__int64_t_rand_multiply_7211goodG2BSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc38, #loc39])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc99)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc44)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc45)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc46)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc46)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc49)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc50)
    %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc103)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc104)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc52)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc41)
    %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc52)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc100)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc53)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc54)
    cir.br ^bb3 loc(#loc48)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc48)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc37)
  } loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc57)
  cir.func @_ZN50CWE191_Integer_Underflow__int64_t_rand_multiply_7211goodB2GSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc66)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc67)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc68)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc68)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc71)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc72)
    %10 = cir.cmp(lt, %7, %9) : !s64i, !cir.bool loc(#loc111)
    cir.brcond %10 ^bb2, ^bb8 loc(#loc112)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc76)
    %12 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc77)
    %13 = cir.unary(minus, %12) : !s64i, !s64i loc(#loc77)
    %14 = cir.const #cir.int<1> : !s64i loc(#loc77)
    %15 = cir.binop(sub, %13, %14) nsw : !s64i loc(#loc77)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc78)
    %18 = cir.binop(div, %15, %17) : !s64i loc(#loc114)
    %19 = cir.cmp(gt, %11, %18) : !s64i, !cir.bool loc(#loc115)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc116)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc83)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc63)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc83)
    cir.store %23, %0 : !s64i, !cir.ptr<!s64i> loc(#loc108)
    %24 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc84)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc85)
    cir.br ^bb6 loc(#loc81)
  ^bb5:  // pred: ^bb3
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc57)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc75)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc70)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc59)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":28:1)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":38:1)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":35:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":35:33)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":31:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":31:32)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":29:1)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":31:31)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":31:20)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":32:5)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":37:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":32:8)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":32:15)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":33:5)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":35:26)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":36:27)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":36:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":45:1)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":54:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":51:9)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":51:33)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":47:5)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":47:32)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":46:1)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":47:31)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":47:20)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":48:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":53:5)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":48:8)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":48:15)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":49:5)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":51:26)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":52:27)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":52:9)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":70:23)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":57:1)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":73:1)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":65:13)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":65:37)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":59:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":59:32)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":58:1)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":59:31)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":59:20)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":60:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":72:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":60:8)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":60:15)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":61:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":63:9)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":71:9)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":63:13)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":63:21)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":63:31)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":63:32)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":64:9)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":67:9)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":69:9)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":65:30)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":66:31)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":66:13)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_rand_multiply_72b.cpp":70:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc15, #loc16])
#loc91 = loc(fused[#loc17, #loc18])
#loc93 = loc(fused[#loc21, #loc22])
#loc94 = loc(fused[#loc23, #loc24])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc31])
#loc97 = loc(fused[#loc32, #loc29])
#loc98 = loc(fused[#loc36, #loc37])
#loc100 = loc(fused[#loc40, #loc41])
#loc101 = loc(fused[#loc42, #loc43])
#loc102 = loc(fused[#loc47, #loc48])
#loc103 = loc(fused[#loc49, #loc50])
#loc104 = loc(fused[#loc51, #loc48])
#loc105 = loc(fused[#loc55, #loc56])
#loc106 = loc(fused[#loc58, #loc59])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc64, #loc65])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc71, #loc72])
#loc112 = loc(fused[#loc73, #loc70])
#loc113 = loc(fused[#loc74, #loc75])
#loc114 = loc(fused[#loc77, #loc78])
#loc115 = loc(fused[#loc76, #loc79])
#loc116 = loc(fused[#loc80, #loc81, #loc82, #loc75])
