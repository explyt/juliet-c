!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc267)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc268)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc271)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc273)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc274)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc25)
    cir.br ^bb2 loc(#loc23)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc23)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc278)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc273)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc273)
    cir.br ^bb6 loc(#loc279)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc32)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc32)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc32)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc32)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc32)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc268)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc280)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc281)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb9 loc(#loc37)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc44)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc24)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc283)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<7> : !s32i loc(#loc49)
    cir.br ^bb16 loc(#loc47)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb23 [
      7: ^bb18
    ] loc(#loc47)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc50)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc284)
  ^bb19:  // pred: ^bb18
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %30 = cir.cmp(gt, %28, %29) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %30 ^bb20, ^bb21 loc(#loc286)
  ^bb20:  // pred: ^bb19
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %33 = cir.binop(mul, %31, %32) nsw : !s32i loc(#loc56)
    cir.store %33, %1 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc58)
    cir.br ^bb21 loc(#loc52)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc52)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24 loc(#loc59)
  ^bb23:  // pred: ^bb16
    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb24 loc(#loc62)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc48)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc14)
  } loc(#loc272)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc288)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc290)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc64)
  } loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc293)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc294)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb1 loc(#loc297)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc86)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc84)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc293)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc293)
    cir.br ^bb6 loc(#loc299)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc93)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc93)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc93)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc93)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc93)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc93)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc93)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc268)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc95)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc300)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc301)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc101)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb9 loc(#loc98)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc89)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc106)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb13 loc(#loc109)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc85)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc303)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<8> : !s32i loc(#loc112)
    cir.br ^bb16 loc(#loc110)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb19 [
      7: ^bb18
    ] loc(#loc110)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc113)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb29 loc(#loc116)
  ^bb19:  // pred: ^bb16
    cir.br ^bb20 loc(#loc304)
  ^bb20:  // pred: ^bb19
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %32 = cir.cmp(gt, %30, %31) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %32 ^bb21, ^bb27 loc(#loc306)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc307)
  ^bb22:  // pred: ^bb21
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %34 = cir.const #cir.int<2147483647> : !s32i loc(#loc125)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc126)
    %36 = cir.binop(div, %34, %35) : !s32i loc(#loc308)
    %37 = cir.cmp(lt, %33, %36) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %37 ^bb23, ^bb24 loc(#loc310)
  ^bb23:  // pred: ^bb22
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %40 = cir.binop(mul, %38, %39) nsw : !s32i loc(#loc131)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc133)
    cir.br ^bb25 loc(#loc129)
  ^bb24:  // pred: ^bb22
    %42 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc73)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb25 loc(#loc123)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc123)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc118)
  ^bb27:  // 2 preds: ^bb20, ^bb26
    cir.br ^bb28 loc(#loc118)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc135)
  ^bb29:  // 2 preds: ^bb18, ^bb28
    cir.br ^bb30 loc(#loc111)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc75)
  } loc(#loc292)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc312)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc313)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc314)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc148)
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc146)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc312)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc312)
    cir.br ^bb6 loc(#loc318)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc154)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc155)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc155)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc155)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc155)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc155)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc155)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc155)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc155)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc268)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc319)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc320)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc162)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc163)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb9 loc(#loc160)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc166)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc168)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc147)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc322)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<7> : !s32i loc(#loc174)
    cir.br ^bb16 loc(#loc172)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb28 [
      7: ^bb18
    ] loc(#loc172)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc175)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc323)
  ^bb19:  // pred: ^bb18
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %30 = cir.cmp(gt, %28, %29) : !s32i, !cir.bool loc(#loc324)
    cir.brcond %30 ^bb20, ^bb26 loc(#loc325)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc326)
  ^bb21:  // pred: ^bb20
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %32 = cir.const #cir.int<2147483647> : !s32i loc(#loc184)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc185)
    %34 = cir.binop(div, %32, %33) : !s32i loc(#loc327)
    %35 = cir.cmp(lt, %31, %34) : !s32i, !cir.bool loc(#loc328)
    cir.brcond %35 ^bb22, ^bb23 loc(#loc329)
  ^bb22:  // pred: ^bb21
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %38 = cir.binop(mul, %36, %37) nsw : !s32i loc(#loc190)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc192)
    cir.br ^bb24 loc(#loc188)
  ^bb23:  // pred: ^bb21
    %40 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc193)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb24 loc(#loc182)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc182)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc177)
  ^bb26:  // 2 preds: ^bb19, ^bb25
    cir.br ^bb27 loc(#loc177)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29 loc(#loc195)
  ^bb28:  // pred: ^bb16
    %42 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.br ^bb29 loc(#loc198)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc173)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc137)
  } loc(#loc311)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc331)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc332)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc205)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb1 loc(#loc334)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc209)
    cir.br ^bb2 loc(#loc207)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc207)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc210)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc211)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb6 loc(#loc213)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc214)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb6 loc(#loc216)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc208)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc336)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc219)
    cir.br ^bb9 loc(#loc217)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb16 [
      7: ^bb11
    ] loc(#loc217)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc220)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc337)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %10 ^bb13, ^bb14 loc(#loc339)
  ^bb13:  // pred: ^bb12
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc202)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc226)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc228)
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc222)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc229)
  ^bb16:  // pred: ^bb9
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc230)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    cir.br ^bb17 loc(#loc232)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc218)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc200)
  } loc(#loc330)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc342)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc239)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb1 loc(#loc344)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc243)
    cir.br ^bb2 loc(#loc241)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc241)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc245)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb6 loc(#loc247)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc248)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc248)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc249)
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc346)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc253)
    cir.br ^bb9 loc(#loc251)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb16 [
      7: ^bb11
    ] loc(#loc251)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc254)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc347)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc348)
    cir.brcond %10 ^bb13, ^bb14 loc(#loc349)
  ^bb13:  // pred: ^bb12
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc236)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc260)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc262)
    cir.br ^bb14 loc(#loc256)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc256)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc263)
  ^bb16:  // pred: ^bb9
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc264)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc264)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc265)
    cir.br ^bb17 loc(#loc266)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc252)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc234)
  } loc(#loc340)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":42:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":24:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":66:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":33:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":33:45)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":57:13)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":57:33)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":26:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":26:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":28:12)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":28:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":29:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":50:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":29:12)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":31:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":32:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":44:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":43:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:19)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:32)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:49)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":35:59)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":36:9)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":39:9)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":41:9)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":38:25)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":38:20)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":38:13)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":38:36)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":42:13)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":45:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":48:9)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":49:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":51:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":65:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":51:12)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":53:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":54:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":59:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":54:12)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":54:19)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":55:9)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":57:26)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":58:26)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":58:13)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":60:9)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":63:19)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":63:9)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":64:9)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":244:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":250:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":246:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":246:14)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":247:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":247:14)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":248:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":248:14)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":249:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":249:14)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":117:27)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":73:1)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":122:1)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":82:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":82:45)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":112:17)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":112:37)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":75:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":75:9)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":77:12)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":77:5)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":78:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":99:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":78:12)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":80:5)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":81:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":93:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:9)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":92:9)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:19)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:32)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:49)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:13)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":84:59)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":85:9)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":88:9)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":90:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":87:25)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":87:20)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":87:13)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":87:36)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":91:23)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":91:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":94:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":97:19)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":97:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":98:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":100:5)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":121:5)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":100:12)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":102:5)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":104:19)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":104:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":105:9)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":107:9)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":119:9)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":107:12)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":107:19)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":108:9)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":110:13)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":118:13)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":110:17)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":110:25)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":110:33)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":110:34)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":111:13)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":114:13)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":116:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":112:30)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":113:30)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":113:17)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":117:17)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":120:9)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":125:1)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":174:1)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":134:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":134:45)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":160:17)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":160:37)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":127:5)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":127:9)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":129:12)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":129:5)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":130:5)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":151:5)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":130:12)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":132:5)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":133:5)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":145:5)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:9)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":144:9)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:19)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:32)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:49)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:13)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":136:59)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":137:9)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":140:9)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":142:9)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":139:25)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":139:20)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":139:13)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":139:36)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":143:23)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":143:13)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":146:5)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":149:19)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":149:9)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":150:9)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":152:5)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":173:5)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":152:12)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":154:5)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":155:9)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":167:9)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":155:12)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":155:19)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":156:9)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":158:13)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":166:13)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":158:17)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":158:25)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":158:33)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":158:34)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":159:13)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":162:13)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":164:13)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":160:30)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":161:30)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":161:17)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":165:27)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":165:17)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":168:9)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":171:19)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":171:9)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":172:9)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":177:1)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":208:1)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":199:13)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":199:33)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":179:5)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":179:9)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":181:12)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":181:5)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":182:5)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":192:5)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":182:12)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":184:5)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":186:19)
#loc212 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":186:9)
#loc213 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":187:9)
#loc214 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":190:16)
#loc215 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":190:9)
#loc216 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":191:9)
#loc217 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":193:5)
#loc218 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":207:5)
#loc219 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":193:12)
#loc220 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":195:5)
#loc221 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":196:9)
#loc222 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":201:9)
#loc223 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":196:12)
#loc224 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":196:19)
#loc225 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":197:9)
#loc226 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":199:26)
#loc227 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":200:26)
#loc228 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":200:13)
#loc229 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":202:9)
#loc230 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":205:19)
#loc231 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":205:9)
#loc232 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":206:9)
#loc233 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":211:1)
#loc234 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":242:1)
#loc235 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":233:13)
#loc236 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":233:33)
#loc237 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":213:5)
#loc238 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":213:9)
#loc239 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":215:12)
#loc240 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":215:5)
#loc241 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":216:5)
#loc242 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":226:5)
#loc243 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":216:12)
#loc244 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":218:5)
#loc245 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":220:16)
#loc246 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":220:9)
#loc247 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":221:9)
#loc248 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":224:19)
#loc249 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":224:9)
#loc250 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":225:9)
#loc251 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":227:5)
#loc252 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":241:5)
#loc253 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":227:12)
#loc254 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":229:5)
#loc255 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":230:9)
#loc256 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":235:9)
#loc257 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":230:12)
#loc258 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":230:19)
#loc259 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":231:9)
#loc260 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":233:26)
#loc261 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":234:26)
#loc262 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":234:13)
#loc263 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":236:9)
#loc264 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":239:19)
#loc265 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":239:9)
#loc266 = loc("CWE190_Integer_Overflow__int_fgets_multiply_15.c":240:9)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc269 = loc(fused[#loc5, #loc6])
#loc270 = loc(fused[#loc7, #loc8])
#loc271 = loc(fused[#loc11, #loc12])
#loc272 = loc(fused[#loc13, #loc14])
#loc273 = loc(fused[#loc15, #loc16])
#loc274 = loc(fused[#loc17, #loc18])
#loc275 = loc(fused[#loc19, #loc20])
#loc276 = loc(fused[#loc22, #loc21])
#loc277 = loc(fused[#loc23, #loc24])
#loc278 = loc(fused[#loc27, #loc28])
#loc279 = loc(fused[#loc29, #loc30])
#loc280 = loc(fused[#loc34, #loc35])
#loc281 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc282 = loc(fused[#loc41, #loc42])
#loc283 = loc(fused[#loc47, #loc48])
#loc284 = loc(fused[#loc51, #loc52])
#loc285 = loc(fused[#loc53, #loc54])
#loc286 = loc(fused[#loc55, #loc52])
#loc287 = loc(fused[#loc63, #loc64])
#loc288 = loc(fused[#loc65, #loc66])
#loc289 = loc(fused[#loc67, #loc68])
#loc290 = loc(fused[#loc69, #loc70])
#loc291 = loc(fused[#loc71, #loc72])
#loc292 = loc(fused[#loc74, #loc75])
#loc293 = loc(fused[#loc76, #loc77])
#loc294 = loc(fused[#loc78, #loc79])
#loc295 = loc(fused[#loc80, #loc81])
#loc296 = loc(fused[#loc83, #loc82])
#loc297 = loc(fused[#loc84, #loc85])
#loc298 = loc(fused[#loc88, #loc89])
#loc299 = loc(fused[#loc90, #loc91])
#loc300 = loc(fused[#loc95, #loc96])
#loc301 = loc(fused[#loc97, #loc98, #loc99, #loc91])
#loc302 = loc(fused[#loc102, #loc103])
#loc303 = loc(fused[#loc110, #loc111])
#loc304 = loc(fused[#loc117, #loc118])
#loc305 = loc(fused[#loc119, #loc120])
#loc306 = loc(fused[#loc121, #loc118])
#loc307 = loc(fused[#loc122, #loc123])
#loc308 = loc(fused[#loc125, #loc126])
#loc309 = loc(fused[#loc124, #loc127])
#loc310 = loc(fused[#loc128, #loc129, #loc130, #loc123])
#loc311 = loc(fused[#loc136, #loc137])
#loc312 = loc(fused[#loc138, #loc139])
#loc313 = loc(fused[#loc140, #loc141])
#loc314 = loc(fused[#loc142, #loc143])
#loc315 = loc(fused[#loc145, #loc144])
#loc316 = loc(fused[#loc146, #loc147])
#loc317 = loc(fused[#loc150, #loc151])
#loc318 = loc(fused[#loc152, #loc153])
#loc319 = loc(fused[#loc157, #loc158])
#loc320 = loc(fused[#loc159, #loc160, #loc161, #loc153])
#loc321 = loc(fused[#loc164, #loc165])
#loc322 = loc(fused[#loc172, #loc173])
#loc323 = loc(fused[#loc176, #loc177])
#loc324 = loc(fused[#loc178, #loc179])
#loc325 = loc(fused[#loc180, #loc177])
#loc326 = loc(fused[#loc181, #loc182])
#loc327 = loc(fused[#loc184, #loc185])
#loc328 = loc(fused[#loc183, #loc186])
#loc329 = loc(fused[#loc187, #loc188, #loc189, #loc182])
#loc330 = loc(fused[#loc199, #loc200])
#loc331 = loc(fused[#loc201, #loc202])
#loc332 = loc(fused[#loc203, #loc204])
#loc333 = loc(fused[#loc206, #loc205])
#loc334 = loc(fused[#loc207, #loc208])
#loc335 = loc(fused[#loc215, #loc214])
#loc336 = loc(fused[#loc217, #loc218])
#loc337 = loc(fused[#loc221, #loc222])
#loc338 = loc(fused[#loc223, #loc224])
#loc339 = loc(fused[#loc225, #loc222])
#loc340 = loc(fused[#loc233, #loc234])
#loc341 = loc(fused[#loc235, #loc236])
#loc342 = loc(fused[#loc237, #loc238])
#loc343 = loc(fused[#loc240, #loc239])
#loc344 = loc(fused[#loc241, #loc242])
#loc345 = loc(fused[#loc246, #loc245])
#loc346 = loc(fused[#loc251, #loc252])
#loc347 = loc(fused[#loc255, #loc256])
#loc348 = loc(fused[#loc257, #loc258])
#loc349 = loc(fused[#loc259, #loc256])
