!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":122:10)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":122:14)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":122:20)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":122:32)
#loc164 = loc(fused[#loc52, #loc53])
#loc165 = loc(fused[#loc54, #loc55])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc145)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc18)
    %5 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc152)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc152)
    %7 = cir.call %6(%4) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc30)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc31)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc33)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc146)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %17 : !s32i loc(#loc168)
  } loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc169)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb10 loc(#loc85)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc90)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc91)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc93)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb5 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc180)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc101)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc104)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc105)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc106)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc106)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc108)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc82)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc76)
  } loc(#loc171)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc187)
  ^bb3:  // pred: ^bb2
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc123)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc124)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc191)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc134)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc136)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc137)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc138)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc139)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc139)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc141)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc141)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb8 loc(#loc122)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc118)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc118)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc112)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":43:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":28:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":50:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":33:13)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":33:32)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":34:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":34:19)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":30:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":49:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":30:8)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":31:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":32:9)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":48:9)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:27)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:22)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:31)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:13)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":45:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:17)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:27)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":41:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":43:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":44:17)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":44:22)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:33)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:18)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:28)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:13)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":47:23)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":47:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":107:1)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":111:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":109:5)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":109:11)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":110:5)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":110:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":127:15)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":129:15)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":132:15)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":134:15)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":122:1)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":137:1)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":123:1)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":125:27)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":125:22)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":125:5)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":127:5)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":128:5)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":128:64)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":129:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":132:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":133:5)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":133:63)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":134:5)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":136:12)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":136:5)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":62:19)
#loc71 = loc("/usr/include/stdio.h":654:1)
#loc72 = loc("/usr/include/stdio.h":655:59)
#loc73 = loc("/usr/include/stdio.h":149:1)
#loc74 = loc("/usr/include/stdio.h":149:14)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":57:1)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":82:1)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":67:13)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":67:32)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":68:13)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":68:19)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":59:5)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":81:5)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":59:8)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":60:5)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":63:5)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":65:5)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":62:9)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":66:9)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":80:9)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:28)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:34)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:45)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:22)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:13)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:50)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:13)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":77:13)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:17)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:27)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":73:13)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":75:27)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":75:17)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":76:17)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":76:22)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:33)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:18)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:28)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:13)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":79:23)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":79:13)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":85:1)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":105:1)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":90:13)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":90:32)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":91:13)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":91:19)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":87:5)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":104:5)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":87:8)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":88:5)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":89:9)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":103:9)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:28)
#loc124 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:34)
#loc125 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:45)
#loc126 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:22)
#loc127 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:13)
#loc128 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:50)
#loc129 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:13)
#loc130 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":100:13)
#loc131 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:17)
#loc132 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:27)
#loc133 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":96:13)
#loc134 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":98:27)
#loc135 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":98:17)
#loc136 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":99:17)
#loc137 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":99:22)
#loc138 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:33)
#loc139 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:18)
#loc140 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:28)
#loc141 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:13)
#loc142 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":102:23)
#loc143 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":102:13)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc4, #loc5])
#loc146 = loc(fused[#loc6, #loc7])
#loc147 = loc(fused[#loc8, #loc9])
#loc148 = loc(fused[#loc10, #loc11])
#loc149 = loc(fused[#loc12, #loc13])
#loc150 = loc(fused[#loc15, #loc13])
#loc151 = loc(fused[#loc16, #loc17])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc21, #loc20])
#loc154 = loc(fused[#loc22, #loc23])
#loc155 = loc(fused[#loc24, #loc25])
#loc156 = loc(fused[#loc26, #loc23])
#loc157 = loc(fused[#loc33, #loc30])
#loc158 = loc(fused[#loc36, #loc37])
#loc159 = loc(fused[#loc38, #loc39])
#loc160 = loc(fused[#loc40, #loc41])
#loc161 = loc(fused[#loc42, #loc43])
#loc162 = loc(fused[#loc44, #loc45])
#loc163 = loc(fused[#loc50, #loc51])
#loc166 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc65, #loc66])
#loc168 = loc(fused[#loc69, #loc68])
#loc169 = loc(fused[#loc71, #loc72])
#loc170 = loc(fused[#loc73, #loc74])
#loc171 = loc(fused[#loc75, #loc76])
#loc172 = loc(fused[#loc77, #loc78])
#loc173 = loc(fused[#loc79, #loc80])
#loc174 = loc(fused[#loc81, #loc82])
#loc175 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc176 = loc(fused[#loc88, #loc89])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc98, #loc99])
#loc180 = loc(fused[#loc100, #loc97])
#loc181 = loc(fused[#loc108, #loc105])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc113, #loc114])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc120, #loc118])
#loc187 = loc(fused[#loc121, #loc122])
#loc188 = loc(fused[#loc127, #loc128])
#loc189 = loc(fused[#loc129, #loc130])
#loc190 = loc(fused[#loc131, #loc132])
#loc191 = loc(fused[#loc133, #loc130])
#loc192 = loc(fused[#loc141, #loc138])
