!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.struct<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":236:10)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":236:14)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":236:20)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":236:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc394 = loc(fused[#loc279, #loc280])
#loc395 = loc(fused[#loc281, #loc282])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.struct<struct "__pthread_internal_list" {!cir.ptr<!cir.struct<struct "__pthread_internal_list">>, !cir.ptr<!cir.struct<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.struct<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.struct<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.struct<struct "__mbstate_t" {!s32i, !ty_anon2E0_} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.struct<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.struct<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.struct<class "std::__basic_file<char>" packed {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.struct<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::ctype<char>" packed {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.struct<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.struct<class "std::ctype<char>" packed {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.struct<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.struct<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ofstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc295)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc297)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc300)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc301)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc302)
  cir.func private @close(!s32i) -> !s32i loc(#loc303)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc304)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc305)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc306)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc307)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc308)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc311)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc311)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc311)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc40)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc315)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc316)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc317)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc318)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc319)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc320)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc51)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc318)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc53)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc319)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc320)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc60)
                %19 = cir.const #cir.int<1> : !u32i loc(#loc61)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc61)
                %21 = cir.const #cir.int<6> : !u32i loc(#loc62)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc62)
                %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc322)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc69)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc69)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc324)
                  cir.if %79 {
                    cir.break loc(#loc71)
                  } loc(#loc325)
                } loc(#loc323)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc326)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc74)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc327)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc328)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc79)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc79)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc329)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc82)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc82)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc330)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc86)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc86)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc87)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc331)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                  %77 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc333)
                  %78 = cir.const #cir.int<16> : !u64i loc(#loc334)
                  %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc334)
                  %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc98)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc99)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc335)
                  cir.if %83 {
                    cir.break loc(#loc101)
                  } loc(#loc336)
                } loc(#loc332)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %77 = cir.const #cir.int<5> : !s32i loc(#loc105)
                  %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc106)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc107)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc338)
                  cir.if %81 {
                    cir.break loc(#loc109)
                  } loc(#loc339)
                } loc(#loc337)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc111)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc112)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc113)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc340)
                cir.scope {
                  %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc119)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc119)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc342)
                  cir.if %79 {
                    cir.break loc(#loc121)
                  } loc(#loc343)
                } loc(#loc341)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc125)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc344)
                %47 = cir.const #cir.int<1> : !u64i loc(#loc345)
                %48 = cir.const #cir.int<4096> : !s32i loc(#loc130)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc130)
                %50 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc131)
                %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc346)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc132)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc132)
                %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc347)
                %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc348)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc135)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc135)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc349)
                cir.scope {
                  %76 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc141)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc141)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc351)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc142)
                    cir.yield %81 : !cir.bool loc(#loc142)
                  }, false {
                    %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                    %82 = cir.const #cir.int<0> : !s32i loc(#loc144)
                    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc352)
                    %84 = cir.ternary(%83, true {
                      %85 = cir.const #true loc(#loc142)
                      cir.yield %85 : !cir.bool loc(#loc142)
                    }, false {
                      %85 = cir.const #false loc(#loc142)
                      cir.yield %85 : !cir.bool loc(#loc142)
                    }) : (!cir.bool) -> !cir.bool loc(#loc142)
                    cir.yield %84 : !cir.bool loc(#loc142)
                  }) : (!cir.bool) -> !cir.bool loc(#loc142)
                  cir.if %80 {
                    cir.break loc(#loc146)
                  } loc(#loc353)
                } loc(#loc350)
                %59 = cir.const #cir.int<0> : !s8i loc(#loc147)
                %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %61 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc149)
                %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc150)
                %64 = cir.const #cir.int<1> : !u64i loc(#loc354)
                %65 = cir.binop(div, %63, %64) : !u64i loc(#loc355)
                %66 = cir.binop(add, %61, %65) : !u64i loc(#loc356)
                %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc153)
                cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc357)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %69 = cir.const #cir.int<13> : !s8i loc(#loc155)
                %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc155)
                %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc358)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s8i loc(#loc163)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc361)
                  } loc(#loc360)
                } loc(#loc359)
                %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                %73 = cir.const #cir.int<10> : !s8i loc(#loc167)
                %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc167)
                %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
                cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc173)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s8i loc(#loc175)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc365)
                  } loc(#loc364)
                } loc(#loc363)
                cir.yield loc(#loc59)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc178)
                cir.condition(%19) loc(#loc178)
              } loc(#loc321)
            } loc(#loc321)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc182)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc182)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc367)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc185)
              } loc(#loc368)
            } loc(#loc366)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc189)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc189)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc370)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc192)
              } loc(#loc371)
            } loc(#loc369)
          } loc(#loc314)
          cir.break loc(#loc193)
        } loc(#loc41)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc195)
          cir.break loc(#loc196)
        } loc(#loc194)
        cir.yield loc(#loc38)
      } loc(#loc38)
    } loc(#loc313)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc373)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc200)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc374)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc205)
        } loc(#loc205)
        cir.yield loc(#loc204)
      } catch [#cir.unwind {
        cir.resume loc(#loc204)
      }] loc(#loc204)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc206)
        } loc(#loc206)
        cir.yield loc(#loc204)
      } catch [#cir.unwind {
        cir.resume loc(#loc204)
      }] loc(#loc204)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
    } loc(#loc372)
    cir.return loc(#loc31)
  } loc(#loc309)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc209)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc377)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc378)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc378)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc378)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc220)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc222)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc222)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc223)
          cir.break loc(#loc224)
        } loc(#loc221)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc226)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc209)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc226)
          cir.break loc(#loc228)
        } loc(#loc225)
        cir.yield loc(#loc218)
      } loc(#loc218)
    } loc(#loc380)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc382)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc232)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc374)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc235)
        } loc(#loc235)
        cir.yield loc(#loc234)
      } catch [#cir.unwind {
        cir.resume loc(#loc234)
      }] loc(#loc234)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc236)
        } loc(#loc236)
        cir.yield loc(#loc234)
      } catch [#cir.unwind {
        cir.resume loc(#loc234)
      }] loc(#loc234)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
    } loc(#loc381)
    cir.return loc(#loc211)
  } loc(#loc376)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc385)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc385)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc385)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc243)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc247)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc249)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc251)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
          cir.break loc(#loc252)
        } loc(#loc248)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc254)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc254)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc255)
          cir.break loc(#loc256)
        } loc(#loc253)
        cir.yield loc(#loc245)
      } loc(#loc245)
    } loc(#loc387)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc389)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc260)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc374)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc263)
        } loc(#loc263)
        cir.yield loc(#loc262)
      } catch [#cir.unwind {
        cir.resume loc(#loc262)
      }] loc(#loc262)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
          cir.yield loc(#loc264)
        } loc(#loc264)
        cir.yield loc(#loc262)
      } catch [#cir.unwind {
        cir.resume loc(#loc262)
      }] loc(#loc262)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc308)
    } loc(#loc388)
    cir.return loc(#loc238)
  } loc(#loc383)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15L8goodG2B1Ev() : () -> () loc(#loc267)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15L8goodG2B2Ev() : () -> () loc(#loc268)
    cir.return loc(#loc266)
  } loc(#loc390)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc391)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc392)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc276)
  cir.func @main(%arg0: !s32i loc(fused[#loc279, #loc280]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc281, #loc282])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc394)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc395)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc278)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc283)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc284)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc285)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc285)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc286)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc273)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc273)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc287)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_154goodEv() : () -> () loc(#loc288)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc274)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc274)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc289)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc275)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc275)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc290)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_153badEv() : () -> () loc(#loc291)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc276)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc276)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc292)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc293)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    cir.return %15 : !s32i loc(#loc396)
  } loc(#loc393)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":142:19)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":828:7)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":829:34)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":969:7)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":978:7)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":1041:7)
#loc27 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":1046:7)
#loc28 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":911:7)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":912:9)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":52:1)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":151:1)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":54:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":54:12)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":55:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":55:37)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":56:12)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":56:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":57:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":144:5)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":57:12)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":59:5)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":60:5)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":138:5)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":65:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":65:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":66:9)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":66:28)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":67:9)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":67:15)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":68:9)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":68:31)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":69:9)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":69:31)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":70:9)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":70:37)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":70:26)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":70:33)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":71:9)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":123:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:35)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:44)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:57)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:28)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:13)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":81:68)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":82:13)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":85:13)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":82:17)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":82:33)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":83:13)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":84:17)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:20)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:21)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:30)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:33)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:47)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:13)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":86:48)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":87:34)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":87:13)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":88:39)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":88:13)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":89:38)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":89:32)
#loc88 = loc("/usr/include/netinet/in.h":250:15)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":89:13)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":89:46)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:13)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":93:13)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:22)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:54)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:55)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:64)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:78)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:17)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":90:84)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":91:13)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":92:17)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":94:13)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":97:13)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":94:24)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":94:38)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":94:17)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":94:57)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":95:13)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":96:17)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:35)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:49)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:55)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:28)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:13)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":98:59)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":99:13)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":102:13)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":99:17)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":99:33)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":100:13)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":101:17)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:31)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:54)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:61)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:59)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:45)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:68)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:71)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:82)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:87)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:102)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:112)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:113)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:116)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:26)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:13)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":104:117)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:13)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":108:13)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:31)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:44)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:47)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":105:61)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":106:13)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":107:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:57)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:13)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:18)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:28)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:41)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:52)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":110:53)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":112:30)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":112:36)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":112:23)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":112:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":112:40)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":113:13)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":116:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":113:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":114:13)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":115:28)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":115:18)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":115:17)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":117:30)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":117:36)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":117:23)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":117:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":117:40)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":118:13)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":121:13)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":118:17)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":119:13)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":120:28)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":120:18)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":120:17)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":123:16)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":124:9)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":127:9)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":124:13)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":124:29)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":125:9)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":126:26)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":126:13)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":128:9)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":131:9)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":128:13)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":128:29)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":129:9)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":130:26)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":130:13)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":139:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":140:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":142:9)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":143:9)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":145:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":150:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":146:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":146:18)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":148:33)
#loc202 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":970:57)
#loc203 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":970:67)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":52:6)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":148:20)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":149:20)
#loc207 = loc("/usr/include/string.h":149:1)
#loc208 = loc("/usr/include/string.h":150:14)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":175:22)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":158:1)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":185:1)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":160:5)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":160:12)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":161:5)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":161:37)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":162:12)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":162:5)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":163:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":178:5)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":163:12)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":165:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":167:19)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":167:9)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":168:9)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":169:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":175:9)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":175:16)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":177:9)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":179:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":184:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":180:9)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":180:18)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":182:33)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":158:13)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":182:20)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":183:20)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":188:1)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":215:1)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":190:5)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":190:12)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":191:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":191:37)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":192:12)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":192:5)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":193:5)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":208:5)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":193:12)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":195:5)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":201:9)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":201:16)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":201:22)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":203:9)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":204:5)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":206:19)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":206:9)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":207:9)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":209:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":214:5)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":210:9)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":210:18)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":212:33)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":188:13)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":212:20)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":213:20)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":217:1)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":221:1)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":219:5)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":220:5)
#loc269 = loc("/usr/include/stdlib.h":575:1)
#loc270 = loc("/usr/include/stdlib.h":575:41)
#loc271 = loc("/usr/include/time.h":76:1)
#loc272 = loc("/usr/include/time.h":76:38)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":241:15)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":243:15)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":246:15)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":248:15)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":236:1)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":251:1)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":237:1)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":239:27)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":239:22)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":239:5)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":241:5)
#loc288 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":242:5)
#loc289 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":243:5)
#loc290 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":246:5)
#loc291 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":247:5)
#loc292 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":248:5)
#loc293 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":250:12)
#loc294 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_15.cpp":250:5)
#loc295 = loc(fused[#loc1, #loc2])
#loc296 = loc(fused[#loc3, #loc4])
#loc297 = loc(fused[#loc5, #loc6])
#loc298 = loc(fused[#loc7, #loc8])
#loc299 = loc(fused[#loc9, #loc10])
#loc300 = loc(fused[#loc11, #loc12])
#loc301 = loc(fused[#loc13, #loc14])
#loc302 = loc(fused[#loc15, #loc16])
#loc303 = loc(fused[#loc17, #loc18])
#loc304 = loc(fused[#loc19, #loc20])
#loc305 = loc(fused[#loc22, #loc23])
#loc306 = loc(fused[#loc24, #loc25])
#loc307 = loc(fused[#loc26, #loc27])
#loc308 = loc(fused[#loc28, #loc29])
#loc309 = loc(fused[#loc30, #loc31])
#loc310 = loc(fused[#loc32, #loc33])
#loc311 = loc(fused[#loc34, #loc35])
#loc312 = loc(fused[#loc37, #loc36])
#loc313 = loc(fused[#loc38, #loc39])
#loc314 = loc(fused[#loc42, #loc43])
#loc315 = loc(fused[#loc44, #loc45])
#loc316 = loc(fused[#loc46, #loc47])
#loc317 = loc(fused[#loc48, #loc49])
#loc318 = loc(fused[#loc50, #loc51])
#loc319 = loc(fused[#loc52, #loc53])
#loc320 = loc(fused[#loc54, #loc55])
#loc321 = loc(fused[#loc58, #loc59])
#loc322 = loc(fused[#loc64, #loc65])
#loc323 = loc(fused[#loc66, #loc67])
#loc324 = loc(fused[#loc68, #loc69])
#loc325 = loc(fused[#loc70, #loc67])
#loc326 = loc(fused[#loc72, #loc73])
#loc327 = loc(fused[#loc75, #loc76])
#loc328 = loc(fused[#loc77, #loc78])
#loc329 = loc(fused[#loc81, #loc79])
#loc330 = loc(fused[#loc85, #loc82])
#loc331 = loc(fused[#loc89, #loc90])
#loc332 = loc(fused[#loc91, #loc92])
#loc333 = loc(fused[#loc94, #loc95])
#loc334 = loc(fused[#loc96, #loc97])
#loc335 = loc(fused[#loc98, #loc99])
#loc336 = loc(fused[#loc100, #loc92])
#loc337 = loc(fused[#loc102, #loc103])
#loc338 = loc(fused[#loc106, #loc107])
#loc339 = loc(fused[#loc108, #loc103])
#loc340 = loc(fused[#loc114, #loc115])
#loc341 = loc(fused[#loc116, #loc117])
#loc342 = loc(fused[#loc118, #loc119])
#loc343 = loc(fused[#loc120, #loc117])
#loc344 = loc(fused[#loc126, #loc127])
#loc345 = loc(fused[#loc128, #loc129])
#loc346 = loc(fused[#loc130, #loc131])
#loc347 = loc(fused[#loc130, #loc132])
#loc348 = loc(fused[#loc128, #loc133])
#loc349 = loc(fused[#loc136, #loc137])
#loc350 = loc(fused[#loc138, #loc139])
#loc351 = loc(fused[#loc140, #loc141])
#loc352 = loc(fused[#loc143, #loc144])
#loc353 = loc(fused[#loc145, #loc139])
#loc354 = loc(fused[#loc151, #loc152])
#loc355 = loc(fused[#loc150, #loc152])
#loc356 = loc(fused[#loc149, #loc152])
#loc357 = loc(fused[#loc148, #loc147])
#loc358 = loc(fused[#loc157, #loc158])
#loc359 = loc(fused[#loc159, #loc160])
#loc360 = loc(fused[#loc162, #loc160])
#loc361 = loc(fused[#loc165, #loc163])
#loc362 = loc(fused[#loc169, #loc170])
#loc363 = loc(fused[#loc171, #loc172])
#loc364 = loc(fused[#loc174, #loc172])
#loc365 = loc(fused[#loc177, #loc175])
#loc366 = loc(fused[#loc179, #loc180])
#loc367 = loc(fused[#loc181, #loc182])
#loc368 = loc(fused[#loc183, #loc180])
#loc369 = loc(fused[#loc186, #loc187])
#loc370 = loc(fused[#loc188, #loc189])
#loc371 = loc(fused[#loc190, #loc187])
#loc372 = loc(fused[#loc197, #loc198])
#loc373 = loc(fused[#loc199, #loc200])
#loc374 = loc(fused[#loc202, #loc203])
#loc375 = loc(fused[#loc207, #loc208])
#loc376 = loc(fused[#loc210, #loc211])
#loc377 = loc(fused[#loc212, #loc213])
#loc378 = loc(fused[#loc214, #loc215])
#loc379 = loc(fused[#loc217, #loc216])
#loc380 = loc(fused[#loc218, #loc219])
#loc381 = loc(fused[#loc229, #loc230])
#loc382 = loc(fused[#loc231, #loc232])
#loc383 = loc(fused[#loc237, #loc238])
#loc384 = loc(fused[#loc239, #loc240])
#loc385 = loc(fused[#loc241, #loc242])
#loc386 = loc(fused[#loc244, #loc243])
#loc387 = loc(fused[#loc245, #loc246])
#loc388 = loc(fused[#loc257, #loc258])
#loc389 = loc(fused[#loc259, #loc260])
#loc390 = loc(fused[#loc265, #loc266])
#loc391 = loc(fused[#loc269, #loc270])
#loc392 = loc(fused[#loc271, #loc272])
#loc393 = loc(fused[#loc277, #loc278])
#loc396 = loc(fused[#loc294, #loc293])
