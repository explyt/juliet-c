!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":140:10)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":140:14)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":140:20)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":140:32)
#loc191 = loc(fused[#loc66, #loc67])
#loc192 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc166)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.func private @close(!s32i) -> !s32i loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc14)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc173)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc24)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc175)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc25)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc26)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc176)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc27)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc31)
    cir.br ^bb4 loc(#loc21)
  ^bb3:  // pred: ^bb1
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc8)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc8)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %21 = cir.const #cir.int<64> : !s32i loc(#loc33)
    %22 = cir.binop(or, %20, %21) : !s32i loc(#loc178)
    %23 = cir.const #cir.int<256> : !s32i loc(#loc34)
    %24 = cir.const #cir.int<128> : !s32i loc(#loc35)
    %25 = cir.binop(or, %23, %24) : !s32i loc(#loc179)
    %26 = cir.call @open(%19, %22, %25) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc36)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc182)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc182)
    %29 = cir.call %28() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc41)
    %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %30 ^bb7, ^bb8 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc47)
    cir.br ^bb9 loc(#loc44)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc169)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc73)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_12_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_12_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.return %17 : !s32i loc(#loc195)
  } loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc89)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc200)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc93)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc98)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc98)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc100)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc202)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc101)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc102)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc203)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc103)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc107)
    cir.br ^bb4 loc(#loc96)
  ^bb3:  // pred: ^bb1
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc108)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc108)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %21 = cir.const #cir.int<64> : !s32i loc(#loc110)
    %22 = cir.binop(or, %20, %21) : !s32i loc(#loc205)
    %23 = cir.const #cir.int<256> : !s32i loc(#loc111)
    %24 = cir.const #cir.int<128> : !s32i loc(#loc112)
    %25 = cir.binop(or, %23, %24) : !s32i loc(#loc206)
    %26 = cir.call @open(%19, %22, %25) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc113)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc117)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc208)
  ^bb6:  // pred: ^bb5
    %29 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
    %31 = cir.call %30() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc120)
    %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %32 ^bb7, ^bb8 loc(#loc210)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc123)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc119)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc119)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc85)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc130)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc215)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc134)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc134)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc139)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc139)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc140)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc141)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc217)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc142)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc143)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc218)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc144)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb4 loc(#loc137)
  ^bb3:  // pred: ^bb1
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc147)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc147)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc148)
    %19 = cir.const #cir.int<64> : !s32i loc(#loc149)
    %20 = cir.binop(or, %18, %19) : !s32i loc(#loc220)
    %21 = cir.const #cir.int<256> : !s32i loc(#loc150)
    %22 = cir.const #cir.int<128> : !s32i loc(#loc151)
    %23 = cir.binop(or, %21, %22) : !s32i loc(#loc221)
    %24 = cir.call @open(%17, %20, %23) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc152)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc223)
  ^bb6:  // pred: ^bb5
    %25 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc224)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
    %27 = cir.call %26() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc157)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %28 ^bb7, ^bb8 loc(#loc225)
  ^bb7:  // pred: ^bb6
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc163)
    cir.br ^bb9 loc(#loc160)
  ^bb8:  // pred: ^bb6
    %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc165)
    cir.br ^bb9 loc(#loc156)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc156)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc126)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/fcntl.h":209:1)
#loc4 = loc("/usr/include/fcntl.h":209:56)
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:21)
#loc6 = loc("/usr/include/unistd.h":358:1)
#loc7 = loc("/usr/include/unistd.h":358:27)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:21)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":31:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":57:1)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":33:5)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":33:9)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":34:13)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":34:12)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":34:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":35:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":45:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":35:8)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":35:33)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":36:5)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":40:5)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":42:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:43)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:50)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:59)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:67)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:16)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:9)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":37:75)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":39:15)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":39:9)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:44)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:51)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:60)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:68)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:16)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:9)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":44:76)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":46:5)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":56:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":46:8)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":46:33)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":47:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":50:5)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":52:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":49:15)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":49:9)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":125:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":129:1)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":127:5)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":127:13)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":128:5)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":128:13)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc59 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":145:15)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":147:15)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":150:15)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":152:15)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":140:1)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":155:1)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":141:1)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":143:27)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":143:22)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":143:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":145:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":146:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":146:59)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":147:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":150:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":151:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":151:58)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":152:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":154:12)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":154:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":66:1)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":94:1)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":68:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":68:9)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":69:13)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":69:12)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":69:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":70:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":81:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":70:8)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":70:33)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":71:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":75:5)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":77:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:21)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:43)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:50)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:59)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:67)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:16)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:9)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":72:75)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":74:15)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":74:9)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:21)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:43)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:50)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:59)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:67)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:16)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:9)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":78:75)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":80:15)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":80:9)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":82:5)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":93:5)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":82:8)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":82:33)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":83:5)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":87:5)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":89:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":99:1)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":123:1)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":101:5)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":101:9)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":102:13)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":102:12)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":102:5)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":103:5)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":112:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":103:8)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":103:33)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":104:5)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":107:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":109:5)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:21)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:44)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:51)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:60)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:68)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:16)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:9)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":106:76)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:21)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:44)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:51)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:60)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:68)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:16)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:9)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":111:76)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":113:5)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":122:5)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":113:8)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":113:33)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":114:5)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":117:5)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":119:5)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":116:15)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":116:9)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":121:15)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_12.c":121:9)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc6, #loc7])
#loc169 = loc(fused[#loc9, #loc10])
#loc170 = loc(fused[#loc11, #loc12])
#loc171 = loc(fused[#loc15, #loc13])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc18, #loc19])
#loc174 = loc(fused[#loc20, #loc21, #loc22, #loc17])
#loc175 = loc(fused[#loc23, #loc24])
#loc176 = loc(fused[#loc25, #loc26])
#loc177 = loc(fused[#loc28, #loc29])
#loc178 = loc(fused[#loc32, #loc33])
#loc179 = loc(fused[#loc34, #loc35])
#loc180 = loc(fused[#loc37, #loc38])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc41, #loc42])
#loc183 = loc(fused[#loc43, #loc44, #loc45, #loc40])
#loc184 = loc(fused[#loc48, #loc49])
#loc185 = loc(fused[#loc50, #loc51])
#loc186 = loc(fused[#loc52, #loc53])
#loc187 = loc(fused[#loc54, #loc55])
#loc188 = loc(fused[#loc56, #loc57])
#loc189 = loc(fused[#loc58, #loc59])
#loc190 = loc(fused[#loc64, #loc65])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc79, #loc80])
#loc195 = loc(fused[#loc83, #loc82])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc86, #loc87])
#loc198 = loc(fused[#loc90, #loc88])
#loc199 = loc(fused[#loc91, #loc92])
#loc200 = loc(fused[#loc93, #loc94])
#loc201 = loc(fused[#loc95, #loc96, #loc97, #loc92])
#loc202 = loc(fused[#loc99, #loc100])
#loc203 = loc(fused[#loc101, #loc102])
#loc204 = loc(fused[#loc104, #loc105])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc111, #loc112])
#loc207 = loc(fused[#loc114, #loc115])
#loc208 = loc(fused[#loc118, #loc119])
#loc209 = loc(fused[#loc120, #loc121])
#loc210 = loc(fused[#loc122, #loc123, #loc124, #loc119])
#loc211 = loc(fused[#loc125, #loc126])
#loc212 = loc(fused[#loc127, #loc128])
#loc213 = loc(fused[#loc131, #loc129])
#loc214 = loc(fused[#loc132, #loc133])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc217 = loc(fused[#loc140, #loc141])
#loc218 = loc(fused[#loc142, #loc143])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc151])
#loc222 = loc(fused[#loc153, #loc154])
#loc223 = loc(fused[#loc155, #loc156])
#loc224 = loc(fused[#loc157, #loc158])
#loc225 = loc(fused[#loc159, #loc160, #loc161, #loc156])
