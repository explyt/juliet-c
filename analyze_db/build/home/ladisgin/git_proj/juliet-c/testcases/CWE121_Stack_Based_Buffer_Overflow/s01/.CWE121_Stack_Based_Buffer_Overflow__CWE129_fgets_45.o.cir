!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc207)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc208)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc209)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc213)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc213)
    cir.br ^bb2 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc26)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc26)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc26)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc26)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc26)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc26)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc208)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb5 loc(#loc31)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc211)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %26 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc212)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc223)
  cir.func private @printIntLine(!s32i) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc229)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc230)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_badData : !cir.ptr<!s32i> loc(#loc211)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc229)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc229)
    cir.br ^bb2 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %8 ^bb3, ^bb12 loc(#loc234)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc70)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc70)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb4 loc(#loc236)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb5 loc(#loc236)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc238)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc77)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc239)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc80)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc80)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc81)
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc83)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb5 loc(#loc236)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc66)
  ^bb12:  // pred: ^bb2
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc50)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc62)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc60)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc52)
  } loc(#loc227)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc92)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc94)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc241)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc88)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc250)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc251)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc241)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb1 loc(#loc252)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc250)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc250)
    cir.br ^bb2 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %8 ^bb3, ^bb12 loc(#loc255)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc119)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc119)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb5 loc(#loc257)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc125)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc126)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc260)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc129)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc130)
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc132)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb5 loc(#loc257)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc115)
  ^bb12:  // pred: ^bb2
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc133)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb13 loc(#loc111)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc111)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc101)
  } loc(#loc248)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc262)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc264)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc265)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc144)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc264)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc264)
    cir.br ^bb2 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc150)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc151)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc151)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc151)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc151)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc151)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc151)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc151)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc151)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc208)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc152)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc153)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc270)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc159)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb5 loc(#loc156)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc147)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc262)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %26 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    cir.return loc(#loc138)
  } loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc168)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc276)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc277)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45_goodB2GData : !cir.ptr<!s32i> loc(#loc262)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc276)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc276)
    cir.br ^bb2 loc(#loc279)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %8 ^bb3, ^bb8 loc(#loc183)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc185)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %11 ^bb4, ^bb5 loc(#loc183)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #true loc(#loc183)
    cir.br ^bb6(%12 : !cir.bool) loc(#loc183)
  ^bb5:  // pred: ^bb3
    %13 = cir.const #false loc(#loc183)
    cir.br ^bb6(%13 : !cir.bool) loc(#loc183)
  ^bb6(%14: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%14 : !cir.bool) loc(#loc183)
  ^bb8:  // pred: ^bb2
    %15 = cir.const #false loc(#loc183)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc183)
  ^bb9(%16: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc183)
  ^bb10:  // pred: ^bb9
    cir.brcond %16 ^bb11, ^bb20 loc(#loc282)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc192)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc192)
    cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb12 loc(#loc284)
  ^bb12:  // pred: ^bb11
    %21 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb13 loc(#loc284)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc198)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %24 ^bb14, ^bb18 loc(#loc199)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc287)
  ^bb15:  // pred: ^bb14
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc202)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc202)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc203)
    cir.br ^bb16 loc(#loc194)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc194)
  ^bb17:  // pred: ^bb16
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc205)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb13 loc(#loc284)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc194)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc188)
  ^bb20:  // pred: ^bb10
    %31 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc168)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb21 loc(#loc180)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc180)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc178)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc170)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":67:23)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":22:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":22:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":52:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":72:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":58:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":58:45)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":54:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":54:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":56:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":57:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":69:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":68:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:49)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":60:59)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":61:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":64:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":66:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":63:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":67:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":70:67)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":70:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":71:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":71:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":161:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":165:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":163:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":163:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":164:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":164:13)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":47:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":28:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":50:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":32:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":32:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":33:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":33:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":30:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":30:16)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":31:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":49:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":48:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":36:21)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":37:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":44:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":46:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:28)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:20)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":38:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":43:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:21)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:28)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:26)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":41:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:30)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":42:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:33)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":40:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":47:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":23:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":23:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":103:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":113:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":105:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":105:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":107:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":110:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":110:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":111:71)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":111:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":112:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":112:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":79:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":101:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":83:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":83:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":84:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":84:30)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":81:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":81:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":82:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":100:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":99:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":87:21)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":88:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":95:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":97:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:28)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:20)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":89:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":94:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:21)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:17)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:24)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:28)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:26)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":92:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:37)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:30)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":93:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:33)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":91:32)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":98:23)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":98:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":24:1)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":24:12)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":139:1)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":159:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":145:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":145:45)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":141:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":141:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:12)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":143:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":144:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":156:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":155:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:19)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:32)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:49)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":147:59)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":148:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":151:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":153:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:25)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:20)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":150:36)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":154:23)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":154:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":157:71)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":157:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":158:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":158:17)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":134:23)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":116:1)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":137:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":120:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":120:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":121:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":121:30)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":118:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":118:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":119:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":136:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":135:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:21)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:26)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:34)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":123:36)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":124:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":131:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":133:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:28)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:20)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":125:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":130:13)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:21)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:17)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:24)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:28)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:26)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":128:13)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:37)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:30)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":129:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:33)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":127:32)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_45.c":134:13)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc7, #loc8])
#loc211 = loc(fused[#loc10, #loc11])
#loc212 = loc(fused[#loc12, #loc13])
#loc213 = loc(fused[#loc14, #loc15])
#loc214 = loc(fused[#loc16, #loc17])
#loc215 = loc(fused[#loc20, #loc18])
#loc216 = loc(fused[#loc21, #loc22])
#loc217 = loc(fused[#loc23, #loc24])
#loc218 = loc(fused[#loc28, #loc29])
#loc219 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc220 = loc(fused[#loc35, #loc36])
#loc221 = loc(fused[#loc39, #loc38])
#loc222 = loc(fused[#loc40, #loc41])
#loc223 = loc(fused[#loc42, #loc43])
#loc224 = loc(fused[#loc44, #loc45])
#loc225 = loc(fused[#loc46, #loc47])
#loc226 = loc(fused[#loc48, #loc49])
#loc227 = loc(fused[#loc51, #loc52])
#loc228 = loc(fused[#loc53, #loc54])
#loc229 = loc(fused[#loc55, #loc56])
#loc230 = loc(fused[#loc57, #loc58])
#loc231 = loc(fused[#loc59, #loc60])
#loc232 = loc(fused[#loc61, #loc62])
#loc233 = loc(fused[#loc63, #loc64])
#loc234 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc235 = loc(fused[#loc70, #loc68])
#loc236 = loc(fused[#loc71, #loc72])
#loc237 = loc(fused[#loc74, #loc73])
#loc238 = loc(fused[#loc75, #loc76])
#loc239 = loc(fused[#loc78, #loc72])
#loc240 = loc(fused[#loc83, #loc82])
#loc241 = loc(fused[#loc85, #loc86])
#loc242 = loc(fused[#loc87, #loc88])
#loc243 = loc(fused[#loc89, #loc90])
#loc244 = loc(fused[#loc93, #loc91])
#loc245 = loc(fused[#loc95, #loc94])
#loc246 = loc(fused[#loc97, #loc96])
#loc247 = loc(fused[#loc98, #loc99])
#loc248 = loc(fused[#loc100, #loc101])
#loc249 = loc(fused[#loc102, #loc103])
#loc250 = loc(fused[#loc104, #loc105])
#loc251 = loc(fused[#loc106, #loc107])
#loc252 = loc(fused[#loc108, #loc109])
#loc253 = loc(fused[#loc110, #loc111])
#loc254 = loc(fused[#loc112, #loc113])
#loc255 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc256 = loc(fused[#loc119, #loc117])
#loc257 = loc(fused[#loc120, #loc121])
#loc258 = loc(fused[#loc123, #loc122])
#loc259 = loc(fused[#loc124, #loc125])
#loc260 = loc(fused[#loc127, #loc121])
#loc261 = loc(fused[#loc132, #loc131])
#loc262 = loc(fused[#loc135, #loc136])
#loc263 = loc(fused[#loc137, #loc138])
#loc264 = loc(fused[#loc139, #loc140])
#loc265 = loc(fused[#loc141, #loc142])
#loc266 = loc(fused[#loc145, #loc143])
#loc267 = loc(fused[#loc146, #loc147])
#loc268 = loc(fused[#loc148, #loc149])
#loc269 = loc(fused[#loc153, #loc154])
#loc270 = loc(fused[#loc155, #loc156, #loc157, #loc149])
#loc271 = loc(fused[#loc160, #loc161])
#loc272 = loc(fused[#loc165, #loc164])
#loc273 = loc(fused[#loc166, #loc167])
#loc274 = loc(fused[#loc169, #loc170])
#loc275 = loc(fused[#loc171, #loc172])
#loc276 = loc(fused[#loc173, #loc174])
#loc277 = loc(fused[#loc175, #loc176])
#loc278 = loc(fused[#loc177, #loc178])
#loc279 = loc(fused[#loc179, #loc180])
#loc280 = loc(fused[#loc181, #loc182])
#loc281 = loc(fused[#loc184, #loc186])
#loc282 = loc(fused[#loc187, #loc188, #loc189, #loc180])
#loc283 = loc(fused[#loc192, #loc190])
#loc284 = loc(fused[#loc193, #loc194])
#loc285 = loc(fused[#loc196, #loc195])
#loc286 = loc(fused[#loc197, #loc198])
#loc287 = loc(fused[#loc200, #loc194])
#loc288 = loc(fused[#loc205, #loc204])
