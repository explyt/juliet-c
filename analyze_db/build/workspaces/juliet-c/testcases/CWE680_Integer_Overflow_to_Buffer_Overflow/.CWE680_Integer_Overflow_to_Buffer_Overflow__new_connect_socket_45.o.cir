!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc216)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc217)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc218)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc219)
  cir.func private @close(!s32i) -> !s32i loc(#loc220)
  cir.global "private" internal dsolocal @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7badDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc221)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc222)
  cir.func private @printIntLine(!s32i) loc(#loc223)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc227)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc228)
    %4 = cir.get_global @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7badDataE : !cir.ptr<!s32i> loc(#loc221)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc230)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc231)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc38)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc233)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
    cir.br ^bb2 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc44)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.br ^bb3 loc(#loc235)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc47)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc237)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc237)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc52)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc54)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    cir.br ^bb3 loc(#loc235)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc57)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc58)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    cir.delete.array %30 : <!s32i> loc(#loc59)
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc23)
  } loc(#loc224)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_453badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc243)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc244)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc245)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc73)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc67)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb2 loc(#loc249)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc249)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc79)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %12 = cir.const #cir.int<1> : !u32i loc(#loc83)
    %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc83)
    %14 = cir.const #cir.int<6> : !u32i loc(#loc84)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc84)
    %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb6 loc(#loc252)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc91)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc254)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc93)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc255)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc256)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc101)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc258)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc104)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc105)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc106)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc259)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc109)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc109)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc110)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc111)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc260)
    cir.br ^bb10 loc(#loc261)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc262)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc263)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc263)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc121)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc122)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %43 ^bb11, ^bb12 loc(#loc265)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc124)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc115)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc127)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc127)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc127)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc127)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc127)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc127)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc128)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc266)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc130)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc130)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb14 loc(#loc268)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc136)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %63 ^bb15, ^bb16 loc(#loc137)
  ^bb15:  // pred: ^bb14
    %64 = cir.const #true loc(#loc137)
    cir.br ^bb21(%64 : !cir.bool) loc(#loc137)
  ^bb16:  // pred: ^bb14
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc270)
    cir.brcond %67 ^bb17, ^bb18 loc(#loc137)
  ^bb17:  // pred: ^bb16
    %68 = cir.const #true loc(#loc137)
    cir.br ^bb19(%68 : !cir.bool) loc(#loc137)
  ^bb18:  // pred: ^bb16
    %69 = cir.const #false loc(#loc137)
    cir.br ^bb19(%69 : !cir.bool) loc(#loc137)
  ^bb19(%70: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc137)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%70 : !cir.bool) loc(#loc137)
  ^bb21(%71: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc137)
  ^bb22:  // pred: ^bb21
    cir.brcond %71 ^bb23, ^bb24 loc(#loc271)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc141)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc134)
  ^bb25:  // pred: ^bb24
    %72 = cir.const #cir.int<0> : !s8i loc(#loc142)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc144)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc146)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb26 loc(#loc81)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc78)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc78)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc274)
  ^bb29:  // pred: ^bb28
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc152)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %81 ^bb30, ^bb31 loc(#loc276)
  ^bb30:  // pred: ^bb29
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc155)
    cir.br ^bb31 loc(#loc150)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc150)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc76)
  ^bb33:  // pred: ^bb32
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %85 = cir.get_global @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7badDataE : !cir.ptr<!s32i> loc(#loc221)
    cir.store %84, %85 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7badSinkEv() : () -> () loc(#loc158)
    cir.return loc(#loc61)
  } loc(#loc241)
  cir.global "private" internal dsolocal @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L11goodG2BDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc278)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L11goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc282)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc283)
    %4 = cir.get_global @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc278)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc172)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc286)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc176)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc177)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc288)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc288)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc289)
    cir.br ^bb2 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc183)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb3 loc(#loc290)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc186)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc292)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc292)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc293)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc191)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc182)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc193)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc295)
    cir.br ^bb3 loc(#loc290)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc182)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc196)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc197)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
    cir.delete.array %30 : <!s32i> loc(#loc198)
    cir.br ^bb10 loc(#loc171)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc162)
  } loc(#loc279)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc204)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc206)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %5 = cir.get_global @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc278)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L11goodG2BSinkEv() : () -> () loc(#loc210)
    cir.return loc(#loc200)
  } loc(#loc296)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_454goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45L7goodG2BEv() : () -> () loc(#loc213)
    cir.return loc(#loc212)
  } loc(#loc301)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":98:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":44:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":44:12)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":49:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":65:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":53:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":53:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":53:26)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":54:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":54:14)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":51:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":51:16)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":52:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":64:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":56:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":56:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":56:38)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":56:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":57:37)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":49:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":57:28)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":57:46)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":57:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":61:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:18)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:14)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":59:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":60:29)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":60:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":60:24)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":60:25)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:40)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":58:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":62:22)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":62:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":62:34)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":62:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":63:19)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":67:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":130:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":77:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":77:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":78:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":78:28)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":79:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":79:32)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":80:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":80:41)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":69:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":69:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":71:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":71:12)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":71:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":72:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":127:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":81:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":116:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":116:16)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":82:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":115:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:36)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:45)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:58)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":91:69)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":92:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":95:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":92:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":92:34)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":93:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":94:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:20)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:30)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:33)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:47)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":96:48)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":97:34)
#loc102 = loc("/usr/include/netinet/in.h":249:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":97:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":98:39)
#loc105 = loc("/usr/include/netinet/in.h":251:20)
#loc106 = loc("/usr/include/netinet/in.h":33:15)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":98:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":98:59)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":99:38)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":99:32)
#loc111 = loc("/usr/include/netinet/in.h":250:15)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":99:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":99:46)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":103:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:25)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:58)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:59)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:68)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:82)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":100:88)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":101:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":102:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:31)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:46)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:59)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:77)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:80)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:26)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":106:81)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":110:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:31)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:47)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":107:61)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":108:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":109:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":112:39)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":112:25)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":112:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":114:25)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":114:20)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":114:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":114:36)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":117:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":120:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":117:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":117:30)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":118:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":119:26)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":119:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":128:15)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":128:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":129:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":45:1)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":45:12)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":137:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":153:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":141:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":141:16)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":141:26)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":142:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":142:14)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":139:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":139:16)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":140:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":152:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":144:21)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":144:28)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":144:38)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":144:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":145:37)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":137:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":145:28)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":145:46)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":145:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":149:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:18)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:14)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:21)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:33)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":147:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":148:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":148:13)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":148:24)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":148:25)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:40)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":146:39)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":150:22)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":150:33)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":150:34)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":150:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":151:19)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":155:1)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":164:1)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":157:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":157:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":159:13)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":159:12)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":159:5)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":161:12)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":161:5)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":162:19)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":162:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":163:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":166:1)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":169:1)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_45.cpp":168:5)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc3, #loc4])
#loc216 = loc(fused[#loc6, #loc7])
#loc217 = loc(fused[#loc8, #loc9])
#loc218 = loc(fused[#loc10, #loc11])
#loc219 = loc(fused[#loc12, #loc13])
#loc220 = loc(fused[#loc14, #loc15])
#loc221 = loc(fused[#loc16, #loc17])
#loc222 = loc(fused[#loc18, #loc19])
#loc223 = loc(fused[#loc20, #loc21])
#loc224 = loc(fused[#loc22, #loc23])
#loc225 = loc(fused[#loc24, #loc25])
#loc226 = loc(fused[#loc24, #loc26])
#loc227 = loc(fused[#loc27, #loc28])
#loc228 = loc(fused[#loc29, #loc30])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc34, #loc35])
#loc231 = loc(fused[#loc33, #loc35])
#loc232 = loc(fused[#loc36, #loc35])
#loc233 = loc(fused[#loc39, #loc40])
#loc234 = loc(fused[#loc41, #loc40])
#loc235 = loc(fused[#loc42, #loc43])
#loc236 = loc(fused[#loc45, #loc44])
#loc237 = loc(fused[#loc46, #loc47])
#loc238 = loc(fused[#loc48, #loc43])
#loc239 = loc(fused[#loc50, #loc49])
#loc240 = loc(fused[#loc54, #loc53])
#loc241 = loc(fused[#loc60, #loc61])
#loc242 = loc(fused[#loc62, #loc63])
#loc243 = loc(fused[#loc64, #loc65])
#loc244 = loc(fused[#loc66, #loc67])
#loc245 = loc(fused[#loc68, #loc69])
#loc246 = loc(fused[#loc70, #loc71])
#loc247 = loc(fused[#loc74, #loc72])
#loc248 = loc(fused[#loc75, #loc76])
#loc249 = loc(fused[#loc77, #loc78])
#loc250 = loc(fused[#loc80, #loc81])
#loc251 = loc(fused[#loc86, #loc87])
#loc252 = loc(fused[#loc88, #loc89])
#loc253 = loc(fused[#loc90, #loc91])
#loc254 = loc(fused[#loc92, #loc89])
#loc255 = loc(fused[#loc94, #loc95])
#loc256 = loc(fused[#loc97, #loc98])
#loc257 = loc(fused[#loc99, #loc100])
#loc258 = loc(fused[#loc103, #loc101])
#loc259 = loc(fused[#loc107, #loc108])
#loc260 = loc(fused[#loc112, #loc113])
#loc261 = loc(fused[#loc114, #loc115])
#loc262 = loc(fused[#loc117, #loc118])
#loc263 = loc(fused[#loc119, #loc120])
#loc264 = loc(fused[#loc121, #loc122])
#loc265 = loc(fused[#loc123, #loc115])
#loc266 = loc(fused[#loc127, #loc128])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc133, #loc134])
#loc269 = loc(fused[#loc135, #loc136])
#loc270 = loc(fused[#loc138, #loc139])
#loc271 = loc(fused[#loc140, #loc134])
#loc272 = loc(fused[#loc144, #loc142])
#loc273 = loc(fused[#loc147, #loc148])
#loc274 = loc(fused[#loc149, #loc150])
#loc275 = loc(fused[#loc151, #loc152])
#loc276 = loc(fused[#loc153, #loc150])
#loc277 = loc(fused[#loc157, #loc156])
#loc278 = loc(fused[#loc159, #loc160])
#loc279 = loc(fused[#loc161, #loc162])
#loc280 = loc(fused[#loc163, #loc164])
#loc281 = loc(fused[#loc163, #loc165])
#loc282 = loc(fused[#loc166, #loc167])
#loc283 = loc(fused[#loc168, #loc169])
#loc284 = loc(fused[#loc170, #loc171])
#loc285 = loc(fused[#loc173, #loc174])
#loc286 = loc(fused[#loc172, #loc174])
#loc287 = loc(fused[#loc175, #loc174])
#loc288 = loc(fused[#loc178, #loc179])
#loc289 = loc(fused[#loc180, #loc179])
#loc290 = loc(fused[#loc181, #loc182])
#loc291 = loc(fused[#loc184, #loc183])
#loc292 = loc(fused[#loc185, #loc186])
#loc293 = loc(fused[#loc187, #loc182])
#loc294 = loc(fused[#loc189, #loc188])
#loc295 = loc(fused[#loc193, #loc192])
#loc296 = loc(fused[#loc199, #loc200])
#loc297 = loc(fused[#loc201, #loc202])
#loc298 = loc(fused[#loc205, #loc203])
#loc299 = loc(fused[#loc207, #loc206])
#loc300 = loc(fused[#loc209, #loc208])
#loc301 = loc(fused[#loc211, #loc212])
