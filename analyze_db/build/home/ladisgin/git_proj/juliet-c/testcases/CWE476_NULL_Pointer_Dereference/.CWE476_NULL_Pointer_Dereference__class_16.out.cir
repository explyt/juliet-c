!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("../../testcasesupport/std_testcase.h":61:7)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":117:10)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":117:14)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":117:20)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":117:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc148 = loc(fused[#loc101, #loc102])
#loc149 = loc(fused[#loc103, #loc104])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%2) loc(#loc11)
      } do {
        %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
        cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc122)
        cir.break loc(#loc14)
      } loc(#loc121)
    } loc(#loc121)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%2) loc(#loc17)
      } do {
        %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc18)
        %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
        %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc21)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc22)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
        cir.break loc(#loc24)
      } loc(#loc123)
    } loc(#loc123)
    cir.return loc(#loc6)
  } loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc25)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc32)
        cir.condition(%2) loc(#loc32)
      } do {
        %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
        cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
        cir.break loc(#loc35)
      } loc(#loc126)
    } loc(#loc126)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
        cir.condition(%2) loc(#loc38)
      } do {
        cir.scope {
          %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
          %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
          %3 = cir.cmp(ne, %1, %2) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc130)
          cir.if %3 {
            %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
            %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
            %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc47)
            cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc48)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc49)
            cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
          } else {
            %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc25)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc25)
            cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          } loc(#loc131)
        } loc(#loc129)
        cir.break loc(#loc52)
      } loc(#loc128)
    } loc(#loc128)
    cir.return loc(#loc27)
  } loc(#loc124)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc132)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc55)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    cir.return loc(#loc55)
  } loc(#loc55)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc62)
        cir.condition(%2) loc(#loc62)
      } do {
        cir.scope {
          %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc137)
          %2 = cir.const #cir.int<8> : !u64i loc(#loc138)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
          cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc66)
          cir.store %4, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc137)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc68)
          %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
          %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
          cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc139)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
          %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc72)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc140)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
          cir.store %11, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc141)
        } loc(#loc136)
        cir.break loc(#loc75)
      } loc(#loc135)
    } loc(#loc135)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%2) loc(#loc78)
      } do {
        %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
        %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
        %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc81)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc82)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
        cir.break loc(#loc84)
      } loc(#loc142)
    } loc(#loc142)
    cir.return loc(#loc57)
  } loc(#loc133)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() : () -> () loc(#loc87)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() : () -> () loc(#loc88)
    cir.return loc(#loc86)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc144)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc98)
  cir.func @main(%arg0: !s32i loc(fused[#loc101, #loc102]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc103, #loc104])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc105)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc106)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc107)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc107)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc108)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc95)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_164goodEv() : () -> () loc(#loc110)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc97)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_163badEv() : () -> () loc(#loc113)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %15 : !s32i loc(#loc150)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":41:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:20)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":32:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:11)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:16)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":31:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":40:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:11)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:22)
#loc19 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:28)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:9)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":38:16)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:6)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":39:9)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:23)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:1)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":71:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:5)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:20)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":56:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:11)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:16)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:9)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":55:9)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:5)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":70:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:11)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:9)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":68:9)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:13)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:21)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":61:9)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":64:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":66:9)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:26)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:32)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:13)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":63:20)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:13)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:13)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":69:9)
#loc53 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc54 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:1)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":96:1)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:20)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":87:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:11)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":79:9)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":85:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:13)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:42)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:38)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:31)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:13)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:31)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:13)
#loc72 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:20)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:13)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":86:9)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:5)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":95:5)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:11)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:22)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:28)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:9)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":93:16)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:13)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":94:9)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":98:1)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":102:1)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":100:5)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":101:5)
#loc89 = loc("/usr/include/stdlib.h":575:1)
#loc90 = loc("/usr/include/stdlib.h":575:41)
#loc91 = loc("/usr/include/time.h":76:1)
#loc92 = loc("/usr/include/time.h":76:38)
#loc93 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc94 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":122:15)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":124:15)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":127:15)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":129:15)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":117:1)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":132:1)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":118:1)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":120:27)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":120:22)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":120:5)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":122:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":123:5)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":124:5)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":127:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":128:5)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":129:5)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":131:12)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":131:5)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc13, #loc12])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc26, #loc27])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc34, #loc33])
#loc128 = loc(fused[#loc36, #loc37])
#loc129 = loc(fused[#loc39, #loc40])
#loc130 = loc(fused[#loc41, #loc42])
#loc131 = loc(fused[#loc43, #loc44, #loc45, #loc40])
#loc132 = loc(fused[#loc53, #loc54])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc58, #loc59])
#loc135 = loc(fused[#loc60, #loc61])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc67, #loc66])
#loc139 = loc(fused[#loc69, #loc68])
#loc140 = loc(fused[#loc71, #loc70])
#loc141 = loc(fused[#loc74, #loc73])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc89, #loc90])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc99, #loc100])
#loc150 = loc(fused[#loc116, #loc115])
