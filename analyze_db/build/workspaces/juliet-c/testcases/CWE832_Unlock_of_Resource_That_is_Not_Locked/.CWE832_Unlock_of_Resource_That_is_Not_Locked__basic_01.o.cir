!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc5)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc11)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc14)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc71)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
      %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc5)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc5)
      cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc21)
      cir.scope {
        %9 = cir.call @stdThreadLockCreate(%0) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc24)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc24)
        %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc24)
        cir.if %11 {
          %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc8)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc27)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc28)
          cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
        } loc(#loc75)
      } loc(#loc74)
      %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc11)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc11)
      cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc29)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc30)
      cir.call @stdThreadLockRelease(%5) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc31)
      %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc14)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc14)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc32)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc33)
      cir.call @stdThreadLockDestroy(%8) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc34)
    } loc(#loc73)
    cir.return loc(#loc18)
  } loc(#loc72)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc77)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
      %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      cir.scope {
        %12 = cir.call @stdThreadLockCreate(%0) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc50)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc50)
        %14 = cir.unary(not, %13) : !cir.bool, !cir.bool loc(#loc50)
        cir.if %14 {
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc52)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc55)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
        } loc(#loc82)
      } loc(#loc81)
      %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
      cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc56)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc57)
      cir.call @stdThreadLockAcquire(%5) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc58)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc61)
      cir.call @stdThreadLockRelease(%8) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc62)
      %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc63)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc63)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc65)
      cir.call @stdThreadLockDestroy(%11) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc66)
    } loc(#loc80)
    cir.return loc(#loc43)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":47:30)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":25:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":26:19)
#loc6 = loc("../../testcasesupport/std_thread.h":18:1)
#loc7 = loc("../../testcasesupport/std_thread.h":18:44)
#loc8 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":29:23)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":33:19)
#loc12 = loc("../../testcasesupport/std_thread.h":20:1)
#loc13 = loc("../../testcasesupport/std_thread.h":20:45)
#loc14 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":35:19)
#loc15 = loc("../../testcasesupport/std_thread.h":21:1)
#loc16 = loc("../../testcasesupport/std_thread.h":21:45)
#loc17 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":22:1)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":38:1)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":24:5)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":37:5)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":26:9)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":27:9)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":31:9)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":27:14)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":28:9)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":29:13)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":30:13)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":30:18)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":33:9)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":34:30)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":34:9)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":35:9)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":36:30)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":36:9)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":64:1)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":67:1)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":66:5)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":66:11)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":55:19)
#loc40 = loc("../../testcasesupport/std_thread.h":19:1)
#loc41 = loc("../../testcasesupport/std_thread.h":19:45)
#loc42 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":44:1)
#loc43 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":62:1)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":46:5)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":61:5)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":48:19)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":48:9)
#loc48 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":49:9)
#loc49 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":53:9)
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":49:14)
#loc51 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":50:9)
#loc52 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":51:23)
#loc53 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":51:13)
#loc54 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":52:13)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":52:18)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":55:9)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":56:30)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":56:9)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":57:19)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":57:9)
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":58:30)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":58:9)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":59:19)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":59:9)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":60:30)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_01.c":60:9)
#loc67 = loc(fused[#loc3, #loc4])
#loc68 = loc(fused[#loc6, #loc7])
#loc69 = loc(fused[#loc9, #loc10])
#loc70 = loc(fused[#loc12, #loc13])
#loc71 = loc(fused[#loc15, #loc16])
#loc72 = loc(fused[#loc17, #loc18])
#loc73 = loc(fused[#loc19, #loc20])
#loc74 = loc(fused[#loc22, #loc23])
#loc75 = loc(fused[#loc25, #loc23])
#loc76 = loc(fused[#loc35, #loc36])
#loc77 = loc(fused[#loc37, #loc38])
#loc78 = loc(fused[#loc40, #loc41])
#loc79 = loc(fused[#loc42, #loc43])
#loc80 = loc(fused[#loc44, #loc45])
#loc81 = loc(fused[#loc48, #loc49])
#loc82 = loc(fused[#loc51, #loc49])
