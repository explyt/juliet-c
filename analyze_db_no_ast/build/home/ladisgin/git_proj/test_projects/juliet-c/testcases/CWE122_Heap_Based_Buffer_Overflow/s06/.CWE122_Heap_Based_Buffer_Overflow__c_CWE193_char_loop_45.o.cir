!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc144)
  cir.global "private"  internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc145)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc149)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc150)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc154)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc23)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc27)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc155)
    } loc(#loc153)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %10 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc146)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc158)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc162)
  cir.func no_proto internal private  @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc166)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc168)
      %6 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc166)
      cir.store %6, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc166)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc54)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc169)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc59)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc59)
        cir.store %15, %4 : !u64i, !cir.ptr<!u64i> loc(#loc171)
        cir.for : cond {
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc63)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc63)
          %20 = cir.binop(add, %17, %19) : !u64i loc(#loc172)
          %21 = cir.cmp(lt, %16, %20) : !u64i, !s32i loc(#loc173)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc64)
          cir.condition(%22) loc(#loc64)
        } body {
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc67)
            %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc67)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
            %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc70)
            cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc175)
          } loc(#loc174)
          cir.yield loc(#loc58)
        } step {
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc73)
          cir.store %17, %4 : !u64i, !cir.ptr<!u64i> loc(#loc176)
          cir.yield loc(#loc170)
        } loc(#loc170)
      } loc(#loc170)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    } loc(#loc165)
    cir.return loc(#loc43)
  } loc(#loc163)
  cir.global "private"  internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc177)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc84)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc87)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc87)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc87)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc182)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc186)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc98)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc102)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
      } loc(#loc187)
    } loc(#loc185)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %12 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %13 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %13() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    cir.return loc(#loc81)
  } loc(#loc178)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc193)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc194)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc195)
      %6 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc193)
      cir.store %6, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc193)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc118)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc119)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc118)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc196)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc124)
        cir.store %15, %4 : !u64i, !cir.ptr<!u64i> loc(#loc198)
        cir.for : cond {
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc126)
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc127)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc128)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc128)
          %20 = cir.binop(add, %17, %19) : !u64i loc(#loc199)
          %21 = cir.cmp(lt, %16, %20) : !u64i, !s32i loc(#loc200)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc129)
          cir.condition(%22) loc(#loc129)
        } body {
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc132)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc132)
            %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc132)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
            %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc134)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc135)
            cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc202)
          } loc(#loc201)
          cir.yield loc(#loc123)
        } step {
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc137)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc138)
          cir.store %17, %4 : !u64i, !cir.ptr<!u64i> loc(#loc203)
          cir.yield loc(#loc197)
        } loc(#loc197)
      } loc(#loc197)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc140)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc141)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
    } loc(#loc192)
    cir.return loc(#loc108)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":26:15)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":49:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":58:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":51:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":51:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":52:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":52:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:20)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:27)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:30)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:41)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:42)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":54:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:14)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":55:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":56:72)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":56:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":57:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":57:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":94:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":97:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":96:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":96:13)
#loc36 = loc("/usr/include/string.h":407:1)
#loc37 = loc("/usr/include/string.h":408:33)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":31:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":47:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":33:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":33:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":34:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":46:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":35:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":35:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":36:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":36:16)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":36:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":37:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":37:28)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":37:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":37:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":43:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:18)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:21)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:25)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:37)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":41:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:30)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:19)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":42:31)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:41)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":40:40)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":44:19)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":44:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":45:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":45:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":27:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":27:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":83:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":92:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":85:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":85:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":86:12)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":86:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:28)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:31)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:34)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:45)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:27)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:46)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":88:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:33)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:14)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:23)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:30)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":89:29)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":90:76)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":90:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":91:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":91:17)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":65:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":81:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":67:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":67:19)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":68:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":80:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":69:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":69:29)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":70:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":70:16)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":70:19)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":71:21)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":71:28)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":71:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":71:34)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":77:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:14)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:21)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:25)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:37)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:23)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":75:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:30)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:23)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:18)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:19)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":76:31)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:41)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":74:40)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":78:19)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":78:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":79:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_45.c":79:14)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc12, #loc11])
#loc149 = loc(fused[#loc15, #loc16])
#loc150 = loc(fused[#loc14, #loc16])
#loc151 = loc(fused[#loc13, #loc17])
#loc152 = loc(fused[#loc18, #loc17])
#loc153 = loc(fused[#loc19, #loc20])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc24, #loc20])
#loc156 = loc(fused[#loc29, #loc28])
#loc157 = loc(fused[#loc30, #loc31])
#loc158 = loc(fused[#loc32, #loc33])
#loc159 = loc(fused[#loc34, #loc35])
#loc160 = loc(fused[#loc36, #loc37])
#loc161 = loc(fused[#loc38, #loc39])
#loc162 = loc(fused[#loc40, #loc41])
#loc163 = loc(fused[#loc42, #loc43])
#loc164 = loc(fused[#loc44, #loc45])
#loc165 = loc(fused[#loc46, #loc47])
#loc166 = loc(fused[#loc48, #loc49])
#loc167 = loc(fused[#loc50, #loc51])
#loc168 = loc(fused[#loc50, #loc52])
#loc169 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc57, #loc58])
#loc171 = loc(fused[#loc60, #loc59])
#loc172 = loc(fused[#loc62, #loc63])
#loc173 = loc(fused[#loc61, #loc63])
#loc174 = loc(fused[#loc65, #loc58])
#loc175 = loc(fused[#loc68, #loc71])
#loc176 = loc(fused[#loc73, #loc72])
#loc177 = loc(fused[#loc78, #loc79])
#loc178 = loc(fused[#loc80, #loc81])
#loc179 = loc(fused[#loc82, #loc83])
#loc180 = loc(fused[#loc85, #loc84])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc90])
#loc183 = loc(fused[#loc86, #loc92])
#loc184 = loc(fused[#loc93, #loc92])
#loc185 = loc(fused[#loc94, #loc95])
#loc186 = loc(fused[#loc96, #loc97])
#loc187 = loc(fused[#loc99, #loc95])
#loc188 = loc(fused[#loc104, #loc103])
#loc189 = loc(fused[#loc105, #loc106])
#loc190 = loc(fused[#loc107, #loc108])
#loc191 = loc(fused[#loc109, #loc110])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc113, #loc114])
#loc194 = loc(fused[#loc115, #loc116])
#loc195 = loc(fused[#loc115, #loc117])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc122, #loc123])
#loc198 = loc(fused[#loc125, #loc124])
#loc199 = loc(fused[#loc127, #loc128])
#loc200 = loc(fused[#loc126, #loc128])
#loc201 = loc(fused[#loc130, #loc123])
#loc202 = loc(fused[#loc133, #loc136])
#loc203 = loc(fused[#loc138, #loc137])
