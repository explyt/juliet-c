!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc77)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc79)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc80)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.br ^bb2 loc(#loc83)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc85)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc19)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<10> : !s32i loc(#loc21)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc21)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc21)
    cir.store %12, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc87)
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc24)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.br ^bb2 loc(#loc83)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc79)
    cir.store %15, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc79)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc27)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc28)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc28)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc29)
    %22 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc91)
    cir.libc.memcpy %23 bytes from %19 to %17 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc92)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc37)
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc93)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc50)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc102)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc58)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc60)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc60)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc60)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc60)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
    cir.br ^bb5 loc(#loc53)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc53)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc63)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.br ^bb2 loc(#loc100)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc53)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc96)
    cir.store %17, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc96)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc66)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc68)
    %24 = cir.const #cir.int<4> : !u64i loc(#loc107)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc108)
    cir.libc.memcpy %25 bytes from %21 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc109)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc75)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc76)
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc43)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":37:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":32:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":32:28)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":23:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":23:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":24:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":24:11)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":25:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":27:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":29:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":29:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:24)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":26:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":31:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":36:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:30)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:43)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":34:44)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":35:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":35:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":35:28)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":35:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":62:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":65:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":64:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":64:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":44:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":60:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":55:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":55:28)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":46:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":46:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":47:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":47:11)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":48:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":48:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":53:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:16)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:20)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":50:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":52:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":52:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":49:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":54:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":59:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:30)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:33)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:43)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":57:44)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":58:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":58:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":58:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_17.c":58:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc16, #loc15])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc20, #loc14])
#loc87 = loc(fused[#loc22, #loc21])
#loc88 = loc(fused[#loc24, #loc23])
#loc89 = loc(fused[#loc25, #loc26])
#loc90 = loc(fused[#loc30, #loc31])
#loc91 = loc(fused[#loc29, #loc31])
#loc92 = loc(fused[#loc32, #loc33])
#loc93 = loc(fused[#loc38, #loc39])
#loc94 = loc(fused[#loc40, #loc41])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45])
#loc97 = loc(fused[#loc46, #loc47])
#loc98 = loc(fused[#loc48, #loc49])
#loc99 = loc(fused[#loc51, #loc50])
#loc100 = loc(fused[#loc52, #loc53])
#loc101 = loc(fused[#loc55, #loc54])
#loc102 = loc(fused[#loc56, #loc57])
#loc103 = loc(fused[#loc59, #loc53])
#loc104 = loc(fused[#loc61, #loc60])
#loc105 = loc(fused[#loc63, #loc62])
#loc106 = loc(fused[#loc64, #loc65])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc68, #loc70])
#loc109 = loc(fused[#loc71, #loc72])
