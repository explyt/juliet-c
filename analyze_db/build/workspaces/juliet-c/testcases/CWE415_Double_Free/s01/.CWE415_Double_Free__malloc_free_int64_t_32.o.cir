!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc138)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc137)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc139)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc20)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc23)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc142)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc143)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc144)
      cir.store %13, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc145)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc31)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s64i>, !cir.bool loc(#loc147)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc35)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
        } loc(#loc148)
      } loc(#loc146)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc36)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc37)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
      %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc39)
      cir.store %17, %18 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    } loc(#loc140)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc44)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc151)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc46)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc47)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    } loc(#loc150)
    cir.return loc(#loc8)
  } loc(#loc135)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc158)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc157)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc158)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc159)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc67)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc161)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc69)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc70)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc162)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc163)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc164)
      cir.store %13, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc165)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc78)
        %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !cir.bool loc(#loc167)
        cir.if %19 {
          %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc81)
          %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc82)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
        } loc(#loc168)
      } loc(#loc166)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc84)
      cir.store %14, %15 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc169)
    } loc(#loc160)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc89)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc90)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc171)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc91)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc92)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc92)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    } loc(#loc170)
    cir.return loc(#loc55)
  } loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc175)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc174)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc175)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc106)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc107)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc178)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc108)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc109)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc109)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc179)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc180)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc181)
      cir.store %13, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc182)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc117)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s64i>, !cir.bool loc(#loc184)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc119)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc121)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
        } loc(#loc185)
      } loc(#loc183)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc122)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc123)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc123)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc124)
      %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc125)
      cir.store %17, %18 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc186)
    } loc(#loc177)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc130)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc131)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc188)
    } loc(#loc187)
    cir.return loc(#loc94)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":24:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":44:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":26:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":26:15)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":27:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":27:28)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":28:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":28:28)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":30:12)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":30:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":31:5)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":38:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":32:9)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":32:27)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":32:26)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:27)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:34)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:38)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:52)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:53)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":33:9)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:9)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:37)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:13)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:21)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:27)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:28)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:34)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":34:33)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":36:9)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":36:14)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":37:21)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":37:10)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":37:9)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":39:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":43:5)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":40:9)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":40:27)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":40:26)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":42:9)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":42:14)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":96:1)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":100:1)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":98:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":98:13)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":99:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":99:13)
#loc54 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":51:1)
#loc55 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":70:1)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":53:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":53:15)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":54:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":54:28)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":55:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":55:28)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":57:12)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":57:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":58:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":64:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":59:9)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":59:27)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":59:26)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:27)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:34)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:38)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:52)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:53)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":60:9)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:9)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:37)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:13)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:21)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:27)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:28)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:34)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":61:33)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":63:21)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":63:10)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":63:9)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":65:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":69:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":66:9)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":66:27)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":66:26)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":68:9)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":68:14)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":73:1)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":94:1)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":75:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":75:15)
#loc97 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":76:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":76:28)
#loc99 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":77:5)
#loc100 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":77:28)
#loc101 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":79:12)
#loc102 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":79:5)
#loc103 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":80:5)
#loc104 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":87:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":81:9)
#loc106 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":81:27)
#loc107 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":81:26)
#loc108 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:27)
#loc109 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:34)
#loc110 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:38)
#loc111 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:52)
#loc112 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:53)
#loc113 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":82:9)
#loc114 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:9)
#loc115 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:37)
#loc116 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:13)
#loc117 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:21)
#loc118 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:27)
#loc119 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:28)
#loc120 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:34)
#loc121 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":83:33)
#loc122 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":85:9)
#loc123 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":85:14)
#loc124 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":86:21)
#loc125 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":86:10)
#loc126 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":86:9)
#loc127 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":88:5)
#loc128 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":93:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":89:9)
#loc130 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":89:27)
#loc131 = loc("CWE415_Double_Free__malloc_free_int64_t_32.c":89:26)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc16, #loc15])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc23, #loc25])
#loc144 = loc(fused[#loc22, #loc26])
#loc145 = loc(fused[#loc27, #loc26])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc32, #loc29])
#loc149 = loc(fused[#loc40, #loc38])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc43, #loc44])
#loc152 = loc(fused[#loc48, #loc49])
#loc153 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc52, #loc53])
#loc155 = loc(fused[#loc54, #loc55])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc58, #loc59])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc63, #loc62])
#loc160 = loc(fused[#loc64, #loc65])
#loc161 = loc(fused[#loc66, #loc67])
#loc162 = loc(fused[#loc71, #loc72])
#loc163 = loc(fused[#loc70, #loc72])
#loc164 = loc(fused[#loc69, #loc73])
#loc165 = loc(fused[#loc74, #loc73])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc79, #loc76])
#loc169 = loc(fused[#loc85, #loc83])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc93, #loc94])
#loc173 = loc(fused[#loc95, #loc96])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc102, #loc101])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc110, #loc111])
#loc180 = loc(fused[#loc109, #loc111])
#loc181 = loc(fused[#loc108, #loc112])
#loc182 = loc(fused[#loc113, #loc112])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc118, #loc115])
#loc186 = loc(fused[#loc126, #loc124])
#loc187 = loc(fused[#loc127, #loc128])
#loc188 = loc(fused[#loc129, #loc130])
