!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":81:10)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":81:14)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":81:20)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":81:32)
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE126_Buffer_Overread__char_alloca_loop_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc117)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc12)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc12)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc15)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc19)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc21)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc26)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc30)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc32)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %46, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %49 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!cir.ptr<!s8i>>, %48 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    cir.store %47, %50 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_66b_badSink(%51) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc41)
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc129)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc131)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_loop_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_66_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_loop_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_66_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %17 : !s32i loc(#loc139)
  } loc(#loc134)
  cir.func private @CWE126_Buffer_Overread__char_alloca_loop_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc85)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc85)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc87)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc87)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc89)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc90)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc90)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc90)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc94)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc96)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc98)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc100)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc101)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc101)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc105)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc107)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %46 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.store %46, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %49 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!cir.ptr<!s8i>>, %48 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.store %47, %50 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_66b_goodG2BSink(%51) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc116)
    cir.return loc(#loc79)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_66a.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":24:1)
#loc2 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":24:77)
#loc3 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":26:1)
#loc4 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":41:1)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":28:5)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":28:12)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":29:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":29:23)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":30:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":30:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":31:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":31:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":32:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":33:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":33:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":33:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":33:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":33:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":34:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":35:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":35:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":35:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":35:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":35:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":37:12)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":37:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":39:20)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":39:15)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":39:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":40:58)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":40:5)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":66:1)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":69:1)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":68:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":68:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":86:15)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":88:15)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":91:15)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":93:15)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":81:1)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":96:1)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":82:1)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":84:27)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":84:22)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":84:5)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":86:5)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":87:5)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":87:54)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":88:5)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":91:5)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":92:5)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":92:53)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":93:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":95:12)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":95:5)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":48:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":48:81)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":50:1)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":64:1)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":52:5)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":52:12)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":53:5)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":53:23)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":54:5)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":54:36)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":55:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":55:37)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:12)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:27)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:32)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:35)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":56:36)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":57:27)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":57:5)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":57:19)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":57:22)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":57:23)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:12)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:28)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:33)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:37)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":58:38)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":59:29)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":59:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":59:20)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":59:24)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":59:25)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":61:12)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":61:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":62:20)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":62:15)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":62:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":63:62)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_66a.c":63:5)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc20, #loc19])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc31, #loc30])
#loc127 = loc(fused[#loc36, #loc35])
#loc128 = loc(fused[#loc39, #loc37])
#loc129 = loc(fused[#loc42, #loc43])
#loc130 = loc(fused[#loc44, #loc45])
#loc131 = loc(fused[#loc46, #loc47])
#loc132 = loc(fused[#loc48, #loc49])
#loc133 = loc(fused[#loc50, #loc51])
#loc134 = loc(fused[#loc56, #loc57])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc71, #loc72])
#loc139 = loc(fused[#loc75, #loc74])
#loc140 = loc(fused[#loc76, #loc77])
#loc141 = loc(fused[#loc78, #loc79])
#loc142 = loc(fused[#loc80, #loc81])
#loc143 = loc(fused[#loc82, #loc83])
#loc144 = loc(fused[#loc84, #loc85])
#loc145 = loc(fused[#loc86, #loc87])
#loc146 = loc(fused[#loc92, #loc93])
#loc147 = loc(fused[#loc95, #loc94])
#loc148 = loc(fused[#loc103, #loc104])
#loc149 = loc(fused[#loc106, #loc105])
#loc150 = loc(fused[#loc111, #loc110])
#loc151 = loc(fused[#loc114, #loc112])
