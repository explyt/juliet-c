!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc133)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc17)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc17)
    cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
    %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc21)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc141)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc27)
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc134)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_02_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc29)
  } loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc40)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc51)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc52)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc52)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc53)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc53)
    %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc51)
    cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc57)
    cir.br ^bb3 loc(#loc48)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc48)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb8 loc(#loc62)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc59)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc59)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc42)
  } loc(#loc148)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc73)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc75)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc76)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc76)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc77)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc77)
    %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc75)
    cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
    %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc81)
    cir.br ^bb3 loc(#loc72)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc163)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc66)
  } loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc101)
    %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
    %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc101)
    cir.store %11, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc171)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc110)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc88)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc121)
    %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc123)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc123)
    %9 = cir.call @fopen(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc121)
    cir.store %9, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    cir.br ^bb3 loc(#loc118)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc128)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc179)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
    %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc131)
    cir.br ^bb7 loc(#loc127)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc112)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":28:22)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":28:45)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":22:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":37:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":24:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":24:12)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":25:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":25:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":26:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":31:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":26:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":27:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":28:16)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":28:9)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":28:49)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":30:16)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":30:9)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":32:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":36:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":32:8)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":33:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":35:16)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":35:9)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":125:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":131:1)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":127:5)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":127:14)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":128:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":128:14)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":129:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":129:14)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":130:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":130:14)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":57:19)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":44:1)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":65:1)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":46:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":46:12)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":47:12)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":47:5)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":48:5)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":53:5)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":48:8)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":49:5)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":50:16)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":50:22)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":50:45)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":50:9)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":50:49)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":52:16)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":52:9)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":54:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":64:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":54:8)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":55:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":58:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":60:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":57:9)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":68:1)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":84:1)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":70:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":70:12)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":71:12)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":71:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":72:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":77:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":72:8)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":73:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":74:16)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":74:22)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":74:45)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":74:9)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":74:49)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":76:16)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":76:9)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":78:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":83:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":78:8)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":79:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":99:22)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":87:1)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":106:1)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":89:5)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":89:12)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":90:12)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":90:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":91:5)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":100:5)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":91:8)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":92:5)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":95:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":97:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":94:19)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":94:9)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":99:16)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":99:46)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":99:9)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":99:50)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":101:5)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":105:5)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":101:8)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":102:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":104:16)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":104:9)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":109:1)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":123:1)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":111:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":111:12)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":112:12)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":112:5)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":113:5)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":117:5)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":113:8)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":114:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":116:16)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":116:22)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":116:46)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":116:9)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":116:50)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":118:5)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":122:5)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":118:8)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":119:5)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":121:16)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_02.c":121:9)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc12, #loc11])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc16, #loc14])
#loc139 = loc(fused[#loc18, #loc19])
#loc140 = loc(fused[#loc22, #loc23])
#loc141 = loc(fused[#loc25, #loc23])
#loc142 = loc(fused[#loc28, #loc29])
#loc143 = loc(fused[#loc30, #loc31])
#loc144 = loc(fused[#loc32, #loc33])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc38, #loc39])
#loc148 = loc(fused[#loc41, #loc42])
#loc149 = loc(fused[#loc43, #loc44])
#loc150 = loc(fused[#loc46, #loc45])
#loc151 = loc(fused[#loc47, #loc48])
#loc152 = loc(fused[#loc50, #loc48])
#loc153 = loc(fused[#loc54, #loc55])
#loc154 = loc(fused[#loc58, #loc59])
#loc155 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc156 = loc(fused[#loc65, #loc66])
#loc157 = loc(fused[#loc67, #loc68])
#loc158 = loc(fused[#loc70, #loc69])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc74, #loc72])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc85, #loc83])
#loc164 = loc(fused[#loc87, #loc88])
#loc165 = loc(fused[#loc89, #loc90])
#loc166 = loc(fused[#loc92, #loc91])
#loc167 = loc(fused[#loc93, #loc94])
#loc168 = loc(fused[#loc96, #loc97, #loc98, #loc94])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc108, #loc106])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc113, #loc114])
#loc174 = loc(fused[#loc116, #loc115])
#loc175 = loc(fused[#loc117, #loc118])
#loc176 = loc(fused[#loc120, #loc118])
#loc177 = loc(fused[#loc124, #loc125])
#loc178 = loc(fused[#loc126, #loc127])
#loc179 = loc(fused[#loc129, #loc127])
