!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":84:10)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":84:14)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":84:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":84:32)
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc109)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc17)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc115)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc21)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc23)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc30)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.return loc(#loc6)
  } loc(#loc110)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc53)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.return %17 : !s32i loc(#loc127)
  } loc(#loc122)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc129)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc80)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc135)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc136)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb2 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc89)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc90)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc84)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc92)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc93)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc93)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc97)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc99)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
    cir.return loc(#loc70)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":39:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":25:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":31:9)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":31:37)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":26:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":26:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":27:10)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:16)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:28)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:33)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:37)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":32:38)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":33:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":33:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":33:20)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":33:24)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":33:25)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":34:16)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":34:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":36:15)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":36:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":38:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":38:10)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":69:1)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":72:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":71:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":71:13)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":89:15)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":91:15)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":94:15)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":96:15)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":84:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":99:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":85:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":87:27)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":87:22)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":87:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":89:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":90:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":90:62)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":91:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":94:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":95:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":95:61)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":96:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":98:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":98:5)
#loc64 = loc("/usr/include/stdlib.h":672:1)
#loc65 = loc("/usr/include/stdlib.h":672:45)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":57:23)
#loc67 = loc("/usr/include/stdlib.h":756:1)
#loc68 = loc("/usr/include/stdlib.h":756:70)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":46:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":67:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":48:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":48:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:60)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":49:12)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":49:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":50:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":50:10)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:37)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:44)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:48)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":54:59)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":55:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":59:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":55:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":55:27)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":56:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":57:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":58:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":58:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:16)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:28)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:33)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:37)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":60:38)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":61:29)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":61:9)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":61:20)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":61:24)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":61:25)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":62:16)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":62:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":64:15)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":64:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":66:10)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_18.c":66:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc12, #loc11])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc19, #loc20])
#loc116 = loc(fused[#loc22, #loc21])
#loc117 = loc(fused[#loc27, #loc26])
#loc118 = loc(fused[#loc32, #loc33])
#loc119 = loc(fused[#loc34, #loc35])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc39])
#loc122 = loc(fused[#loc44, #loc45])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc59, #loc60])
#loc127 = loc(fused[#loc63, #loc62])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc67, #loc68])
#loc130 = loc(fused[#loc69, #loc70])
#loc131 = loc(fused[#loc71, #loc72])
#loc132 = loc(fused[#loc73, #loc74])
#loc133 = loc(fused[#loc76, #loc75])
#loc134 = loc(fused[#loc77, #loc78])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc80, #loc82])
#loc137 = loc(fused[#loc79, #loc74])
#loc138 = loc(fused[#loc83, #loc84])
#loc139 = loc(fused[#loc85, #loc86])
#loc140 = loc(fused[#loc87, #loc84])
#loc141 = loc(fused[#loc95, #loc96])
#loc142 = loc(fused[#loc98, #loc97])
#loc143 = loc(fused[#loc103, #loc102])
