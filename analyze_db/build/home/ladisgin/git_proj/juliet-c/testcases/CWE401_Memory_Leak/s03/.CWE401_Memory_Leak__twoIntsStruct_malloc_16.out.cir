!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":113:10)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":113:14)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":113:20)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":113:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc181 = loc(fused[#loc67, #loc68])
#loc182 = loc(fused[#loc69, #loc70])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc158)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc159)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc164)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc165)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc169)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc29)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
          } loc(#loc170)
        } loc(#loc168)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc171)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc172)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc43)
        cir.break loc(#loc44)
      } loc(#loc163)
    } loc(#loc163)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
        cir.condition(%3) loc(#loc47)
      } do {
        cir.break loc(#loc48)
      } loc(#loc173)
    } loc(#loc173)
    cir.return loc(#loc8)
  } loc(#loc160)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc174)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc74)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_malloc_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_malloc_16_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_malloc_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_malloc_16_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc95)
        cir.condition(%3) loc(#loc95)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc97)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc97)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc191)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc192)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc194)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc196)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc109)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc197)
        } loc(#loc195)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc110)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc198)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc199)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc119)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc121)
        cir.break loc(#loc122)
      } loc(#loc190)
    } loc(#loc190)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc125)
        cir.condition(%3) loc(#loc125)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc126)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc127)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
        cir.break loc(#loc128)
      } loc(#loc200)
    } loc(#loc200)
    cir.return loc(#loc88)
  } loc(#loc187)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc203)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc137)
        cir.condition(%3) loc(#loc137)
      } do {
        %2 = cir.const #cir.int<100> : !s32i loc(#loc138)
        %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc138)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc138)
        %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc138)
        %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc138)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc138)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc205)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc140)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc206)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc207)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc151)
        cir.break loc(#loc152)
      } loc(#loc204)
    } loc(#loc204)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc155)
        cir.condition(%3) loc(#loc155)
      } do {
        cir.break loc(#loc156)
      } loc(#loc208)
    } loc(#loc208)
    cir.return loc(#loc130)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":45:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":26:21)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":27:12)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":28:5)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":38:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":28:11)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:33)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:40)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:44)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:64)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:65)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":31:9)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:9)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:37)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:13)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:21)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:27)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:28)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:34)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":32:33)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":34:26)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":34:9)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":34:14)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":34:15)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":35:26)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":35:9)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":35:14)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":35:15)
#loc39 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":36:26)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":36:31)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":36:32)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":36:9)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":37:9)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":39:5)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":44:5)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":39:11)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":43:9)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":98:1)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":102:1)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":100:5)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":100:13)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":101:5)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":101:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":118:15)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":120:15)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":123:15)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":125:15)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":113:1)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":128:1)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":114:1)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":116:27)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":116:22)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":116:5)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":118:5)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":119:5)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":119:54)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":120:5)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":123:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":124:5)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":124:53)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":125:5)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":127:12)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":127:5)
#loc85 = loc("/usr/include/stdlib.h":687:1)
#loc86 = loc("/usr/include/stdlib.h":687:32)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":52:1)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":73:1)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":54:5)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":54:21)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":55:12)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":55:5)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":56:5)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":66:5)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":56:11)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:33)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:40)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:44)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:64)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:65)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":59:9)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:9)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:37)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:13)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:21)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:27)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:28)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:34)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":60:33)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":62:26)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":62:9)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":62:14)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":62:15)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":63:26)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":63:9)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":63:14)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":63:15)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":64:26)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":64:31)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":64:32)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":64:9)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":65:9)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":67:5)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":72:5)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":67:11)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":70:9)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":70:14)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":71:9)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":76:1)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":96:1)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":78:5)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":78:21)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":79:12)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":79:5)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":80:5)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":89:5)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":80:11)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":83:33)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":83:9)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":85:26)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":85:9)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":85:14)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":85:15)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":86:26)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":86:9)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":86:14)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":86:15)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":87:26)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":87:31)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":87:32)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":87:9)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":88:9)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":90:5)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":95:5)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":90:11)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_16.c":94:9)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc12, #loc11])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc18, #loc19])
#loc165 = loc(fused[#loc17, #loc19])
#loc166 = loc(fused[#loc16, #loc20])
#loc167 = loc(fused[#loc21, #loc20])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc26, #loc23])
#loc171 = loc(fused[#loc31, #loc30])
#loc172 = loc(fused[#loc36, #loc35])
#loc173 = loc(fused[#loc45, #loc46])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc51, #loc52])
#loc176 = loc(fused[#loc53, #loc54])
#loc177 = loc(fused[#loc55, #loc56])
#loc178 = loc(fused[#loc57, #loc58])
#loc179 = loc(fused[#loc59, #loc60])
#loc180 = loc(fused[#loc65, #loc66])
#loc183 = loc(fused[#loc76, #loc77])
#loc184 = loc(fused[#loc80, #loc81])
#loc185 = loc(fused[#loc84, #loc83])
#loc186 = loc(fused[#loc85, #loc86])
#loc187 = loc(fused[#loc87, #loc88])
#loc188 = loc(fused[#loc89, #loc90])
#loc189 = loc(fused[#loc92, #loc91])
#loc190 = loc(fused[#loc93, #loc94])
#loc191 = loc(fused[#loc98, #loc99])
#loc192 = loc(fused[#loc97, #loc99])
#loc193 = loc(fused[#loc96, #loc100])
#loc194 = loc(fused[#loc101, #loc100])
#loc195 = loc(fused[#loc102, #loc103])
#loc196 = loc(fused[#loc104, #loc105])
#loc197 = loc(fused[#loc106, #loc103])
#loc198 = loc(fused[#loc111, #loc110])
#loc199 = loc(fused[#loc115, #loc114])
#loc200 = loc(fused[#loc123, #loc124])
#loc201 = loc(fused[#loc129, #loc130])
#loc202 = loc(fused[#loc131, #loc132])
#loc203 = loc(fused[#loc134, #loc133])
#loc204 = loc(fused[#loc135, #loc136])
#loc205 = loc(fused[#loc139, #loc138])
#loc206 = loc(fused[#loc141, #loc140])
#loc207 = loc(fused[#loc145, #loc144])
#loc208 = loc(fused[#loc153, #loc154])
