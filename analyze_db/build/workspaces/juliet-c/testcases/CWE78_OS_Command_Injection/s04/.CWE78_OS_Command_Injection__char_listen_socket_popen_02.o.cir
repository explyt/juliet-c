!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc280)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc281)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_02_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc282)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc283)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc285)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc288)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc289)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc290)
  cir.func private @close(!s32i) -> !s32i loc(#loc291)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc27)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc293)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc295)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc282)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_02_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc282)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc282)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc38)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc300)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc301)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc302)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc303)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc304)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc305)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc49)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc51)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc51)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc304)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
          cir.store %18, %11 : !u64i, !cir.ptr<!u64i> loc(#loc305)
          cir.scope {
            cir.do {
              cir.scope {
                %19 = cir.const #cir.int<2> : !s32i loc(#loc60)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %21 = cir.const #cir.int<6> : !s32i loc(#loc62)
                %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
                cir.store %22, %9 : !s32i, !cir.ptr<!s32i> loc(#loc308)
                cir.scope {
                  %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc69)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc69)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc310)
                  cir.if %79 {
                    cir.break loc(#loc71)
                  } loc(#loc311)
                } loc(#loc309)
                %23 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc312)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc74)
                %25 = cir.const #cir.int<16> : !u64i loc(#loc313)
                cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc314)
                %26 = cir.const #cir.int<2> : !s32i loc(#loc79)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc79)
                %28 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc315)
                %29 = cir.const #cir.int<0> : !s32i loc(#loc82)
                %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc82)
                %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
                %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
                cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc316)
                %33 = cir.const #cir.int<27015> : !s32i loc(#loc86)
                %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc86)
                %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc87)
                %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
                cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc317)
                cir.scope {
                  %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                  %77 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc319)
                  %78 = cir.const #cir.int<16> : !u64i loc(#loc320)
                  %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc320)
                  %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc98)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc99)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc321)
                  cir.if %83 {
                    cir.break loc(#loc101)
                  } loc(#loc322)
                } loc(#loc318)
                cir.scope {
                  %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %77 = cir.const #cir.int<5> : !s32i loc(#loc105)
                  %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc106)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc107)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc324)
                  cir.if %81 {
                    cir.break loc(#loc109)
                  } loc(#loc325)
                } loc(#loc323)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc111)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc112)
                %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc113)
                cir.store %40, %10 : !s32i, !cir.ptr<!s32i> loc(#loc326)
                cir.scope {
                  %76 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc119)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc119)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc328)
                  cir.if %79 {
                    cir.break loc(#loc121)
                  } loc(#loc329)
                } loc(#loc327)
                %41 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
                %43 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc125)
                %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc330)
                %46 = cir.const #cir.int<1> : !u64i loc(#loc331)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc130)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc130)
                %49 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc131)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc332)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc132)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc132)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc333)
                %54 = cir.binop(mul, %46, %53) : !u64i loc(#loc334)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc135)
                %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc135)
                cir.store %57, %6 : !s32i, !cir.ptr<!s32i> loc(#loc335)
                cir.scope {
                  %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc141)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc141)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc337)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc142)
                    cir.yield %81 : !cir.bool loc(#loc142)
                  }, false {
                    %81 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                    %82 = cir.const #cir.int<0> : !s32i loc(#loc144)
                    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc338)
                    %84 = cir.ternary(%83, true {
                      %85 = cir.const #true loc(#loc142)
                      cir.yield %85 : !cir.bool loc(#loc142)
                    }, false {
                      %85 = cir.const #false loc(#loc142)
                      cir.yield %85 : !cir.bool loc(#loc142)
                    }) : (!cir.bool) -> !cir.bool loc(#loc142)
                    cir.yield %84 : !cir.bool loc(#loc142)
                  }) : (!cir.bool) -> !cir.bool loc(#loc142)
                  cir.if %80 {
                    cir.break loc(#loc146)
                  } loc(#loc339)
                } loc(#loc336)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc147)
                %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc147)
                %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %61 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc149)
                %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc150)
                %64 = cir.const #cir.int<1> : !u64i loc(#loc340)
                %65 = cir.binop(div, %63, %64) : !u64i loc(#loc341)
                %66 = cir.binop(add, %61, %65) : !u64i loc(#loc342)
                %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc153)
                cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc343)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc154)
                %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                %70 = cir.const #cir.int<13> : !s32i loc(#loc156)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
                cir.store %71, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc344)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc163)
                    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc163)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc347)
                  } loc(#loc346)
                } loc(#loc345)
                %72 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc166)
                %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                %74 = cir.const #cir.int<10> : !s32i loc(#loc168)
                %75 = cir.call @strchr(%73, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc166)
                cir.store %75, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc173)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc175)
                    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc175)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc351)
                  } loc(#loc350)
                } loc(#loc349)
              } loc(#loc307)
              cir.yield loc(#loc57)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc178)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc178)
              cir.condition(%20) loc(#loc178)
            } loc(#loc306)
          } loc(#loc306)
          cir.scope {
            %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc182)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc182)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc353)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc185)
            } loc(#loc354)
          } loc(#loc352)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc189)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc356)
            cir.if %22 {
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc192)
            } loc(#loc357)
          } loc(#loc355)
        } loc(#loc299)
      } loc(#loc298)
    } loc(#loc297)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc359)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc27)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc27)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc198)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc360)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc204)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc204)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc362)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc206)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc207)
        } loc(#loc363)
      } loc(#loc361)
    } loc(#loc358)
    cir.return loc(#loc31)
  } loc(#loc294)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc365)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc210)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc366)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc212)
    cir.return loc(#loc209)
  } loc(#loc364)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc216)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc368)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc219)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc370)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc281)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc281)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc281)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc228)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc228)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc216)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc216)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc232)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc233)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc219)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc219)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
      } loc(#loc373)
    } loc(#loc372)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc375)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc240)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc240)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc241)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc376)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc246)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc247)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc247)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc378)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc249)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc250)
        } loc(#loc379)
      } loc(#loc377)
    } loc(#loc374)
    cir.return loc(#loc221)
  } loc(#loc369)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc280)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc255)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc259)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc259)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc261)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc263)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc263)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc261)
      } loc(#loc384)
    } loc(#loc383)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc386)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc269)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc269)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc270)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc387)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc275)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc276)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc276)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc389)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc278)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc279)
        } loc(#loc390)
      } loc(#loc388)
    } loc(#loc385)
    cir.return loc(#loc252)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":192:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":192:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":165:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":165:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":62:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":62:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":246:1)
#loc22 = loc("/usr/include/string.h":247:33)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/include/stdio.h":903:1)
#loc26 = loc("/usr/include/stdio.h":904:3)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":149:28)
#loc28 = loc("/usr/include/stdio.h":897:1)
#loc29 = loc("/usr/include/stdio.h":897:36)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":59:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":155:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":61:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":61:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":63:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":63:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":64:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":145:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":64:8)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":65:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":66:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":144:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":71:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":71:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":72:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":72:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":73:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":73:19)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":74:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":74:35)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":75:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":75:35)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":76:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":76:41)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":76:30)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":76:37)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":77:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":129:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":78:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":128:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:39)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:48)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:61)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:32)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":87:72)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":88:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":91:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":88:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":88:37)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":89:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":90:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:24)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:34)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:37)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:51)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":92:52)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":93:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":93:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":94:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":94:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":95:42)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":95:36)
#loc88 = loc("/usr/include/netinet/in.h":250:15)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":95:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":95:50)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":99:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:26)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:58)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:59)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:68)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:82)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:21)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":96:88)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":97:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":98:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":100:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":103:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":100:28)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":100:42)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":100:21)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":100:61)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":101:17)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":102:21)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:39)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:53)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:59)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:32)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":104:63)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":105:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":108:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":105:21)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":105:37)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":106:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":107:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:35)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:58)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:65)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:63)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:49)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:72)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:75)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:86)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:91)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:97)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:107)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:108)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:111)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:30)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":110:112)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":114:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:21)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:35)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:48)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:51)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":111:65)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":112:17)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":113:21)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:61)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:22)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:32)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:45)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:56)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":116:57)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":118:27)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":118:34)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":118:40)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":118:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":118:44)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":119:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":122:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":119:21)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":120:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":121:32)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":121:22)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":121:21)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":123:27)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":123:34)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":123:40)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":123:17)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":123:44)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":124:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":127:17)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":124:21)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":125:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":126:32)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":126:22)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":126:21)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":129:20)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":130:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":133:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":130:17)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":130:33)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":131:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":132:30)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":132:17)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":134:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":137:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":134:17)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":134:33)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":135:13)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":136:30)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":136:17)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":146:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":154:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":147:9)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":147:15)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":149:22)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":149:16)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":149:9)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":149:31)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":150:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":153:9)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":150:13)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":150:21)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":151:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":152:20)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":152:13)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":210:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":214:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":212:5)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":212:14)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":213:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":213:14)
#loc214 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc215 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":170:19)
#loc217 = loc("/usr/include/string.h":149:1)
#loc218 = loc("/usr/include/string.h":150:14)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":175:22)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":162:1)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":186:1)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":164:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":164:12)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":166:12)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":166:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":167:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":176:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":167:8)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":168:5)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":171:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":173:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":170:9)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":175:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":175:16)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":177:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":185:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":178:9)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":178:15)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":180:22)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":180:28)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":180:16)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":180:9)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":180:31)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":181:9)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":184:9)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":181:13)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":181:21)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":182:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":183:20)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":183:13)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":189:1)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":208:1)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":191:5)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":191:12)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":193:12)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":193:5)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":194:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":198:5)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":194:8)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":195:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":197:9)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":197:16)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":197:22)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":199:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":207:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":200:9)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":200:15)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":202:22)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":202:28)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":202:16)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":202:9)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":202:31)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":203:9)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":206:9)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":203:13)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":203:21)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":204:9)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":205:20)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_02.c":205:13)
#loc280 = loc(fused[#loc1, #loc2])
#loc281 = loc(fused[#loc3, #loc4])
#loc282 = loc(fused[#loc5, #loc6])
#loc283 = loc(fused[#loc7, #loc8])
#loc284 = loc(fused[#loc9, #loc10])
#loc285 = loc(fused[#loc11, #loc12])
#loc286 = loc(fused[#loc13, #loc14])
#loc287 = loc(fused[#loc15, #loc16])
#loc288 = loc(fused[#loc17, #loc18])
#loc289 = loc(fused[#loc19, #loc20])
#loc290 = loc(fused[#loc21, #loc22])
#loc291 = loc(fused[#loc23, #loc24])
#loc292 = loc(fused[#loc25, #loc26])
#loc293 = loc(fused[#loc28, #loc29])
#loc294 = loc(fused[#loc30, #loc31])
#loc295 = loc(fused[#loc32, #loc33])
#loc296 = loc(fused[#loc35, #loc34])
#loc297 = loc(fused[#loc36, #loc37])
#loc298 = loc(fused[#loc39, #loc37])
#loc299 = loc(fused[#loc40, #loc41])
#loc300 = loc(fused[#loc42, #loc43])
#loc301 = loc(fused[#loc44, #loc45])
#loc302 = loc(fused[#loc46, #loc47])
#loc303 = loc(fused[#loc48, #loc49])
#loc304 = loc(fused[#loc50, #loc51])
#loc305 = loc(fused[#loc52, #loc53])
#loc306 = loc(fused[#loc56, #loc57])
#loc307 = loc(fused[#loc58, #loc59])
#loc308 = loc(fused[#loc64, #loc65])
#loc309 = loc(fused[#loc66, #loc67])
#loc310 = loc(fused[#loc68, #loc69])
#loc311 = loc(fused[#loc70, #loc67])
#loc312 = loc(fused[#loc72, #loc73])
#loc313 = loc(fused[#loc75, #loc76])
#loc314 = loc(fused[#loc77, #loc78])
#loc315 = loc(fused[#loc81, #loc79])
#loc316 = loc(fused[#loc85, #loc82])
#loc317 = loc(fused[#loc89, #loc90])
#loc318 = loc(fused[#loc91, #loc92])
#loc319 = loc(fused[#loc94, #loc95])
#loc320 = loc(fused[#loc96, #loc97])
#loc321 = loc(fused[#loc98, #loc99])
#loc322 = loc(fused[#loc100, #loc92])
#loc323 = loc(fused[#loc102, #loc103])
#loc324 = loc(fused[#loc106, #loc107])
#loc325 = loc(fused[#loc108, #loc103])
#loc326 = loc(fused[#loc114, #loc115])
#loc327 = loc(fused[#loc116, #loc117])
#loc328 = loc(fused[#loc118, #loc119])
#loc329 = loc(fused[#loc120, #loc117])
#loc330 = loc(fused[#loc126, #loc127])
#loc331 = loc(fused[#loc128, #loc129])
#loc332 = loc(fused[#loc130, #loc131])
#loc333 = loc(fused[#loc130, #loc132])
#loc334 = loc(fused[#loc128, #loc133])
#loc335 = loc(fused[#loc136, #loc137])
#loc336 = loc(fused[#loc138, #loc139])
#loc337 = loc(fused[#loc140, #loc141])
#loc338 = loc(fused[#loc143, #loc144])
#loc339 = loc(fused[#loc145, #loc139])
#loc340 = loc(fused[#loc151, #loc152])
#loc341 = loc(fused[#loc150, #loc152])
#loc342 = loc(fused[#loc149, #loc152])
#loc343 = loc(fused[#loc148, #loc147])
#loc344 = loc(fused[#loc157, #loc158])
#loc345 = loc(fused[#loc159, #loc160])
#loc346 = loc(fused[#loc162, #loc160])
#loc347 = loc(fused[#loc165, #loc163])
#loc348 = loc(fused[#loc169, #loc170])
#loc349 = loc(fused[#loc171, #loc172])
#loc350 = loc(fused[#loc174, #loc172])
#loc351 = loc(fused[#loc177, #loc175])
#loc352 = loc(fused[#loc179, #loc180])
#loc353 = loc(fused[#loc181, #loc182])
#loc354 = loc(fused[#loc183, #loc180])
#loc355 = loc(fused[#loc186, #loc187])
#loc356 = loc(fused[#loc188, #loc189])
#loc357 = loc(fused[#loc190, #loc187])
#loc358 = loc(fused[#loc193, #loc194])
#loc359 = loc(fused[#loc195, #loc196])
#loc360 = loc(fused[#loc199, #loc200])
#loc361 = loc(fused[#loc201, #loc202])
#loc362 = loc(fused[#loc203, #loc204])
#loc363 = loc(fused[#loc205, #loc202])
#loc364 = loc(fused[#loc208, #loc209])
#loc365 = loc(fused[#loc210, #loc211])
#loc366 = loc(fused[#loc212, #loc213])
#loc367 = loc(fused[#loc214, #loc215])
#loc368 = loc(fused[#loc217, #loc218])
#loc369 = loc(fused[#loc220, #loc221])
#loc370 = loc(fused[#loc222, #loc223])
#loc371 = loc(fused[#loc225, #loc224])
#loc372 = loc(fused[#loc226, #loc227])
#loc373 = loc(fused[#loc229, #loc230, #loc231, #loc227])
#loc374 = loc(fused[#loc235, #loc236])
#loc375 = loc(fused[#loc237, #loc238])
#loc376 = loc(fused[#loc242, #loc243])
#loc377 = loc(fused[#loc244, #loc245])
#loc378 = loc(fused[#loc246, #loc247])
#loc379 = loc(fused[#loc248, #loc245])
#loc380 = loc(fused[#loc251, #loc252])
#loc381 = loc(fused[#loc253, #loc254])
#loc382 = loc(fused[#loc256, #loc255])
#loc383 = loc(fused[#loc257, #loc258])
#loc384 = loc(fused[#loc260, #loc258])
#loc385 = loc(fused[#loc264, #loc265])
#loc386 = loc(fused[#loc266, #loc267])
#loc387 = loc(fused[#loc271, #loc272])
#loc388 = loc(fused[#loc273, #loc274])
#loc389 = loc(fused[#loc275, #loc276])
#loc390 = loc(fused[#loc277, #loc274])
