!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":24:21)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":24:28)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":47:25)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":47:32)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":64:25)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":64:32)
#loc79 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc30, #loc31])
#loc95 = loc(fused[#loc52, #loc53])
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc77)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!s8i>, %2 : !s32i), !cir.ptr<!s8i> loc(#loc10)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc8)
    cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc11)
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc20)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc20)
    cir.return loc(#loc13)
  } loc(#loc80)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc84)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc30, #loc31])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc88)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!s8i>, %2 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc36)
    cir.return loc(#loc29)
  } loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc43)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc91)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc37)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc45)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc45)
    cir.return loc(#loc39)
  } loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc49)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
      %4 = cir.cmp(ne, %1, %3) : !cir.ptr<!s8i>, !cir.bool loc(#loc97)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s8i>, %6 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc62)
        cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc65)
      } else {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc49)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } loc(#loc98)
    } loc(#loc96)
    cir.return loc(#loc51)
  } loc(#loc94)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc72)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc101)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc75)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc75)
    cir.return loc(#loc68)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_44.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":24:1)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":29:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":25:1)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":28:22)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":28:27)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":28:28)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":28:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":31:1)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":40:1)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":33:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":33:12)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":35:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":35:32)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":37:12)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":37:5)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":39:5)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":39:13)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":87:1)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":91:1)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":89:5)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":89:13)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":90:5)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":90:13)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":47:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":52:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":48:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":51:22)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":51:27)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":51:28)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":51:5)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":59:12)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":54:1)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":61:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":56:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":56:12)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":57:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":57:32)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":59:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":60:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":60:13)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":74:19)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":64:1)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":76:1)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":65:1)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":67:5)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":75:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":67:9)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":67:17)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":68:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":71:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":73:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":70:26)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":70:31)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":70:32)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":70:9)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":74:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":78:1)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":85:1)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":80:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":80:12)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":81:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":81:32)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":83:12)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":83:5)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":84:5)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_44.c":84:13)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc12, #loc13])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc16, #loc17])
#loc83 = loc(fused[#loc19, #loc18])
#loc84 = loc(fused[#loc22, #loc23])
#loc85 = loc(fused[#loc24, #loc25])
#loc86 = loc(fused[#loc26, #loc27])
#loc87 = loc(fused[#loc28, #loc29])
#loc89 = loc(fused[#loc38, #loc39])
#loc90 = loc(fused[#loc40, #loc41])
#loc91 = loc(fused[#loc42, #loc43])
#loc92 = loc(fused[#loc44, #loc37])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc55, #loc56])
#loc97 = loc(fused[#loc57, #loc58])
#loc98 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc99 = loc(fused[#loc67, #loc68])
#loc100 = loc(fused[#loc69, #loc70])
#loc101 = loc(fused[#loc71, #loc72])
#loc102 = loc(fused[#loc74, #loc73])
