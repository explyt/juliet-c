!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":32:7)
#loc26 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":42:7)
#loc46 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":48:7)
#loc81 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":84:10)
#loc82 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":84:14)
#loc83 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":84:20)
#loc84 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":84:32)
#loc99 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":23:7)
#loc129 = loc(fused[#loc81, #loc82])
#loc130 = loc(fused[#loc83, #loc84])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base = !cir.struct<class "CWE191_Integer_Underflow__short_rand_multiply_82::CWE191_Integer_Underflow__short_rand_multiply_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad = !cir.struct<class "CWE191_Integer_Underflow__short_rand_multiply_82::CWE191_Integer_Underflow__short_rand_multiply_82_bad" {!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base} #cir.record.decl.ast>
!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G = !cir.struct<class "CWE191_Integer_Underflow__short_rand_multiply_82::CWE191_Integer_Underflow__short_rand_multiply_82_goodB2G" {!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base} #cir.record.decl.ast>
!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B = !cir.struct<class "CWE191_Integer_Underflow__short_rand_multiply_82::CWE191_Integer_Underflow__short_rand_multiply_82_goodG2B" {!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc100)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc101)
  cir.func linkonce_odr @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8252CWE191_Integer_Underflow__short_rand_multiply_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad> loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":32:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad> loc(#loc5)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc5)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>) -> () extra(#fn_attr) loc(#loc5)
    %3 = cir.vtable.address_point(@_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8252CWE191_Integer_Underflow__short_rand_multiply_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc102)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc5)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc103)
  cir.func @_ZN48CWE191_Integer_Underflow__short_rand_multiply_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc16)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc107)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc18)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc18)
    %8 = cir.ternary(%7, true {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc18)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc18)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc18)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc18)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc18)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc18)
      cir.yield %34 : !u32i loc(#loc18)
    }, false {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc18)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc18)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc18)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc18)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc18)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc18)
      %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc18)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc18)
      %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc18)
      cir.yield %38 : !u32i loc(#loc18)
    }) : (!cir.bool) -> !u32i loc(#loc18)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc18)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc108)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc109)
    %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc106)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad> loc(#loc109)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8252CWE191_Integer_Underflow__short_rand_multiply_82_badC2Ev(%13) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad>) -> () extra(#fn_attr) loc(#loc15)
    %14 = cir.base_class_addr(%13 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc20)
    cir.store %14, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>> loc(#loc106)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc21)
    %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc22)
    %17 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>> loc(#loc21)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc21)
    %19 = cir.vtable.address_point( %18 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc21)
    %20 = cir.load align(8) %19 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>> loc(#loc21)
    cir.call %20(%15, %16) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i) -> () loc(#loc23)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc24)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!void> loc(#loc24)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc11)
  } loc(#loc104)
  cir.func linkonce_odr @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B> loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":42:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>> loc(#loc26)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B> loc(#loc26)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc26)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>) -> () extra(#fn_attr) loc(#loc26)
    %3 = cir.vtable.address_point(@_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc110)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc26)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc26)
    cir.return loc(#loc26)
  } loc(#loc26)
  cir.func internal private @_ZN48CWE191_Integer_Underflow__short_rand_multiply_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc35)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc114)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc38)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc38)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc115)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc116)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc113)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B> loc(#loc116)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodG2BC2Ev(%9) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B>) -> () extra(#fn_attr) loc(#loc34)
    %10 = cir.base_class_addr(%9 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc40)
    cir.store %10, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>> loc(#loc113)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc41)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc42)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>> loc(#loc41)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc41)
    %15 = cir.vtable.address_point( %14 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc41)
    %16 = cir.load align(8) %15 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>> loc(#loc41)
    cir.call %16(%11, %12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i) -> () loc(#loc43)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc44)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!void> loc(#loc44)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    cir.return loc(#loc30)
  } loc(#loc111)
  cir.func linkonce_odr @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodB2GC2Ev(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G> loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":48:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc46)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>> loc(#loc46)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G> loc(#loc46)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc46)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>) -> () extra(#fn_attr) loc(#loc46)
    %3 = cir.vtable.address_point(@_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodB2GE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc117)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc46)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc46)
    cir.return loc(#loc46)
  } loc(#loc46)
  cir.func internal private @_ZN48CWE191_Integer_Underflow__short_rand_multiply_82L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc55)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc121)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc57)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc57)
    %8 = cir.ternary(%7, true {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc57)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc57)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc57)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc57)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc57)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc57)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc57)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc57)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc57)
      cir.yield %34 : !u32i loc(#loc57)
    }, false {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc57)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc57)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc57)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc57)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc57)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc57)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc57)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc57)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc57)
      %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc57)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc57)
      %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc57)
      cir.yield %38 : !u32i loc(#loc57)
    }) : (!cir.bool) -> !u32i loc(#loc57)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc57)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc57)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc122)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc123)
    %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G> loc(#loc123)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodB2GC2Ev(%13) : (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G>) -> () extra(#fn_attr) loc(#loc54)
    %14 = cir.base_class_addr(%13 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc59)
    cir.store %14, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>> loc(#loc120)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc60)
    %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc61)
    %17 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>> loc(#loc60)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc60)
    %19 = cir.vtable.address_point( %18 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>> loc(#loc60)
    %20 = cir.load align(8) %19 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>> loc(#loc60)
    cir.call %20(%15, %16) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i)>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !s16i) -> () loc(#loc62)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc63)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!void> loc(#loc63)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    cir.return loc(#loc50)
  } loc(#loc118)
  cir.func @_ZN48CWE191_Integer_Underflow__short_rand_multiply_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_82L7goodG2BEv() : () -> () loc(#loc67)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_82L7goodB2GEv() : () -> () loc(#loc68)
    cir.return loc(#loc66)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc125)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_824goodEv() : () -> () loc(#loc90)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.call @_ZN48CWE191_Integer_Underflow__short_rand_multiply_823badEv() : () -> () loc(#loc93)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %15 : !s32i loc(#loc131)
  } loc(#loc128)
  cir.global linkonce_odr dsolocal @_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc132)
  cir.func linkonce_odr @_ZN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":23:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>> loc(#loc99)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>>, !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base> loc(#loc99)
    %2 = cir.vtable.address_point(@_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc132)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE191_Integer_Underflow__short_rand_multiply_823A3ACWE191_Integer_Underflow__short_rand_multiply_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc99)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc99)
    cir.return loc(#loc99)
  } loc(#loc99)
  cir.global "private" external @_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8252CWE191_Integer_Underflow__short_rand_multiply_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc102)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc97)
  cir.global linkonce_odr comdat @_ZTSN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE = #cir.const_array<"N48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE" : !cir.array<!s8i x 107>> : !cir.array<!s8i x 107> {alignment = 1 : i64} loc(#loc97)
  cir.global constant external @_ZTIN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN48CWE191_Integer_Underflow__short_rand_multiply_8253CWE191_Integer_Underflow__short_rand_multiply_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc97)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc110)
  cir.global "private" external @_ZTVN48CWE191_Integer_Underflow__short_rand_multiply_8256CWE191_Integer_Underflow__short_rand_multiply_82_goodB2GE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc117)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc6 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":32:1)
#loc7 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":36:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc10 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":26:1)
#loc11 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":35:1)
#loc12 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":28:5)
#loc13 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":28:11)
#loc14 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":32:5)
#loc15 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":32:77)
#loc16 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":29:12)
#loc17 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":29:5)
#loc18 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":31:19)
#loc19 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":31:5)
#loc20 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":32:73)
#loc21 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":33:5)
#loc22 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":33:24)
#loc23 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":33:17)
#loc24 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":34:12)
#loc25 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":26:6)
#loc27 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":42:1)
#loc28 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":46:1)
#loc29 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":42:1)
#loc30 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":51:1)
#loc31 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":44:5)
#loc32 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":44:11)
#loc33 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":48:5)
#loc34 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":48:77)
#loc35 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":45:12)
#loc36 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":45:5)
#loc37 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":47:13)
#loc38 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":47:12)
#loc39 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":47:5)
#loc40 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":48:73)
#loc41 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":49:5)
#loc42 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":49:24)
#loc43 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":49:17)
#loc44 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":50:12)
#loc45 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":42:13)
#loc47 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":48:1)
#loc48 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":52:1)
#loc49 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":54:1)
#loc50 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":63:1)
#loc51 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":56:5)
#loc52 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":56:11)
#loc53 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":60:5)
#loc54 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":60:77)
#loc55 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":57:12)
#loc56 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":57:5)
#loc57 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":59:19)
#loc58 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":59:5)
#loc59 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":60:73)
#loc60 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":61:5)
#loc61 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":61:24)
#loc62 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":61:17)
#loc63 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":62:12)
#loc64 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":54:13)
#loc65 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":65:1)
#loc66 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":69:1)
#loc67 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":67:5)
#loc68 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":68:5)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":89:15)
#loc76 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":91:15)
#loc77 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":94:15)
#loc78 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":96:15)
#loc79 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":84:1)
#loc80 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":99:1)
#loc85 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":85:1)
#loc86 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":87:27)
#loc87 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":87:22)
#loc88 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":87:5)
#loc89 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":89:5)
#loc90 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":90:5)
#loc91 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":91:5)
#loc92 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":94:5)
#loc93 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":95:5)
#loc94 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":96:5)
#loc95 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":98:12)
#loc96 = loc("CWE191_Integer_Underflow__short_rand_multiply_82a.cpp":98:5)
#loc97 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":23:1)
#loc98 = loc("./CWE191_Integer_Underflow__short_rand_multiply_82.h":28:1)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc103 = loc(fused[#loc8, #loc9])
#loc104 = loc(fused[#loc10, #loc11])
#loc105 = loc(fused[#loc12, #loc13])
#loc106 = loc(fused[#loc14, #loc15])
#loc107 = loc(fused[#loc17, #loc16])
#loc108 = loc(fused[#loc19, #loc18])
#loc109 = loc(fused[#loc20, #loc15])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc31, #loc32])
#loc113 = loc(fused[#loc33, #loc34])
#loc114 = loc(fused[#loc36, #loc35])
#loc115 = loc(fused[#loc39, #loc37])
#loc116 = loc(fused[#loc40, #loc34])
#loc117 = loc(fused[#loc47, #loc48])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc56, #loc55])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc59, #loc54])
#loc124 = loc(fused[#loc65, #loc66])
#loc125 = loc(fused[#loc69, #loc70])
#loc126 = loc(fused[#loc71, #loc72])
#loc127 = loc(fused[#loc73, #loc74])
#loc128 = loc(fused[#loc79, #loc80])
#loc131 = loc(fused[#loc96, #loc95])
#loc132 = loc(fused[#loc97, #loc98])
