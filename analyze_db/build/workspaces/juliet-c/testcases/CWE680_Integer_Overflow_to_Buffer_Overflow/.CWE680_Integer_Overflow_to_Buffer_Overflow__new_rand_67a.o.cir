!s32i = !cir.int<s, 32>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":22:16)
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType = !cir.record<struct "CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67::_structType" {!s32i}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc43)
  cir.func private @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_677badSinkENS_11_structTypeE(!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType) loc(#loc44)
  cir.func linkonce_odr @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_6711_structTypeC2ERKS0_(%arg0: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":22:16), %arg1: !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":22:16)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>>, ["", init, const] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>> loc(#loc5)
    cir.store %arg1, %1 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>> loc(#loc5)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> loc(#loc5)
    %3 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc6)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> loc(#loc5)
    %5 = cir.get_member %4[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc6)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc5)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc47)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, ["myStruct"] {alignment = 4 : i64} loc(#loc48)
    %2 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, ["agg.tmp0"] {alignment = 4 : i64} loc(#loc14)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc18)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc18)
    %9 = cir.ternary(%8, true {
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc18)
      %16 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc18)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc18)
      %20 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc18)
      %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc18)
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc18)
      cir.yield %25 : !u32i loc(#loc18)
    }, false {
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc18)
      %16 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc18)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc18)
      %20 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc18)
      %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc18)
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc18)
      %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc18)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc18)
      %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc18)
      cir.yield %29 : !u32i loc(#loc18)
    }) : (!cir.bool) -> !u32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !u32i), !s32i loc(#loc18)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %12 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc6)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.call @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_6711_structTypeC2ERKS0_(%2, %1) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>) -> () extra(#fn_attr) loc(#loc14)
    %13 = cir.load %2 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType loc(#loc22)
    cir.call @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_677badSinkENS_11_structTypeE(%13) : (!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType) -> () loc(#loc22)
    cir.return loc(#loc9)
  } loc(#loc46)
  cir.func private @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_6711goodG2BSinkENS_11_structTypeE(!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType) loc(#loc52)
  cir.func internal private @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc54)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, ["myStruct"] {alignment = 4 : i64} loc(#loc55)
    %2 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, ["agg.tmp0"] {alignment = 4 : i64} loc(#loc31)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc33)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc35)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %7 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc6)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.call @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_6711_structTypeC2ERKS0_(%2, %1) : (!cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>) -> () extra(#fn_attr) loc(#loc31)
    %8 = cir.load %2 : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType>, !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType loc(#loc39)
    cir.call @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_6711goodG2BSinkENS_11_structTypeE(%8) : (!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_673A3A_structType) -> () loc(#loc39)
    cir.return loc(#loc26)
  } loc(#loc53)
  cir.func @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_674goodEv() extra(#fn_attr2) {
    cir.call @_ZN55CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67L7goodG2BEv() : () -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":30:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":30:33)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":24:9)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":24:5)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":32:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":42:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":34:5)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":34:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":35:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":35:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":41:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":37:13)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":37:12)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":37:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":39:12)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":39:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":40:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":40:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":41:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":49:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":49:37)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":51:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":61:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":53:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":53:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":54:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":54:16)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":60:17)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":56:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":56:12)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":56:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":58:12)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":58:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":59:28)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":59:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":60:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":63:1)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":66:1)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_rand_67a.cpp":65:5)
#loc43 = loc(fused[#loc1, #loc2])
#loc44 = loc(fused[#loc3, #loc4])
#loc45 = loc(fused[#loc7, #loc6])
#loc46 = loc(fused[#loc8, #loc9])
#loc47 = loc(fused[#loc10, #loc11])
#loc48 = loc(fused[#loc12, #loc13])
#loc49 = loc(fused[#loc17, #loc15])
#loc50 = loc(fused[#loc19, #loc18])
#loc51 = loc(fused[#loc21, #loc20])
#loc52 = loc(fused[#loc23, #loc24])
#loc53 = loc(fused[#loc25, #loc26])
#loc54 = loc(fused[#loc27, #loc28])
#loc55 = loc(fused[#loc29, #loc30])
#loc56 = loc(fused[#loc34, #loc32])
#loc57 = loc(fused[#loc36, #loc35])
#loc58 = loc(fused[#loc38, #loc37])
#loc59 = loc(fused[#loc40, #loc41])
