!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ofstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc263)
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc264)
  cir.global "private" constant cir_private @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_033badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc265)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc266)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc268)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc270)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc271)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc272)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc273)
  cir.func private @close(!s32i) -> !s32i loc(#loc274)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc275)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc276)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc277)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc278)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc265)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_033badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc265)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc265)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc41)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc42)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc283)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc286)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc287)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc288)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc289)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc290)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc291)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc53)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc289)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc55)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc290)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc291)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %21 = cir.const #cir.int<1> : !u32i loc(#loc65)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc65)
                %23 = cir.const #cir.int<6> : !u32i loc(#loc66)
                %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc66)
                %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
                cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc294)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc73)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc73)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc296)
                  cir.if %81 {
                    cir.break loc(#loc75)
                  } loc(#loc297)
                } loc(#loc295)
                %26 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc298)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc78)
                %28 = cir.const #cir.int<16> : !u64i loc(#loc299)
                cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
                %29 = cir.const #cir.int<2> : !s32i loc(#loc83)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc83)
                %31 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc301)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc86)
                %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc86)
                %34 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
                %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
                cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc302)
                %36 = cir.const #cir.int<27015> : !s32i loc(#loc90)
                %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc90)
                %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc91)
                %39 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
                cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc303)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %79 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc305)
                  %80 = cir.const #cir.int<16> : !u64i loc(#loc306)
                  %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc306)
                  %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc102)
                  %83 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc103)
                  %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc307)
                  cir.if %85 {
                    cir.break loc(#loc105)
                  } loc(#loc308)
                } loc(#loc304)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %79 = cir.const #cir.int<5> : !s32i loc(#loc109)
                  %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc110)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc111)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc111)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc310)
                  cir.if %83 {
                    cir.break loc(#loc113)
                  } loc(#loc311)
                } loc(#loc309)
                %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc115)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc116)
                %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc117)
                cir.store %43, %11 : !s32i, !cir.ptr<!s32i> loc(#loc312)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc123)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc123)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc314)
                  cir.if %81 {
                    cir.break loc(#loc125)
                  } loc(#loc315)
                } loc(#loc313)
                %44 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
                %46 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc128)
                %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc129)
                %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc316)
                %49 = cir.const #cir.int<1> : !u64i loc(#loc317)
                %50 = cir.const #cir.int<4096> : !s32i loc(#loc134)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc134)
                %52 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc135)
                %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc318)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc136)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc136)
                %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc319)
                %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc320)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
                %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc139)
                cir.store %60, %7 : !s32i, !cir.ptr<!s32i> loc(#loc321)
                cir.scope {
                  %78 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc145)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc145)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc323)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc146)
                    cir.yield %83 : !cir.bool loc(#loc146)
                  }, false {
                    %83 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                    %84 = cir.const #cir.int<0> : !s32i loc(#loc148)
                    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc324)
                    %86 = cir.ternary(%85, true {
                      %87 = cir.const #true loc(#loc146)
                      cir.yield %87 : !cir.bool loc(#loc146)
                    }, false {
                      %87 = cir.const #false loc(#loc146)
                      cir.yield %87 : !cir.bool loc(#loc146)
                    }) : (!cir.bool) -> !cir.bool loc(#loc146)
                    cir.yield %86 : !cir.bool loc(#loc146)
                  }) : (!cir.bool) -> !cir.bool loc(#loc146)
                  cir.if %82 {
                    cir.break loc(#loc150)
                  } loc(#loc325)
                } loc(#loc322)
                %61 = cir.const #cir.int<0> : !s8i loc(#loc151)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                %63 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc153)
                %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc154)
                %66 = cir.const #cir.int<1> : !u64i loc(#loc326)
                %67 = cir.binop(div, %65, %66) : !u64i loc(#loc327)
                %68 = cir.binop(add, %63, %67) : !u64i loc(#loc328)
                %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc157)
                cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc329)
                %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                %71 = cir.const #cir.int<13> : !s8i loc(#loc159)
                %72 = cir.cast(integral, %71 : !s8i), !s32i loc(#loc159)
                %73 = cir.call @strchr(%70, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc160)
                cir.store %73, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc330)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc167)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc333)
                  } loc(#loc332)
                } loc(#loc331)
                %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                %75 = cir.const #cir.int<10> : !s8i loc(#loc171)
                %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc171)
                %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc172)
                cir.store %77, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc179)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc337)
                  } loc(#loc336)
                } loc(#loc335)
              } loc(#loc293)
              cir.yield loc(#loc61)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc182)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc182)
              cir.condition(%21) loc(#loc182)
            } loc(#loc292)
          } loc(#loc292)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc186)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc339)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc189)
            } loc(#loc340)
          } loc(#loc338)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc193)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc193)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc342)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc196)
            } loc(#loc343)
          } loc(#loc341)
        } loc(#loc285)
      } loc(#loc284)
    } loc(#loc282)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc345)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc200)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc346)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc205)
        } loc(#loc205)
        cir.yield loc(#loc204)
      } catch [#cir.unwind {
        cir.resume loc(#loc204)
      }] loc(#loc204)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc206)
        } loc(#loc206)
        cir.yield loc(#loc204)
      } catch [#cir.unwind {
        cir.resume loc(#loc204)
      }] loc(#loc204)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
    } loc(#loc344)
    cir.return loc(#loc34)
  } loc(#loc279)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc209)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc212)
  cir.func internal private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc350)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc264)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc264)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc264)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc217)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc351)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc221)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc222)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc353)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc209)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc209)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc226)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc227)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc212)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc212)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc227)
      } loc(#loc354)
    } loc(#loc352)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc356)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc232)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc346)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc235)
        } loc(#loc235)
        cir.yield loc(#loc234)
      } catch [#cir.unwind {
        cir.resume loc(#loc234)
      }] loc(#loc234)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc236)
        } loc(#loc236)
        cir.yield loc(#loc234)
      } catch [#cir.unwind {
        cir.resume loc(#loc234)
      }] loc(#loc234)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
    } loc(#loc355)
    cir.return loc(#loc214)
  } loc(#loc349)
  cir.func internal private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc358)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc263)
    %2 = cir.get_global @__const._ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc263)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc263)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc241)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc359)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc245)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc246)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc361)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc248)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc250)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc250)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc248)
      } loc(#loc362)
    } loc(#loc360)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc364)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc254)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc255)
      %6 = cir.const #cir.int<16> : !s32i loc(#loc346)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc257)
        } loc(#loc257)
        cir.yield loc(#loc256)
      } catch [#cir.unwind {
        cir.resume loc(#loc256)
      }] loc(#loc256)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
          cir.yield loc(#loc258)
        } loc(#loc258)
        cir.yield loc(#loc256)
      } catch [#cir.unwind {
        cir.resume loc(#loc256)
      }] loc(#loc256)
      cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc278)
    } loc(#loc363)
    cir.return loc(#loc238)
  } loc(#loc357)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B1Ev() : () -> () loc(#loc261)
    cir.call @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03L8goodG2B2Ev() : () -> () loc(#loc262)
    cir.return loc(#loc260)
  } loc(#loc365)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":182:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":182:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":158:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":158:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":58:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":58:37)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":226:1)
#loc22 = loc("/usr/include/string.h":227:50)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":786:7)
#loc26 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":787:34)
#loc27 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":927:7)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":936:7)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":999:7)
#loc30 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":1004:7)
#loc31 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":869:7)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":870:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":55:1)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":148:1)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":57:5)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":57:12)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":59:12)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":59:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":60:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":141:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":60:8)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":60:11)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":61:5)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":62:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":140:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":67:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":67:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":68:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":68:32)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":69:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":69:19)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":70:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":70:35)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":71:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":71:35)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":72:13)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":72:41)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":72:30)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":72:37)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":73:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":125:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":74:13)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":124:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:39)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:48)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:61)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:32)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":83:72)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":84:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":87:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":84:21)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":84:37)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":85:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":86:21)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:24)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:25)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:34)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:37)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:51)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:17)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":88:52)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":89:38)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":89:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":90:43)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":90:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":91:42)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":91:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":91:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":91:50)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:17)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":95:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:26)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:58)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:59)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:68)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:82)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":92:88)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":93:17)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":94:21)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":96:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":99:17)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":96:28)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":96:42)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":96:21)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":96:61)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":97:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":98:21)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:39)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:53)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:59)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:32)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":100:63)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":101:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":104:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":101:21)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":101:37)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":102:17)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":103:21)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:35)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:58)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:65)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:63)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:49)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:72)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:75)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:86)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:91)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:106)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:116)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:117)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:120)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:30)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":106:121)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":110:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:21)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:35)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:48)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:51)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":107:65)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":108:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":109:21)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:61)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:22)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:32)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:45)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:56)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":112:57)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":114:34)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":114:40)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":114:27)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":114:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":114:44)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":115:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":118:17)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":115:21)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":116:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":117:32)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":117:22)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":117:21)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":119:34)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":119:40)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":119:27)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":119:17)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":119:44)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":120:17)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":123:17)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":120:21)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":121:17)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":122:32)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":122:22)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":122:21)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":125:20)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":126:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":129:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":126:17)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":126:33)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":127:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":128:30)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":128:17)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":130:13)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":133:13)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":130:17)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":130:33)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":131:13)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":132:30)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":132:17)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":142:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":147:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":143:9)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":143:18)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":145:33)
#loc202 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:57)
#loc203 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":928:67)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":55:6)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":145:20)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":146:20)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc208 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":163:19)
#loc210 = loc("/usr/include/string.h":149:1)
#loc211 = loc("/usr/include/string.h":150:14)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":168:22)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":155:1)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":176:1)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":157:5)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":157:12)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":159:12)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":159:5)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":160:5)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":169:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":160:8)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":160:11)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":161:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":164:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":166:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":163:9)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":168:9)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":168:16)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":170:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":175:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":171:9)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":171:18)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":173:33)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":155:13)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":173:20)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":174:20)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":179:1)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":195:1)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":181:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":181:12)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":183:12)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":183:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":184:5)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":188:5)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":184:8)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":184:11)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":185:5)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":187:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":187:16)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":187:22)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":189:5)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":194:5)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":190:9)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":190:18)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":192:33)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":179:13)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":192:20)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":193:20)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":197:1)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":201:1)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":199:5)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ofstream_03.cpp":200:5)
#loc263 = loc(fused[#loc1, #loc2])
#loc264 = loc(fused[#loc3, #loc4])
#loc265 = loc(fused[#loc5, #loc6])
#loc266 = loc(fused[#loc7, #loc8])
#loc267 = loc(fused[#loc9, #loc10])
#loc268 = loc(fused[#loc11, #loc12])
#loc269 = loc(fused[#loc13, #loc14])
#loc270 = loc(fused[#loc15, #loc16])
#loc271 = loc(fused[#loc17, #loc18])
#loc272 = loc(fused[#loc19, #loc20])
#loc273 = loc(fused[#loc21, #loc22])
#loc274 = loc(fused[#loc23, #loc24])
#loc275 = loc(fused[#loc25, #loc26])
#loc276 = loc(fused[#loc27, #loc28])
#loc277 = loc(fused[#loc29, #loc30])
#loc278 = loc(fused[#loc31, #loc32])
#loc279 = loc(fused[#loc33, #loc34])
#loc280 = loc(fused[#loc35, #loc36])
#loc281 = loc(fused[#loc38, #loc37])
#loc282 = loc(fused[#loc39, #loc40])
#loc283 = loc(fused[#loc41, #loc42])
#loc284 = loc(fused[#loc43, #loc40])
#loc285 = loc(fused[#loc44, #loc45])
#loc286 = loc(fused[#loc46, #loc47])
#loc287 = loc(fused[#loc48, #loc49])
#loc288 = loc(fused[#loc50, #loc51])
#loc289 = loc(fused[#loc52, #loc53])
#loc290 = loc(fused[#loc54, #loc55])
#loc291 = loc(fused[#loc56, #loc57])
#loc292 = loc(fused[#loc60, #loc61])
#loc293 = loc(fused[#loc62, #loc63])
#loc294 = loc(fused[#loc68, #loc69])
#loc295 = loc(fused[#loc70, #loc71])
#loc296 = loc(fused[#loc72, #loc73])
#loc297 = loc(fused[#loc74, #loc71])
#loc298 = loc(fused[#loc76, #loc77])
#loc299 = loc(fused[#loc79, #loc80])
#loc300 = loc(fused[#loc81, #loc82])
#loc301 = loc(fused[#loc85, #loc83])
#loc302 = loc(fused[#loc89, #loc86])
#loc303 = loc(fused[#loc93, #loc94])
#loc304 = loc(fused[#loc95, #loc96])
#loc305 = loc(fused[#loc98, #loc99])
#loc306 = loc(fused[#loc100, #loc101])
#loc307 = loc(fused[#loc102, #loc103])
#loc308 = loc(fused[#loc104, #loc96])
#loc309 = loc(fused[#loc106, #loc107])
#loc310 = loc(fused[#loc110, #loc111])
#loc311 = loc(fused[#loc112, #loc107])
#loc312 = loc(fused[#loc118, #loc119])
#loc313 = loc(fused[#loc120, #loc121])
#loc314 = loc(fused[#loc122, #loc123])
#loc315 = loc(fused[#loc124, #loc121])
#loc316 = loc(fused[#loc130, #loc131])
#loc317 = loc(fused[#loc132, #loc133])
#loc318 = loc(fused[#loc134, #loc135])
#loc319 = loc(fused[#loc134, #loc136])
#loc320 = loc(fused[#loc132, #loc137])
#loc321 = loc(fused[#loc140, #loc141])
#loc322 = loc(fused[#loc142, #loc143])
#loc323 = loc(fused[#loc144, #loc145])
#loc324 = loc(fused[#loc147, #loc148])
#loc325 = loc(fused[#loc149, #loc143])
#loc326 = loc(fused[#loc155, #loc156])
#loc327 = loc(fused[#loc154, #loc156])
#loc328 = loc(fused[#loc153, #loc156])
#loc329 = loc(fused[#loc152, #loc151])
#loc330 = loc(fused[#loc161, #loc162])
#loc331 = loc(fused[#loc163, #loc164])
#loc332 = loc(fused[#loc166, #loc164])
#loc333 = loc(fused[#loc169, #loc167])
#loc334 = loc(fused[#loc173, #loc174])
#loc335 = loc(fused[#loc175, #loc176])
#loc336 = loc(fused[#loc178, #loc176])
#loc337 = loc(fused[#loc181, #loc179])
#loc338 = loc(fused[#loc183, #loc184])
#loc339 = loc(fused[#loc185, #loc186])
#loc340 = loc(fused[#loc187, #loc184])
#loc341 = loc(fused[#loc190, #loc191])
#loc342 = loc(fused[#loc192, #loc193])
#loc343 = loc(fused[#loc194, #loc191])
#loc344 = loc(fused[#loc197, #loc198])
#loc345 = loc(fused[#loc199, #loc200])
#loc346 = loc(fused[#loc202, #loc203])
#loc347 = loc(fused[#loc207, #loc208])
#loc348 = loc(fused[#loc210, #loc211])
#loc349 = loc(fused[#loc213, #loc214])
#loc350 = loc(fused[#loc215, #loc216])
#loc351 = loc(fused[#loc218, #loc217])
#loc352 = loc(fused[#loc219, #loc220])
#loc353 = loc(fused[#loc221, #loc222])
#loc354 = loc(fused[#loc223, #loc224, #loc225, #loc220])
#loc355 = loc(fused[#loc229, #loc230])
#loc356 = loc(fused[#loc231, #loc232])
#loc357 = loc(fused[#loc237, #loc238])
#loc358 = loc(fused[#loc239, #loc240])
#loc359 = loc(fused[#loc242, #loc241])
#loc360 = loc(fused[#loc243, #loc244])
#loc361 = loc(fused[#loc245, #loc246])
#loc362 = loc(fused[#loc247, #loc244])
#loc363 = loc(fused[#loc251, #loc252])
#loc364 = loc(fused[#loc253, #loc254])
#loc365 = loc(fused[#loc259, #loc260])
