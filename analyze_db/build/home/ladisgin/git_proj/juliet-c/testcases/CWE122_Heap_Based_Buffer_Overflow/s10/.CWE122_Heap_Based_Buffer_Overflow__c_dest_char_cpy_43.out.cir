!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":26:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":26:31)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":55:27)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":55:35)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":98:10)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":98:14)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":98:20)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":98:32)
#loc145 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc64, #loc65])
#loc185 = loc(fused[#loc126, #loc127])
#loc186 = loc(fused[#loc128, #loc129])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc143)
  cir.func internal private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc145)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc147)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s8i loc(#loc24)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %16, %20 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.return loc(#loc6)
  } loc(#loc144)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L9badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc42)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %5 = cir.const #cir.int<67> : !s8i loc(#loc46)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc46)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc47)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %11 = cir.const #cir.int<0> : !s8i loc(#loc51)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc55)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb2 loc(#loc44)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc35)
  } loc(#loc157)
  cir.func internal private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc165)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc68)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc167)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc80)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb3 loc(#loc74)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s8i loc(#loc81)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %16, %20 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    cir.return loc(#loc63)
  } loc(#loc164)
  cir.func internal private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc91)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L13goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc93)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %5 = cir.const #cir.int<67> : !s8i loc(#loc97)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc97)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc98)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %11 = cir.const #cir.int<0> : !s8i loc(#loc102)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc103)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc86)
  } loc(#loc174)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43L7goodG2BEv() : () -> () loc(#loc115)
    cir.return loc(#loc114)
  } loc(#loc181)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc182)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc123)
  cir.func @main(%arg0: !s32i loc(fused[#loc126, #loc127]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc128, #loc129])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc125)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc130)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc131)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc132)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc132)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc133)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc120)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_434goodEv() : () -> () loc(#loc135)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc121)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc122)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_433badEv() : () -> () loc(#loc138)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc123)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc140)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %15 : !s32i loc(#loc187)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":32:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":30:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":31:15)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":31:10)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":31:11)
#loc28 = loc("/usr/include/string.h":141:1)
#loc29 = loc("/usr/include/string.h":142:14)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":34:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":48:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":40:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":40:24)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":36:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":36:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":37:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":37:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":38:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":39:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":47:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:16)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":41:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":42:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":42:16)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":42:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":42:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":44:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":44:16)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":44:22)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":45:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":45:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":46:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":46:14)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":55:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":61:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":56:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:31)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:42)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:43)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":58:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:33)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:23)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:24)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:30)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":59:29)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":60:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":60:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":60:10)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":60:11)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":63:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":77:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":69:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":69:24)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":65:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":65:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":66:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":66:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":67:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":68:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":76:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:16)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:33)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":70:34)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":71:25)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":71:16)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":71:20)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":71:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":73:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":73:16)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":73:22)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":74:19)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":74:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":75:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":75:14)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":79:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":82:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":81:5)
#loc116 = loc("/usr/include/stdlib.h":575:1)
#loc117 = loc("/usr/include/stdlib.h":575:41)
#loc118 = loc("/usr/include/time.h":76:1)
#loc119 = loc("/usr/include/time.h":76:38)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":103:15)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":105:15)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":108:15)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":110:15)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":98:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":113:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":99:1)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":101:27)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":101:22)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":101:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":103:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":104:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":105:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":108:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":109:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":110:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":112:12)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_43.cpp":112:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc11, #loc13])
#loc148 = loc(fused[#loc10, #loc14])
#loc149 = loc(fused[#loc15, #loc14])
#loc150 = loc(fused[#loc16, #loc17])
#loc151 = loc(fused[#loc18, #loc19])
#loc152 = loc(fused[#loc20, #loc17])
#loc153 = loc(fused[#loc25, #loc24])
#loc154 = loc(fused[#loc28, #loc29])
#loc155 = loc(fused[#loc30, #loc31])
#loc156 = loc(fused[#loc32, #loc33])
#loc157 = loc(fused[#loc34, #loc35])
#loc158 = loc(fused[#loc36, #loc37])
#loc159 = loc(fused[#loc38, #loc39])
#loc160 = loc(fused[#loc41, #loc40])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc54, #loc51])
#loc164 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc69, #loc70])
#loc167 = loc(fused[#loc68, #loc70])
#loc168 = loc(fused[#loc67, #loc71])
#loc169 = loc(fused[#loc72, #loc71])
#loc170 = loc(fused[#loc73, #loc74])
#loc171 = loc(fused[#loc75, #loc76])
#loc172 = loc(fused[#loc77, #loc74])
#loc173 = loc(fused[#loc82, #loc81])
#loc174 = loc(fused[#loc85, #loc86])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc92, #loc91])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc105, #loc102])
#loc181 = loc(fused[#loc113, #loc114])
#loc182 = loc(fused[#loc116, #loc117])
#loc183 = loc(fused[#loc118, #loc119])
#loc184 = loc(fused[#loc124, #loc125])
#loc187 = loc(fused[#loc141, #loc140])
