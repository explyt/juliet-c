!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc121)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc123)
  cir.func private @printIntLine(!s32i) loc(#loc124)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_173badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc128)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc129)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc22)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc134)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc134)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    %11 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc31)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc122)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %16 = cir.call @__isoc23_fscanf(%13, %15, %4) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc31)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc34)
    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb2 loc(#loc132)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc37)
    %21 = cir.const #cir.int<4> : !u64i loc(#loc138)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc139)
    cir.store %22, %0 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %24 = cir.call @_Znam(%23) : (!u64i) -> !cir.ptr<!void> loc(#loc42)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc141)
    cir.store %26, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    cir.br ^bb10 loc(#loc143)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc48)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc144)
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %30 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc51)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc145)
    cir.brcond %32 ^bb12, ^bb16 loc(#loc145)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    %33 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !u64i), !cir.ptr<!s32i> loc(#loc56)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc47)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc58)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb11 loc(#loc143)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc47)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc61)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc62)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    cir.delete.array %43 : <!s32i> loc(#loc63)
    cir.br ^bb18 loc(#loc36)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc11)
  } loc(#loc125)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc152)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc153)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc76)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb2 loc(#loc156)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc158)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc88)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc156)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc79)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc162)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc91)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc163)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc164)
    cir.store %17, %0 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %19 = cir.call @_Znam(%18) : (!u64i) -> !cir.ptr<!void> loc(#loc96)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc166)
    cir.store %21, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    cir.br ^bb10 loc(#loc168)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc102)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc105)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc170)
    cir.brcond %27 ^bb12, ^bb16 loc(#loc170)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc110)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc101)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc112)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb11 loc(#loc168)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc115)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc116)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    cir.delete.array %38 : <!s32i> loc(#loc117)
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc65)
  } loc(#loc149)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_174goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17L7goodG2BEv() : () -> () loc(#loc120)
    cir.return loc(#loc119)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":33:23)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":48:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":36:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":36:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":36:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":37:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":37:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":26:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":26:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":27:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":27:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":29:13)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":29:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":29:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":34:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:16)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:20)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":31:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":33:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":33:16)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:24)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":30:23)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":35:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":47:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":39:21)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":39:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":39:38)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":39:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":40:37)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":24:6)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":40:28)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":40:46)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":40:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":44:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:18)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:14)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":42:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":43:29)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":43:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":43:24)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":43:25)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:40)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":41:39)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":45:22)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":45:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":45:34)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":45:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":46:19)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":55:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":79:1)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":67:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":67:16)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":67:26)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":68:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":68:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":57:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":57:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":58:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":58:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":60:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":60:12)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":60:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":65:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:16)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:20)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":62:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":64:16)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":64:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:24)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":61:23)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":66:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":78:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":70:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":70:28)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":70:38)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":70:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":71:37)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":55:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":71:28)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":71:46)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":71:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":75:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:18)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:14)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":73:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":74:29)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":74:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":74:24)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":74:25)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:40)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":72:39)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":76:22)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":76:33)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":76:34)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":76:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":77:19)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":81:1)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":84:1)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_17.cpp":83:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc6, #loc7])
#loc124 = loc(fused[#loc8, #loc9])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc12, #loc14])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc20])
#loc131 = loc(fused[#loc23, #loc21])
#loc132 = loc(fused[#loc24, #loc25])
#loc133 = loc(fused[#loc27, #loc26])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc25])
#loc136 = loc(fused[#loc34, #loc33])
#loc137 = loc(fused[#loc35, #loc36])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc37, #loc39])
#loc140 = loc(fused[#loc40, #loc39])
#loc141 = loc(fused[#loc43, #loc44])
#loc142 = loc(fused[#loc45, #loc44])
#loc143 = loc(fused[#loc46, #loc47])
#loc144 = loc(fused[#loc49, #loc48])
#loc145 = loc(fused[#loc50, #loc51])
#loc146 = loc(fused[#loc52, #loc47])
#loc147 = loc(fused[#loc54, #loc53])
#loc148 = loc(fused[#loc58, #loc57])
#loc149 = loc(fused[#loc64, #loc65])
#loc150 = loc(fused[#loc66, #loc67])
#loc151 = loc(fused[#loc66, #loc68])
#loc152 = loc(fused[#loc69, #loc70])
#loc153 = loc(fused[#loc71, #loc72])
#loc154 = loc(fused[#loc73, #loc74])
#loc155 = loc(fused[#loc77, #loc75])
#loc156 = loc(fused[#loc78, #loc79])
#loc157 = loc(fused[#loc81, #loc80])
#loc158 = loc(fused[#loc82, #loc83])
#loc159 = loc(fused[#loc84, #loc79])
#loc160 = loc(fused[#loc86, #loc85])
#loc161 = loc(fused[#loc88, #loc87])
#loc162 = loc(fused[#loc89, #loc90])
#loc163 = loc(fused[#loc92, #loc93])
#loc164 = loc(fused[#loc91, #loc93])
#loc165 = loc(fused[#loc94, #loc93])
#loc166 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc99, #loc98])
#loc168 = loc(fused[#loc100, #loc101])
#loc169 = loc(fused[#loc103, #loc102])
#loc170 = loc(fused[#loc104, #loc105])
#loc171 = loc(fused[#loc106, #loc101])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc112, #loc111])
#loc174 = loc(fused[#loc118, #loc119])
