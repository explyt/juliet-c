!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":24:21)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":24:25)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":81:25)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":81:29)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":60:25)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":60:29)
#loc146 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc63, #loc64])
#loc183 = loc(fused[#loc116, #loc117])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc144)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc24)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc26)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc13)
  } loc(#loc145)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc152)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc152)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc152)
    cir.br ^bb2 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc40)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc40)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc40)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc40)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc40)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc40)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc158)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc48)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb5 loc(#loc45)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @badSink(%23) : (!s32i) -> () loc(#loc53)
    cir.return loc(#loc28)
  } loc(#loc151)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc162)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc60)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc63, #loc64])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc168)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc76)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc76)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc76)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %11 = cir.binop(div, %9, %10) : !s32i loc(#loc170)
    %12 = cir.cmp(gt, %5, %11) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc172)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc82)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc84)
    cir.br ^bb6 loc(#loc80)
  ^bb5:  // pred: ^bb3
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc60)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc69)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc62)
  } loc(#loc163)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc174)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc174)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc174)
    cir.br ^bb2 loc(#loc178)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc99)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc99)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc99)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc99)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc99)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc99)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc99)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc100)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc101)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc107)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb5 loc(#loc104)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.call @goodB2GSink(%23) : (!s32i) -> () loc(#loc113)
    cir.return loc(#loc87)
  } loc(#loc173)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc116, #loc117])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc126)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc128)
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc115)
  } loc(#loc182)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc136)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc139)
    cir.return loc(#loc130)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":49:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":32:1)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":29:9)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":29:29)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":25:1)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":26:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":31:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":26:8)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":26:15)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":27:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":29:22)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":30:22)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":30:9)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":34:1)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":53:1)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":40:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":40:45)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":36:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":36:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":38:12)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":38:5)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":39:5)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":51:5)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:9)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":50:9)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:19)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:32)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:49)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:13)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":42:59)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":43:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":46:9)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":48:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":45:25)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":45:20)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":45:13)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":45:36)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":49:13)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":52:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":52:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":119:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":123:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":121:5)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":121:13)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":122:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":122:13)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":93:23)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":81:1)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":96:1)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":88:13)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":88:33)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":82:1)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":83:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":95:5)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":83:8)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":83:15)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":84:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":86:9)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":94:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":86:13)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":86:21)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":86:29)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":86:30)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":87:9)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":90:9)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":92:9)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":88:26)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":89:26)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":89:13)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":93:13)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":98:1)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":117:1)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":104:9)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":104:45)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":100:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":100:9)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":102:12)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":102:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":103:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":115:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:9)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":114:9)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:19)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:32)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:49)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:13)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":106:59)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":107:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":110:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":112:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":109:25)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":109:20)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":109:13)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":109:36)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":113:23)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":113:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":116:17)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":116:5)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":60:1)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":68:1)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":65:9)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":65:29)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":61:1)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":62:5)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":67:5)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":62:8)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":62:15)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":63:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":65:22)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":66:22)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":66:9)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":70:1)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":78:1)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":72:5)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":72:9)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":74:12)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":74:5)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":76:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":76:12)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":76:5)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":77:17)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_41.c":77:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc20])
#loc151 = loc(fused[#loc27, #loc28])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc34, #loc33])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc37, #loc38])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc44, #loc45, #loc46, #loc38])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc56, #loc57])
#loc162 = loc(fused[#loc58, #loc59])
#loc163 = loc(fused[#loc61, #loc62])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc68, #loc69])
#loc167 = loc(fused[#loc70, #loc71])
#loc168 = loc(fused[#loc72, #loc69])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc75, #loc78])
#loc172 = loc(fused[#loc79, #loc80, #loc81, #loc74])
#loc173 = loc(fused[#loc86, #loc87])
#loc174 = loc(fused[#loc88, #loc89])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc93, #loc92])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc103, #loc104, #loc105, #loc97])
#loc181 = loc(fused[#loc108, #loc109])
#loc182 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc121, #loc122])
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc125, #loc122])
#loc188 = loc(fused[#loc129, #loc130])
#loc189 = loc(fused[#loc131, #loc132])
#loc190 = loc(fused[#loc134, #loc133])
#loc191 = loc(fused[#loc137, #loc135])
