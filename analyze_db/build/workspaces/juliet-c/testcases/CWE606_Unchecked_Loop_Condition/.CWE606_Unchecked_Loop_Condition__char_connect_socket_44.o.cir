!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:21)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:28)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:25)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:32)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:25)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc426 = loc(fused[#loc8, #loc9])
#loc506 = loc(fused[#loc201, #loc202])
#loc528 = loc(fused[#loc252, #loc253])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc423)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc424)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc426)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc428)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc429)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc430)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc19)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc432)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc434)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc436)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc437)
              cir.condition(%16) loc(#loc31)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
                %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc34)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc439)
              } loc(#loc438)
              cir.yield loc(#loc26)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc36)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc440)
              cir.yield loc(#loc435)
            } loc(#loc435)
          } loc(#loc435)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc38)
        } loc(#loc433)
      } loc(#loc431)
    } loc(#loc427)
    cir.return loc(#loc7)
  } loc(#loc425)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc441)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc442)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc443)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc45)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc444)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc445)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc446)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc447)
  cir.func private @close(!s32i) -> !s32i loc(#loc448)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc450)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc451)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc452)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc61)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc451)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc452)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc452)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc453)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc455)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc456)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc457)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc458)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc459)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc75)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc458)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc78)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc78)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc459)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %20 = cir.const #cir.int<6> : !s32i loc(#loc86)
            %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
            cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc462)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc93)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc464)
              cir.if %75 {
                cir.break loc(#loc95)
              } loc(#loc465)
            } loc(#loc463)
            %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc466)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc98)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc467)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc468)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc103)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc103)
            %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc469)
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc45)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc45)
            %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc106)
            %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc107)
            %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc108)
            cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc470)
            %33 = cir.const #cir.int<27015> : !s32i loc(#loc111)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc111)
            %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc112)
            %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc113)
            cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc471)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc473)
              %74 = cir.const #cir.int<16> : !u64i loc(#loc474)
              %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc474)
              %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc123)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc124)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc475)
              cir.if %79 {
                cir.break loc(#loc126)
              } loc(#loc476)
            } loc(#loc472)
            %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc129)
            %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc130)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc477)
            %42 = cir.const #cir.int<1> : !u64i loc(#loc478)
            %43 = cir.const #cir.int<100> : !s32i loc(#loc135)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc135)
            %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc136)
            %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc479)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc137)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc480)
            %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc481)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc139)
            %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc140)
            cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc482)
            cir.scope {
              %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc146)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc146)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc484)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc147)
                cir.yield %77 : !cir.bool loc(#loc147)
              }, false {
                %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                %78 = cir.const #cir.int<0> : !s32i loc(#loc149)
                %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc485)
                %80 = cir.ternary(%79, true {
                  %81 = cir.const #true loc(#loc147)
                  cir.yield %81 : !cir.bool loc(#loc147)
                }, false {
                  %81 = cir.const #false loc(#loc147)
                  cir.yield %81 : !cir.bool loc(#loc147)
                }) : (!cir.bool) -> !cir.bool loc(#loc147)
                cir.yield %80 : !cir.bool loc(#loc147)
              }) : (!cir.bool) -> !cir.bool loc(#loc147)
              cir.if %76 {
                cir.break loc(#loc151)
              } loc(#loc486)
            } loc(#loc483)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc152)
            %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
            %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc155)
            %60 = cir.const #cir.int<1> : !u64i loc(#loc487)
            %61 = cir.binop(div, %59, %60) : !u64i loc(#loc488)
            %62 = cir.binop(add, %57, %61) : !u64i loc(#loc489)
            %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc158)
            cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc490)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc159)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %66 = cir.const #cir.int<13> : !s32i loc(#loc161)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc159)
            cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc491)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc168)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc168)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc494)
              } loc(#loc493)
            } loc(#loc492)
            %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc171)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
            %70 = cir.const #cir.int<10> : !s32i loc(#loc173)
            %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc171)
            cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc495)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc178)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc180)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc180)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc498)
              } loc(#loc497)
            } loc(#loc496)
          } loc(#loc461)
          cir.yield loc(#loc81)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc183)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc183)
          cir.condition(%19) loc(#loc183)
        } loc(#loc460)
      } loc(#loc460)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc187)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc500)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc190)
        } loc(#loc501)
      } loc(#loc499)
    } loc(#loc454)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc191)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc191)
    cir.return loc(#loc57)
  } loc(#loc449)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc503)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc195)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc504)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc197)
    cir.return loc(#loc194)
  } loc(#loc502)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc201, #loc202])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc506)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc508)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc509)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc510)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc212)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc214)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc214)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc212)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc512)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc217)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc514)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc221)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc516)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc517)
              cir.condition(%16) loc(#loc225)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc228)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc519)
              } loc(#loc518)
              cir.yield loc(#loc220)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc230)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc520)
              cir.yield loc(#loc515)
            } loc(#loc515)
          } loc(#loc515)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc231)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc232)
        } loc(#loc513)
      } loc(#loc511)
    } loc(#loc507)
    cir.return loc(#loc200)
  } loc(#loc505)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc521)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc235)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc523)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc524)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc525)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc241)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc524)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc525)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc525)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc526)
    %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc246)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc235)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc235)
    %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc246)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc248)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc248)
    cir.return loc(#loc237)
  } loc(#loc522)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc252, #loc253])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc528)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc530)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc531)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc532)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc263)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc265)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc265)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc263)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc266)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc534)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            %12 = cir.const #cir.int<10000> : !s32i loc(#loc271)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc537)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc273)
              cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc539)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc277)
                cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc541)
                cir.for : cond {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                  %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc542)
                  cir.condition(%19) loc(#loc281)
                } body {
                  cir.scope {
                    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc284)
                    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc544)
                  } loc(#loc543)
                  cir.yield loc(#loc276)
                } step {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc286)
                  cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc545)
                  cir.yield loc(#loc540)
                } loc(#loc540)
              } loc(#loc540)
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc287)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc288)
            } loc(#loc538)
          } loc(#loc536)
        } loc(#loc535)
      } loc(#loc533)
    } loc(#loc529)
    cir.return loc(#loc251)
  } loc(#loc527)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc547)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc548)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc549)
    %3 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc294)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc548)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc549)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc549)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc297)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc550)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc552)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc553)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc554)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc555)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc556)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc308)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc308)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc555)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc311)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc312)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc311)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc556)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc317)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc318)
            %20 = cir.const #cir.int<6> : !s32i loc(#loc319)
            %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc320)
            cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc559)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc325)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc326)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc326)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc561)
              cir.if %75 {
                cir.break loc(#loc328)
              } loc(#loc562)
            } loc(#loc560)
            %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc563)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc331)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc564)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc565)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc336)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc336)
            %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc566)
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc338)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc338)
            %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc339)
            %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc107)
            %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc108)
            cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc567)
            %33 = cir.const #cir.int<27015> : !s32i loc(#loc342)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc342)
            %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc343)
            %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc113)
            cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc568)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc348)
              %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc570)
              %74 = cir.const #cir.int<16> : !u64i loc(#loc571)
              %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc571)
              %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc353)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc354)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc354)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc572)
              cir.if %79 {
                cir.break loc(#loc356)
              } loc(#loc573)
            } loc(#loc569)
            %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc357)
            %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
            %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc359)
            %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc360)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc574)
            %42 = cir.const #cir.int<1> : !u64i loc(#loc575)
            %43 = cir.const #cir.int<100> : !s32i loc(#loc365)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc365)
            %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc366)
            %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc576)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc367)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc367)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc577)
            %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc578)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc369)
            %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc370)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc370)
            cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc579)
            cir.scope {
              %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc375)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc376)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc376)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc581)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc377)
                cir.yield %77 : !cir.bool loc(#loc377)
              }, false {
                %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc378)
                %78 = cir.const #cir.int<0> : !s32i loc(#loc379)
                %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc582)
                %80 = cir.ternary(%79, true {
                  %81 = cir.const #true loc(#loc377)
                  cir.yield %81 : !cir.bool loc(#loc377)
                }, false {
                  %81 = cir.const #false loc(#loc377)
                  cir.yield %81 : !cir.bool loc(#loc377)
                }) : (!cir.bool) -> !cir.bool loc(#loc377)
                cir.yield %80 : !cir.bool loc(#loc377)
              }) : (!cir.bool) -> !cir.bool loc(#loc377)
              cir.if %76 {
                cir.break loc(#loc381)
              } loc(#loc583)
            } loc(#loc580)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc382)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc382)
            %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc383)
            %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc384)
            %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc385)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc385)
            %60 = cir.const #cir.int<1> : !u64i loc(#loc584)
            %61 = cir.binop(div, %59, %60) : !u64i loc(#loc585)
            %62 = cir.binop(add, %57, %61) : !u64i loc(#loc586)
            %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc388)
            cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc587)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc389)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc390)
            %66 = cir.const #cir.int<13> : !s32i loc(#loc391)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc389)
            cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc588)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc396)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc396)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc398)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc398)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc399)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc591)
              } loc(#loc590)
            } loc(#loc589)
            %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc401)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc402)
            %70 = cir.const #cir.int<10> : !s32i loc(#loc403)
            %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc401)
            cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc592)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc408)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc410)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc410)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc411)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc595)
              } loc(#loc594)
            } loc(#loc593)
          } loc(#loc558)
          cir.yield loc(#loc314)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc413)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc413)
          cir.condition(%19) loc(#loc413)
        } loc(#loc557)
      } loc(#loc557)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc416)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc417)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc417)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc597)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc419)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc420)
        } loc(#loc598)
      } loc(#loc596)
    } loc(#loc551)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc421)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc422)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc421)
    cir.return loc(#loc290)
  } loc(#loc546)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":49:1)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":65:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":50:1)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":51:5)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":64:5)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:9)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:13)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:16)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":52:19)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:9)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":63:9)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:13)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:20)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":53:39)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":54:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":56:27)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":56:13)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":61:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:22)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:18)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:25)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:29)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:27)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":58:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":60:28)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":60:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:33)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":57:32)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":62:26)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":62:13)
#loc39 = loc("/usr/include/string.h":407:1)
#loc40 = loc("/usr/include/string.h":408:33)
#loc41 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc42 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc43 = loc("/usr/include/arpa/inet.h":34:1)
#loc44 = loc("/usr/include/arpa/inet.h":34:47)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:49)
#loc46 = loc("/usr/include/netinet/in.h":402:1)
#loc47 = loc("/usr/include/netinet/in.h":403:40)
#loc48 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc49 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc50 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc51 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc52 = loc("/usr/include/string.h":246:1)
#loc53 = loc("/usr/include/string.h":247:33)
#loc54 = loc("/usr/include/unistd.h":358:1)
#loc55 = loc("/usr/include/unistd.h":358:27)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":67:1)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":143:1)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":69:5)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":69:12)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":71:5)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":71:32)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":72:5)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":72:28)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":73:12)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":73:5)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":74:5)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":140:5)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":79:9)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":79:13)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":80:9)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":80:28)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":81:9)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":81:15)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":82:9)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":82:32)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:9)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:37)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:26)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":83:33)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":84:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":129:17)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":85:9)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":128:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:36)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:45)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:58)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:29)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":94:69)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":98:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":95:34)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":96:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":97:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:20)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:21)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:30)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:33)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:47)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":99:48)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":100:34)
#loc104 = loc("/usr/include/netinet/in.h":249:5)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":100:13)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:39)
#loc107 = loc("/usr/include/netinet/in.h":251:20)
#loc108 = loc("/usr/include/netinet/in.h":33:15)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":101:59)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:38)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:32)
#loc113 = loc("/usr/include/netinet/in.h":250:15)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":102:46)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":106:13)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:25)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:58)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:59)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:68)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:82)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:17)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":103:88)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":104:13)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":105:17)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:31)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:55)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:62)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:60)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:46)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:69)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:72)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:83)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:88)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:94)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:104)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:105)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:108)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:26)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:13)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":110:109)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:13)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":114:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:31)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:44)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:47)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":111:61)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":112:13)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":113:17)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:57)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:18)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:28)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:41)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:52)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":116:53)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:23)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:30)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:36)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":118:40)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":119:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":122:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":119:17)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":120:13)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:28)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:18)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":121:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:23)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:30)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:36)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":123:40)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":124:13)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":127:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":124:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":125:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:28)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:18)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":126:17)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":129:16)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:9)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":133:9)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:13)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":130:30)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":131:9)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":132:26)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":132:13)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":142:5)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":142:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":277:1)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":281:1)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":279:5)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":279:13)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":280:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":280:13)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":150:1)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":166:1)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":151:1)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":152:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":165:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:13)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:16)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":153:19)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:9)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":164:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:13)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:20)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:26)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":154:39)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":155:9)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":157:27)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":157:13)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:13)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":162:13)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:22)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:18)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:25)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:29)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:27)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":159:13)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":161:28)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":161:17)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:33)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":158:32)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":163:26)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":163:13)
#loc233 = loc("/usr/include/string.h":141:1)
#loc234 = loc("/usr/include/string.h":142:14)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:18)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":168:1)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":177:1)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":170:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":170:12)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":171:5)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":171:32)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":172:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":172:28)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":173:12)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":173:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":175:12)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":176:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":176:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":180:1)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":199:1)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":181:1)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":182:5)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":198:5)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:9)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:13)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:16)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":183:19)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:9)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":197:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:13)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:20)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:26)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":184:39)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":185:9)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":196:13)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:17)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":187:21)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":188:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":189:31)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":189:17)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:17)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":194:17)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:26)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:22)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:29)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:33)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:31)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":191:17)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":193:32)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":193:21)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:37)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":190:36)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":195:30)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":195:17)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":201:1)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":275:1)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":203:5)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":203:12)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":204:5)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":204:32)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":205:5)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":205:28)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":206:12)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":206:5)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":207:5)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":273:5)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":212:9)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":212:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":213:9)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":213:28)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":214:9)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":214:15)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":215:9)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":215:32)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:9)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:37)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:26)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":216:33)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":217:9)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":262:17)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":218:9)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":261:9)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:36)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:45)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:58)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:29)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":227:69)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:13)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":231:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:17)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":228:34)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":229:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":230:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:20)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:21)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:30)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:33)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:47)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:13)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":232:48)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":233:34)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":233:13)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:49)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:39)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:13)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":234:59)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:38)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:32)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:13)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":235:46)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:13)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":239:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:25)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:58)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:59)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:68)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:82)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":236:88)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":237:13)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":238:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:31)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:55)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:62)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:60)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:46)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:69)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:72)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:83)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:88)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:94)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:104)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:105)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:108)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:26)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":243:109)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":247:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:31)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:44)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:47)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":244:61)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":245:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":246:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:57)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:13)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:18)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:28)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:41)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:52)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":249:53)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:23)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:30)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:36)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":251:40)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":252:13)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":255:13)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":252:17)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":253:13)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:28)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:18)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":254:17)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:23)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:30)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:36)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:13)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":256:40)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":257:13)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":260:13)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":257:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":258:13)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:28)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:18)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":259:17)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":262:16)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:9)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":266:9)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":263:30)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":264:9)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":265:26)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":265:13)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":274:5)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_44.c":274:13)
#loc423 = loc(fused[#loc1, #loc2])
#loc424 = loc(fused[#loc4, #loc5])
#loc425 = loc(fused[#loc6, #loc7])
#loc427 = loc(fused[#loc11, #loc12])
#loc428 = loc(fused[#loc13, #loc14])
#loc429 = loc(fused[#loc13, #loc15])
#loc430 = loc(fused[#loc13, #loc16])
#loc431 = loc(fused[#loc17, #loc18])
#loc432 = loc(fused[#loc19, #loc21])
#loc433 = loc(fused[#loc22, #loc18])
#loc434 = loc(fused[#loc24, #loc23])
#loc435 = loc(fused[#loc25, #loc26])
#loc436 = loc(fused[#loc28, #loc27])
#loc437 = loc(fused[#loc29, #loc30])
#loc438 = loc(fused[#loc32, #loc26])
#loc439 = loc(fused[#loc34, #loc33])
#loc440 = loc(fused[#loc36, #loc35])
#loc441 = loc(fused[#loc39, #loc40])
#loc442 = loc(fused[#loc41, #loc42])
#loc443 = loc(fused[#loc43, #loc44])
#loc444 = loc(fused[#loc46, #loc47])
#loc445 = loc(fused[#loc48, #loc49])
#loc446 = loc(fused[#loc50, #loc51])
#loc447 = loc(fused[#loc52, #loc53])
#loc448 = loc(fused[#loc54, #loc55])
#loc449 = loc(fused[#loc56, #loc57])
#loc450 = loc(fused[#loc58, #loc59])
#loc451 = loc(fused[#loc60, #loc61])
#loc452 = loc(fused[#loc62, #loc63])
#loc453 = loc(fused[#loc65, #loc64])
#loc454 = loc(fused[#loc66, #loc67])
#loc455 = loc(fused[#loc68, #loc69])
#loc456 = loc(fused[#loc70, #loc71])
#loc457 = loc(fused[#loc72, #loc73])
#loc458 = loc(fused[#loc74, #loc75])
#loc459 = loc(fused[#loc76, #loc77])
#loc460 = loc(fused[#loc80, #loc81])
#loc461 = loc(fused[#loc82, #loc83])
#loc462 = loc(fused[#loc88, #loc89])
#loc463 = loc(fused[#loc90, #loc91])
#loc464 = loc(fused[#loc92, #loc93])
#loc465 = loc(fused[#loc94, #loc91])
#loc466 = loc(fused[#loc96, #loc97])
#loc467 = loc(fused[#loc99, #loc100])
#loc468 = loc(fused[#loc101, #loc102])
#loc469 = loc(fused[#loc105, #loc103])
#loc470 = loc(fused[#loc109, #loc110])
#loc471 = loc(fused[#loc114, #loc115])
#loc472 = loc(fused[#loc116, #loc117])
#loc473 = loc(fused[#loc119, #loc120])
#loc474 = loc(fused[#loc121, #loc122])
#loc475 = loc(fused[#loc123, #loc124])
#loc476 = loc(fused[#loc125, #loc117])
#loc477 = loc(fused[#loc131, #loc132])
#loc478 = loc(fused[#loc133, #loc134])
#loc479 = loc(fused[#loc135, #loc136])
#loc480 = loc(fused[#loc135, #loc137])
#loc481 = loc(fused[#loc133, #loc138])
#loc482 = loc(fused[#loc141, #loc142])
#loc483 = loc(fused[#loc143, #loc144])
#loc484 = loc(fused[#loc145, #loc146])
#loc485 = loc(fused[#loc148, #loc149])
#loc486 = loc(fused[#loc150, #loc144])
#loc487 = loc(fused[#loc156, #loc157])
#loc488 = loc(fused[#loc155, #loc157])
#loc489 = loc(fused[#loc154, #loc157])
#loc490 = loc(fused[#loc153, #loc152])
#loc491 = loc(fused[#loc162, #loc163])
#loc492 = loc(fused[#loc164, #loc165])
#loc493 = loc(fused[#loc167, #loc165])
#loc494 = loc(fused[#loc170, #loc168])
#loc495 = loc(fused[#loc174, #loc175])
#loc496 = loc(fused[#loc176, #loc177])
#loc497 = loc(fused[#loc179, #loc177])
#loc498 = loc(fused[#loc182, #loc180])
#loc499 = loc(fused[#loc184, #loc185])
#loc500 = loc(fused[#loc186, #loc187])
#loc501 = loc(fused[#loc188, #loc185])
#loc502 = loc(fused[#loc193, #loc194])
#loc503 = loc(fused[#loc195, #loc196])
#loc504 = loc(fused[#loc197, #loc198])
#loc505 = loc(fused[#loc199, #loc200])
#loc507 = loc(fused[#loc204, #loc205])
#loc508 = loc(fused[#loc206, #loc207])
#loc509 = loc(fused[#loc206, #loc208])
#loc510 = loc(fused[#loc206, #loc209])
#loc511 = loc(fused[#loc210, #loc211])
#loc512 = loc(fused[#loc212, #loc215])
#loc513 = loc(fused[#loc216, #loc211])
#loc514 = loc(fused[#loc218, #loc217])
#loc515 = loc(fused[#loc219, #loc220])
#loc516 = loc(fused[#loc222, #loc221])
#loc517 = loc(fused[#loc223, #loc224])
#loc518 = loc(fused[#loc226, #loc220])
#loc519 = loc(fused[#loc228, #loc227])
#loc520 = loc(fused[#loc230, #loc229])
#loc521 = loc(fused[#loc233, #loc234])
#loc522 = loc(fused[#loc236, #loc237])
#loc523 = loc(fused[#loc238, #loc239])
#loc524 = loc(fused[#loc240, #loc241])
#loc525 = loc(fused[#loc242, #loc243])
#loc526 = loc(fused[#loc245, #loc244])
#loc527 = loc(fused[#loc250, #loc251])
#loc529 = loc(fused[#loc255, #loc256])
#loc530 = loc(fused[#loc257, #loc258])
#loc531 = loc(fused[#loc257, #loc259])
#loc532 = loc(fused[#loc257, #loc260])
#loc533 = loc(fused[#loc261, #loc262])
#loc534 = loc(fused[#loc263, #loc266])
#loc535 = loc(fused[#loc267, #loc262])
#loc536 = loc(fused[#loc268, #loc269])
#loc537 = loc(fused[#loc270, #loc271])
#loc538 = loc(fused[#loc272, #loc269])
#loc539 = loc(fused[#loc274, #loc273])
#loc540 = loc(fused[#loc275, #loc276])
#loc541 = loc(fused[#loc278, #loc277])
#loc542 = loc(fused[#loc279, #loc280])
#loc543 = loc(fused[#loc282, #loc276])
#loc544 = loc(fused[#loc284, #loc283])
#loc545 = loc(fused[#loc286, #loc285])
#loc546 = loc(fused[#loc289, #loc290])
#loc547 = loc(fused[#loc291, #loc292])
#loc548 = loc(fused[#loc293, #loc294])
#loc549 = loc(fused[#loc295, #loc296])
#loc550 = loc(fused[#loc298, #loc297])
#loc551 = loc(fused[#loc299, #loc300])
#loc552 = loc(fused[#loc301, #loc302])
#loc553 = loc(fused[#loc303, #loc304])
#loc554 = loc(fused[#loc305, #loc306])
#loc555 = loc(fused[#loc307, #loc308])
#loc556 = loc(fused[#loc309, #loc310])
#loc557 = loc(fused[#loc313, #loc314])
#loc558 = loc(fused[#loc315, #loc316])
#loc559 = loc(fused[#loc321, #loc322])
#loc560 = loc(fused[#loc323, #loc324])
#loc561 = loc(fused[#loc325, #loc326])
#loc562 = loc(fused[#loc327, #loc324])
#loc563 = loc(fused[#loc329, #loc330])
#loc564 = loc(fused[#loc332, #loc333])
#loc565 = loc(fused[#loc334, #loc335])
#loc566 = loc(fused[#loc337, #loc336])
#loc567 = loc(fused[#loc340, #loc341])
#loc568 = loc(fused[#loc344, #loc345])
#loc569 = loc(fused[#loc346, #loc347])
#loc570 = loc(fused[#loc349, #loc350])
#loc571 = loc(fused[#loc351, #loc352])
#loc572 = loc(fused[#loc353, #loc354])
#loc573 = loc(fused[#loc355, #loc347])
#loc574 = loc(fused[#loc361, #loc362])
#loc575 = loc(fused[#loc363, #loc364])
#loc576 = loc(fused[#loc365, #loc366])
#loc577 = loc(fused[#loc365, #loc367])
#loc578 = loc(fused[#loc363, #loc368])
#loc579 = loc(fused[#loc371, #loc372])
#loc580 = loc(fused[#loc373, #loc374])
#loc581 = loc(fused[#loc375, #loc376])
#loc582 = loc(fused[#loc378, #loc379])
#loc583 = loc(fused[#loc380, #loc374])
#loc584 = loc(fused[#loc386, #loc387])
#loc585 = loc(fused[#loc385, #loc387])
#loc586 = loc(fused[#loc384, #loc387])
#loc587 = loc(fused[#loc383, #loc382])
#loc588 = loc(fused[#loc392, #loc393])
#loc589 = loc(fused[#loc394, #loc395])
#loc590 = loc(fused[#loc397, #loc395])
#loc591 = loc(fused[#loc400, #loc398])
#loc592 = loc(fused[#loc404, #loc405])
#loc593 = loc(fused[#loc406, #loc407])
#loc594 = loc(fused[#loc409, #loc407])
#loc595 = loc(fused[#loc412, #loc410])
#loc596 = loc(fused[#loc414, #loc415])
#loc597 = loc(fused[#loc416, #loc417])
#loc598 = loc(fused[#loc418, #loc415])
