!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc91)
  cir.func private  @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc97)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc98)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc100)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc100)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc26)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc29)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc103)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc30)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc32)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc35)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc105)
      } loc(#loc101)
    } loc(#loc99)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc107)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc107)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc40)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc44)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc45)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc108)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    } loc(#loc106)
    cir.return loc(#loc10)
  } loc(#loc95)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc109)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc114)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc116)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc116)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc62)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc62)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc69)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc72)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc119)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc75)
        %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc75)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc77)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc78)
        cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc121)
      } loc(#loc117)
    } loc(#loc115)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc123)
      %4 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc123)
      cir.store %4, %3 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc123)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc83)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc85)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc86)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc87)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc86)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc88)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc124)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc122)
    cir.return loc(#loc53)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":54:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":30:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":31:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":32:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":46:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":33:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":33:33)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":34:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":39:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":41:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":37:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":37:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":38:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":38:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":38:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":44:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":44:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":45:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":45:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":45:14)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":45:15)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":47:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":53:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":48:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":48:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:31)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:38)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":51:48)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":52:19)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":52:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":90:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":93:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":92:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":92:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":62:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":88:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":64:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":64:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":65:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":65:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":66:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":66:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":67:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":80:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":67:8)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":67:33)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":68:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":73:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":75:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":71:16)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":71:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":72:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":72:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":72:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":72:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":78:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":78:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":79:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":79:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":79:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":79:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":81:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":87:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":82:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":82:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:38)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":85:48)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":86:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_12.c":86:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc102 = loc(fused[#loc25, #loc24])
#loc103 = loc(fused[#loc27, #loc26])
#loc104 = loc(fused[#loc31, #loc30])
#loc105 = loc(fused[#loc33, #loc32])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc43, #loc45])
#loc109 = loc(fused[#loc48, #loc49])
#loc110 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc58, #loc59])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc118 = loc(fused[#loc68, #loc67])
#loc119 = loc(fused[#loc70, #loc69])
#loc120 = loc(fused[#loc74, #loc73])
#loc121 = loc(fused[#loc76, #loc75])
#loc122 = loc(fused[#loc79, #loc80])
#loc123 = loc(fused[#loc81, #loc82])
#loc124 = loc(fused[#loc86, #loc88])
