!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc42)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sscanf\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc44)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc45)
    cir.goto "sink" loc(#loc46)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc13)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc44)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc44)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc14)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %10 = cir.call @__isoc99_sscanf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc43)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc48)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc17)
  } loc(#loc47)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc49)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc52)
    cir.goto "sink" loc(#loc53)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc31)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc51)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc51)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    cir.scope {
      %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc34)
      %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc35)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc35)
      %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc36)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc36)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %10 = cir.call @__isoc99_sscanf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc38)
      %13 = cir.cmp(eq, %10, %12) : !s32i, !s32i loc(#loc55)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc39)
      cir.if %14 {
        %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc22)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } loc(#loc56)
    } loc(#loc54)
    cir.return loc(#loc24)
  } loc(#loc50)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":36:16)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":36:21)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":26:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":38:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":33:9)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":33:32)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":34:9)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":34:23)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":28:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":28:10)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":29:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":36:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":36:31)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":62:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":65:1)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":64:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":64:11)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":57:23)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":45:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":60:1)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":52:9)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":52:32)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":53:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":53:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":47:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":47:10)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":48:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":58:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:13)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:20)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:25)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:35)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:44)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":55:41)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":56:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_sscanf_18.c":57:13)
#loc42 = loc(fused[#loc1, #loc2])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc7, #loc8])
#loc45 = loc(fused[#loc9, #loc10])
#loc46 = loc(fused[#loc11, #loc12])
#loc47 = loc(fused[#loc16, #loc17])
#loc48 = loc(fused[#loc18, #loc19])
#loc49 = loc(fused[#loc20, #loc21])
#loc50 = loc(fused[#loc23, #loc24])
#loc51 = loc(fused[#loc25, #loc26])
#loc52 = loc(fused[#loc27, #loc28])
#loc53 = loc(fused[#loc29, #loc30])
#loc54 = loc(fused[#loc32, #loc33])
#loc55 = loc(fused[#loc34, #loc38])
#loc56 = loc(fused[#loc40, #loc33])
