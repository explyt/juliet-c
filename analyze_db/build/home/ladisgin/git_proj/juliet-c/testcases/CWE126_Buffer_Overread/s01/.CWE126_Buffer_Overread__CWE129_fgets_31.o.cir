!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc151)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc157)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc158)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc159)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc160)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc26)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc156)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc156)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc33)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc33)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc33)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc33)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc33)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc164)
    cir.brcond %22 ^bb3, ^bb4 loc(#loc165)
  ^bb3:  // pred: ^bb2
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
    cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb5 loc(#loc38)
  ^bb4:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc167)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    cir.store %27, %1 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb9 loc(#loc168)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc159)
    cir.store %29, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc159)
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %32 ^bb11, ^bb12 loc(#loc171)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %34 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc57)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc57)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc58)
    cir.br ^bb13 loc(#loc54)
  ^bb12:  // pred: ^bb10
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb13 loc(#loc50)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc46)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc14)
  } loc(#loc155)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc172)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc178)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc77)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %6 = cir.const #cir.int<7> : !s32i loc(#loc79)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb2 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc178)
    cir.store %9, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc178)
    cir.br ^bb3 loc(#loc184)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc186)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc93)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc93)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc94)
    cir.br ^bb6 loc(#loc90)
  ^bb5:  // pred: ^bb3
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc95)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc86)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc67)
  } loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc188)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc190)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc191)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc111)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc188)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc188)
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc118)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc118)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc118)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc118)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc118)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc118)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc196)
    cir.brcond %22 ^bb3, ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb2
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
    cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb5 loc(#loc123)
  ^bb4:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb5 loc(#loc116)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc116)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.store %27, %1 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.br ^bb9 loc(#loc200)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc191)
    cir.store %29, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc191)
    cir.br ^bb10 loc(#loc201)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %32 ^bb11, ^bb16 loc(#loc139)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %34 = cir.const #cir.int<10> : !s32i loc(#loc141)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %35 ^bb12, ^bb13 loc(#loc139)
  ^bb12:  // pred: ^bb11
    %36 = cir.const #true loc(#loc139)
    cir.br ^bb14(%36 : !cir.bool) loc(#loc139)
  ^bb13:  // pred: ^bb11
    %37 = cir.const #false loc(#loc139)
    cir.br ^bb14(%37 : !cir.bool) loc(#loc139)
  ^bb14(%38: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:27)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc139)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17(%38 : !cir.bool) loc(#loc139)
  ^bb16:  // pred: ^bb10
    %39 = cir.const #false loc(#loc139)
    cir.br ^bb17(%39 : !cir.bool) loc(#loc139)
  ^bb17(%40: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc139)
  ^bb18:  // pred: ^bb17
    cir.brcond %40 ^bb19, ^bb20 loc(#loc204)
  ^bb19:  // pred: ^bb18
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc147)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc147)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc148)
    cir.br ^bb21 loc(#loc144)
  ^bb20:  // pred: ^bb18
    %45 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc97)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb21 loc(#loc136)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc136)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc134)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc132)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc99)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":55:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":59:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":30:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":30:45)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":43:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":43:24)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":44:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":44:20)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":46:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":46:34)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":26:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":26:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":28:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":28:12)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":28:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":29:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":41:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":40:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:19)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:32)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:49)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":32:59)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":33:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":36:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":38:9)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":35:25)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":35:20)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":35:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":35:36)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":39:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":42:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":58:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":45:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":57:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":49:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":56:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":49:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":49:25)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":50:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":52:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":54:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":51:37)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":51:30)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":51:17)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":55:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":130:1)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":134:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":132:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":132:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":133:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":133:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":66:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":91:1)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":75:9)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":75:24)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":76:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":76:20)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":78:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":78:34)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":68:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":68:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":70:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":70:12)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":70:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":73:12)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":73:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":74:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":90:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":77:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":89:9)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":81:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":88:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":81:17)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":81:25)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":82:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":84:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":86:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":83:37)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":83:30)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":83:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":87:27)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":87:17)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":124:27)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":94:1)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":128:1)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":100:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":100:45)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":113:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":113:24)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":114:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":114:20)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":116:13)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":116:34)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":96:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":96:9)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":98:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":98:12)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":98:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":99:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":111:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":110:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:19)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:32)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:49)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":102:59)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":103:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":106:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":108:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":105:25)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":105:20)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":105:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":105:36)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":109:23)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":109:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":112:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":127:5)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":115:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":126:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":125:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:17)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:25)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:30)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:38)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":118:40)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":119:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":121:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":123:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":120:37)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":120:30)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":120:17)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_31.c":124:17)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc153 = loc(fused[#loc7, #loc8])
#loc154 = loc(fused[#loc10, #loc11])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc19, #loc20])
#loc159 = loc(fused[#loc21, #loc22])
#loc160 = loc(fused[#loc23, #loc24])
#loc161 = loc(fused[#loc27, #loc25])
#loc162 = loc(fused[#loc28, #loc29])
#loc163 = loc(fused[#loc30, #loc31])
#loc164 = loc(fused[#loc35, #loc36])
#loc165 = loc(fused[#loc37, #loc38, #loc39, #loc31])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc45, #loc46])
#loc168 = loc(fused[#loc47, #loc48])
#loc169 = loc(fused[#loc49, #loc50])
#loc170 = loc(fused[#loc51, #loc52])
#loc171 = loc(fused[#loc53, #loc54, #loc55, #loc50])
#loc172 = loc(fused[#loc60, #loc61])
#loc173 = loc(fused[#loc62, #loc63])
#loc174 = loc(fused[#loc64, #loc65])
#loc175 = loc(fused[#loc66, #loc67])
#loc176 = loc(fused[#loc68, #loc69])
#loc177 = loc(fused[#loc70, #loc71])
#loc178 = loc(fused[#loc72, #loc73])
#loc179 = loc(fused[#loc74, #loc75])
#loc180 = loc(fused[#loc78, #loc76])
#loc181 = loc(fused[#loc80, #loc79])
#loc182 = loc(fused[#loc81, #loc82])
#loc183 = loc(fused[#loc83, #loc84])
#loc184 = loc(fused[#loc85, #loc86])
#loc185 = loc(fused[#loc87, #loc88])
#loc186 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc187 = loc(fused[#loc98, #loc99])
#loc188 = loc(fused[#loc100, #loc101])
#loc189 = loc(fused[#loc102, #loc103])
#loc190 = loc(fused[#loc104, #loc105])
#loc191 = loc(fused[#loc106, #loc107])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc112, #loc110])
#loc194 = loc(fused[#loc113, #loc114])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc122, #loc123, #loc124, #loc116])
#loc198 = loc(fused[#loc127, #loc128])
#loc199 = loc(fused[#loc131, #loc132])
#loc200 = loc(fused[#loc133, #loc134])
#loc201 = loc(fused[#loc135, #loc136])
#loc202 = loc(fused[#loc137, #loc138])
#loc203 = loc(fused[#loc140, #loc142])
#loc204 = loc(fused[#loc143, #loc144, #loc145, #loc136])
