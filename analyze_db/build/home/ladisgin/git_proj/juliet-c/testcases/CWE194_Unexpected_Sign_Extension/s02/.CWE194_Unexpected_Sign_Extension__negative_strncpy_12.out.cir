!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":104:10)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":104:14)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":104:20)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":104:32)
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc137)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc141)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc11)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc142)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc144)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc144)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
        %7 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc21)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc21)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc146)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc23)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc23)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc147)
      } loc(#loc145)
    } loc(#loc143)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc149)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc150)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc150)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc150)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc33)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc34)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc34)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc38)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc39)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc39)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc41)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc152)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc44)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc44)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc154)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc47)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc50)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc50)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc51)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc51)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc52)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc53)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc156)
        } loc(#loc155)
      } loc(#loc153)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    } loc(#loc148)
    cir.return loc(#loc8)
  } loc(#loc140)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_strncpy_12_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc168)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc92)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc169)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc171)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc171)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc96)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc96)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc101)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc101)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc101)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc173)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc104)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc104)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc104)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc176)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc177)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc177)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc114)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc115)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc115)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc178)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc119)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc119)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc120)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc121)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc120)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc122)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc179)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc125)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc125)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc126)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc181)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc128)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc131)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc131)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc132)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc133)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc134)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc183)
        } loc(#loc182)
      } loc(#loc180)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    } loc(#loc175)
    cir.return loc(#loc89)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":21:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":50:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":23:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":23:11)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":25:12)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":25:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":26:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":35:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":26:8)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":26:33)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":27:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":30:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":32:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":29:17)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":29:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":29:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":34:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":34:20)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":34:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":36:5)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":49:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":37:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":37:24)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":38:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":38:26)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:16)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:24)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:29)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:33)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":39:34)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":40:25)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":40:16)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":40:20)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":40:9)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":41:9)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":47:9)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":41:13)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":41:20)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":42:9)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":45:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":45:21)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":45:27)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":45:35)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":46:26)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":46:18)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":46:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":48:19)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":48:9)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":89:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":92:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":91:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":91:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":109:15)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":111:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":114:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":116:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":104:1)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":119:1)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":105:1)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":107:27)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":107:22)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":107:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":109:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":110:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":110:64)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":111:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":114:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":115:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":115:63)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":116:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":118:12)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":118:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":58:1)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":87:1)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":60:5)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":60:11)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":62:12)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":62:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":63:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":72:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":63:8)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":63:33)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":64:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":67:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":69:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":66:16)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":66:20)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":66:9)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":71:16)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":71:20)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":71:9)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":73:5)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":86:5)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":74:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":74:24)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":75:9)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":75:26)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:16)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:24)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:29)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:33)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:9)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":76:34)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":77:25)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":77:16)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":77:20)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":77:9)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":78:9)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":84:9)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":78:13)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":78:20)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":79:9)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":82:13)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":82:21)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":82:27)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":82:35)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":83:26)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":83:18)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":83:13)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":85:19)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_12.c":85:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc12, #loc11])
#loc143 = loc(fused[#loc13, #loc14])
#loc144 = loc(fused[#loc15, #loc16])
#loc145 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc146 = loc(fused[#loc22, #loc20])
#loc147 = loc(fused[#loc25, #loc24])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc30, #loc31])
#loc151 = loc(fused[#loc36, #loc37])
#loc152 = loc(fused[#loc41, #loc38])
#loc153 = loc(fused[#loc42, #loc43])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc46, #loc43])
#loc156 = loc(fused[#loc53, #loc51])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc68, #loc69])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc83, #loc84])
#loc166 = loc(fused[#loc87, #loc86])
#loc167 = loc(fused[#loc88, #loc89])
#loc168 = loc(fused[#loc90, #loc91])
#loc169 = loc(fused[#loc93, #loc92])
#loc170 = loc(fused[#loc94, #loc95])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc173 = loc(fused[#loc103, #loc102])
#loc174 = loc(fused[#loc106, #loc105])
#loc175 = loc(fused[#loc107, #loc108])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc122, #loc119])
#loc180 = loc(fused[#loc123, #loc124])
#loc181 = loc(fused[#loc125, #loc126])
#loc182 = loc(fused[#loc127, #loc124])
#loc183 = loc(fused[#loc134, #loc132])
