!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc99)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc100)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func private  @printLongLongLine(!s64i) loc(#loc102)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc105)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
        %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
        %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
        %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc18)
        cir.break loc(#loc20)
      } loc(#loc106)
    } loc(#loc106)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%3) loc(#loc23)
      } do {
        cir.scope {
          %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc109)
          %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc28)
          %4 = cir.unary(inc, %3) : !s64i, !s64i loc(#loc28)
          cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc110)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc27)
          cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc109)
          %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc30)
          cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc31)
        } loc(#loc108)
        cir.break loc(#loc32)
      } loc(#loc107)
    } loc(#loc107)
    cir.return loc(#loc10)
  } loc(#loc103)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc111)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc41)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc46)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc117)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc50)
        cir.condition(%3) loc(#loc50)
      } do {
        %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc51)
        %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
        %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc119)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc119)
        %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc51)
        cir.break loc(#loc55)
      } loc(#loc118)
    } loc(#loc118)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc58)
        cir.condition(%3) loc(#loc58)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc61)
          %3 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc62)
          %4 = cir.cmp(lt, %2, %3) : !s64i, !s32i loc(#loc122)
          %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc63)
          cir.if %5 {
            %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc124)
            %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc69)
            %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc69)
            cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc125)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc68)
            cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc124)
            %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc71)
            cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc72)
          } else {
            %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc41)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc41)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
          } loc(#loc123)
        } loc(#loc121)
        cir.break loc(#loc74)
      } loc(#loc120)
    } loc(#loc120)
    cir.return loc(#loc43)
  } loc(#loc115)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc79)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc128)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%3) loc(#loc83)
      } do {
        %2 = cir.const #cir.int<2> : !s32i loc(#loc84)
        %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc84)
        cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc130)
        cir.break loc(#loc86)
      } loc(#loc129)
    } loc(#loc129)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc89)
        cir.condition(%3) loc(#loc89)
      } do {
        cir.scope {
          %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc133)
          %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc94)
          %4 = cir.unary(inc, %3) : !s64i, !s64i loc(#loc94)
          cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc134)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
          cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc133)
          %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc96)
          cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc97)
        } loc(#loc132)
        cir.break loc(#loc98)
      } loc(#loc131)
    } loc(#loc131)
    cir.return loc(#loc76)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":30:24)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":30:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":23:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":43:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":25:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":25:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":26:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":26:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":27:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":32:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":27:11)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":30:9)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":30:17)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":31:9)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":33:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":42:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":33:11)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":35:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":40:9)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":38:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":38:30)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":37:13)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":37:15)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":39:31)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":39:13)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":41:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":100:1)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":104:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":102:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":102:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":103:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":103:13)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":71:23)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":50:1)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":75:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":52:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":52:13)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":53:12)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":53:5)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":54:5)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":59:5)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":54:11)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":57:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":57:17)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":57:24)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":57:28)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":58:9)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":60:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":74:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":60:11)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":63:9)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":72:9)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":63:13)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":63:20)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":63:18)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":64:9)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":68:9)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":70:9)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":66:13)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":66:30)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":65:13)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":65:15)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":67:31)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":67:13)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":71:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":73:9)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":78:1)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":98:1)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":80:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":80:13)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":81:12)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":81:5)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":82:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":87:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":82:11)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":85:16)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":85:9)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":86:9)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":88:5)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":97:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":88:11)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":90:9)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":95:9)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":93:13)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":93:30)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":92:13)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":92:15)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":94:31)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":94:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_16.c":96:9)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc14, #loc13])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc21, #loc22])
#loc108 = loc(fused[#loc24, #loc25])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc28, #loc29])
#loc111 = loc(fused[#loc33, #loc34])
#loc112 = loc(fused[#loc35, #loc36])
#loc113 = loc(fused[#loc37, #loc38])
#loc114 = loc(fused[#loc39, #loc40])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc47, #loc46])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc53, #loc54])
#loc120 = loc(fused[#loc56, #loc57])
#loc121 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc61, #loc62])
#loc123 = loc(fused[#loc64, #loc65, #loc66, #loc60])
#loc124 = loc(fused[#loc67, #loc68])
#loc125 = loc(fused[#loc69, #loc70])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc80, #loc79])
#loc129 = loc(fused[#loc81, #loc82])
#loc130 = loc(fused[#loc85, #loc84])
#loc131 = loc(fused[#loc87, #loc88])
#loc132 = loc(fused[#loc90, #loc91])
#loc133 = loc(fused[#loc92, #loc93])
#loc134 = loc(fused[#loc94, #loc95])
