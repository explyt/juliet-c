!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":251:10)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":251:14)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":251:20)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":251:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc363 = loc(fused[#loc148, #loc149])
#loc364 = loc(fused[#loc150, #loc151])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc308)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc310)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc311)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc312)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc313)
  cir.func private @close(!s32i) -> !s32i loc(#loc314)
  cir.func private @printIntLine(!s32i) loc(#loc315)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc319)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc320)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc321)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc322)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc323)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc36)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.goto "source" loc(#loc325)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc40)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc30)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.scope {
      cir.do {
        %11 = cir.const #cir.int<2> : !s32i loc(#loc43)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %13 = cir.const #cir.int<6> : !s32i loc(#loc45)
        %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
        cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc327)
        cir.scope {
          %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %54 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc52)
          %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc329)
          cir.if %56 {
            cir.break loc(#loc54)
          } loc(#loc330)
        } loc(#loc328)
        %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc331)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
        %17 = cir.const #cir.int<16> : !u64i loc(#loc332)
        cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc333)
        %18 = cir.const #cir.int<2> : !s32i loc(#loc62)
        %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc62)
        %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
        cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc334)
        %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
        %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc65)
        %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
        %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
        cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc335)
        %26 = cir.const #cir.int<27015> : !s32i loc(#loc70)
        %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc70)
        %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc71)
        %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
        cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc336)
        cir.scope {
          %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
          %54 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc338)
          %55 = cir.const #cir.int<16> : !u64i loc(#loc339)
          %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc339)
          %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc82)
          %58 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc83)
          %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc340)
          cir.if %60 {
            cir.break loc(#loc85)
          } loc(#loc341)
        } loc(#loc337)
        %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
        %33 = cir.const #cir.int<3> : !s32i loc(#loc88)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc88)
        %35 = cir.const #cir.int<4> : !u64i loc(#loc88)
        %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc88)
        %37 = cir.const #cir.int<2> : !s32i loc(#loc88)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc88)
        %39 = cir.binop(add, %36, %38) : !u64i loc(#loc88)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc89)
        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc342)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc91)
        %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc91)
        cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc343)
        cir.scope {
          %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %54 = cir.const #cir.int<1> : !s32i loc(#loc97)
          %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc97)
          %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc345)
          %57 = cir.ternary(%56, true {
            %58 = cir.const #true loc(#loc98)
            cir.yield %58 : !cir.bool loc(#loc98)
          }, false {
            %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %59 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc346)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc98)
              cir.yield %62 : !cir.bool loc(#loc98)
            }, false {
              %62 = cir.const #false loc(#loc98)
              cir.yield %62 : !cir.bool loc(#loc98)
            }) : (!cir.bool) -> !cir.bool loc(#loc98)
            cir.yield %61 : !cir.bool loc(#loc98)
          }) : (!cir.bool) -> !cir.bool loc(#loc98)
          cir.if %57 {
            cir.break loc(#loc102)
          } loc(#loc347)
        } loc(#loc344)
        %46 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc103)
        %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
        %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
        %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc105)
        cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc348)
        %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
        %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
        cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
        cir.yield loc(#loc42)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc110)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc110)
        cir.condition(%12) loc(#loc110)
      } loc(#loc326)
    } loc(#loc326)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc114)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc114)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc351)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc117)
      } loc(#loc352)
    } loc(#loc350)
    cir.goto "sink" loc(#loc353)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc120)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc323)
    cir.store %10, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc323)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc124)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc355)
      cir.if %13 {
        %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
        %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc129)
        %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc130)
      } else {
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
      } loc(#loc356)
    } loc(#loc354)
    cir.return loc(#loc22)
  } loc(#loc317)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc134)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc136)
    cir.return loc(#loc133)
  } loc(#loc357)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc360)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc361)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc145)
  cir.func @main(%arg0: !s32i loc(fused[#loc148, #loc149]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc150, #loc151])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc364)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc152)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc153)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc154)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc154)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc155)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc142)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc365)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_18_good() : () -> () loc(#loc157)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc143)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc144)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc366)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_18_bad() : () -> () loc(#loc161)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc145)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc367)
    cir.return %17 : !s32i loc(#loc367)
  } loc(#loc362)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc166)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc370)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc371)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc372)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc373)
    %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc374)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc182)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.goto "source" loc(#loc376)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc186)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc176)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.scope {
      cir.do {
        %11 = cir.const #cir.int<2> : !s32i loc(#loc189)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc190)
        %13 = cir.const #cir.int<6> : !s32i loc(#loc191)
        %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc192)
        cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc378)
        cir.scope {
          %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc197)
          %54 = cir.const #cir.int<1> : !s32i loc(#loc198)
          %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc198)
          %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc380)
          cir.if %56 {
            cir.break loc(#loc200)
          } loc(#loc381)
        } loc(#loc379)
        %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc382)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc203)
        %17 = cir.const #cir.int<16> : !u64i loc(#loc383)
        cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc384)
        %18 = cir.const #cir.int<2> : !s32i loc(#loc208)
        %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc208)
        %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
        cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc385)
        %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc210)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc210)
        %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc211)
        %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
        %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
        cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc386)
        %26 = cir.const #cir.int<27015> : !s32i loc(#loc214)
        %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc214)
        %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc215)
        %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
        cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc387)
        cir.scope {
          %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %54 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc389)
          %55 = cir.const #cir.int<16> : !u64i loc(#loc390)
          %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc390)
          %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc225)
          %58 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc226)
          %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc391)
          cir.if %60 {
            cir.break loc(#loc228)
          } loc(#loc392)
        } loc(#loc388)
        %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc229)
        %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc230)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
        %33 = cir.const #cir.int<3> : !s32i loc(#loc231)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc231)
        %35 = cir.const #cir.int<4> : !u64i loc(#loc231)
        %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc231)
        %37 = cir.const #cir.int<2> : !s32i loc(#loc231)
        %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc231)
        %39 = cir.binop(add, %36, %38) : !u64i loc(#loc231)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc232)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc232)
        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc393)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc233)
        %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc234)
        %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc234)
        cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc394)
        cir.scope {
          %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc239)
          %54 = cir.const #cir.int<1> : !s32i loc(#loc240)
          %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc240)
          %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc396)
          %57 = cir.ternary(%56, true {
            %58 = cir.const #true loc(#loc241)
            cir.yield %58 : !cir.bool loc(#loc241)
          }, false {
            %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc242)
            %59 = cir.const #cir.int<0> : !s32i loc(#loc243)
            %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc397)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc241)
              cir.yield %62 : !cir.bool loc(#loc241)
            }, false {
              %62 = cir.const #false loc(#loc241)
              cir.yield %62 : !cir.bool loc(#loc241)
            }) : (!cir.bool) -> !cir.bool loc(#loc241)
            cir.yield %61 : !cir.bool loc(#loc241)
          }) : (!cir.bool) -> !cir.bool loc(#loc241)
          cir.if %57 {
            cir.break loc(#loc245)
          } loc(#loc398)
        } loc(#loc395)
        %46 = cir.const #cir.int<0> : !s32i loc(#loc246)
        %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc246)
        %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc247)
        %49 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
        %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc248)
        cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc399)
        %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc249)
        %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc250)
        cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
        cir.yield loc(#loc188)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc253)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc253)
        cir.condition(%12) loc(#loc253)
      } loc(#loc377)
    } loc(#loc377)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc256)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc257)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc257)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc402)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc260)
      } loc(#loc403)
    } loc(#loc401)
    cir.goto "sink" loc(#loc404)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc263)
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc374)
    cir.store %10, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc374)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc267)
      %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc406)
      %14 = cir.ternary(%13, true {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc270)
        %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc407)
        %18 = cir.ternary(%17, true {
          %19 = cir.const #true loc(#loc268)
          cir.yield %19 : !cir.bool loc(#loc268)
        }, false {
          %19 = cir.const #false loc(#loc268)
          cir.yield %19 : !cir.bool loc(#loc268)
        }) : (!cir.bool) -> !cir.bool loc(#loc268)
        cir.yield %18 : !cir.bool loc(#loc268)
      }, false {
        %15 = cir.const #false loc(#loc268)
        cir.yield %15 : !cir.bool loc(#loc268)
      }) : (!cir.bool) -> !cir.bool loc(#loc268)
      cir.if %14 {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
        %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc276)
        %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc276)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc276)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc277)
      } else {
        %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc166)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc166)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc278)
      } loc(#loc408)
    } loc(#loc405)
    cir.return loc(#loc168)
  } loc(#loc368)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc410)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc411)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc286)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.goto "source" loc(#loc413)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc290)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc291)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.goto "sink" loc(#loc415)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc295)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc411)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc411)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc299)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc417)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
        %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc304)
        %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc304)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc304)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc305)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc306)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc306)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc307)
      } loc(#loc418)
    } loc(#loc416)
    cir.return loc(#loc280)
  } loc(#loc409)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":119:23)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":44:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":122:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":46:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":46:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":56:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":56:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":57:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":57:28)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":58:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":58:32)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":59:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":59:41)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":110:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":110:30)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:12)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":48:5)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":49:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":49:10)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":50:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":60:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":95:17)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:36)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:45)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:58)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:29)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":70:69)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":74:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":71:34)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":72:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":73:17)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:20)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:21)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:30)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:33)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:47)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":75:48)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":76:34)
#loc63 = loc("/usr/include/netinet/in.h":249:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":76:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:39)
#loc66 = loc("/usr/include/netinet/in.h":251:20)
#loc67 = loc("/usr/include/netinet/in.h":33:15)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":77:59)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:38)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:32)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":78:46)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":82:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:25)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:58)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:59)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:68)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:82)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:17)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":79:88)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":80:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":81:17)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:31)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:46)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:59)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:77)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:80)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:26)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":85:81)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":89:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:17)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:31)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:44)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:47)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":86:61)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":87:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":88:17)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:39)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:25)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":91:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:25)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:20)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":93:36)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":95:16)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":99:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":96:30)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":97:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":98:26)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":98:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":107:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":107:10)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":108:1)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":120:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":113:21)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":114:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":116:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":118:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:33)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:26)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":115:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":119:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":236:1)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":240:1)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":238:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":238:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":239:5)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":239:13)
#loc138 = loc("/usr/include/stdlib.h":575:1)
#loc139 = loc("/usr/include/stdlib.h":575:41)
#loc140 = loc("/usr/include/time.h":76:1)
#loc141 = loc("/usr/include/time.h":76:38)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":256:15)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":258:15)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":261:15)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":263:15)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":251:1)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":266:1)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":252:1)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":254:27)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":254:22)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":254:5)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":256:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":257:5)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":257:59)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":258:5)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":261:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":262:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":262:58)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":263:5)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":265:12)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":265:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":203:23)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":129:1)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":206:1)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":131:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":131:9)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":141:9)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":141:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":142:9)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":142:28)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":143:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":143:32)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":144:9)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":144:41)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":195:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":195:30)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:13)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:12)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":133:5)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":134:5)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":134:10)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":135:1)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":145:9)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":180:17)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:36)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:45)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:58)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:29)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:13)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":155:69)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":159:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:17)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":156:34)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":157:13)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":158:17)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:20)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:21)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:30)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:33)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:47)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":160:48)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":161:34)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":161:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:49)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:39)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":162:59)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:38)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:32)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:13)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":163:46)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":167:13)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:25)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:58)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:59)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:68)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:82)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:17)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":164:88)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":165:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":166:17)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:31)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:46)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:59)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:77)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:80)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:26)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":170:81)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":174:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:17)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:31)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:44)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:47)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":171:61)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":172:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":173:17)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:39)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:25)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":176:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:25)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:20)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:13)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":178:36)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":180:16)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:9)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":184:9)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:13)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":181:30)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":182:9)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":183:26)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":183:13)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":192:5)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":192:10)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":193:1)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:9)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":204:9)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:13)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:21)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:23)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:26)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:34)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":197:36)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":198:9)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":200:9)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":202:9)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:33)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:26)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":199:13)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":203:13)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":209:1)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":234:1)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":211:5)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":211:9)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":222:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":222:30)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:13)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:12)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":213:5)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":214:5)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":214:10)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":215:1)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":218:12)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":218:5)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":219:5)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":219:10)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":220:1)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:9)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":232:9)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:13)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":225:21)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":226:9)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":228:9)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":230:9)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:33)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:26)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":227:13)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":231:23)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_18.c":231:13)
#loc308 = loc(fused[#loc1, #loc2])
#loc309 = loc(fused[#loc3, #loc4])
#loc310 = loc(fused[#loc6, #loc7])
#loc311 = loc(fused[#loc8, #loc9])
#loc312 = loc(fused[#loc10, #loc11])
#loc313 = loc(fused[#loc12, #loc13])
#loc314 = loc(fused[#loc14, #loc15])
#loc315 = loc(fused[#loc16, #loc17])
#loc316 = loc(fused[#loc18, #loc19])
#loc317 = loc(fused[#loc21, #loc22])
#loc318 = loc(fused[#loc23, #loc24])
#loc319 = loc(fused[#loc25, #loc26])
#loc320 = loc(fused[#loc27, #loc28])
#loc321 = loc(fused[#loc29, #loc30])
#loc322 = loc(fused[#loc31, #loc32])
#loc323 = loc(fused[#loc33, #loc34])
#loc324 = loc(fused[#loc37, #loc35])
#loc325 = loc(fused[#loc38, #loc39])
#loc326 = loc(fused[#loc41, #loc42])
#loc327 = loc(fused[#loc47, #loc48])
#loc328 = loc(fused[#loc49, #loc50])
#loc329 = loc(fused[#loc51, #loc52])
#loc330 = loc(fused[#loc53, #loc50])
#loc331 = loc(fused[#loc55, #loc56])
#loc332 = loc(fused[#loc58, #loc59])
#loc333 = loc(fused[#loc60, #loc61])
#loc334 = loc(fused[#loc64, #loc62])
#loc335 = loc(fused[#loc68, #loc69])
#loc336 = loc(fused[#loc73, #loc74])
#loc337 = loc(fused[#loc75, #loc76])
#loc338 = loc(fused[#loc78, #loc79])
#loc339 = loc(fused[#loc80, #loc81])
#loc340 = loc(fused[#loc82, #loc83])
#loc341 = loc(fused[#loc84, #loc76])
#loc342 = loc(fused[#loc88, #loc89])
#loc343 = loc(fused[#loc92, #loc93])
#loc344 = loc(fused[#loc94, #loc95])
#loc345 = loc(fused[#loc96, #loc97])
#loc346 = loc(fused[#loc99, #loc100])
#loc347 = loc(fused[#loc101, #loc95])
#loc348 = loc(fused[#loc105, #loc103])
#loc349 = loc(fused[#loc108, #loc109])
#loc350 = loc(fused[#loc111, #loc112])
#loc351 = loc(fused[#loc113, #loc114])
#loc352 = loc(fused[#loc115, #loc112])
#loc353 = loc(fused[#loc118, #loc119])
#loc354 = loc(fused[#loc121, #loc122])
#loc355 = loc(fused[#loc123, #loc124])
#loc356 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc357 = loc(fused[#loc132, #loc133])
#loc358 = loc(fused[#loc134, #loc135])
#loc359 = loc(fused[#loc136, #loc137])
#loc360 = loc(fused[#loc138, #loc139])
#loc361 = loc(fused[#loc140, #loc141])
#loc362 = loc(fused[#loc146, #loc147])
#loc365 = loc(fused[#loc157, #loc158])
#loc366 = loc(fused[#loc161, #loc162])
#loc367 = loc(fused[#loc165, #loc164])
#loc368 = loc(fused[#loc167, #loc168])
#loc369 = loc(fused[#loc169, #loc170])
#loc370 = loc(fused[#loc171, #loc172])
#loc371 = loc(fused[#loc173, #loc174])
#loc372 = loc(fused[#loc175, #loc176])
#loc373 = loc(fused[#loc177, #loc178])
#loc374 = loc(fused[#loc179, #loc180])
#loc375 = loc(fused[#loc183, #loc181])
#loc376 = loc(fused[#loc184, #loc185])
#loc377 = loc(fused[#loc187, #loc188])
#loc378 = loc(fused[#loc193, #loc194])
#loc379 = loc(fused[#loc195, #loc196])
#loc380 = loc(fused[#loc197, #loc198])
#loc381 = loc(fused[#loc199, #loc196])
#loc382 = loc(fused[#loc201, #loc202])
#loc383 = loc(fused[#loc204, #loc205])
#loc384 = loc(fused[#loc206, #loc207])
#loc385 = loc(fused[#loc209, #loc208])
#loc386 = loc(fused[#loc212, #loc213])
#loc387 = loc(fused[#loc216, #loc217])
#loc388 = loc(fused[#loc218, #loc219])
#loc389 = loc(fused[#loc221, #loc222])
#loc390 = loc(fused[#loc223, #loc224])
#loc391 = loc(fused[#loc225, #loc226])
#loc392 = loc(fused[#loc227, #loc219])
#loc393 = loc(fused[#loc231, #loc232])
#loc394 = loc(fused[#loc235, #loc236])
#loc395 = loc(fused[#loc237, #loc238])
#loc396 = loc(fused[#loc239, #loc240])
#loc397 = loc(fused[#loc242, #loc243])
#loc398 = loc(fused[#loc244, #loc238])
#loc399 = loc(fused[#loc248, #loc246])
#loc400 = loc(fused[#loc251, #loc252])
#loc401 = loc(fused[#loc254, #loc255])
#loc402 = loc(fused[#loc256, #loc257])
#loc403 = loc(fused[#loc258, #loc255])
#loc404 = loc(fused[#loc261, #loc262])
#loc405 = loc(fused[#loc264, #loc265])
#loc406 = loc(fused[#loc266, #loc267])
#loc407 = loc(fused[#loc269, #loc271])
#loc408 = loc(fused[#loc272, #loc273, #loc274, #loc265])
#loc409 = loc(fused[#loc279, #loc280])
#loc410 = loc(fused[#loc281, #loc282])
#loc411 = loc(fused[#loc283, #loc284])
#loc412 = loc(fused[#loc287, #loc285])
#loc413 = loc(fused[#loc288, #loc289])
#loc414 = loc(fused[#loc292, #loc291])
#loc415 = loc(fused[#loc293, #loc294])
#loc416 = loc(fused[#loc296, #loc297])
#loc417 = loc(fused[#loc298, #loc299])
#loc418 = loc(fused[#loc300, #loc301, #loc302, #loc297])
