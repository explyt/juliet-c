!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":192:10)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":192:14)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":192:20)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":192:32)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:27)
#true = #cir.bool<true> : !cir.bool
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType" {!s32i, !s32i}>
#loc378 = loc(fused[#loc131, #loc132])
#loc379 = loc(fused[#loc133, #loc134])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc327)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc328)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc329)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc331)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc332)
  cir.func private @printIntLine(!s32i) loc(#loc333)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc334)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc336)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc337)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc338)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc339)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc340)
    %5 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc341)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb1 loc(#loc343)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc336)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc336)
    cir.br ^bb2 loc(#loc344)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc41)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc41)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc41)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc41)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc328)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc345)
    cir.brcond %23 ^bb3, ^bb4 loc(#loc346)
  ^bb3:  // pred: ^bb2
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %25, %4 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb5 loc(#loc46)
  ^bb4:  // pred: ^bb2
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %29 = cir.get_member %5[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %28, %29 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb8 loc(#loc349)
  ^bb8:  // pred: ^bb7
    %30 = cir.get_member %5[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc58)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb9 loc(#loc350)
  ^bb9:  // pred: ^bb8
    %32 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc61)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc62)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc62)
    %35 = cir.const #cir.int<4> : !u64i loc(#loc351)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc352)
    %37 = cir.call @malloc(%36) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc353)
    cir.store %38, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc339)
    cir.br ^bb10 loc(#loc354)
  ^bb10:  // pred: ^bb9
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc68)
    %42 = cir.cmp(eq, %39, %41) : !cir.ptr<!s32i>, !cir.bool loc(#loc355)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc356)
  ^bb11:  // pred: ^bb10
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc72)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb12 loc(#loc66)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc66)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc357)
  ^bb14:  // pred: ^bb13
    %46 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %46, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb15 loc(#loc357)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %49 ^bb16, ^bb20 loc(#loc79)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc360)
  ^bb17:  // pred: ^bb16
    %50 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc84)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb18 loc(#loc74)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc74)
  ^bb19:  // pred: ^bb18
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc86)
    cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb15 loc(#loc357)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc74)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc363)
  ^bb22:  // pred: ^bb21
    %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %58 = cir.cmp(ge, %56, %57) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %58 ^bb23, ^bb32 loc(#loc365)
  ^bb23:  // pred: ^bb22
    %59 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %60 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %62 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %61 : !s32i), !cir.ptr<!s32i> loc(#loc97)
    cir.store %59, %62 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb24 loc(#loc367)
  ^bb24:  // pred: ^bb23
    %63 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %63, %2 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb25 loc(#loc367)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %64 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %65 = cir.const #cir.int<10> : !s32i loc(#loc103)
    %66 = cir.cmp(lt, %64, %65) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %66 ^bb26, ^bb30 loc(#loc104)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc370)
  ^bb27:  // pred: ^bb26
    %67 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %69 = cir.ptr_stride(%67 : !cir.ptr<!s32i>, %68 : !s32i), !cir.ptr<!s32i> loc(#loc108)
    %70 = cir.load %69 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%70) : (!s32i) -> () loc(#loc109)
    cir.br ^bb28 loc(#loc99)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc99)
  ^bb29:  // pred: ^bb28
    %71 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %72 = cir.unary(inc, %71) : !s32i, !s32i loc(#loc111)
    cir.store %72, %2 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb25 loc(#loc367)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc99)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc92)
  ^bb32:  // pred: ^bb22
    %73 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %74 = cir.cast(array_to_ptrdecay, %73 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%74) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb33 loc(#loc88)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc88)
  ^bb34:  // pred: ^bb33
    %75 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %76 = cir.cast(bitcast, %75 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%76) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb35 loc(#loc60)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc57)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc20)
  } loc(#loc335)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc117)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc119)
    cir.return loc(#loc116)
  } loc(#loc372)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc375)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc128)
  cir.func @main(%arg0: !s32i loc(fused[#loc131, #loc132]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc133, #loc134])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc379)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc130)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc135)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc136)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc137)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc137)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc138)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc125)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_good() : () -> () loc(#loc140)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc127)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc381)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_bad() : () -> () loc(#loc144)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc128)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc147)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    cir.return %17 : !s32i loc(#loc382)
  } loc(#loc377)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc385)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc386)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc387)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc388)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc162)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc164)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %9 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb1 loc(#loc392)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc58)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    cir.br ^bb2 loc(#loc393)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc172)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc173)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc173)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc394)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc395)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc396)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc386)
    cir.br ^bb3 loc(#loc397)
  ^bb3:  // pred: ^bb2
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc179)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc398)
    cir.brcond %22 ^bb4, ^bb5 loc(#loc399)
  ^bb4:  // pred: ^bb3
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc183)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc400)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc186)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    cir.br ^bb8 loc(#loc400)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc189)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc190)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc403)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.br ^bb11 loc(#loc185)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc185)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc197)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb8 loc(#loc400)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc185)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc406)
  ^bb15:  // pred: ^bb14
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %38 ^bb16, ^bb25 loc(#loc408)
  ^bb16:  // pred: ^bb15
    %39 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc208)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb17 loc(#loc410)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb18 loc(#loc410)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc214)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc412)
    cir.brcond %46 ^bb19, ^bb23 loc(#loc215)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc413)
  ^bb20:  // pred: ^bb19
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc219)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc220)
    cir.br ^bb21 loc(#loc210)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc210)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc222)
    cir.store %52, %1 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb18 loc(#loc410)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc210)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc203)
  ^bb25:  // pred: ^bb15
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc223)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc223)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    cir.br ^bb26 loc(#loc199)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc199)
  ^bb27:  // pred: ^bb26
    %55 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc225)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc226)
    cir.br ^bb28 loc(#loc171)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc169)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc150)
  } loc(#loc383)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc227)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc416)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc417)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc418)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc419)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc420)
    %5 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc421)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc243)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb1 loc(#loc423)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc416)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc416)
    cir.br ^bb2 loc(#loc424)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc249)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc250)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc250)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc250)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc250)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc250)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc250)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc250)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc250)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc328)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc251)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc252)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc253)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc425)
    cir.brcond %23 ^bb3, ^bb4 loc(#loc426)
  ^bb3:  // pred: ^bb2
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc257)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc258)
    cir.store %25, %4 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.br ^bb5 loc(#loc255)
  ^bb4:  // pred: ^bb2
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc261)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.br ^bb5 loc(#loc248)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc248)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %29 = cir.get_member %5[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %28, %29 : !s32i, !cir.ptr<!s32i> loc(#loc428)
    cir.br ^bb8 loc(#loc429)
  ^bb8:  // pred: ^bb7
    %30 = cir.get_member %5[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc58)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb9 loc(#loc430)
  ^bb9:  // pred: ^bb8
    %32 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc269)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc270)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc270)
    %35 = cir.const #cir.int<4> : !u64i loc(#loc431)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc432)
    %37 = cir.call @malloc(%36) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc269)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc433)
    cir.store %38, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc419)
    cir.br ^bb10 loc(#loc434)
  ^bb10:  // pred: ^bb9
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc275)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc276)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc276)
    %42 = cir.cmp(eq, %39, %41) : !cir.ptr<!s32i>, !cir.bool loc(#loc435)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc436)
  ^bb11:  // pred: ^bb10
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc278)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc280)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc278)
    cir.br ^bb12 loc(#loc274)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc274)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc437)
  ^bb14:  // pred: ^bb13
    %46 = cir.const #cir.int<0> : !s32i loc(#loc283)
    cir.store %46, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb15 loc(#loc437)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc286)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc439)
    cir.brcond %49 ^bb16, ^bb20 loc(#loc287)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc440)
  ^bb17:  // pred: ^bb16
    %50 = cir.const #cir.int<0> : !s32i loc(#loc289)
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc290)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc292)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    cir.br ^bb18 loc(#loc282)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc282)
  ^bb19:  // pred: ^bb18
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc294)
    cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.br ^bb15 loc(#loc437)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc282)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc443)
  ^bb22:  // pred: ^bb21
    %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc298)
    %58 = cir.cmp(ge, %56, %57) : !s32i, !cir.bool loc(#loc444)
    cir.brcond %58 ^bb23, ^bb28 loc(#loc299)
  ^bb23:  // pred: ^bb22
    %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %60 = cir.const #cir.int<10> : !s32i loc(#loc301)
    %61 = cir.cmp(lt, %59, %60) : !s32i, !cir.bool loc(#loc445)
    cir.brcond %61 ^bb24, ^bb25 loc(#loc299)
  ^bb24:  // pred: ^bb23
    %62 = cir.const #true loc(#loc299)
    cir.br ^bb26(%62 : !cir.bool) loc(#loc299)
  ^bb25:  // pred: ^bb23
    %63 = cir.const #false loc(#loc299)
    cir.br ^bb26(%63 : !cir.bool) loc(#loc299)
  ^bb26(%64: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:27)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc299)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29(%64 : !cir.bool) loc(#loc299)
  ^bb28:  // pred: ^bb22
    %65 = cir.const #false loc(#loc299)
    cir.br ^bb29(%65 : !cir.bool) loc(#loc299)
  ^bb29(%66: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:27)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc299)
  ^bb30:  // pred: ^bb29
    cir.brcond %66 ^bb31, ^bb40 loc(#loc446)
  ^bb31:  // pred: ^bb30
    %67 = cir.const #cir.int<1> : !s32i loc(#loc306)
    %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc307)
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %70 = cir.ptr_stride(%68 : !cir.ptr<!s32i>, %69 : !s32i), !cir.ptr<!s32i> loc(#loc309)
    cir.store %67, %70 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb32 loc(#loc448)
  ^bb32:  // pred: ^bb31
    %71 = cir.const #cir.int<0> : !s32i loc(#loc312)
    cir.store %71, %2 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.br ^bb33 loc(#loc448)
  ^bb33:  // 2 preds: ^bb32, ^bb37
    %72 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    %73 = cir.const #cir.int<10> : !s32i loc(#loc315)
    %74 = cir.cmp(lt, %72, %73) : !s32i, !cir.bool loc(#loc450)
    cir.brcond %74 ^bb34, ^bb38 loc(#loc316)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc451)
  ^bb35:  // pred: ^bb34
    %75 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc318)
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %77 = cir.ptr_stride(%75 : !cir.ptr<!s32i>, %76 : !s32i), !cir.ptr<!s32i> loc(#loc320)
    %78 = cir.load %77 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    cir.call @printIntLine(%78) : (!s32i) -> () loc(#loc321)
    cir.br ^bb36 loc(#loc311)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc311)
  ^bb37:  // pred: ^bb36
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    %80 = cir.unary(inc, %79) : !s32i, !s32i loc(#loc323)
    cir.store %80, %2 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.br ^bb33 loc(#loc448)
  ^bb38:  // pred: ^bb33
    cir.br ^bb39 loc(#loc311)
  ^bb39:  // pred: ^bb38
    cir.br ^bb41 loc(#loc304)
  ^bb40:  // pred: ^bb30
    %81 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc227)
    %82 = cir.cast(array_to_ptrdecay, %81 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%82) : (!cir.ptr<!s8i>) -> () loc(#loc324)
    cir.br ^bb41 loc(#loc296)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc296)
  ^bb42:  // pred: ^bb41
    %83 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc325)
    %84 = cir.cast(bitcast, %83 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc325)
    cir.call @free(%84) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc326)
    cir.br ^bb43 loc(#loc268)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc266)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc229)
  } loc(#loc415)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":46:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":74:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":30:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":79:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":37:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":37:45)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":51:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":51:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":53:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":53:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:58)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":32:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":32:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":33:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":33:68)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":35:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":35:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":35:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":36:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":48:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":47:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:49)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":39:59)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":40:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":43:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":45:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":42:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":42:20)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":42:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":42:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":46:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":49:26)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":24:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":49:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":50:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":78:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":25:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":52:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":77:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:35)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:42)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:47)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":54:57)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:43)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:17)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:33)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:34)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:40)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":55:39)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":60:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:22)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:25)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:29)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:27)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":58:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":59:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":59:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":59:24)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":59:25)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":57:33)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":63:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":75:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":63:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":63:25)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":64:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":71:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":73:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":65:32)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":65:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":65:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":65:28)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":70:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:25)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:21)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:28)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":68:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":69:34)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":69:41)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":69:42)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":69:21)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:37)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":67:36)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":74:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":76:18)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":76:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":178:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":182:1)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":180:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":180:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":181:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":181:13)
#loc121 = loc("/usr/include/stdlib.h":575:1)
#loc122 = loc("/usr/include/stdlib.h":575:41)
#loc123 = loc("/usr/include/time.h":76:1)
#loc124 = loc("/usr/include/time.h":76:38)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":197:15)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":199:15)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":202:15)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":204:15)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":192:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":207:1)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":193:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":195:27)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":195:22)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":195:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":197:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":198:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":198:63)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":199:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":202:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":203:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":203:62)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":204:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":206:12)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":206:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":86:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":125:1)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":97:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":97:28)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":99:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":99:17)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:58)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":88:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":88:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":89:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":89:68)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":91:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":91:12)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":91:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":94:12)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":94:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":95:26)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":95:5)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":96:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":124:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":98:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":123:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:35)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:42)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:47)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":100:57)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:43)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:27)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:33)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:34)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:40)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":101:39)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":106:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:22)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:18)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:25)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:29)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:27)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":104:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":105:29)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":105:17)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":105:24)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":105:25)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:34)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":103:33)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":109:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":121:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":109:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":109:25)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":110:13)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":117:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":119:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":111:32)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":111:17)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":111:24)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":111:28)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:17)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":116:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:25)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:21)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:28)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:32)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:30)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":114:17)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":115:34)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":115:41)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":115:42)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":115:21)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:37)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":113:36)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":120:27)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":120:17)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":122:18)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":122:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":171:27)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":128:1)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":176:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":135:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":135:45)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":149:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":149:28)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":151:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":151:17)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:13)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:58)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":130:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":130:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":131:5)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":131:68)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":133:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":133:12)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":133:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":134:5)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":146:5)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":145:9)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:19)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:32)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:49)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":137:59)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":138:9)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":141:9)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":143:9)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":140:25)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":140:20)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":140:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":140:36)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":144:23)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":144:13)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":147:26)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":147:5)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":148:5)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":175:5)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":150:9)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":174:9)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:35)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:42)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:47)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":152:57)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:43)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:27)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:33)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:34)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:40)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":153:39)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":158:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:22)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:18)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:25)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:29)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:27)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":156:13)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":157:29)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":157:17)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":157:24)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":157:25)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:34)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":155:33)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:13)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":172:13)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:17)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:25)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:30)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:38)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":160:40)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":161:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":168:13)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":170:13)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":162:32)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":162:17)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":162:24)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":162:28)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:17)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":167:17)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:25)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:21)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:28)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:32)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:30)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":165:17)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":166:34)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":166:41)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":166:42)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":166:21)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:37)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":164:36)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":171:17)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":173:18)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34.c":173:13)
#loc327 = loc(fused[#loc1, #loc2])
#loc328 = loc(fused[#loc3, #loc4])
#loc329 = loc(fused[#loc5, #loc6])
#loc330 = loc(fused[#loc7, #loc8])
#loc331 = loc(fused[#loc10, #loc11])
#loc332 = loc(fused[#loc12, #loc13])
#loc333 = loc(fused[#loc14, #loc15])
#loc334 = loc(fused[#loc17, #loc18])
#loc335 = loc(fused[#loc19, #loc20])
#loc336 = loc(fused[#loc21, #loc22])
#loc337 = loc(fused[#loc23, #loc24])
#loc338 = loc(fused[#loc25, #loc26])
#loc339 = loc(fused[#loc27, #loc28])
#loc340 = loc(fused[#loc29, #loc30])
#loc341 = loc(fused[#loc31, #loc32])
#loc342 = loc(fused[#loc35, #loc33])
#loc343 = loc(fused[#loc36, #loc37])
#loc344 = loc(fused[#loc38, #loc39])
#loc345 = loc(fused[#loc43, #loc44])
#loc346 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc347 = loc(fused[#loc50, #loc51])
#loc348 = loc(fused[#loc55, #loc53])
#loc349 = loc(fused[#loc56, #loc57])
#loc350 = loc(fused[#loc59, #loc60])
#loc351 = loc(fused[#loc63, #loc64])
#loc352 = loc(fused[#loc62, #loc64])
#loc353 = loc(fused[#loc61, #loc28])
#loc354 = loc(fused[#loc65, #loc66])
#loc355 = loc(fused[#loc67, #loc68])
#loc356 = loc(fused[#loc69, #loc66])
#loc357 = loc(fused[#loc73, #loc74])
#loc358 = loc(fused[#loc76, #loc75])
#loc359 = loc(fused[#loc77, #loc78])
#loc360 = loc(fused[#loc80, #loc74])
#loc361 = loc(fused[#loc82, #loc81])
#loc362 = loc(fused[#loc86, #loc85])
#loc363 = loc(fused[#loc87, #loc88])
#loc364 = loc(fused[#loc89, #loc90])
#loc365 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc366 = loc(fused[#loc95, #loc94])
#loc367 = loc(fused[#loc98, #loc99])
#loc368 = loc(fused[#loc101, #loc100])
#loc369 = loc(fused[#loc102, #loc103])
#loc370 = loc(fused[#loc105, #loc99])
#loc371 = loc(fused[#loc111, #loc110])
#loc372 = loc(fused[#loc115, #loc116])
#loc373 = loc(fused[#loc117, #loc118])
#loc374 = loc(fused[#loc119, #loc120])
#loc375 = loc(fused[#loc121, #loc122])
#loc376 = loc(fused[#loc123, #loc124])
#loc377 = loc(fused[#loc129, #loc130])
#loc380 = loc(fused[#loc140, #loc141])
#loc381 = loc(fused[#loc144, #loc145])
#loc382 = loc(fused[#loc148, #loc147])
#loc383 = loc(fused[#loc149, #loc150])
#loc384 = loc(fused[#loc151, #loc152])
#loc385 = loc(fused[#loc153, #loc154])
#loc386 = loc(fused[#loc155, #loc156])
#loc387 = loc(fused[#loc157, #loc158])
#loc388 = loc(fused[#loc159, #loc160])
#loc389 = loc(fused[#loc163, #loc161])
#loc390 = loc(fused[#loc165, #loc164])
#loc391 = loc(fused[#loc167, #loc166])
#loc392 = loc(fused[#loc168, #loc169])
#loc393 = loc(fused[#loc170, #loc171])
#loc394 = loc(fused[#loc174, #loc175])
#loc395 = loc(fused[#loc173, #loc175])
#loc396 = loc(fused[#loc172, #loc156])
#loc397 = loc(fused[#loc176, #loc177])
#loc398 = loc(fused[#loc178, #loc179])
#loc399 = loc(fused[#loc180, #loc177])
#loc400 = loc(fused[#loc184, #loc185])
#loc401 = loc(fused[#loc187, #loc186])
#loc402 = loc(fused[#loc188, #loc189])
#loc403 = loc(fused[#loc191, #loc185])
#loc404 = loc(fused[#loc193, #loc192])
#loc405 = loc(fused[#loc197, #loc196])
#loc406 = loc(fused[#loc198, #loc199])
#loc407 = loc(fused[#loc200, #loc201])
#loc408 = loc(fused[#loc202, #loc203, #loc204, #loc199])
#loc409 = loc(fused[#loc206, #loc205])
#loc410 = loc(fused[#loc209, #loc210])
#loc411 = loc(fused[#loc212, #loc211])
#loc412 = loc(fused[#loc213, #loc214])
#loc413 = loc(fused[#loc216, #loc210])
#loc414 = loc(fused[#loc222, #loc221])
#loc415 = loc(fused[#loc228, #loc229])
#loc416 = loc(fused[#loc230, #loc231])
#loc417 = loc(fused[#loc232, #loc233])
#loc418 = loc(fused[#loc234, #loc235])
#loc419 = loc(fused[#loc236, #loc237])
#loc420 = loc(fused[#loc238, #loc239])
#loc421 = loc(fused[#loc240, #loc241])
#loc422 = loc(fused[#loc244, #loc242])
#loc423 = loc(fused[#loc245, #loc246])
#loc424 = loc(fused[#loc247, #loc248])
#loc425 = loc(fused[#loc252, #loc253])
#loc426 = loc(fused[#loc254, #loc255, #loc256, #loc248])
#loc427 = loc(fused[#loc259, #loc260])
#loc428 = loc(fused[#loc264, #loc263])
#loc429 = loc(fused[#loc265, #loc266])
#loc430 = loc(fused[#loc267, #loc268])
#loc431 = loc(fused[#loc271, #loc272])
#loc432 = loc(fused[#loc270, #loc272])
#loc433 = loc(fused[#loc269, #loc237])
#loc434 = loc(fused[#loc273, #loc274])
#loc435 = loc(fused[#loc275, #loc276])
#loc436 = loc(fused[#loc277, #loc274])
#loc437 = loc(fused[#loc281, #loc282])
#loc438 = loc(fused[#loc284, #loc283])
#loc439 = loc(fused[#loc285, #loc286])
#loc440 = loc(fused[#loc288, #loc282])
#loc441 = loc(fused[#loc290, #loc289])
#loc442 = loc(fused[#loc294, #loc293])
#loc443 = loc(fused[#loc295, #loc296])
#loc444 = loc(fused[#loc297, #loc298])
#loc445 = loc(fused[#loc300, #loc302])
#loc446 = loc(fused[#loc303, #loc304, #loc305, #loc296])
#loc447 = loc(fused[#loc307, #loc306])
#loc448 = loc(fused[#loc310, #loc311])
#loc449 = loc(fused[#loc313, #loc312])
#loc450 = loc(fused[#loc314, #loc315])
#loc451 = loc(fused[#loc317, #loc311])
#loc452 = loc(fused[#loc323, #loc322])
