!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc212)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc213)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc216)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc218)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc223)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc218)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc218)
    cir.br ^bb4 loc(#loc225)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc39)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb7 loc(#loc36)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc229)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %27 ^bb13, ^bb16 loc(#loc230)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc231)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %30 = cir.binop(add, %28, %29) nsw : !s32i loc(#loc49)
    cir.store %30, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc51)
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc44)
  ^bb16:  // 2 preds: ^bb12, ^bb15
    cir.br ^bb17 loc(#loc44)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc13)
  } loc(#loc217)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc233)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc234)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc235)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc236)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc53)
  } loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc238)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc239)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc240)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc243)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc244)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc238)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc238)
    cir.br ^bb4 loc(#loc245)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc83)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc83)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc83)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc83)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc83)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc83)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc83)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc85)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc247)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc91)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb7 loc(#loc88)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb7 loc(#loc81)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc75)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc75)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc249)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %27 ^bb13, ^bb14 loc(#loc250)
  ^bb13:  // pred: ^bb12
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb20 loc(#loc100)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc251)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %31 = cir.const #cir.int<2147483647> : !s32i loc(#loc106)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %32 ^bb16, ^bb17 loc(#loc253)
  ^bb16:  // pred: ^bb15
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %35 = cir.binop(add, %33, %34) nsw : !s32i loc(#loc110)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc112)
    cir.br ^bb18 loc(#loc108)
  ^bb17:  // pred: ^bb15
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc63)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb18 loc(#loc104)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc97)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc97)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc65)
  } loc(#loc237)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc255)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc256)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc257)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc260)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc261)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc255)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc255)
    cir.br ^bb4 loc(#loc262)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc133)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc133)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc133)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc133)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc133)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc133)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc263)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc264)
  ^bb5:  // pred: ^bb4
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc141)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb7 loc(#loc138)
  ^bb6:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb7 loc(#loc131)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc129)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc125)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc266)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %27 ^bb13, ^bb19 loc(#loc267)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc268)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %29 = cir.const #cir.int<2147483647> : !s32i loc(#loc153)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %30 ^bb15, ^bb16 loc(#loc270)
  ^bb15:  // pred: ^bb14
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %33 = cir.binop(add, %31, %32) nsw : !s32i loc(#loc157)
    cir.store %33, %1 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc159)
    cir.br ^bb17 loc(#loc155)
  ^bb16:  // pred: ^bb14
    %35 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc160)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb17 loc(#loc151)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc151)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc147)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc147)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc115)
  } loc(#loc254)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc273)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc168)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb1 loc(#loc275)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc172)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc276)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb4 loc(#loc174)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc178)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc278)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %9 ^bb7, ^bb10 loc(#loc279)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc186)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc188)
    cir.br ^bb9 loc(#loc185)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc181)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc181)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc163)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc283)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb1 loc(#loc285)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2> : !s32i loc(#loc201)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb3 loc(#loc198)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc198)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc205)
    cir.brcond %7 ^bb6, ^bb9 loc(#loc289)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc290)
  ^bb7:  // pred: ^bb6
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc209)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc211)
    cir.br ^bb8 loc(#loc208)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc190)
  } loc(#loc281)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":47:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":30:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":59:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":38:13)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":38:49)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":55:13)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":55:33)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":32:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":32:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":34:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":34:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":35:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":50:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":35:8)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":36:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":37:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":49:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:13)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":48:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:23)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:36)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:53)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:17)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":40:63)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":41:13)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":44:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":46:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":43:29)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":43:24)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":43:17)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":43:40)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":47:17)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":51:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":58:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":51:8)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":52:5)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":53:9)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":57:9)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":55:26)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":56:26)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":56:13)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":191:1)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":197:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":193:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":193:14)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":194:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":194:14)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":195:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":195:14)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":196:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":196:14)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":90:19)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":102:23)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":66:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":105:1)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":74:13)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":74:49)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":97:13)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":97:33)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":68:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":68:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":70:12)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":70:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":71:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":86:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":71:8)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":72:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":73:9)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":85:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:13)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":84:13)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:23)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:36)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:53)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:17)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":76:63)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":77:13)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":80:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":82:13)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":79:29)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":79:24)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":79:17)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":79:40)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":83:27)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":83:17)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":87:5)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":104:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":87:8)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":88:5)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":91:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":93:5)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":90:9)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":95:9)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":103:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":95:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":95:20)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":96:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":99:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":101:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":97:26)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":98:26)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":98:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":102:13)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":108:1)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":142:1)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":116:13)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":116:49)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":134:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":134:33)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":110:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":110:9)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":112:12)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":112:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":113:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":128:5)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":113:8)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":114:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":115:9)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":127:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":126:13)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:23)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:36)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:53)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:17)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":118:63)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":119:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":122:13)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":124:13)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":121:29)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":121:24)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":121:17)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":121:40)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":125:27)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":125:17)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":129:5)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":141:5)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":129:8)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":130:5)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":132:9)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":140:9)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":132:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":132:20)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":133:9)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":136:9)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":138:9)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":134:26)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":135:26)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":135:13)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":139:23)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":139:13)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":145:1)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":168:1)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":164:13)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":164:33)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":147:5)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":147:9)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":149:12)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":149:5)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":150:5)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":159:5)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":150:8)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":151:5)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":154:5)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":156:5)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":153:19)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":153:9)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":158:16)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":158:9)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":160:5)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":167:5)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":160:8)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":161:5)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":162:9)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":166:9)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":164:26)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":165:26)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":165:13)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":171:1)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":189:1)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":185:13)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":185:33)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":173:5)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":173:9)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":175:12)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":175:5)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":176:5)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":180:5)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":176:8)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":177:5)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":179:16)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":179:9)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":181:5)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":188:5)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":181:8)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":182:5)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":183:9)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":187:9)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":185:26)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":186:26)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_add_04.c":186:13)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc10, #loc11])
#loc217 = loc(fused[#loc12, #loc13])
#loc218 = loc(fused[#loc14, #loc15])
#loc219 = loc(fused[#loc16, #loc17])
#loc220 = loc(fused[#loc18, #loc19])
#loc221 = loc(fused[#loc21, #loc20])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc25, #loc23])
#loc224 = loc(fused[#loc26, #loc27])
#loc225 = loc(fused[#loc28, #loc29])
#loc226 = loc(fused[#loc33, #loc34])
#loc227 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc228 = loc(fused[#loc40, #loc41])
#loc229 = loc(fused[#loc43, #loc44])
#loc230 = loc(fused[#loc46, #loc44])
#loc231 = loc(fused[#loc47, #loc48])
#loc232 = loc(fused[#loc52, #loc53])
#loc233 = loc(fused[#loc54, #loc55])
#loc234 = loc(fused[#loc56, #loc57])
#loc235 = loc(fused[#loc58, #loc59])
#loc236 = loc(fused[#loc60, #loc61])
#loc237 = loc(fused[#loc64, #loc65])
#loc238 = loc(fused[#loc66, #loc67])
#loc239 = loc(fused[#loc68, #loc69])
#loc240 = loc(fused[#loc70, #loc71])
#loc241 = loc(fused[#loc73, #loc72])
#loc242 = loc(fused[#loc74, #loc75])
#loc243 = loc(fused[#loc77, #loc75])
#loc244 = loc(fused[#loc78, #loc79])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc85, #loc86])
#loc247 = loc(fused[#loc87, #loc88, #loc89, #loc81])
#loc248 = loc(fused[#loc92, #loc93])
#loc249 = loc(fused[#loc96, #loc97])
#loc250 = loc(fused[#loc99, #loc100, #loc101, #loc97])
#loc251 = loc(fused[#loc103, #loc104])
#loc252 = loc(fused[#loc105, #loc106])
#loc253 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc254 = loc(fused[#loc114, #loc115])
#loc255 = loc(fused[#loc116, #loc117])
#loc256 = loc(fused[#loc118, #loc119])
#loc257 = loc(fused[#loc120, #loc121])
#loc258 = loc(fused[#loc123, #loc122])
#loc259 = loc(fused[#loc124, #loc125])
#loc260 = loc(fused[#loc127, #loc125])
#loc261 = loc(fused[#loc128, #loc129])
#loc262 = loc(fused[#loc130, #loc131])
#loc263 = loc(fused[#loc135, #loc136])
#loc264 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc265 = loc(fused[#loc142, #loc143])
#loc266 = loc(fused[#loc146, #loc147])
#loc267 = loc(fused[#loc149, #loc147])
#loc268 = loc(fused[#loc150, #loc151])
#loc269 = loc(fused[#loc152, #loc153])
#loc270 = loc(fused[#loc154, #loc155, #loc156, #loc151])
#loc271 = loc(fused[#loc162, #loc163])
#loc272 = loc(fused[#loc164, #loc165])
#loc273 = loc(fused[#loc166, #loc167])
#loc274 = loc(fused[#loc169, #loc168])
#loc275 = loc(fused[#loc170, #loc171])
#loc276 = loc(fused[#loc173, #loc174, #loc175, #loc171])
#loc277 = loc(fused[#loc179, #loc178])
#loc278 = loc(fused[#loc180, #loc181])
#loc279 = loc(fused[#loc183, #loc181])
#loc280 = loc(fused[#loc184, #loc185])
#loc281 = loc(fused[#loc189, #loc190])
#loc282 = loc(fused[#loc191, #loc192])
#loc283 = loc(fused[#loc193, #loc194])
#loc284 = loc(fused[#loc196, #loc195])
#loc285 = loc(fused[#loc197, #loc198])
#loc286 = loc(fused[#loc200, #loc198])
#loc287 = loc(fused[#loc202, #loc201])
#loc288 = loc(fused[#loc203, #loc204])
#loc289 = loc(fused[#loc206, #loc204])
#loc290 = loc(fused[#loc207, #loc208])
