!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc19)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc26)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc26)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc189)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc190)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
          cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
          cir.scope {
            %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc193)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc33)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc37)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc194)
          } loc(#loc192)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc38)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
          %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          %16 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc42)
          %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
          %19 = cir.const #cir.int<130000> : !s32i loc(#loc44)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc195)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc196)
          %23 = cir.call @realloc(%18, %22) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
          cir.store %24, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
          cir.scope {
            %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc200)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc54)
            cir.if %29 {
              %30 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
              %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              %32 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
              %34 = cir.call @strcpy(%31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
              %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc59)
              %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
              %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
              cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
            } loc(#loc201)
          } loc(#loc199)
        } loc(#loc187)
      } loc(#loc186)
    } loc(#loc185)
    cir.return loc(#loc16)
  } loc(#loc184)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc63)
  } loc(#loc202)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc73)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc73)
      cir.if %1 {
        %2 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc77)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc210)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc84)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc85)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc85)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc211)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc212)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
          cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
          cir.scope {
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc215)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc92)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc96)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
            } loc(#loc216)
          } loc(#loc214)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc97)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc99)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc99)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc102)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          %20 = cir.const #cir.int<130000> : !s32i loc(#loc104)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc104)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc217)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc218)
          %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
          cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
          cir.scope {
            %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc222)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc114)
            cir.if %33 {
              %34 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
              cir.store %34, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc118)
              %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
              %37 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc120)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc120)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
              %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc122)
            } loc(#loc223)
          } loc(#loc221)
          %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc123)
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
          cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
        } loc(#loc208)
      } loc(#loc207)
    } loc(#loc206)
    cir.return loc(#loc70)
  } loc(#loc205)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc129)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc230)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc137)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc138)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc138)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc231)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc232)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
          cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
          cir.scope {
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc235)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc145)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc148)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc149)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
            } loc(#loc236)
          } loc(#loc234)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc150)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc152)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc152)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc155)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
          %20 = cir.const #cir.int<130000> : !s32i loc(#loc157)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc157)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc237)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc238)
          %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc239)
          cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
          cir.scope {
            %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc242)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc167)
            cir.if %33 {
              %34 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              cir.store %34, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc171)
              %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
              %37 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc173)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc173)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
              %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc175)
            } loc(#loc243)
          } loc(#loc241)
          %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc176)
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
          cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc176)
        } loc(#loc228)
      } loc(#loc227)
    } loc(#loc226)
    cir.return loc(#loc126)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":32:26)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":39:30)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":24:1)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":45:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":44:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":26:8)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":27:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":43:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:13)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:58)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:35)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:42)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:46)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":29:57)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:13)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:41)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:17)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:25)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:22)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:31)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:32)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:38)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":30:37)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":32:13)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":32:20)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":33:23)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":33:13)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:28)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:36)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:43)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:51)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:62)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:42)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:63)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":35:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":36:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":42:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":36:17)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":36:25)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":36:22)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":39:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":39:24)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":40:27)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":40:17)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":41:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":41:22)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":110:1)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":114:1)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":112:5)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":112:11)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":113:5)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":113:11)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":57:19)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":52:1)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":81:1)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":54:5)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":80:5)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":54:8)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":55:5)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":58:5)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":60:5)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":57:9)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":61:9)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":79:9)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:13)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:58)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":64:13)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":64:20)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:35)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:42)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:46)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":62:57)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:13)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:41)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:17)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:25)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:22)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:31)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:32)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:38)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":63:37)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":66:13)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":66:20)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":66:26)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":67:23)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":67:13)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:31)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:39)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:46)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:54)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:65)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:45)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:66)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":68:13)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":71:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":77:13)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":71:17)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":71:28)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":71:25)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":72:13)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":73:24)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":73:17)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":75:17)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":75:24)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":75:30)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":76:27)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":76:17)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":78:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":78:18)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":84:1)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":108:1)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":86:5)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":107:5)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":86:8)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":87:5)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":88:9)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":106:9)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:13)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:58)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":91:13)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":91:20)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:35)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:42)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:46)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":89:57)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:13)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:41)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:17)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:25)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:22)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:31)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:32)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:38)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":90:37)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":93:13)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":93:20)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":93:26)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":94:23)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":94:13)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:31)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:39)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:46)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:54)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:65)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:45)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:66)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":95:13)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":98:13)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":104:13)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":98:17)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":98:28)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":98:25)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":99:13)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":100:24)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":100:17)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":102:17)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":102:24)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":102:30)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":103:27)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":103:17)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":105:13)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_02.c":105:18)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc5, #loc6])
#loc181 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc10, #loc11])
#loc183 = loc(fused[#loc13, #loc14])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc17, #loc18])
#loc186 = loc(fused[#loc20, #loc18])
#loc187 = loc(fused[#loc21, #loc22])
#loc188 = loc(fused[#loc23, #loc24])
#loc189 = loc(fused[#loc27, #loc28])
#loc190 = loc(fused[#loc26, #loc28])
#loc191 = loc(fused[#loc25, #loc24])
#loc192 = loc(fused[#loc29, #loc30])
#loc193 = loc(fused[#loc31, #loc32])
#loc194 = loc(fused[#loc34, #loc30])
#loc195 = loc(fused[#loc45, #loc46])
#loc196 = loc(fused[#loc47, #loc46])
#loc197 = loc(fused[#loc42, #loc48])
#loc198 = loc(fused[#loc49, #loc48])
#loc199 = loc(fused[#loc50, #loc51])
#loc200 = loc(fused[#loc52, #loc53])
#loc201 = loc(fused[#loc55, #loc51])
#loc202 = loc(fused[#loc62, #loc63])
#loc203 = loc(fused[#loc64, #loc65])
#loc204 = loc(fused[#loc66, #loc67])
#loc205 = loc(fused[#loc69, #loc70])
#loc206 = loc(fused[#loc71, #loc72])
#loc207 = loc(fused[#loc74, #loc75, #loc76, #loc72])
#loc208 = loc(fused[#loc78, #loc79])
#loc209 = loc(fused[#loc80, #loc81])
#loc210 = loc(fused[#loc82, #loc83])
#loc211 = loc(fused[#loc86, #loc87])
#loc212 = loc(fused[#loc85, #loc87])
#loc213 = loc(fused[#loc84, #loc81])
#loc214 = loc(fused[#loc88, #loc89])
#loc215 = loc(fused[#loc90, #loc91])
#loc216 = loc(fused[#loc93, #loc89])
#loc217 = loc(fused[#loc105, #loc106])
#loc218 = loc(fused[#loc107, #loc106])
#loc219 = loc(fused[#loc102, #loc108])
#loc220 = loc(fused[#loc109, #loc108])
#loc221 = loc(fused[#loc110, #loc111])
#loc222 = loc(fused[#loc112, #loc113])
#loc223 = loc(fused[#loc115, #loc111])
#loc224 = loc(fused[#loc117, #loc116])
#loc225 = loc(fused[#loc125, #loc126])
#loc226 = loc(fused[#loc127, #loc128])
#loc227 = loc(fused[#loc130, #loc128])
#loc228 = loc(fused[#loc131, #loc132])
#loc229 = loc(fused[#loc133, #loc134])
#loc230 = loc(fused[#loc135, #loc136])
#loc231 = loc(fused[#loc139, #loc140])
#loc232 = loc(fused[#loc138, #loc140])
#loc233 = loc(fused[#loc137, #loc134])
#loc234 = loc(fused[#loc141, #loc142])
#loc235 = loc(fused[#loc143, #loc144])
#loc236 = loc(fused[#loc146, #loc142])
#loc237 = loc(fused[#loc158, #loc159])
#loc238 = loc(fused[#loc160, #loc159])
#loc239 = loc(fused[#loc155, #loc161])
#loc240 = loc(fused[#loc162, #loc161])
#loc241 = loc(fused[#loc163, #loc164])
#loc242 = loc(fused[#loc165, #loc166])
#loc243 = loc(fused[#loc168, #loc164])
#loc244 = loc(fused[#loc170, #loc169])
