!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:10)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:14)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:20)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:32)
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc227)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc228)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc230)
  cir.func private @printLongLongLine(!s64i) loc(#loc231)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc17)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc230)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc230)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %16 ^bb6, ^bb11 loc(#loc241)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc34)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc243)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc244)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc14)
    %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc36)
    cir.store %24, %0 : !s64i, !cir.ptr<!s64i> loc(#loc233)
    %25 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc38)
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc12)
  } loc(#loc232)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc40)
  } loc(#loc245)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc250)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %17 : !s32i loc(#loc258)
  } loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc260)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc87)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc94)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc266)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc266)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc94)
    cir.br ^bb3 loc(#loc90)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc101)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc269)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb17 loc(#loc103)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc270)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc108)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc109)
    %22 = cir.cmp(lt, %19, %21) : !s64i, !cir.bool loc(#loc271)
    cir.brcond %22 ^bb9, ^bb15 loc(#loc272)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc273)
  ^bb10:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc113)
    %24 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc114)
    %25 = cir.unary(minus, %24) : !s64i, !s64i loc(#loc114)
    %26 = cir.const #cir.int<1> : !s64i loc(#loc114)
    %27 = cir.binop(sub, %25, %26) nsw : !s64i loc(#loc114)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc115)
    %30 = cir.binop(div, %27, %29) : !s64i loc(#loc274)
    %31 = cir.cmp(gt, %23, %30) : !s64i, !cir.bool loc(#loc275)
    cir.brcond %31 ^bb11, ^bb12 loc(#loc276)
  ^bb11:  // pred: ^bb10
    %32 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc120)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %34 = cir.cast(integral, %33 : !s32i), !s64i loc(#loc84)
    %35 = cir.binop(mul, %32, %34) nsw : !s64i loc(#loc120)
    cir.store %35, %0 : !s64i, !cir.ptr<!s64i> loc(#loc260)
    %36 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.call @printLongLongLine(%36) : (!s64i) -> () loc(#loc122)
    cir.br ^bb13 loc(#loc118)
  ^bb12:  // pred: ^bb10
    %37 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc80)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb13 loc(#loc112)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc112)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc107)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc99)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc99)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc82)
  } loc(#loc259)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc278)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc130)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc280)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc135)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc282)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc283)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc137)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc138)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc284)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc284)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc137)
    cir.br ^bb3 loc(#loc133)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc285)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc144)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %16 ^bb6, ^bb16 loc(#loc287)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc288)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc148)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc149)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc289)
    cir.brcond %20 ^bb8, ^bb14 loc(#loc290)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc291)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc153)
    %22 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc154)
    %23 = cir.unary(minus, %22) : !s64i, !s64i loc(#loc154)
    %24 = cir.const #cir.int<1> : !s64i loc(#loc154)
    %25 = cir.binop(sub, %23, %24) nsw : !s64i loc(#loc154)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc155)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc155)
    %28 = cir.binop(div, %25, %27) : !s64i loc(#loc292)
    %29 = cir.cmp(gt, %21, %28) : !s64i, !cir.bool loc(#loc293)
    cir.brcond %29 ^bb10, ^bb11 loc(#loc294)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc160)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %32 = cir.cast(integral, %31 : !s32i), !s64i loc(#loc127)
    %33 = cir.binop(mul, %30, %32) nsw : !s64i loc(#loc160)
    cir.store %33, %0 : !s64i, !cir.ptr<!s64i> loc(#loc278)
    %34 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc161)
    cir.call @printLongLongLine(%34) : (!s64i) -> () loc(#loc162)
    cir.br ^bb12 loc(#loc158)
  ^bb11:  // pred: ^bb9
    %35 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc163)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb12 loc(#loc152)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc152)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc147)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc147)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc142)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc142)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc125)
  } loc(#loc277)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc297)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc171)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc298)
    cir.br ^bb1 loc(#loc299)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc301)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc180)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb4 loc(#loc178)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc182)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc183)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc183)
    cir.store %11, %1 : !s64i, !cir.ptr<!s64i> loc(#loc302)
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc303)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc188)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc305)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc306)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc192)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc193)
    %19 = cir.cmp(lt, %16, %18) : !s64i, !cir.bool loc(#loc307)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc308)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc195)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc168)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc168)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc195)
    cir.store %23, %0 : !s64i, !cir.ptr<!s64i> loc(#loc296)
    %24 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc196)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc197)
    cir.br ^bb10 loc(#loc191)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc191)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc186)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc186)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc166)
  } loc(#loc295)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc204)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc312)
    cir.br ^bb1 loc(#loc313)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc209)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc315)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc211)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc212)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc212)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc316)
    cir.br ^bb3 loc(#loc207)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc227)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc217)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %13 ^bb6, ^bb11 loc(#loc319)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc320)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc221)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc222)
    %17 = cir.cmp(lt, %14, %16) : !s64i, !cir.bool loc(#loc321)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc322)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc224)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc201)
    %21 = cir.binop(mul, %18, %20) nsw : !s64i loc(#loc224)
    cir.store %21, %0 : !s64i, !cir.ptr<!s64i> loc(#loc310)
    %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc225)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc226)
    cir.br ^bb9 loc(#loc220)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc215)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc215)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc199)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":28:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":46:1)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:37)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:12)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":36:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:8)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:20)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":33:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:17)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":45:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:8)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:20)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":38:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":44:9)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:12)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:19)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":40:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:30)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:31)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:13)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":160:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":166:1)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:14)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:5)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:14)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:14)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":182:15)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":184:15)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":187:15)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":189:15)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":177:1)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":192:1)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":178:1)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:27)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:22)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":180:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":182:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":183:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":183:63)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":184:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":187:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":188:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":188:62)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":189:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":191:12)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":191:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:19)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:27)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":53:1)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":83:1)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:17)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:41)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:5)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:13)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:12)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:5)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:5)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":61:5)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:8)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:20)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":58:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:9)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:17)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:24)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:28)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:5)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":82:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:8)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:20)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":63:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":66:5)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":68:5)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:9)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:9)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":81:9)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:12)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:19)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":70:9)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:13)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":80:13)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:17)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:25)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:35)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:36)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":73:13)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":76:13)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":78:13)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:34)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:35)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:17)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":86:1)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":111:1)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:17)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:41)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:5)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:12)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:5)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:5)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":94:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:8)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:20)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":91:5)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:9)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:17)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:24)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:28)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:5)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":110:5)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:8)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:20)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":96:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:9)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":109:9)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:12)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:19)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":98:9)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:13)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":108:13)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:17)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:25)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:35)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:36)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":101:13)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":104:13)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":106:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:34)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:35)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:17)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:27)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:17)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":114:1)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":137:1)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:13)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:37)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:5)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:13)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:12)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:5)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:5)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":127:5)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:8)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:20)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":119:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":122:5)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":124:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:19)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:9)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:17)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:16)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:9)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:5)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":136:5)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:8)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:20)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":129:5)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:9)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":135:9)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:12)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:19)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":131:9)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:30)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:31)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:13)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":140:1)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":158:1)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:13)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:37)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:5)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:13)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:12)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:5)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:5)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":148:5)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:8)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:20)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":145:5)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:17)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:16)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:9)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:5)
#loc215 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":157:5)
#loc216 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:8)
#loc217 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:20)
#loc218 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":150:5)
#loc219 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:9)
#loc220 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":156:9)
#loc221 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:12)
#loc222 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:19)
#loc223 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":152:9)
#loc224 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:30)
#loc225 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:31)
#loc226 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:13)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc232 = loc(fused[#loc11, #loc12])
#loc233 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc15, #loc16])
#loc235 = loc(fused[#loc18, #loc17])
#loc236 = loc(fused[#loc19, #loc20])
#loc237 = loc(fused[#loc21, #loc22])
#loc238 = loc(fused[#loc23, #loc20])
#loc239 = loc(fused[#loc26, #loc27])
#loc240 = loc(fused[#loc28, #loc29])
#loc241 = loc(fused[#loc30, #loc27])
#loc242 = loc(fused[#loc31, #loc32])
#loc243 = loc(fused[#loc33, #loc34])
#loc244 = loc(fused[#loc35, #loc32])
#loc245 = loc(fused[#loc39, #loc40])
#loc246 = loc(fused[#loc41, #loc42])
#loc247 = loc(fused[#loc43, #loc44])
#loc248 = loc(fused[#loc45, #loc46])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc51, #loc52])
#loc252 = loc(fused[#loc53, #loc54])
#loc253 = loc(fused[#loc59, #loc60])
#loc256 = loc(fused[#loc70, #loc71])
#loc257 = loc(fused[#loc74, #loc75])
#loc258 = loc(fused[#loc78, #loc77])
#loc259 = loc(fused[#loc81, #loc82])
#loc260 = loc(fused[#loc83, #loc84])
#loc261 = loc(fused[#loc85, #loc86])
#loc262 = loc(fused[#loc88, #loc87])
#loc263 = loc(fused[#loc89, #loc90])
#loc264 = loc(fused[#loc91, #loc92])
#loc265 = loc(fused[#loc93, #loc90])
#loc266 = loc(fused[#loc96, #loc97])
#loc267 = loc(fused[#loc98, #loc99])
#loc268 = loc(fused[#loc100, #loc101])
#loc269 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc270 = loc(fused[#loc106, #loc107])
#loc271 = loc(fused[#loc108, #loc109])
#loc272 = loc(fused[#loc110, #loc107])
#loc273 = loc(fused[#loc111, #loc112])
#loc274 = loc(fused[#loc114, #loc115])
#loc275 = loc(fused[#loc113, #loc116])
#loc276 = loc(fused[#loc117, #loc118, #loc119, #loc112])
#loc277 = loc(fused[#loc124, #loc125])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc128, #loc129])
#loc280 = loc(fused[#loc131, #loc130])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc134, #loc135])
#loc283 = loc(fused[#loc136, #loc133])
#loc284 = loc(fused[#loc139, #loc140])
#loc285 = loc(fused[#loc141, #loc142])
#loc286 = loc(fused[#loc143, #loc144])
#loc287 = loc(fused[#loc145, #loc142])
#loc288 = loc(fused[#loc146, #loc147])
#loc289 = loc(fused[#loc148, #loc149])
#loc290 = loc(fused[#loc150, #loc147])
#loc291 = loc(fused[#loc151, #loc152])
#loc292 = loc(fused[#loc154, #loc155])
#loc293 = loc(fused[#loc153, #loc156])
#loc294 = loc(fused[#loc157, #loc158, #loc159, #loc152])
#loc295 = loc(fused[#loc165, #loc166])
#loc296 = loc(fused[#loc167, #loc168])
#loc297 = loc(fused[#loc169, #loc170])
#loc298 = loc(fused[#loc172, #loc171])
#loc299 = loc(fused[#loc173, #loc174])
#loc300 = loc(fused[#loc175, #loc176])
#loc301 = loc(fused[#loc177, #loc178, #loc179, #loc174])
#loc302 = loc(fused[#loc184, #loc182])
#loc303 = loc(fused[#loc185, #loc186])
#loc304 = loc(fused[#loc187, #loc188])
#loc305 = loc(fused[#loc189, #loc186])
#loc306 = loc(fused[#loc190, #loc191])
#loc307 = loc(fused[#loc192, #loc193])
#loc308 = loc(fused[#loc194, #loc191])
#loc309 = loc(fused[#loc198, #loc199])
#loc310 = loc(fused[#loc200, #loc201])
#loc311 = loc(fused[#loc202, #loc203])
#loc312 = loc(fused[#loc205, #loc204])
#loc313 = loc(fused[#loc206, #loc207])
#loc314 = loc(fused[#loc208, #loc209])
#loc315 = loc(fused[#loc210, #loc207])
#loc316 = loc(fused[#loc213, #loc211])
#loc317 = loc(fused[#loc214, #loc215])
#loc318 = loc(fused[#loc216, #loc217])
#loc319 = loc(fused[#loc218, #loc215])
#loc320 = loc(fused[#loc219, #loc220])
#loc321 = loc(fused[#loc221, #loc222])
#loc322 = loc(fused[#loc223, #loc220])
