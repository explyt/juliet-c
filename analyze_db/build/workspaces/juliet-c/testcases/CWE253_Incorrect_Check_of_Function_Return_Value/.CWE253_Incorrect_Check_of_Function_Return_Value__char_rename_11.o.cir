!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc67)
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc72)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc72)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc6)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc6)
          %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc19)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc75)
          cir.if %10 {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc22)
          } loc(#loc76)
        } loc(#loc74)
      } loc(#loc73)
    } loc(#loc71)
    cir.return loc(#loc11)
  } loc(#loc70)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc79)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc77)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc83)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc83)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc38)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc38)
      cir.if %3 {
        %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      } else {
        cir.scope {
          %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc32)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc32)
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc33)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc33)
          %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc86)
          cir.if %10 {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          } loc(#loc87)
        } loc(#loc85)
      } loc(#loc84)
    } loc(#loc82)
    cir.return loc(#loc35)
  } loc(#loc81)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc90)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc90)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc55)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
      cir.if %3 {
        cir.scope {
          %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc60)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc60)
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc61)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc61)
          %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc62)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc93)
          cir.if %10 {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          } loc(#loc94)
        } loc(#loc92)
      } loc(#loc91)
    } loc(#loc89)
    cir.return loc(#loc52)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":160:1)
#loc4 = loc("/usr/include/stdio.h":160:58)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":41:20)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":41:39)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":43:23)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":35:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":46:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":37:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":45:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":37:8)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":37:26)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":38:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":41:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":44:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":41:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":41:61)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":42:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":43:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":83:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":87:1)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":85:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":85:11)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":86:5)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":86:11)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":58:19)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":63:20)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":63:40)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":53:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":68:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":55:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":67:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":55:8)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":55:27)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":56:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":59:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":61:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":58:9)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":63:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":66:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":63:13)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":63:63)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":64:9)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":65:23)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":65:13)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":71:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":81:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":73:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":80:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":73:8)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":73:26)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":74:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":76:9)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":79:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":76:20)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":76:40)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":76:13)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":76:63)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":77:9)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":78:23)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_11.c":78:13)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc69 = loc(fused[#loc7, #loc8])
#loc70 = loc(fused[#loc10, #loc11])
#loc71 = loc(fused[#loc12, #loc13])
#loc72 = loc(fused[#loc14, #loc15])
#loc73 = loc(fused[#loc16, #loc13])
#loc74 = loc(fused[#loc17, #loc18])
#loc75 = loc(fused[#loc19, #loc20])
#loc76 = loc(fused[#loc21, #loc18])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc27, #loc28])
#loc80 = loc(fused[#loc29, #loc30])
#loc81 = loc(fused[#loc34, #loc35])
#loc82 = loc(fused[#loc36, #loc37])
#loc83 = loc(fused[#loc38, #loc39])
#loc84 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc85 = loc(fused[#loc44, #loc45])
#loc86 = loc(fused[#loc46, #loc47])
#loc87 = loc(fused[#loc48, #loc45])
#loc88 = loc(fused[#loc51, #loc52])
#loc89 = loc(fused[#loc53, #loc54])
#loc90 = loc(fused[#loc55, #loc56])
#loc91 = loc(fused[#loc57, #loc54])
#loc92 = loc(fused[#loc58, #loc59])
#loc93 = loc(fused[#loc62, #loc63])
#loc94 = loc(fused[#loc64, #loc59])
