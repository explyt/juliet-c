!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc370)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc371)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc373)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc374)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc375)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc376)
  cir.func private @close(!s32i) -> !s32i loc(#loc377)
  cir.func private @printIntLine(!s32i) loc(#loc378)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc382)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc382)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc27)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc385)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc385)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc387)
        %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc388)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc389)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc390)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc391)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc41)
        cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc389)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc43)
        cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc390)
        cir.scope {
          cir.do {
            cir.scope {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc50)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc52)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc394)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc59)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc59)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc396)
                cir.if %66 {
                  cir.break loc(#loc61)
                } loc(#loc397)
              } loc(#loc395)
              %22 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc398)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc399)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc400)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc69)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc69)
              %27 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc401)
              %28 = cir.const #cir.int<0> : !s32i loc(#loc72)
              %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc72)
              %30 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc402)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc76)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc76)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
              %35 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc403)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                %64 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc405)
                %65 = cir.const #cir.int<16> : !u64i loc(#loc406)
                %66 = cir.cast(integral, %65 : !u64i), !u32i loc(#loc406)
                %67 = cir.call @bind(%63, %64, %66) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                %68 = cir.const #cir.int<1> : !s32i loc(#loc89)
                %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc89)
                %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc407)
                cir.if %70 {
                  cir.break loc(#loc91)
                } loc(#loc408)
              } loc(#loc404)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %64 = cir.const #cir.int<5> : !s32i loc(#loc95)
                %65 = cir.call @listen(%63, %64) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc97)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc410)
                cir.if %68 {
                  cir.break loc(#loc99)
                } loc(#loc411)
              } loc(#loc409)
              %36 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
              %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
              cir.store %39, %12 : !s32i, !cir.ptr<!s32i> loc(#loc412)
              cir.scope {
                %63 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc109)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc414)
                cir.if %66 {
                  cir.break loc(#loc111)
                } loc(#loc415)
              } loc(#loc413)
              %40 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %41 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
              %43 = cir.const #cir.int<3> : !s32i loc(#loc114)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc114)
              %45 = cir.const #cir.int<4> : !u64i loc(#loc114)
              %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc114)
              %47 = cir.const #cir.int<2> : !s32i loc(#loc114)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc114)
              %49 = cir.binop(add, %46, %48) : !u64i loc(#loc114)
              %50 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc115)
              %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc416)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %54 = cir.call @recv(%40, %42, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
              %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc117)
              cir.store %55, %9 : !s32i, !cir.ptr<!s32i> loc(#loc417)
              cir.scope {
                %63 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc123)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc419)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc124)
                  cir.yield %68 : !cir.bool loc(#loc124)
                }, false {
                  %68 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %69 = cir.const #cir.int<0> : !s32i loc(#loc126)
                  %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc420)
                  %71 = cir.ternary(%70, true {
                    %72 = cir.const #true loc(#loc124)
                    cir.yield %72 : !cir.bool loc(#loc124)
                  }, false {
                    %72 = cir.const #false loc(#loc124)
                    cir.yield %72 : !cir.bool loc(#loc124)
                  }) : (!cir.bool) -> !cir.bool loc(#loc124)
                  cir.yield %71 : !cir.bool loc(#loc124)
                }) : (!cir.bool) -> !cir.bool loc(#loc124)
                cir.if %67 {
                  cir.break loc(#loc128)
                } loc(#loc421)
              } loc(#loc418)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc129)
              %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc129)
              %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %59 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
              %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc131)
              cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc422)
              %61 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
              %62 = cir.call @atoi(%61) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc133)
              cir.store %62, %4 : !s32i, !cir.ptr<!s32i> loc(#loc423)
            } loc(#loc393)
            cir.yield loc(#loc47)
          } while {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc136)
            cir.condition(%19) loc(#loc136)
          } loc(#loc392)
        } loc(#loc392)
        cir.scope {
          %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc140)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc425)
          cir.if %21 {
            %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc143)
          } loc(#loc426)
        } loc(#loc424)
        cir.scope {
          %18 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc147)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc428)
          cir.if %21 {
            %22 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc150)
          } loc(#loc429)
        } loc(#loc427)
      } loc(#loc386)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
      cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    } loc(#loc384)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc432)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc432)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc161)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc162)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc434)
        cir.if %9 {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc436)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc165)
          %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc166)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc436)
          %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc168)
        } loc(#loc435)
      } loc(#loc433)
    } loc(#loc431)
    cir.return loc(#loc20)
  } loc(#loc379)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc438)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc439)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc173)
    cir.return loc(#loc170)
  } loc(#loc437)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc441)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc442)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc443)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc442)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc443)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc446)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc446)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc190)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc191)
      cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc447)
      %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc193)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    } loc(#loc445)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc450)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc450)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc204)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc452)
        cir.if %9 {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc454)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc207)
          %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc208)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc454)
          %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc209)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc210)
        } loc(#loc453)
      } loc(#loc451)
    } loc(#loc449)
    cir.return loc(#loc176)
  } loc(#loc440)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc455)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc213)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc457)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc458)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc459)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc458)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc459)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc222)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc462)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc228)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc462)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc464)
        %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc465)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc466)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc467)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc468)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc236)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc236)
        cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc466)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc238)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc238)
        cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc467)
        cir.scope {
          cir.do {
            cir.scope {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc245)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc246)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc247)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc471)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc254)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc254)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc473)
                cir.if %66 {
                  cir.break loc(#loc256)
                } loc(#loc474)
              } loc(#loc472)
              %22 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc475)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc259)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc476)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc477)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc264)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc264)
              %27 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc478)
              %28 = cir.const #cir.int<0> : !s32i loc(#loc266)
              %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc266)
              %30 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc479)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc268)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc268)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc269)
              %35 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc480)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                %64 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc482)
                %65 = cir.const #cir.int<16> : !u64i loc(#loc483)
                %66 = cir.cast(integral, %65 : !u64i), !u32i loc(#loc483)
                %67 = cir.call @bind(%63, %64, %66) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc279)
                %68 = cir.const #cir.int<1> : !s32i loc(#loc280)
                %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc280)
                %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc484)
                cir.if %70 {
                  cir.break loc(#loc282)
                } loc(#loc485)
              } loc(#loc481)
              cir.scope {
                %63 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                %64 = cir.const #cir.int<5> : !s32i loc(#loc286)
                %65 = cir.call @listen(%63, %64) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc288)
                %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc288)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc487)
                cir.if %68 {
                  cir.break loc(#loc290)
                } loc(#loc488)
              } loc(#loc486)
              %36 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc292)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc293)
              %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc294)
              cir.store %39, %12 : !s32i, !cir.ptr<!s32i> loc(#loc489)
              cir.scope {
                %63 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc300)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc300)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc491)
                cir.if %66 {
                  cir.break loc(#loc302)
                } loc(#loc492)
              } loc(#loc490)
              %40 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %41 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc304)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc304)
              %43 = cir.const #cir.int<3> : !s32i loc(#loc305)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc305)
              %45 = cir.const #cir.int<4> : !u64i loc(#loc305)
              %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc305)
              %47 = cir.const #cir.int<2> : !s32i loc(#loc305)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc305)
              %49 = cir.binop(add, %46, %48) : !u64i loc(#loc305)
              %50 = cir.const #cir.int<1> : !s32i loc(#loc306)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc306)
              %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc493)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc307)
              %54 = cir.call @recv(%40, %42, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc308)
              %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc308)
              cir.store %55, %9 : !s32i, !cir.ptr<!s32i> loc(#loc494)
              cir.scope {
                %63 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc314)
                %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc314)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc496)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc315)
                  cir.yield %68 : !cir.bool loc(#loc315)
                }, false {
                  %68 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc316)
                  %69 = cir.const #cir.int<0> : !s32i loc(#loc317)
                  %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc497)
                  %71 = cir.ternary(%70, true {
                    %72 = cir.const #true loc(#loc315)
                    cir.yield %72 : !cir.bool loc(#loc315)
                  }, false {
                    %72 = cir.const #false loc(#loc315)
                    cir.yield %72 : !cir.bool loc(#loc315)
                  }) : (!cir.bool) -> !cir.bool loc(#loc315)
                  cir.yield %71 : !cir.bool loc(#loc315)
                }) : (!cir.bool) -> !cir.bool loc(#loc315)
                cir.if %67 {
                  cir.break loc(#loc319)
                } loc(#loc498)
              } loc(#loc495)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc320)
              %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc320)
              %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc321)
              %59 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc322)
              %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc322)
              cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc499)
              %61 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc323)
              %62 = cir.call @atoi(%61) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc324)
              cir.store %62, %4 : !s32i, !cir.ptr<!s32i> loc(#loc500)
            } loc(#loc470)
            cir.yield loc(#loc242)
          } while {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc327)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc327)
            cir.condition(%19) loc(#loc327)
          } loc(#loc469)
        } loc(#loc469)
        cir.scope {
          %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc331)
          %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc331)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc502)
          cir.if %21 {
            %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc333)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc334)
          } loc(#loc503)
        } loc(#loc501)
        cir.scope {
          %18 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc338)
          %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc338)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc505)
          cir.if %21 {
            %22 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc340)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc341)
          } loc(#loc506)
        } loc(#loc504)
      } loc(#loc463)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc342)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc343)
      cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    } loc(#loc461)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc509)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc348)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc349)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc509)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc352)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc353)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc511)
        cir.if %9 {
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
            %11 = cir.const #cir.int<2147483647> : !s32i loc(#loc358)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc358)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc358)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc358)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc359)
            %16 = cir.binop(div, %14, %15) : !s32i loc(#loc514)
            %17 = cir.cmp(gt, %10, %16) : !s32i, !cir.bool loc(#loc515)
            cir.if %17 {
              %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc517)
              %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc366)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc365)
              %21 = cir.binop(mul, %19, %20) nsw : !s32i loc(#loc366)
              cir.store %21, %18 : !s32i, !cir.ptr<!s32i> loc(#loc517)
              %22 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc368)
            } else {
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc213)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc213)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc369)
            } loc(#loc516)
          } loc(#loc513)
        } loc(#loc512)
      } loc(#loc510)
    } loc(#loc508)
    cir.return loc(#loc215)
  } loc(#loc456)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":44:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":133:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":46:5)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":46:9)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":47:5)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":47:22)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":48:5)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":48:22)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":50:12)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":50:5)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":51:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":123:5)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":52:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":52:21)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":52:20)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":53:9)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":121:9)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":58:13)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":58:17)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":59:13)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":59:32)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":60:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":60:35)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":61:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":61:35)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":62:13)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":62:45)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":63:13)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":106:21)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":64:13)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":105:13)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:39)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:48)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:61)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:32)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:17)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":73:72)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":74:17)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":77:17)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":74:21)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":74:37)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":75:17)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":76:21)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:24)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:25)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:34)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:37)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:51)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:17)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":78:52)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":79:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":79:17)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":80:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":80:17)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":81:42)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":81:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":81:17)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":81:50)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:17)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":85:17)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:26)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:58)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:59)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:68)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:82)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:21)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":82:88)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":83:17)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":84:21)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":86:17)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":89:17)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":86:28)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":86:42)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":86:21)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":86:61)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":87:17)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":88:21)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:39)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:53)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:59)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:32)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:17)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":90:63)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":91:17)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":94:17)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":91:21)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":91:37)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":92:17)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":93:21)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:35)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:49)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:62)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:80)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:83)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:30)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:17)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":96:84)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:17)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":100:17)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:21)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:35)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:48)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:51)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":97:65)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":98:17)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":99:21)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":102:43)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":102:29)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":102:17)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":104:29)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":104:24)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":104:17)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":104:40)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":106:20)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":107:13)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":110:13)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":107:17)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":107:33)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":108:13)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":109:30)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":109:17)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":111:13)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":114:13)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":111:17)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":111:33)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":112:13)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":113:30)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":113:17)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":122:21)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":122:10)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":122:9)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":124:5)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":132:5)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":125:9)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":125:21)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":125:20)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":126:9)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":131:9)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":126:12)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":126:19)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":127:9)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":129:13)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":129:33)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":129:26)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":130:26)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":130:13)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":263:1)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":267:1)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":265:5)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":265:13)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":266:5)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":266:13)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":140:1)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":162:1)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":142:5)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":142:9)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":143:5)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":143:22)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":144:5)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":144:22)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":146:12)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":146:5)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":147:5)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":152:5)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":148:9)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":148:21)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":148:20)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":150:17)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":150:16)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":150:9)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":151:21)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":151:10)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":151:9)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":153:5)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":161:5)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":154:9)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":154:21)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":154:20)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":155:9)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":160:9)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":155:12)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":155:19)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":156:9)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":158:13)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":158:33)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":158:26)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":159:26)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":159:13)
#loc211 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc212 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":257:27)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":165:1)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":261:1)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":167:5)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":167:9)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":168:5)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":168:22)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":169:5)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":169:22)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":171:12)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":171:5)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":172:5)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":244:5)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":173:9)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":173:21)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":173:20)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":174:9)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":242:9)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":179:13)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":179:17)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":180:13)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":180:32)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":181:13)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":181:35)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":182:13)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":182:35)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":183:13)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":183:45)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":184:13)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":227:21)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":185:13)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":226:13)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:39)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:48)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:61)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:32)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:17)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":194:72)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":195:17)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":198:17)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":195:21)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":195:37)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":196:17)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":197:21)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:24)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:25)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:34)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:37)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:51)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:17)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":199:52)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":200:38)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":200:17)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":201:43)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":201:17)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":202:42)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":202:36)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":202:17)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":202:50)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:17)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":206:17)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:26)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:58)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:59)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:68)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:82)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:21)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":203:88)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":204:17)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":205:21)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":207:17)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":210:17)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":207:28)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":207:42)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":207:21)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":207:61)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":208:17)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":209:21)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:39)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:53)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:59)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:32)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:17)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":211:63)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":212:17)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":215:17)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":212:21)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":212:37)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":213:17)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":214:21)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:35)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:49)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:62)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:80)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:83)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:30)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:17)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":217:84)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:17)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":221:17)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:21)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:35)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:48)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:51)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":218:65)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":219:17)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":220:21)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":223:43)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":223:29)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":223:17)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":225:29)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":225:24)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":225:17)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":225:40)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":227:20)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":228:13)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":231:13)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":228:17)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":228:33)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":229:13)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":230:30)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":230:17)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":232:13)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":235:13)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":232:17)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":232:33)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":233:13)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":234:30)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":234:17)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":243:21)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":243:10)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":243:9)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":245:5)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":260:5)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":246:9)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":246:21)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":246:20)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":247:9)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":259:9)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":247:12)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":247:19)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":248:9)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":250:13)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":258:13)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":250:17)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":250:25)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":250:33)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":250:34)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":251:13)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":254:13)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":256:13)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":252:17)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":252:37)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":252:30)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":253:30)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":253:17)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_32.c":257:17)
#loc370 = loc(fused[#loc1, #loc2])
#loc371 = loc(fused[#loc3, #loc4])
#loc372 = loc(fused[#loc5, #loc6])
#loc373 = loc(fused[#loc7, #loc8])
#loc374 = loc(fused[#loc9, #loc10])
#loc375 = loc(fused[#loc11, #loc12])
#loc376 = loc(fused[#loc13, #loc14])
#loc377 = loc(fused[#loc15, #loc16])
#loc378 = loc(fused[#loc17, #loc18])
#loc379 = loc(fused[#loc19, #loc20])
#loc380 = loc(fused[#loc21, #loc22])
#loc381 = loc(fused[#loc23, #loc24])
#loc382 = loc(fused[#loc25, #loc26])
#loc383 = loc(fused[#loc28, #loc27])
#loc384 = loc(fused[#loc29, #loc30])
#loc385 = loc(fused[#loc31, #loc32])
#loc386 = loc(fused[#loc34, #loc35])
#loc387 = loc(fused[#loc36, #loc37])
#loc388 = loc(fused[#loc38, #loc39])
#loc389 = loc(fused[#loc40, #loc41])
#loc390 = loc(fused[#loc42, #loc43])
#loc391 = loc(fused[#loc44, #loc45])
#loc392 = loc(fused[#loc46, #loc47])
#loc393 = loc(fused[#loc48, #loc49])
#loc394 = loc(fused[#loc54, #loc55])
#loc395 = loc(fused[#loc56, #loc57])
#loc396 = loc(fused[#loc58, #loc59])
#loc397 = loc(fused[#loc60, #loc57])
#loc398 = loc(fused[#loc62, #loc63])
#loc399 = loc(fused[#loc65, #loc66])
#loc400 = loc(fused[#loc67, #loc68])
#loc401 = loc(fused[#loc71, #loc69])
#loc402 = loc(fused[#loc75, #loc72])
#loc403 = loc(fused[#loc79, #loc80])
#loc404 = loc(fused[#loc81, #loc82])
#loc405 = loc(fused[#loc84, #loc85])
#loc406 = loc(fused[#loc86, #loc87])
#loc407 = loc(fused[#loc88, #loc89])
#loc408 = loc(fused[#loc90, #loc82])
#loc409 = loc(fused[#loc92, #loc93])
#loc410 = loc(fused[#loc96, #loc97])
#loc411 = loc(fused[#loc98, #loc93])
#loc412 = loc(fused[#loc104, #loc105])
#loc413 = loc(fused[#loc106, #loc107])
#loc414 = loc(fused[#loc108, #loc109])
#loc415 = loc(fused[#loc110, #loc107])
#loc416 = loc(fused[#loc114, #loc115])
#loc417 = loc(fused[#loc118, #loc119])
#loc418 = loc(fused[#loc120, #loc121])
#loc419 = loc(fused[#loc122, #loc123])
#loc420 = loc(fused[#loc125, #loc126])
#loc421 = loc(fused[#loc127, #loc121])
#loc422 = loc(fused[#loc131, #loc129])
#loc423 = loc(fused[#loc134, #loc135])
#loc424 = loc(fused[#loc137, #loc138])
#loc425 = loc(fused[#loc139, #loc140])
#loc426 = loc(fused[#loc141, #loc138])
#loc427 = loc(fused[#loc144, #loc145])
#loc428 = loc(fused[#loc146, #loc147])
#loc429 = loc(fused[#loc148, #loc145])
#loc430 = loc(fused[#loc153, #loc151])
#loc431 = loc(fused[#loc154, #loc155])
#loc432 = loc(fused[#loc156, #loc157])
#loc433 = loc(fused[#loc159, #loc160])
#loc434 = loc(fused[#loc161, #loc162])
#loc435 = loc(fused[#loc163, #loc160])
#loc436 = loc(fused[#loc164, #loc165])
#loc437 = loc(fused[#loc169, #loc170])
#loc438 = loc(fused[#loc171, #loc172])
#loc439 = loc(fused[#loc173, #loc174])
#loc440 = loc(fused[#loc175, #loc176])
#loc441 = loc(fused[#loc177, #loc178])
#loc442 = loc(fused[#loc179, #loc180])
#loc443 = loc(fused[#loc181, #loc182])
#loc444 = loc(fused[#loc184, #loc183])
#loc445 = loc(fused[#loc185, #loc186])
#loc446 = loc(fused[#loc187, #loc188])
#loc447 = loc(fused[#loc192, #loc190])
#loc448 = loc(fused[#loc195, #loc193])
#loc449 = loc(fused[#loc196, #loc197])
#loc450 = loc(fused[#loc198, #loc199])
#loc451 = loc(fused[#loc201, #loc202])
#loc452 = loc(fused[#loc203, #loc204])
#loc453 = loc(fused[#loc205, #loc202])
#loc454 = loc(fused[#loc206, #loc207])
#loc455 = loc(fused[#loc211, #loc212])
#loc456 = loc(fused[#loc214, #loc215])
#loc457 = loc(fused[#loc216, #loc217])
#loc458 = loc(fused[#loc218, #loc219])
#loc459 = loc(fused[#loc220, #loc221])
#loc460 = loc(fused[#loc223, #loc222])
#loc461 = loc(fused[#loc224, #loc225])
#loc462 = loc(fused[#loc226, #loc227])
#loc463 = loc(fused[#loc229, #loc230])
#loc464 = loc(fused[#loc231, #loc232])
#loc465 = loc(fused[#loc233, #loc234])
#loc466 = loc(fused[#loc235, #loc236])
#loc467 = loc(fused[#loc237, #loc238])
#loc468 = loc(fused[#loc239, #loc240])
#loc469 = loc(fused[#loc241, #loc242])
#loc470 = loc(fused[#loc243, #loc244])
#loc471 = loc(fused[#loc249, #loc250])
#loc472 = loc(fused[#loc251, #loc252])
#loc473 = loc(fused[#loc253, #loc254])
#loc474 = loc(fused[#loc255, #loc252])
#loc475 = loc(fused[#loc257, #loc258])
#loc476 = loc(fused[#loc260, #loc261])
#loc477 = loc(fused[#loc262, #loc263])
#loc478 = loc(fused[#loc265, #loc264])
#loc479 = loc(fused[#loc267, #loc266])
#loc480 = loc(fused[#loc270, #loc271])
#loc481 = loc(fused[#loc272, #loc273])
#loc482 = loc(fused[#loc275, #loc276])
#loc483 = loc(fused[#loc277, #loc278])
#loc484 = loc(fused[#loc279, #loc280])
#loc485 = loc(fused[#loc281, #loc273])
#loc486 = loc(fused[#loc283, #loc284])
#loc487 = loc(fused[#loc287, #loc288])
#loc488 = loc(fused[#loc289, #loc284])
#loc489 = loc(fused[#loc295, #loc296])
#loc490 = loc(fused[#loc297, #loc298])
#loc491 = loc(fused[#loc299, #loc300])
#loc492 = loc(fused[#loc301, #loc298])
#loc493 = loc(fused[#loc305, #loc306])
#loc494 = loc(fused[#loc309, #loc310])
#loc495 = loc(fused[#loc311, #loc312])
#loc496 = loc(fused[#loc313, #loc314])
#loc497 = loc(fused[#loc316, #loc317])
#loc498 = loc(fused[#loc318, #loc312])
#loc499 = loc(fused[#loc322, #loc320])
#loc500 = loc(fused[#loc325, #loc326])
#loc501 = loc(fused[#loc328, #loc329])
#loc502 = loc(fused[#loc330, #loc331])
#loc503 = loc(fused[#loc332, #loc329])
#loc504 = loc(fused[#loc335, #loc336])
#loc505 = loc(fused[#loc337, #loc338])
#loc506 = loc(fused[#loc339, #loc336])
#loc507 = loc(fused[#loc344, #loc342])
#loc508 = loc(fused[#loc345, #loc346])
#loc509 = loc(fused[#loc347, #loc348])
#loc510 = loc(fused[#loc350, #loc351])
#loc511 = loc(fused[#loc352, #loc353])
#loc512 = loc(fused[#loc354, #loc351])
#loc513 = loc(fused[#loc355, #loc356])
#loc514 = loc(fused[#loc358, #loc359])
#loc515 = loc(fused[#loc357, #loc360])
#loc516 = loc(fused[#loc361, #loc362, #loc363, #loc356])
#loc517 = loc(fused[#loc364, #loc365])
