!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":244:10)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":244:14)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":244:20)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":244:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc352 = loc(fused[#loc144, #loc145])
#loc353 = loc(fused[#loc146, #loc147])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_sub_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc299)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc300)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc301)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc303)
  cir.func private @close(!s32i) -> !s32i loc(#loc304)
  cir.func private @printIntLine(!s32i) loc(#loc305)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_sub_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc26)
        cir.condition(%3) loc(#loc26)
      } do {
        cir.scope {
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc311)
          %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc312)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc313)
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc314)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            cir.do {
              %8 = cir.const #cir.int<2> : !s32i loc(#loc39)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
              %10 = cir.const #cir.int<6> : !s32i loc(#loc41)
              %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
              cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc316)
              cir.scope {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc48)
                %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc48)
                %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc318)
                cir.if %53 {
                  cir.break loc(#loc50)
                } loc(#loc319)
              } loc(#loc317)
              %12 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc320)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %14 = cir.const #cir.int<16> : !u64i loc(#loc321)
              cir.libc.memset %14 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc58)
              %16 = cir.cast(integral, %15 : !s32i), !u16i loc(#loc58)
              %17 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
              cir.store %16, %17 : !u16i, !cir.ptr<!u16i> loc(#loc323)
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %20 = cir.call @inet_addr(%19) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
              %21 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
              %22 = cir.get_member %21[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
              cir.store %20, %22 : !u32i, !cir.ptr<!u32i> loc(#loc324)
              %23 = cir.const #cir.int<27015> : !s32i loc(#loc66)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc66)
              %25 = cir.call @htons(%24) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
              %26 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc325)
              cir.scope {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                %51 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc327)
                %52 = cir.const #cir.int<16> : !u64i loc(#loc328)
                %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc328)
                %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc79)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc79)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc329)
                cir.if %57 {
                  cir.break loc(#loc81)
                } loc(#loc330)
              } loc(#loc326)
              %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
              %30 = cir.const #cir.int<3> : !s32i loc(#loc84)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc84)
              %32 = cir.const #cir.int<4> : !u64i loc(#loc84)
              %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc84)
              %34 = cir.const #cir.int<2> : !s32i loc(#loc84)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc84)
              %36 = cir.binop(add, %33, %35) : !u64i loc(#loc84)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc85)
              %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc331)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc86)
              %41 = cir.call @recv(%27, %29, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
              %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc87)
              cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.scope {
                %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc93)
                %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc334)
                %54 = cir.ternary(%53, true {
                  %55 = cir.const #true loc(#loc94)
                  cir.yield %55 : !cir.bool loc(#loc94)
                }, false {
                  %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                  %56 = cir.const #cir.int<0> : !s32i loc(#loc96)
                  %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc335)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc94)
                    cir.yield %59 : !cir.bool loc(#loc94)
                  }, false {
                    %59 = cir.const #false loc(#loc94)
                    cir.yield %59 : !cir.bool loc(#loc94)
                  }) : (!cir.bool) -> !cir.bool loc(#loc94)
                  cir.yield %58 : !cir.bool loc(#loc94)
                }) : (!cir.bool) -> !cir.bool loc(#loc94)
                cir.if %54 {
                  cir.break loc(#loc98)
                } loc(#loc336)
              } loc(#loc333)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc99)
              %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc99)
              %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %46 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
              %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc101)
              cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc337)
              %48 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
              %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc103)
              cir.store %49, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.yield loc(#loc38)
            } while {
              %8 = cir.const #cir.int<0> : !s32i loc(#loc106)
              %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc106)
              cir.condition(%9) loc(#loc106)
            } loc(#loc315)
          } loc(#loc315)
          cir.scope {
            %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc110)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc340)
            cir.if %11 {
              %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc113)
            } loc(#loc341)
          } loc(#loc339)
        } loc(#loc310)
        cir.break loc(#loc114)
      } loc(#loc309)
    } loc(#loc309)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc117)
        cir.condition(%3) loc(#loc117)
      } do {
        cir.scope {
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc344)
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc121)
          %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc122)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc344)
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc124)
        } loc(#loc343)
        cir.break loc(#loc125)
      } loc(#loc342)
    } loc(#loc342)
    cir.return loc(#loc19)
  } loc(#loc306)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_sub_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc347)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc130)
    cir.return loc(#loc127)
  } loc(#loc345)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc348)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc349)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc141)
  cir.func @main(%arg0: !s32i loc(fused[#loc144, #loc145]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc146, #loc147])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc353)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc149)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc150)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc151)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_sub_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc354)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_sub_16_good() : () -> () loc(#loc153)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc140)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_sub_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc355)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_sub_16_bad() : () -> () loc(#loc157)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc141)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc356)
    cir.return %17 : !s32i loc(#loc356)
  } loc(#loc351)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc162)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc167)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc171)
        cir.condition(%3) loc(#loc171)
      } do {
        cir.scope {
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc362)
          %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc363)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc364)
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc365)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc179)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc179)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc364)
          cir.scope {
            cir.do {
              %8 = cir.const #cir.int<2> : !s32i loc(#loc184)
              %9 = cir.const #cir.int<1> : !s32i loc(#loc185)
              %10 = cir.const #cir.int<6> : !s32i loc(#loc186)
              %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc187)
              cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc367)
              cir.scope {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc193)
                %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc193)
                %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc369)
                cir.if %53 {
                  cir.break loc(#loc195)
                } loc(#loc370)
              } loc(#loc368)
              %12 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc371)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc198)
              %14 = cir.const #cir.int<16> : !u64i loc(#loc372)
              cir.libc.memset %14 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc373)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc203)
              %16 = cir.cast(integral, %15 : !s32i), !u16i loc(#loc203)
              %17 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
              cir.store %16, %17 : !u16i, !cir.ptr<!u16i> loc(#loc374)
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc205)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc205)
              %20 = cir.call @inet_addr(%19) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc206)
              %21 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
              %22 = cir.get_member %21[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
              cir.store %20, %22 : !u32i, !cir.ptr<!u32i> loc(#loc375)
              %23 = cir.const #cir.int<27015> : !s32i loc(#loc209)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc209)
              %25 = cir.call @htons(%24) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc210)
              %26 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc376)
              cir.scope {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                %51 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc378)
                %52 = cir.const #cir.int<16> : !u64i loc(#loc379)
                %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc379)
                %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc220)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc221)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc221)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc380)
                cir.if %57 {
                  cir.break loc(#loc223)
                } loc(#loc381)
              } loc(#loc377)
              %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc224)
              %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc225)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc225)
              %30 = cir.const #cir.int<3> : !s32i loc(#loc226)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc226)
              %32 = cir.const #cir.int<4> : !u64i loc(#loc226)
              %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc226)
              %34 = cir.const #cir.int<2> : !s32i loc(#loc226)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc226)
              %36 = cir.binop(add, %33, %35) : !u64i loc(#loc226)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc227)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc227)
              %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc382)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc228)
              %41 = cir.call @recv(%27, %29, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc229)
              %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc229)
              cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
              cir.scope {
                %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc235)
                %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc235)
                %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc385)
                %54 = cir.ternary(%53, true {
                  %55 = cir.const #true loc(#loc236)
                  cir.yield %55 : !cir.bool loc(#loc236)
                }, false {
                  %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                  %56 = cir.const #cir.int<0> : !s32i loc(#loc238)
                  %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc386)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc236)
                    cir.yield %59 : !cir.bool loc(#loc236)
                  }, false {
                    %59 = cir.const #false loc(#loc236)
                    cir.yield %59 : !cir.bool loc(#loc236)
                  }) : (!cir.bool) -> !cir.bool loc(#loc236)
                  cir.yield %58 : !cir.bool loc(#loc236)
                }) : (!cir.bool) -> !cir.bool loc(#loc236)
                cir.if %54 {
                  cir.break loc(#loc240)
                } loc(#loc387)
              } loc(#loc384)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc241)
              %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc241)
              %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %46 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
              %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc243)
              cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc388)
              %48 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc244)
              %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc245)
              cir.store %49, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
              cir.yield loc(#loc183)
            } while {
              %8 = cir.const #cir.int<0> : !s32i loc(#loc248)
              %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc248)
              cir.condition(%9) loc(#loc248)
            } loc(#loc366)
          } loc(#loc366)
          cir.scope {
            %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc251)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc252)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc252)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc391)
            cir.if %11 {
              %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
              %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc255)
            } loc(#loc392)
          } loc(#loc390)
        } loc(#loc361)
        cir.break loc(#loc256)
      } loc(#loc360)
    } loc(#loc360)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc259)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc259)
        cir.condition(%3) loc(#loc259)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc262)
          %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc263)
          %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc263)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc263)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc263)
          %7 = cir.cmp(gt, %2, %6) : !s32i, !cir.bool loc(#loc395)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc397)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc268)
            %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc269)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc397)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc271)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc162)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc162)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc272)
          } loc(#loc396)
        } loc(#loc394)
        cir.break loc(#loc273)
      } loc(#loc393)
    } loc(#loc393)
    cir.return loc(#loc164)
  } loc(#loc357)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc399)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc278)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc282)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc282)
        cir.condition(%3) loc(#loc282)
      } do {
        %2 = cir.const #cir.int<2> : !s32i loc(#loc283)
        %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc284)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
        cir.break loc(#loc286)
      } loc(#loc401)
    } loc(#loc401)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc289)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc289)
        cir.condition(%3) loc(#loc289)
      } do {
        cir.scope {
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc405)
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc293)
          %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc294)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc405)
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc296)
        } loc(#loc404)
        cir.break loc(#loc297)
      } loc(#loc403)
    } loc(#loc403)
    cir.return loc(#loc275)
  } loc(#loc398)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_sub_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":44:1)
#loc19 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":118:1)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":46:5)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":46:9)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":48:12)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":48:5)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":49:5)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":108:5)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":49:11)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":51:9)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":106:9)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":56:13)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":56:17)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":57:13)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":57:32)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":58:13)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":58:36)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":59:13)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":59:45)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":60:13)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":95:21)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:40)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:49)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:62)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:33)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:17)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":70:73)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":71:17)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":74:17)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":71:21)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":71:38)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":72:17)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":73:21)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:24)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:25)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:34)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:37)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:51)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:17)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":75:52)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":76:38)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":76:17)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":77:43)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":77:17)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":77:63)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":78:42)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":78:36)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":78:17)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":78:50)
#loc71 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:17)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":82:17)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:29)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:62)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:63)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:72)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:86)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:21)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":79:92)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":80:17)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":81:21)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:35)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:50)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:63)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:81)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:84)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:30)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:17)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":85:85)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:17)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":89:17)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:21)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:35)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:48)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:51)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":86:65)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":87:17)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":88:21)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":91:43)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":91:29)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":91:17)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":93:29)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":93:24)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":93:17)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":93:40)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":95:20)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":96:13)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":99:13)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":96:17)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":96:34)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":97:13)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":98:30)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":98:17)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":107:9)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":109:5)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":117:5)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":109:11)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":111:9)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":115:9)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":113:13)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":113:33)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":113:26)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":114:26)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":114:13)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":116:9)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":229:1)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":233:1)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":231:5)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":231:13)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":232:5)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":232:13)
#loc132 = loc("/usr/include/stdlib.h":575:1)
#loc133 = loc("/usr/include/stdlib.h":575:41)
#loc134 = loc("/usr/include/time.h":76:1)
#loc135 = loc("/usr/include/time.h":76:38)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":249:15)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":251:15)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":254:15)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":256:15)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":244:1)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":259:1)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":245:1)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":247:27)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":247:22)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":247:5)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":249:5)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":250:5)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":250:62)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":251:5)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":254:5)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":255:5)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":255:61)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":256:5)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":258:12)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":258:5)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":200:23)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":125:1)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":204:1)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":127:5)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":127:9)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":129:12)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":129:5)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":130:5)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":189:5)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":130:11)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":132:9)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":187:9)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":137:13)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":137:17)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":138:13)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":138:32)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":139:13)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":139:36)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":140:13)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":140:45)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":141:13)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":176:21)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:40)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:49)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:62)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:33)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:17)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":151:73)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":152:17)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":155:17)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":152:21)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":152:38)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":153:17)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":154:21)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:24)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:25)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:34)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:37)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:51)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:17)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":156:52)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":157:38)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":157:17)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":158:53)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":158:43)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":158:17)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":158:63)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":159:42)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":159:36)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":159:17)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":159:50)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:17)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":163:17)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:29)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:62)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:63)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:72)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:86)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:21)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":160:92)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":161:17)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":162:21)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:35)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:50)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:63)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:81)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:84)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:30)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:17)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":166:85)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:17)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":170:17)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:21)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:35)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:48)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:51)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":167:65)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":168:17)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":169:21)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":172:43)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":172:29)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":172:17)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":174:29)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":174:24)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":174:17)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":174:40)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":176:20)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":177:13)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":180:13)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":177:17)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":177:34)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":178:13)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":179:30)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":179:17)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":188:9)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":190:5)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":203:5)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":190:11)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":193:9)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":201:9)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":193:13)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":193:20)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":194:9)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":197:9)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":199:9)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":195:13)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":195:33)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":195:26)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":196:26)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":196:13)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":200:13)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":202:9)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":207:1)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":227:1)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":209:5)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":209:9)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":211:12)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":211:5)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":212:5)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":217:5)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":212:11)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":215:17)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":215:16)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":215:9)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":216:9)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":218:5)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":226:5)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":218:11)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":220:9)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":224:9)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":222:13)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":222:33)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":222:26)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":223:26)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":223:13)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_16.c":225:9)
#loc298 = loc(fused[#loc1, #loc2])
#loc299 = loc(fused[#loc3, #loc4])
#loc300 = loc(fused[#loc6, #loc7])
#loc301 = loc(fused[#loc8, #loc9])
#loc302 = loc(fused[#loc10, #loc11])
#loc303 = loc(fused[#loc12, #loc13])
#loc304 = loc(fused[#loc14, #loc15])
#loc305 = loc(fused[#loc16, #loc17])
#loc306 = loc(fused[#loc18, #loc19])
#loc307 = loc(fused[#loc20, #loc21])
#loc308 = loc(fused[#loc23, #loc22])
#loc309 = loc(fused[#loc24, #loc25])
#loc310 = loc(fused[#loc27, #loc28])
#loc311 = loc(fused[#loc29, #loc30])
#loc312 = loc(fused[#loc31, #loc32])
#loc313 = loc(fused[#loc33, #loc34])
#loc314 = loc(fused[#loc35, #loc36])
#loc315 = loc(fused[#loc37, #loc38])
#loc316 = loc(fused[#loc43, #loc44])
#loc317 = loc(fused[#loc45, #loc46])
#loc318 = loc(fused[#loc47, #loc48])
#loc319 = loc(fused[#loc49, #loc46])
#loc320 = loc(fused[#loc51, #loc52])
#loc321 = loc(fused[#loc54, #loc55])
#loc322 = loc(fused[#loc56, #loc57])
#loc323 = loc(fused[#loc60, #loc58])
#loc324 = loc(fused[#loc64, #loc65])
#loc325 = loc(fused[#loc69, #loc70])
#loc326 = loc(fused[#loc71, #loc72])
#loc327 = loc(fused[#loc74, #loc75])
#loc328 = loc(fused[#loc76, #loc77])
#loc329 = loc(fused[#loc78, #loc79])
#loc330 = loc(fused[#loc80, #loc72])
#loc331 = loc(fused[#loc84, #loc85])
#loc332 = loc(fused[#loc88, #loc89])
#loc333 = loc(fused[#loc90, #loc91])
#loc334 = loc(fused[#loc92, #loc93])
#loc335 = loc(fused[#loc95, #loc96])
#loc336 = loc(fused[#loc97, #loc91])
#loc337 = loc(fused[#loc101, #loc99])
#loc338 = loc(fused[#loc104, #loc105])
#loc339 = loc(fused[#loc107, #loc108])
#loc340 = loc(fused[#loc109, #loc110])
#loc341 = loc(fused[#loc111, #loc108])
#loc342 = loc(fused[#loc115, #loc116])
#loc343 = loc(fused[#loc118, #loc119])
#loc344 = loc(fused[#loc120, #loc121])
#loc345 = loc(fused[#loc126, #loc127])
#loc346 = loc(fused[#loc128, #loc129])
#loc347 = loc(fused[#loc130, #loc131])
#loc348 = loc(fused[#loc132, #loc133])
#loc349 = loc(fused[#loc134, #loc135])
#loc350 = loc(fused[#loc136, #loc137])
#loc351 = loc(fused[#loc142, #loc143])
#loc354 = loc(fused[#loc153, #loc154])
#loc355 = loc(fused[#loc157, #loc158])
#loc356 = loc(fused[#loc161, #loc160])
#loc357 = loc(fused[#loc163, #loc164])
#loc358 = loc(fused[#loc165, #loc166])
#loc359 = loc(fused[#loc168, #loc167])
#loc360 = loc(fused[#loc169, #loc170])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc174, #loc175])
#loc363 = loc(fused[#loc176, #loc177])
#loc364 = loc(fused[#loc178, #loc179])
#loc365 = loc(fused[#loc180, #loc181])
#loc366 = loc(fused[#loc182, #loc183])
#loc367 = loc(fused[#loc188, #loc189])
#loc368 = loc(fused[#loc190, #loc191])
#loc369 = loc(fused[#loc192, #loc193])
#loc370 = loc(fused[#loc194, #loc191])
#loc371 = loc(fused[#loc196, #loc197])
#loc372 = loc(fused[#loc199, #loc200])
#loc373 = loc(fused[#loc201, #loc202])
#loc374 = loc(fused[#loc204, #loc203])
#loc375 = loc(fused[#loc207, #loc208])
#loc376 = loc(fused[#loc211, #loc212])
#loc377 = loc(fused[#loc213, #loc214])
#loc378 = loc(fused[#loc216, #loc217])
#loc379 = loc(fused[#loc218, #loc219])
#loc380 = loc(fused[#loc220, #loc221])
#loc381 = loc(fused[#loc222, #loc214])
#loc382 = loc(fused[#loc226, #loc227])
#loc383 = loc(fused[#loc230, #loc231])
#loc384 = loc(fused[#loc232, #loc233])
#loc385 = loc(fused[#loc234, #loc235])
#loc386 = loc(fused[#loc237, #loc238])
#loc387 = loc(fused[#loc239, #loc233])
#loc388 = loc(fused[#loc243, #loc241])
#loc389 = loc(fused[#loc246, #loc247])
#loc390 = loc(fused[#loc249, #loc250])
#loc391 = loc(fused[#loc251, #loc252])
#loc392 = loc(fused[#loc253, #loc250])
#loc393 = loc(fused[#loc257, #loc258])
#loc394 = loc(fused[#loc260, #loc261])
#loc395 = loc(fused[#loc262, #loc263])
#loc396 = loc(fused[#loc264, #loc265, #loc266, #loc261])
#loc397 = loc(fused[#loc267, #loc268])
#loc398 = loc(fused[#loc274, #loc275])
#loc399 = loc(fused[#loc276, #loc277])
#loc400 = loc(fused[#loc279, #loc278])
#loc401 = loc(fused[#loc280, #loc281])
#loc402 = loc(fused[#loc285, #loc283])
#loc403 = loc(fused[#loc287, #loc288])
#loc404 = loc(fused[#loc290, #loc291])
#loc405 = loc(fused[#loc292, #loc293])
