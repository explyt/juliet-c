!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:48)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":246:10)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":246:14)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":246:20)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":246:32)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:48)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc358 = loc(fused[#loc144, #loc145])
#loc359 = loc(fused[#loc146, #loc147])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc304)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc306)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc307)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc308)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc309)
  cir.func private @close(!s32i) -> !s32i loc(#loc310)
  cir.func private @printIntLine(!s32i) loc(#loc311)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc314)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc315)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc316)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc317)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc318)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc32)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb1 loc(#loc320)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc320)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %8 ^bb3, ^bb35 loc(#loc36)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc321)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc25)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb5 loc(#loc322)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc322)
  ^bb6:  // pred: ^bb27
    %11 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %12 ^bb7, ^bb28 loc(#loc41)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %13 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc44)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb8 loc(#loc324)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc51)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc326)
  ^bb9:  // pred: ^bb8
    cir.br ^bb28 loc(#loc53)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // pred: ^bb10
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc327)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc328)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc329)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc61)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc330)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc331)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc69)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc69)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc70)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc332)
    cir.br ^bb12 loc(#loc333)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc334)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc335)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc335)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc82)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %43 ^bb13, ^bb14 loc(#loc337)
  ^bb13:  // pred: ^bb12
    cir.br ^bb28 loc(#loc84)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc75)
  ^bb15:  // pred: ^bb14
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc87)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc87)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc87)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc87)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc87)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc87)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc88)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc338)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc90)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb16 loc(#loc340)
  ^bb16:  // pred: ^bb15
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc96)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %63 ^bb17, ^bb18 loc(#loc97)
  ^bb17:  // pred: ^bb16
    %64 = cir.const #true loc(#loc97)
    cir.br ^bb23(%64 : !cir.bool) loc(#loc97)
  ^bb18:  // pred: ^bb16
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %67 ^bb19, ^bb20 loc(#loc97)
  ^bb19:  // pred: ^bb18
    %68 = cir.const #true loc(#loc97)
    cir.br ^bb21(%68 : !cir.bool) loc(#loc97)
  ^bb20:  // pred: ^bb18
    %69 = cir.const #false loc(#loc97)
    cir.br ^bb21(%69 : !cir.bool) loc(#loc97)
  ^bb21(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc97)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%70 : !cir.bool) loc(#loc97)
  ^bb23(%71: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc97)
  ^bb24:  // pred: ^bb23
    cir.brcond %71 ^bb25, ^bb26 loc(#loc343)
  ^bb25:  // pred: ^bb24
    cir.br ^bb28 loc(#loc101)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc94)
  ^bb27:  // pred: ^bb26
    %72 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc102)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc344)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
    cir.store %78, %5 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb6 loc(#loc40)
  ^bb28:  // 4 preds: ^bb6, ^bb9, ^bb13, ^bb25
    cir.br ^bb29 loc(#loc40)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc346)
  ^bb30:  // pred: ^bb29
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc112)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %82 ^bb31, ^bb32 loc(#loc348)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc115)
    cir.br ^bb32 loc(#loc110)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc110)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc38)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc116)
  ^bb35:  // 2 preds: ^bb2, ^bb34
    cir.br ^bb36 loc(#loc35)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc349)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc349)
  ^bb38:  // pred: ^bb37
    %85 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %86 = cir.cast(int_to_bool, %85 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %86 ^bb39, ^bb42 loc(#loc119)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc350)
  ^bb40:  // pred: ^bb39
    %87 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %88 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %89 = cir.binop(mul, %87, %88) nsw : !s32i loc(#loc122)
    cir.store %89, %4 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %90 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.call @printIntLine(%90) : (!s32i) -> () loc(#loc124)
    cir.br ^bb41 loc(#loc121)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc125)
  ^bb42:  // 2 preds: ^bb38, ^bb41
    cir.br ^bb43 loc(#loc118)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc19)
  } loc(#loc312)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc352)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc353)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc130)
    cir.return loc(#loc127)
  } loc(#loc351)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc354)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc355)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc356)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc141)
  cir.func @main(%arg0: !s32i loc(fused[#loc144, #loc145]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc146, #loc147])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc359)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc149)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc150)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc151)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc360)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_16_good() : () -> () loc(#loc153)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc140)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc361)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_16_bad() : () -> () loc(#loc157)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc141)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    cir.return %17 : !s32i loc(#loc362)
  } loc(#loc357)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc163)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc364)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc365)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc366)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc368)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc369)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc178)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb1 loc(#loc371)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc371)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %8 ^bb3, ^bb35 loc(#loc182)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc372)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc171)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb5 loc(#loc373)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc373)
  ^bb6:  // pred: ^bb27
    %11 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %12 ^bb7, ^bb28 loc(#loc187)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %13 = cir.const #cir.int<2> : !s32i loc(#loc188)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc190)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb8 loc(#loc375)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc197)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc377)
  ^bb9:  // pred: ^bb8
    cir.br ^bb28 loc(#loc199)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc195)
  ^bb11:  // pred: ^bb10
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc378)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc379)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc380)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc207)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc207)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc381)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc209)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc209)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc210)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc382)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc213)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc213)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc214)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc383)
    cir.br ^bb12 loc(#loc384)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc385)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc386)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc386)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc224)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc225)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc387)
    cir.brcond %43 ^bb13, ^bb14 loc(#loc388)
  ^bb13:  // pred: ^bb12
    cir.br ^bb28 loc(#loc227)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc218)
  ^bb15:  // pred: ^bb14
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc230)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc230)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc230)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc230)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc230)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc230)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc230)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc231)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc389)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc233)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.br ^bb16 loc(#loc391)
  ^bb16:  // pred: ^bb15
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc239)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %63 ^bb17, ^bb18 loc(#loc240)
  ^bb17:  // pred: ^bb16
    %64 = cir.const #true loc(#loc240)
    cir.br ^bb23(%64 : !cir.bool) loc(#loc240)
  ^bb18:  // pred: ^bb16
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc242)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %67 ^bb19, ^bb20 loc(#loc240)
  ^bb19:  // pred: ^bb18
    %68 = cir.const #true loc(#loc240)
    cir.br ^bb21(%68 : !cir.bool) loc(#loc240)
  ^bb20:  // pred: ^bb18
    %69 = cir.const #false loc(#loc240)
    cir.br ^bb21(%69 : !cir.bool) loc(#loc240)
  ^bb21(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc240)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%70 : !cir.bool) loc(#loc240)
  ^bb23(%71: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc240)
  ^bb24:  // pred: ^bb23
    cir.brcond %71 ^bb25, ^bb26 loc(#loc394)
  ^bb25:  // pred: ^bb24
    cir.br ^bb28 loc(#loc244)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc237)
  ^bb27:  // pred: ^bb26
    %72 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc245)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc247)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc395)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc249)
    cir.store %78, %5 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb6 loc(#loc186)
  ^bb28:  // 4 preds: ^bb6, ^bb9, ^bb13, ^bb25
    cir.br ^bb29 loc(#loc186)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc397)
  ^bb30:  // pred: ^bb29
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc255)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc398)
    cir.brcond %82 ^bb31, ^bb32 loc(#loc399)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc258)
    cir.br ^bb32 loc(#loc253)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc253)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc184)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc259)
  ^bb35:  // 2 preds: ^bb2, ^bb34
    cir.br ^bb36 loc(#loc181)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc400)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc400)
  ^bb38:  // pred: ^bb37
    %85 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %86 = cir.cast(int_to_bool, %85 : !s32i), !cir.bool loc(#loc262)
    cir.brcond %86 ^bb39, ^bb53 loc(#loc262)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc401)
  ^bb40:  // pred: ^bb39
    %87 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %88 = cir.const #cir.int<2147483647> : !s32i loc(#loc266)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc266)
    %90 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %91 = cir.binop(sub, %89, %90) nsw : !s32i loc(#loc266)
    %92 = cir.cmp(gt, %87, %91) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %92 ^bb41, ^bb46 loc(#loc267)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %94 = cir.abs %93 poison : !s32i loc(#loc269)
    %95 = cir.cast(integral, %94 : !s32i), !s64i loc(#loc269)
    %96 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc270)
    %97 = cir.const #cir.int<2147483647> : !s32i loc(#loc271)
    %98 = cir.cast(int_to_float, %97 : !s32i), !cir.double loc(#loc271)
    %99 = cir.call @sqrt(%98) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc270)
    %100 = cir.cast(float_to_int, %99 : !cir.double), !s64i loc(#loc270)
    %101 = cir.cmp(lt, %95, %100) : !s64i, !cir.bool loc(#loc403)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc267)
  ^bb42:  // pred: ^bb41
    %102 = cir.const #true loc(#loc267)
    cir.br ^bb44(%102 : !cir.bool) loc(#loc267)
  ^bb43:  // pred: ^bb41
    %103 = cir.const #false loc(#loc267)
    cir.br ^bb44(%103 : !cir.bool) loc(#loc267)
  ^bb44(%104: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:28)):  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc267)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47(%104 : !cir.bool) loc(#loc267)
  ^bb46:  // pred: ^bb40
    %105 = cir.const #false loc(#loc267)
    cir.br ^bb47(%105 : !cir.bool) loc(#loc267)
  ^bb47(%106: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:28)):  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc267)
  ^bb48:  // pred: ^bb47
    cir.brcond %106 ^bb49, ^bb50 loc(#loc404)
  ^bb49:  // pred: ^bb48
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %109 = cir.binop(mul, %107, %108) nsw : !s32i loc(#loc276)
    cir.store %109, %4 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    %110 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    cir.call @printIntLine(%110) : (!s32i) -> () loc(#loc278)
    cir.br ^bb51 loc(#loc274)
  ^bb50:  // pred: ^bb48
    %111 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc163)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    cir.br ^bb51 loc(#loc264)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc264)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc280)
  ^bb53:  // 2 preds: ^bb38, ^bb52
    cir.br ^bb54 loc(#loc261)
  ^bb54:  // pred: ^bb53
    cir.return loc(#loc165)
  } loc(#loc363)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc407)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc287)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb1 loc(#loc409)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc409)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc291)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc291)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<2> : !s32i loc(#loc292)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb4 loc(#loc294)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc290)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc411)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc411)
  ^bb7:  // pred: ^bb6
    %6 = cir.const #cir.int<1> : !s32i loc(#loc297)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc297)
    cir.brcond %7 ^bb8, ^bb11 loc(#loc297)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc412)
  ^bb9:  // pred: ^bb8
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc300)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc302)
    cir.br ^bb10 loc(#loc299)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc303)
  ^bb11:  // 2 preds: ^bb7, ^bb10
    cir.br ^bb12 loc(#loc296)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc282)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":46:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":120:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":58:13)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":58:17)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":59:13)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":59:32)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":60:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":60:36)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":61:13)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":61:45)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":115:13)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":115:33)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":48:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":48:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":50:12)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":50:5)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":51:5)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":110:5)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":51:11)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":53:9)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":108:9)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":62:13)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":97:21)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":97:20)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:40)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:49)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:62)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:33)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:17)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":72:73)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":73:17)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":76:17)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":73:21)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":73:38)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":74:17)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":75:21)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:24)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:25)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:34)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:37)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:51)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:17)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":77:52)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":78:38)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":78:17)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":79:43)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":79:17)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":79:63)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":80:42)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":80:36)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":80:17)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":80:50)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:17)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":84:17)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:29)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:62)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:63)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:72)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:86)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:21)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":81:92)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":82:17)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":83:21)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:35)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:50)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:63)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:81)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:84)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:30)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:17)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":87:85)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":91:17)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:21)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:35)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:51)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":88:65)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":89:17)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":90:21)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":93:43)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":93:29)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":93:17)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":95:29)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":95:24)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":95:17)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":95:40)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":98:13)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":101:13)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":98:17)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":98:34)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":99:13)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":100:30)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":100:17)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":109:9)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":111:5)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":119:5)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":111:11)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":113:9)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":117:9)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":115:26)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":116:26)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":116:13)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":118:9)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":231:1)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":235:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":233:5)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":233:13)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":234:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":234:13)
#loc132 = loc("/usr/include/stdlib.h":575:1)
#loc133 = loc("/usr/include/stdlib.h":575:41)
#loc134 = loc("/usr/include/time.h":76:1)
#loc135 = loc("/usr/include/time.h":76:38)
#loc136 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc137 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":251:15)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":253:15)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":256:15)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":258:15)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":246:1)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":261:1)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":247:1)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":249:27)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":249:22)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":249:5)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":251:5)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":252:5)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":252:64)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":253:5)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":256:5)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":257:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":257:63)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":258:5)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":260:12)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":260:5)
#loc162 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":202:23)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":127:1)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":206:1)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":139:13)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":139:17)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":140:13)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":140:32)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":141:13)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":141:36)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":142:13)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":142:45)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":197:13)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":197:33)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":129:5)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":129:9)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":131:12)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":131:5)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":132:5)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":191:5)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":132:11)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":134:9)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":189:9)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":143:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":178:21)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":178:20)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:40)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:49)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:62)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:33)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:17)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":153:73)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":154:17)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":157:17)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":154:21)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":154:38)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":155:17)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":156:21)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:24)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:25)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:34)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:37)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:51)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:17)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":158:52)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":159:38)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":159:17)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":160:53)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":160:43)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":160:17)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":160:63)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":161:42)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":161:36)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":161:17)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":161:50)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:17)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":165:17)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:29)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:62)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:63)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:72)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:86)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:21)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":162:92)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":163:17)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":164:21)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:35)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:50)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:63)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:81)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:84)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:30)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:17)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":168:85)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:17)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":172:17)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:21)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:35)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:51)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":169:65)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":170:17)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":171:21)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":174:43)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":174:29)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":174:17)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":176:29)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":176:24)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":176:17)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":176:40)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":179:13)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":182:13)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":179:17)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":179:34)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":180:13)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":181:30)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":181:17)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":190:9)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":192:5)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":205:5)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":192:11)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:9)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":203:9)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:13)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:20)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:35)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:31)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:49)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:62)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":195:69)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":196:9)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":199:9)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":201:9)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":197:26)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":198:26)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":198:13)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":202:13)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":204:9)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":209:1)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":229:1)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":224:13)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":224:33)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":211:5)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":211:9)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":213:12)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":213:5)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":214:5)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":219:5)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":214:11)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":217:16)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":217:9)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":218:9)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":220:5)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":228:5)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":220:11)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":222:9)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":226:9)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":224:26)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":225:26)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":225:13)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_16.c":227:9)
#loc304 = loc(fused[#loc1, #loc2])
#loc305 = loc(fused[#loc3, #loc4])
#loc306 = loc(fused[#loc6, #loc7])
#loc307 = loc(fused[#loc8, #loc9])
#loc308 = loc(fused[#loc10, #loc11])
#loc309 = loc(fused[#loc12, #loc13])
#loc310 = loc(fused[#loc14, #loc15])
#loc311 = loc(fused[#loc16, #loc17])
#loc312 = loc(fused[#loc18, #loc19])
#loc313 = loc(fused[#loc20, #loc21])
#loc314 = loc(fused[#loc22, #loc23])
#loc315 = loc(fused[#loc24, #loc25])
#loc316 = loc(fused[#loc26, #loc27])
#loc317 = loc(fused[#loc28, #loc29])
#loc318 = loc(fused[#loc30, #loc31])
#loc319 = loc(fused[#loc33, #loc32])
#loc320 = loc(fused[#loc34, #loc35])
#loc321 = loc(fused[#loc37, #loc38])
#loc322 = loc(fused[#loc39, #loc40])
#loc323 = loc(fused[#loc46, #loc47])
#loc324 = loc(fused[#loc48, #loc49])
#loc325 = loc(fused[#loc50, #loc51])
#loc326 = loc(fused[#loc52, #loc49])
#loc327 = loc(fused[#loc54, #loc55])
#loc328 = loc(fused[#loc57, #loc58])
#loc329 = loc(fused[#loc59, #loc60])
#loc330 = loc(fused[#loc63, #loc61])
#loc331 = loc(fused[#loc67, #loc68])
#loc332 = loc(fused[#loc72, #loc73])
#loc333 = loc(fused[#loc74, #loc75])
#loc334 = loc(fused[#loc77, #loc78])
#loc335 = loc(fused[#loc79, #loc80])
#loc336 = loc(fused[#loc81, #loc82])
#loc337 = loc(fused[#loc83, #loc75])
#loc338 = loc(fused[#loc87, #loc88])
#loc339 = loc(fused[#loc91, #loc92])
#loc340 = loc(fused[#loc93, #loc94])
#loc341 = loc(fused[#loc95, #loc96])
#loc342 = loc(fused[#loc98, #loc99])
#loc343 = loc(fused[#loc100, #loc94])
#loc344 = loc(fused[#loc104, #loc102])
#loc345 = loc(fused[#loc107, #loc108])
#loc346 = loc(fused[#loc109, #loc110])
#loc347 = loc(fused[#loc111, #loc112])
#loc348 = loc(fused[#loc113, #loc110])
#loc349 = loc(fused[#loc117, #loc118])
#loc350 = loc(fused[#loc120, #loc121])
#loc351 = loc(fused[#loc126, #loc127])
#loc352 = loc(fused[#loc128, #loc129])
#loc353 = loc(fused[#loc130, #loc131])
#loc354 = loc(fused[#loc132, #loc133])
#loc355 = loc(fused[#loc134, #loc135])
#loc356 = loc(fused[#loc136, #loc137])
#loc357 = loc(fused[#loc142, #loc143])
#loc360 = loc(fused[#loc153, #loc154])
#loc361 = loc(fused[#loc157, #loc158])
#loc362 = loc(fused[#loc161, #loc160])
#loc363 = loc(fused[#loc164, #loc165])
#loc364 = loc(fused[#loc166, #loc167])
#loc365 = loc(fused[#loc168, #loc169])
#loc366 = loc(fused[#loc170, #loc171])
#loc367 = loc(fused[#loc172, #loc173])
#loc368 = loc(fused[#loc174, #loc175])
#loc369 = loc(fused[#loc176, #loc177])
#loc370 = loc(fused[#loc179, #loc178])
#loc371 = loc(fused[#loc180, #loc181])
#loc372 = loc(fused[#loc183, #loc184])
#loc373 = loc(fused[#loc185, #loc186])
#loc374 = loc(fused[#loc192, #loc193])
#loc375 = loc(fused[#loc194, #loc195])
#loc376 = loc(fused[#loc196, #loc197])
#loc377 = loc(fused[#loc198, #loc195])
#loc378 = loc(fused[#loc200, #loc201])
#loc379 = loc(fused[#loc203, #loc204])
#loc380 = loc(fused[#loc205, #loc206])
#loc381 = loc(fused[#loc208, #loc207])
#loc382 = loc(fused[#loc211, #loc212])
#loc383 = loc(fused[#loc215, #loc216])
#loc384 = loc(fused[#loc217, #loc218])
#loc385 = loc(fused[#loc220, #loc221])
#loc386 = loc(fused[#loc222, #loc223])
#loc387 = loc(fused[#loc224, #loc225])
#loc388 = loc(fused[#loc226, #loc218])
#loc389 = loc(fused[#loc230, #loc231])
#loc390 = loc(fused[#loc234, #loc235])
#loc391 = loc(fused[#loc236, #loc237])
#loc392 = loc(fused[#loc238, #loc239])
#loc393 = loc(fused[#loc241, #loc242])
#loc394 = loc(fused[#loc243, #loc237])
#loc395 = loc(fused[#loc247, #loc245])
#loc396 = loc(fused[#loc250, #loc251])
#loc397 = loc(fused[#loc252, #loc253])
#loc398 = loc(fused[#loc254, #loc255])
#loc399 = loc(fused[#loc256, #loc253])
#loc400 = loc(fused[#loc260, #loc261])
#loc401 = loc(fused[#loc263, #loc264])
#loc402 = loc(fused[#loc265, #loc266])
#loc403 = loc(fused[#loc269, #loc272])
#loc404 = loc(fused[#loc273, #loc274, #loc275, #loc264])
#loc405 = loc(fused[#loc281, #loc282])
#loc406 = loc(fused[#loc283, #loc284])
#loc407 = loc(fused[#loc285, #loc286])
#loc408 = loc(fused[#loc288, #loc287])
#loc409 = loc(fused[#loc289, #loc290])
#loc410 = loc(fused[#loc293, #loc292])
#loc411 = loc(fused[#loc295, #loc296])
#loc412 = loc(fused[#loc298, #loc299])
