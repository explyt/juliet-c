!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc127)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc131)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc132)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc26)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc137)
    } loc(#loc135)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc27)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %15 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    %16 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc140)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc8)
  } loc(#loc128)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc141)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc149)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc54)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc55)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc55)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc55)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc59)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc60)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc62)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc151)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc63)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
      cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    } loc(#loc148)
    cir.return loc(#loc46)
  } loc(#loc146)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc78)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc79)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc157)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc91)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
      } loc(#loc162)
    } loc(#loc160)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc92)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc95)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %15 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %16 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc98)
    cir.return loc(#loc73)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc109)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc110)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc111)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc110)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc110)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc114)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc115)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc117)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc171)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc118)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc123)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
      cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
    } loc(#loc168)
    cir.return loc(#loc101)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":21:15)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":40:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":50:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":42:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":42:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":43:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":43:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:20)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:27)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:30)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:41)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:42)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":45:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:24)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":46:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":47:15)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":47:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":47:10)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":47:11)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":48:69)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":48:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":49:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":49:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":83:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":86:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":85:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":85:13)
#loc39 = loc("/usr/include/string.h":149:1)
#loc40 = loc("/usr/include/string.h":150:14)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("/usr/include/stdlib.h":687:1)
#loc44 = loc("/usr/include/stdlib.h":687:32)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":26:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":38:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":28:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":28:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":29:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":37:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":30:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":30:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:16)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":31:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":32:25)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":32:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":32:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":32:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":34:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":34:16)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":34:22)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":35:19)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":35:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":36:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":36:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":22:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":22:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":71:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":81:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":73:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":73:12)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":74:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":74:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:20)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:27)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:31)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:42)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:43)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":76:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:33)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:23)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:24)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:30)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":77:29)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":78:15)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":78:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":78:10)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":78:11)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":79:73)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":79:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":80:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":80:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":57:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":69:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":59:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":59:19)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":60:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":68:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":61:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":61:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:16)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:24)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:29)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":62:34)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":63:25)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":63:16)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":63:20)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":63:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":65:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":65:16)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":65:22)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":66:19)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":66:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":67:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_45.c":67:14)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc12, #loc11])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc14, #loc16])
#loc133 = loc(fused[#loc13, #loc17])
#loc134 = loc(fused[#loc18, #loc17])
#loc135 = loc(fused[#loc19, #loc20])
#loc136 = loc(fused[#loc21, #loc22])
#loc137 = loc(fused[#loc23, #loc20])
#loc138 = loc(fused[#loc28, #loc27])
#loc139 = loc(fused[#loc32, #loc31])
#loc140 = loc(fused[#loc33, #loc34])
#loc141 = loc(fused[#loc35, #loc36])
#loc142 = loc(fused[#loc37, #loc38])
#loc143 = loc(fused[#loc39, #loc40])
#loc144 = loc(fused[#loc41, #loc42])
#loc145 = loc(fused[#loc43, #loc44])
#loc146 = loc(fused[#loc45, #loc46])
#loc147 = loc(fused[#loc47, #loc48])
#loc148 = loc(fused[#loc49, #loc50])
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc57, #loc58])
#loc151 = loc(fused[#loc62, #loc59])
#loc152 = loc(fused[#loc70, #loc71])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc77, #loc76])
#loc156 = loc(fused[#loc80, #loc81])
#loc157 = loc(fused[#loc79, #loc81])
#loc158 = loc(fused[#loc78, #loc82])
#loc159 = loc(fused[#loc83, #loc82])
#loc160 = loc(fused[#loc84, #loc85])
#loc161 = loc(fused[#loc86, #loc87])
#loc162 = loc(fused[#loc88, #loc85])
#loc163 = loc(fused[#loc93, #loc92])
#loc164 = loc(fused[#loc97, #loc96])
#loc165 = loc(fused[#loc98, #loc99])
#loc166 = loc(fused[#loc100, #loc101])
#loc167 = loc(fused[#loc102, #loc103])
#loc168 = loc(fused[#loc104, #loc105])
#loc169 = loc(fused[#loc106, #loc107])
#loc170 = loc(fused[#loc112, #loc113])
#loc171 = loc(fused[#loc117, #loc114])
