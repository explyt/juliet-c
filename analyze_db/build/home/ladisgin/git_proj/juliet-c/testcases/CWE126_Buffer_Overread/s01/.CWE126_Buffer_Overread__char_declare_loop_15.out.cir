!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc102 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":156:10)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":156:14)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":156:20)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":156:32)
#loc314 = loc(fused[#loc102, #loc103])
#loc315 = loc(fused[#loc104, #loc105])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc283)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc285)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc286)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc287)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc15)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc16)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc23)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc26)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc30)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc31)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    cir.scope {
      %31 = cir.const #cir.int<6> : !s32i loc(#loc36)
      cir.switch (%31 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
          cir.break loc(#loc40)
        } loc(#loc37)
        cir.case(default, []) {
          %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          cir.break loc(#loc43)
        } loc(#loc41)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc292)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc295)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc296)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc297)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc52)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc53)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc53)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc53)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc298)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc57)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc57)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc58)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc58)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc60)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc299)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc300)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc67)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc67)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc302)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc303)
          cir.condition(%63) loc(#loc71)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc73)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc305)
          } loc(#loc304)
          cir.yield loc(#loc66)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc79)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc306)
          cir.yield loc(#loc301)
        } loc(#loc301)
      } loc(#loc301)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc80)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc80)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc81)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc83)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc307)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    } loc(#loc294)
    cir.return loc(#loc7)
  } loc(#loc284)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_loop_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc87)
  } loc(#loc308)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc311)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc312)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc314)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc315)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc316)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_15_good() : () -> () loc(#loc111)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_declare_loop_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc317)
    cir.call @CWE126_Buffer_Overread__char_declare_loop_15_bad() : () -> () loc(#loc115)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    cir.return %17 : !s32i loc(#loc318)
  } loc(#loc313)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc321)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc322)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc129)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc130)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc130)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc134)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc135)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc135)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc137)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc324)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc139)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc140)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc140)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc144)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc145)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc147)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc326)
    cir.scope {
      %31 = cir.const #cir.int<5> : !s32i loc(#loc150)
      cir.switch (%31 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
          %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          cir.break loc(#loc154)
        } loc(#loc151)
        cir.case(default, []) {
          %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
          cir.break loc(#loc158)
        } loc(#loc155)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc327)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc330)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc331)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc332)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc167)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc168)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc168)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc333)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc172)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc172)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc173)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc174)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc173)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc175)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc334)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc335)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc182)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc182)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc337)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc184)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc185)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc338)
          cir.condition(%63) loc(#loc186)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc190)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc188)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc191)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc192)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc340)
          } loc(#loc339)
          cir.yield loc(#loc181)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc193)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc194)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc341)
          cir.yield loc(#loc336)
        } loc(#loc336)
      } loc(#loc336)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc195)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc195)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc196)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc197)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc196)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc198)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc342)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    } loc(#loc329)
    cir.return loc(#loc121)
  } loc(#loc319)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc345)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc346)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc209)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc210)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc211)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc211)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc211)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc347)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc215)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc216)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc216)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc218)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc218)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc348)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc220)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc221)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc221)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc221)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc349)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc225)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc226)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc226)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc228)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc350)
    cir.scope {
      %31 = cir.const #cir.int<6> : !s32i loc(#loc231)
      cir.switch (%31 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
          cir.break loc(#loc235)
        } loc(#loc232)
        cir.case(default, []) {
          %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc237)
          %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc237)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc238)
          cir.break loc(#loc239)
        } loc(#loc236)
        cir.yield loc(#loc229)
      } loc(#loc229)
    } loc(#loc351)
    cir.scope {
      %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc354)
      %32 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc355)
      %33 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc356)
      %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
      %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
      %36 = cir.const #cir.int<67> : !s32i loc(#loc248)
      %37 = cir.const #cir.int<100> : !s32i loc(#loc249)
      %38 = cir.const #cir.int<1> : !s32i loc(#loc250)
      %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc249)
      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc249)
      cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc357)
      %41 = cir.const #cir.int<0> : !s32i loc(#loc253)
      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc253)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc254)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc254)
      %46 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
      %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc256)
      cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc358)
      %48 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc257)
      %49 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc258)
      %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc257)
      cir.store %50, %32 : !u64i, !cir.ptr<!u64i> loc(#loc359)
      cir.scope {
        %59 = cir.const #cir.int<0> : !s32i loc(#loc263)
        %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc263)
        cir.store %60, %31 : !u64i, !cir.ptr<!u64i> loc(#loc361)
        cir.for : cond {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc265)
          %62 = cir.load %32 : !cir.ptr<!u64i>, !u64i loc(#loc266)
          %63 = cir.cmp(lt, %61, %62) : !u64i, !cir.bool loc(#loc362)
          cir.condition(%63) loc(#loc267)
        } body {
          cir.scope {
            %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
            %62 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc270)
            %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc271)
            %64 = cir.load %63 : !cir.ptr<!s8i>, !s8i loc(#loc269)
            %65 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %66 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
            %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc273)
            cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc364)
          } loc(#loc363)
          cir.yield loc(#loc262)
        } step {
          %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc275)
          cir.store %62, %31 : !u64i, !cir.ptr<!u64i> loc(#loc365)
          cir.yield loc(#loc360)
        } loc(#loc360)
      } loc(#loc360)
      %51 = cir.const #cir.int<0> : !s32i loc(#loc276)
      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc276)
      %53 = cir.const #cir.int<100> : !s32i loc(#loc277)
      %54 = cir.const #cir.int<1> : !s32i loc(#loc278)
      %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc277)
      %56 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc279)
      %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc279)
      cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc366)
      %58 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc280)
      cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    } loc(#loc353)
    cir.return loc(#loc202)
  } loc(#loc343)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":40:19)
#loc4 = loc("/usr/include/string.h":407:1)
#loc5 = loc("/usr/include/string.h":408:33)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":23:1)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":58:1)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":25:5)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":25:12)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":26:5)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":26:26)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":27:5)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":27:28)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:12)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:27)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:32)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:35)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:5)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":28:36)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":29:27)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":29:19)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":29:22)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":29:5)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:28)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:33)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:37)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:5)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":30:38)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":31:29)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":31:20)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":31:24)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":31:5)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":32:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":42:5)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":32:12)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":34:5)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":36:16)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":36:9)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":37:9)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":38:5)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":40:9)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":41:9)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":43:5)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":57:5)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":44:9)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":44:16)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":44:19)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":45:9)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":45:22)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:16)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:22)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:27)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:31)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:9)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":46:32)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":47:23)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":47:14)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":47:18)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":47:9)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":48:19)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":48:26)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":48:9)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":48:30)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:9)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":54:9)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:18)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:14)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:21)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:25)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:23)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":52:9)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":53:23)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":53:28)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":53:29)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":53:18)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":53:13)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:35)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":51:34)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":55:23)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":55:14)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":55:18)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":55:9)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":56:19)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":56:9)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":140:1)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":144:1)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":142:5)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":142:14)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":143:5)
#loc91 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":143:14)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":161:15)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":163:15)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":166:15)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":168:15)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":156:1)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":171:1)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":157:1)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":159:27)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":159:22)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":159:5)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":161:5)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":162:5)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":162:55)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":163:5)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":166:5)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":167:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":167:54)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":168:5)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":170:12)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":170:5)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":65:1)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":100:1)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":67:5)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":67:12)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":68:5)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":68:26)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":69:5)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":69:28)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:12)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:27)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:32)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:35)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:5)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":70:36)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":71:27)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":71:19)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":71:22)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":71:5)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:12)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:28)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:33)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:37)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:5)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":72:38)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":73:29)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":73:20)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":73:24)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":73:5)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":74:5)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":84:5)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":74:12)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":76:5)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":78:19)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":78:9)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":79:9)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":80:5)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":82:16)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":82:9)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":83:9)
#loc159 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":85:5)
#loc160 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":99:5)
#loc161 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":86:9)
#loc162 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":86:16)
#loc163 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":86:19)
#loc164 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":87:9)
#loc165 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":87:22)
#loc166 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:16)
#loc167 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:22)
#loc168 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:27)
#loc169 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:31)
#loc170 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:9)
#loc171 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":88:32)
#loc172 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":89:23)
#loc173 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":89:14)
#loc174 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":89:18)
#loc175 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":89:9)
#loc176 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":90:19)
#loc177 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":90:26)
#loc178 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":90:9)
#loc179 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":90:30)
#loc180 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:9)
#loc181 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":96:9)
#loc182 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:18)
#loc183 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:14)
#loc184 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:21)
#loc185 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:25)
#loc186 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:23)
#loc187 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":94:9)
#loc188 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":95:23)
#loc189 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":95:28)
#loc190 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":95:29)
#loc191 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":95:18)
#loc192 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":95:13)
#loc193 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:35)
#loc194 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":93:34)
#loc195 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":97:23)
#loc196 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":97:14)
#loc197 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":97:18)
#loc198 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":97:9)
#loc199 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":98:19)
#loc200 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":98:9)
#loc201 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":103:1)
#loc202 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":138:1)
#loc203 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":105:5)
#loc204 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":105:12)
#loc205 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":106:5)
#loc206 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":106:26)
#loc207 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":107:5)
#loc208 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":107:28)
#loc209 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:12)
#loc210 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:27)
#loc211 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:32)
#loc212 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:35)
#loc213 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:5)
#loc214 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":108:36)
#loc215 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":109:27)
#loc216 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":109:19)
#loc217 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":109:22)
#loc218 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":109:5)
#loc219 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:12)
#loc220 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:28)
#loc221 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:33)
#loc222 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:37)
#loc223 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:5)
#loc224 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":110:38)
#loc225 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":111:29)
#loc226 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":111:20)
#loc227 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":111:24)
#loc228 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":111:5)
#loc229 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":112:5)
#loc230 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":122:5)
#loc231 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":112:12)
#loc232 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":114:5)
#loc233 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":116:16)
#loc234 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":116:9)
#loc235 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":117:9)
#loc236 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":118:5)
#loc237 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":120:19)
#loc238 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":120:9)
#loc239 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":121:9)
#loc240 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":123:5)
#loc241 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":137:5)
#loc242 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":124:9)
#loc243 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":124:16)
#loc244 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":124:19)
#loc245 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":125:9)
#loc246 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":125:22)
#loc247 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:16)
#loc248 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:22)
#loc249 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:27)
#loc250 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:31)
#loc251 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:9)
#loc252 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":126:32)
#loc253 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":127:23)
#loc254 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":127:14)
#loc255 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":127:18)
#loc256 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":127:9)
#loc257 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":128:19)
#loc258 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":128:26)
#loc259 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":128:9)
#loc260 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":128:30)
#loc261 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:9)
#loc262 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":134:9)
#loc263 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:18)
#loc264 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:14)
#loc265 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:21)
#loc266 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:25)
#loc267 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:23)
#loc268 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":132:9)
#loc269 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":133:23)
#loc270 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":133:28)
#loc271 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":133:29)
#loc272 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":133:18)
#loc273 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":133:13)
#loc274 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:35)
#loc275 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":131:34)
#loc276 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":135:23)
#loc277 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":135:14)
#loc278 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":135:18)
#loc279 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":135:9)
#loc280 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":136:19)
#loc281 = loc("CWE126_Buffer_Overread__char_declare_loop_15.c":136:9)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc4, #loc5])
#loc284 = loc(fused[#loc6, #loc7])
#loc285 = loc(fused[#loc8, #loc9])
#loc286 = loc(fused[#loc10, #loc11])
#loc287 = loc(fused[#loc12, #loc13])
#loc288 = loc(fused[#loc18, #loc19])
#loc289 = loc(fused[#loc23, #loc20])
#loc290 = loc(fused[#loc28, #loc29])
#loc291 = loc(fused[#loc33, #loc30])
#loc292 = loc(fused[#loc34, #loc35])
#loc293 = loc(fused[#loc39, #loc38])
#loc294 = loc(fused[#loc44, #loc45])
#loc295 = loc(fused[#loc46, #loc47])
#loc296 = loc(fused[#loc46, #loc48])
#loc297 = loc(fused[#loc49, #loc50])
#loc298 = loc(fused[#loc55, #loc56])
#loc299 = loc(fused[#loc60, #loc57])
#loc300 = loc(fused[#loc63, #loc64])
#loc301 = loc(fused[#loc65, #loc66])
#loc302 = loc(fused[#loc68, #loc67])
#loc303 = loc(fused[#loc69, #loc70])
#loc304 = loc(fused[#loc72, #loc66])
#loc305 = loc(fused[#loc77, #loc75])
#loc306 = loc(fused[#loc79, #loc78])
#loc307 = loc(fused[#loc83, #loc80])
#loc308 = loc(fused[#loc86, #loc87])
#loc309 = loc(fused[#loc88, #loc89])
#loc310 = loc(fused[#loc90, #loc91])
#loc311 = loc(fused[#loc92, #loc93])
#loc312 = loc(fused[#loc94, #loc95])
#loc313 = loc(fused[#loc100, #loc101])
#loc316 = loc(fused[#loc111, #loc112])
#loc317 = loc(fused[#loc115, #loc116])
#loc318 = loc(fused[#loc119, #loc118])
#loc319 = loc(fused[#loc120, #loc121])
#loc320 = loc(fused[#loc122, #loc123])
#loc321 = loc(fused[#loc124, #loc125])
#loc322 = loc(fused[#loc126, #loc127])
#loc323 = loc(fused[#loc132, #loc133])
#loc324 = loc(fused[#loc137, #loc134])
#loc325 = loc(fused[#loc142, #loc143])
#loc326 = loc(fused[#loc147, #loc144])
#loc327 = loc(fused[#loc148, #loc149])
#loc328 = loc(fused[#loc157, #loc156])
#loc329 = loc(fused[#loc159, #loc160])
#loc330 = loc(fused[#loc161, #loc162])
#loc331 = loc(fused[#loc161, #loc163])
#loc332 = loc(fused[#loc164, #loc165])
#loc333 = loc(fused[#loc170, #loc171])
#loc334 = loc(fused[#loc175, #loc172])
#loc335 = loc(fused[#loc178, #loc179])
#loc336 = loc(fused[#loc180, #loc181])
#loc337 = loc(fused[#loc183, #loc182])
#loc338 = loc(fused[#loc184, #loc185])
#loc339 = loc(fused[#loc187, #loc181])
#loc340 = loc(fused[#loc192, #loc190])
#loc341 = loc(fused[#loc194, #loc193])
#loc342 = loc(fused[#loc198, #loc195])
#loc343 = loc(fused[#loc201, #loc202])
#loc344 = loc(fused[#loc203, #loc204])
#loc345 = loc(fused[#loc205, #loc206])
#loc346 = loc(fused[#loc207, #loc208])
#loc347 = loc(fused[#loc213, #loc214])
#loc348 = loc(fused[#loc218, #loc215])
#loc349 = loc(fused[#loc223, #loc224])
#loc350 = loc(fused[#loc228, #loc225])
#loc351 = loc(fused[#loc229, #loc230])
#loc352 = loc(fused[#loc234, #loc233])
#loc353 = loc(fused[#loc240, #loc241])
#loc354 = loc(fused[#loc242, #loc243])
#loc355 = loc(fused[#loc242, #loc244])
#loc356 = loc(fused[#loc245, #loc246])
#loc357 = loc(fused[#loc251, #loc252])
#loc358 = loc(fused[#loc256, #loc253])
#loc359 = loc(fused[#loc259, #loc260])
#loc360 = loc(fused[#loc261, #loc262])
#loc361 = loc(fused[#loc264, #loc263])
#loc362 = loc(fused[#loc265, #loc266])
#loc363 = loc(fused[#loc268, #loc262])
#loc364 = loc(fused[#loc273, #loc271])
#loc365 = loc(fused[#loc275, #loc274])
#loc366 = loc(fused[#loc279, #loc276])
