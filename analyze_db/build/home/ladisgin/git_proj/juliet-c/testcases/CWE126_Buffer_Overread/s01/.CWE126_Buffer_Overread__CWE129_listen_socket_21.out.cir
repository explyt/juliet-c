!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:21)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:25)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":404:10)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":404:14)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":404:20)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":404:32)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:26)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:30)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:26)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:30)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:25)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc571 = loc(fused[#loc24, #loc25])
#loc634 = loc(fused[#loc192, #loc193])
#loc635 = loc(fused[#loc194, #loc195])
#loc641 = loc(fused[#loc216, #loc217])
#loc699 = loc(fused[#loc371, #loc372])
#loc757 = loc(fused[#loc524, #loc525])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc560)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc561)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc562)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc563)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc564)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc565)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc566)
  cir.func private @close(!s32i) -> !s32i loc(#loc567)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc568)
  cir.func private @printIntLine(!s32i) loc(#loc569)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc24, #loc25])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc571)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc568)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc575)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc575)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc575)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc38)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc577)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc43)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc44)
            } else {
              %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc578)
          } loc(#loc576)
        } loc(#loc574)
      } loc(#loc573)
    } loc(#loc572)
    cir.return loc(#loc23)
  } loc(#loc570)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc51)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc583)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc584)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc585)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc586)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc587)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc60)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc585)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc62)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc586)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc68)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc69)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc70)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc589)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc76)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc591)
            cir.if %63 {
              cir.break loc(#loc78)
            } loc(#loc592)
          } loc(#loc590)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc593)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc81)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc594)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc595)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc86)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc86)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc596)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc89)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc90)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc91)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc597)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc93)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc93)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc94)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc598)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc600)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc601)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc601)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc105)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc106)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc602)
            cir.if %67 {
              cir.break loc(#loc108)
            } loc(#loc603)
          } loc(#loc599)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc112)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc113)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc114)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc605)
            cir.if %65 {
              cir.break loc(#loc116)
            } loc(#loc606)
          } loc(#loc604)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc118)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc119)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc120)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc607)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc126)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc609)
            cir.if %63 {
              cir.break loc(#loc128)
            } loc(#loc610)
          } loc(#loc608)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc131)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc131)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc131)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc131)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc131)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc131)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc131)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc132)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc611)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc134)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc612)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc140)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc614)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc141)
              cir.yield %65 : !cir.bool loc(#loc141)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc143)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc615)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc141)
                cir.yield %69 : !cir.bool loc(#loc141)
              }, false {
                %69 = cir.const #false loc(#loc141)
                cir.yield %69 : !cir.bool loc(#loc141)
              }) : (!cir.bool) -> !cir.bool loc(#loc141)
              cir.yield %68 : !cir.bool loc(#loc141)
            }) : (!cir.bool) -> !cir.bool loc(#loc141)
            cir.if %64 {
              cir.break loc(#loc145)
            } loc(#loc616)
          } loc(#loc613)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc146)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc146)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc148)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc617)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc149)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc150)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc618)
          cir.yield loc(#loc66)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc153)
          cir.condition(%16) loc(#loc153)
        } loc(#loc588)
      } loc(#loc588)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc157)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc620)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc160)
        } loc(#loc621)
      } loc(#loc619)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc164)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc623)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc167)
        } loc(#loc624)
      } loc(#loc622)
    } loc(#loc582)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc568)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc171)
    cir.return loc(#loc47)
  } loc(#loc579)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc627)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc174)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc628)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc176)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc629)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc178)
    cir.return loc(#loc173)
  } loc(#loc626)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc630)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc631)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc632)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc189)
  cir.func @main(%arg0: !s32i loc(fused[#loc192, #loc193]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc194, #loc195])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc634)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc635)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc191)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc196)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc197)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc198)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc198)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc199)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc186)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc636)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_21_good() : () -> () loc(#loc201)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc187)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc188)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_21_bad() : () -> () loc(#loc205)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc189)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc638)
    cir.return %17 : !s32i loc(#loc638)
  } loc(#loc633)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc639)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc213)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc216, #loc217])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc641)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc639)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc221)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc221)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc212)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc212)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc225)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc645)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc645)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc645)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc233)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc647)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc236)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc648)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc234)
                cir.yield %14 : !cir.bool loc(#loc234)
              }, false {
                %14 = cir.const #false loc(#loc234)
                cir.yield %14 : !cir.bool loc(#loc234)
              }) : (!cir.bool) -> !cir.bool loc(#loc234)
              cir.yield %13 : !cir.bool loc(#loc234)
            }, false {
              %10 = cir.const #false loc(#loc234)
              cir.yield %10 : !cir.bool loc(#loc234)
            }) : (!cir.bool) -> !cir.bool loc(#loc234)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc242)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc242)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc243)
            } else {
              %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc213)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc213)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc244)
            } loc(#loc649)
          } loc(#loc646)
        } loc(#loc644)
      } loc(#loc643)
    } loc(#loc642)
    cir.return loc(#loc215)
  } loc(#loc640)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc651)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc250)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc654)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc655)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc656)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc657)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc658)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc259)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc259)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc656)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc261)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc261)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc657)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc266)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc267)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc268)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc660)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc274)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc275)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc275)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc662)
            cir.if %63 {
              cir.break loc(#loc277)
            } loc(#loc663)
          } loc(#loc661)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc664)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc280)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc665)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc666)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc285)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc285)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc667)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc287)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc287)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc90)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc91)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc668)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc289)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc289)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc290)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc669)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc295)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc671)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc672)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc672)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc300)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc301)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc301)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc673)
            cir.if %67 {
              cir.break loc(#loc303)
            } loc(#loc674)
          } loc(#loc670)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc306)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc307)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc308)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc309)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc309)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc676)
            cir.if %65 {
              cir.break loc(#loc311)
            } loc(#loc677)
          } loc(#loc675)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc312)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc313)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc314)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc315)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc678)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc320)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc321)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc321)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc680)
            cir.if %63 {
              cir.break loc(#loc323)
            } loc(#loc681)
          } loc(#loc679)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc324)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc325)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc325)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc326)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc326)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc326)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc326)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc326)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc326)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc326)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc327)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc327)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc682)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc328)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc329)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc683)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc334)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc335)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc335)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc685)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc336)
              cir.yield %65 : !cir.bool loc(#loc336)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc337)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc338)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc686)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc336)
                cir.yield %69 : !cir.bool loc(#loc336)
              }, false {
                %69 = cir.const #false loc(#loc336)
                cir.yield %69 : !cir.bool loc(#loc336)
              }) : (!cir.bool) -> !cir.bool loc(#loc336)
              cir.yield %68 : !cir.bool loc(#loc336)
            }) : (!cir.bool) -> !cir.bool loc(#loc336)
            cir.if %64 {
              cir.break loc(#loc340)
            } loc(#loc687)
          } loc(#loc684)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc341)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc341)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc342)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc343)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc343)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc688)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc344)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc345)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc689)
          cir.yield loc(#loc265)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc348)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc348)
          cir.condition(%16) loc(#loc348)
        } loc(#loc659)
      } loc(#loc659)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc351)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc352)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc352)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc691)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc354)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc355)
        } loc(#loc692)
      } loc(#loc690)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc358)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc359)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc359)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc694)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc361)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc362)
        } loc(#loc695)
      } loc(#loc693)
    } loc(#loc653)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc363)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc639)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc696)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc366)
    cir.return loc(#loc246)
  } loc(#loc650)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc697)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc371, #loc372])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc699)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc697)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc376)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc376)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc703)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc703)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc703)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc384)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc385)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc705)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc388)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc706)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc386)
                cir.yield %14 : !cir.bool loc(#loc386)
              }, false {
                %14 = cir.const #false loc(#loc386)
                cir.yield %14 : !cir.bool loc(#loc386)
              }) : (!cir.bool) -> !cir.bool loc(#loc386)
              cir.yield %13 : !cir.bool loc(#loc386)
            }, false {
              %10 = cir.const #false loc(#loc386)
              cir.yield %10 : !cir.bool loc(#loc386)
            }) : (!cir.bool) -> !cir.bool loc(#loc386)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc393)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc394)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc394)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc394)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc395)
            } else {
              %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc396)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc396)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc397)
            } loc(#loc707)
          } loc(#loc704)
        } loc(#loc702)
      } loc(#loc701)
    } loc(#loc700)
    cir.return loc(#loc370)
  } loc(#loc698)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc709)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc402)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc403)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc710)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc712)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc713)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc714)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc715)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc716)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc412)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc412)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc714)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc414)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc414)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc715)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc419)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc420)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc421)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc422)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc718)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc427)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc428)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc428)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc720)
            cir.if %63 {
              cir.break loc(#loc430)
            } loc(#loc721)
          } loc(#loc719)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc722)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc433)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc723)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc724)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc438)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc438)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc725)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc440)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc440)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc90)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc91)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc726)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc442)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc442)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc443)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc727)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc448)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc729)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc730)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc730)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc453)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc454)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc454)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc731)
            cir.if %67 {
              cir.break loc(#loc456)
            } loc(#loc732)
          } loc(#loc728)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc459)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc460)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc461)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc462)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc462)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc734)
            cir.if %65 {
              cir.break loc(#loc464)
            } loc(#loc735)
          } loc(#loc733)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc465)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc466)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc467)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc468)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc736)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc473)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc474)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc474)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc738)
            cir.if %63 {
              cir.break loc(#loc476)
            } loc(#loc739)
          } loc(#loc737)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc477)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc478)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc478)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc479)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc479)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc479)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc479)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc479)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc479)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc479)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc480)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc480)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc740)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc481)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc482)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc482)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc741)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc487)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc488)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc488)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc743)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc489)
              cir.yield %65 : !cir.bool loc(#loc489)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc490)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc491)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc744)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc489)
                cir.yield %69 : !cir.bool loc(#loc489)
              }, false {
                %69 = cir.const #false loc(#loc489)
                cir.yield %69 : !cir.bool loc(#loc489)
              }) : (!cir.bool) -> !cir.bool loc(#loc489)
              cir.yield %68 : !cir.bool loc(#loc489)
            }) : (!cir.bool) -> !cir.bool loc(#loc489)
            cir.if %64 {
              cir.break loc(#loc493)
            } loc(#loc745)
          } loc(#loc742)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc494)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc494)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc495)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc496)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc496)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc746)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc497)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc498)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc747)
          cir.yield loc(#loc418)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc501)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc501)
          cir.condition(%16) loc(#loc501)
        } loc(#loc717)
      } loc(#loc717)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc504)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc505)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc505)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc749)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc507)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc508)
        } loc(#loc750)
      } loc(#loc748)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc511)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc512)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc512)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc752)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc514)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc515)
        } loc(#loc753)
      } loc(#loc751)
    } loc(#loc711)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc516)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc697)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc754)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc518)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc519)
    cir.return loc(#loc399)
  } loc(#loc708)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc755)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc524, #loc525])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc757)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc526)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc755)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc529)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc529)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc761)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc761)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc761)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc537)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc538)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc763)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc542)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc543)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc543)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc543)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc544)
            } else {
              %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc545)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc545)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc546)
            } loc(#loc764)
          } loc(#loc762)
        } loc(#loc760)
      } loc(#loc759)
    } loc(#loc758)
    cir.return loc(#loc523)
  } loc(#loc756)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc766)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc551)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc552)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc767)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc554)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc768)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc556)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc755)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc769)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc558)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc559)
    cir.return loc(#loc548)
  } loc(#loc765)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":45:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":45:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":61:27)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":65:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":48:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":49:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":64:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":49:8)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":50:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":51:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":63:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":52:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":52:34)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":62:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:17)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:25)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":56:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":58:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":60:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:37)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:30)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":61:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":67:1)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":143:1)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":69:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":69:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:12)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":72:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":140:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":77:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":77:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":78:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":78:28)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":79:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":79:31)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":80:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":80:31)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":81:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":81:41)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":82:9)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":125:17)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:35)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:44)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:57)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:28)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:68)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":96:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:17)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:33)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":94:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":95:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:20)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:21)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:30)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:33)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:47)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:48)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":98:34)
#loc87 = loc("/usr/include/netinet/in.h":249:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":98:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":99:39)
#loc90 = loc("/usr/include/netinet/in.h":251:20)
#loc91 = loc("/usr/include/netinet/in.h":33:15)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":99:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:38)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:32)
#loc95 = loc("/usr/include/netinet/in.h":250:15)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:46)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":104:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:22)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:54)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:55)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:64)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:78)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:17)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:84)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":102:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":103:17)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":108:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:24)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:38)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:17)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:57)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":106:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":107:17)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:35)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:49)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:55)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:28)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:13)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:59)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":113:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:17)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:33)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":111:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":112:17)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:31)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:45)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:58)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:76)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:79)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:26)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:80)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":119:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:31)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:44)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:47)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:61)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":117:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":118:17)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:39)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:25)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:25)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:20)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:36)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":125:16)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:9)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":129:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:29)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":127:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":128:26)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":128:13)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:9)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":133:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:29)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":131:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":132:26)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":132:13)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":141:17)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":141:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":142:13)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":142:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":388:1)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":393:1)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":390:5)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":390:14)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":391:5)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":391:14)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":392:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":392:13)
#loc180 = loc("/usr/include/stdlib.h":575:1)
#loc181 = loc("/usr/include/stdlib.h":575:41)
#loc182 = loc("/usr/include/time.h":76:1)
#loc183 = loc("/usr/include/time.h":76:38)
#loc184 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc185 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":409:15)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":411:15)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":414:15)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":416:15)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":404:1)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":419:1)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":405:1)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":407:27)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":407:22)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":407:5)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":409:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":410:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":410:58)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":411:5)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":414:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":415:5)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":415:57)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":416:5)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":418:12)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":418:5)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":150:1)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":150:29)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":160:19)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":173:27)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:1)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":177:1)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":156:1)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":157:5)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":176:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":157:8)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":158:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":161:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":163:5)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":160:9)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":164:9)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":175:9)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":165:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":165:34)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:13)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":174:13)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:17)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:25)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:27)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:30)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:38)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:40)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":168:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":170:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":172:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:37)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:30)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:17)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":173:17)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":179:1)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":255:1)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":181:5)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":181:9)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:12)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:5)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":184:5)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":252:5)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":189:9)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":189:13)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":190:9)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":190:28)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":191:9)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":191:31)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":192:9)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":192:31)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":193:9)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":193:41)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":194:9)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":237:17)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:35)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:44)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:57)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:28)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:68)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:13)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":208:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:17)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:33)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":206:13)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":207:17)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:20)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:21)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:30)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:33)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:47)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:13)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:48)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":210:34)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":210:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":211:39)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":211:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:38)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:32)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:13)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:46)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:13)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":216:13)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:22)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:54)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:55)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:64)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:78)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:17)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:84)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":214:13)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":215:17)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:13)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":220:13)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:24)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:38)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:17)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:57)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":218:13)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":219:17)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:35)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:49)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:55)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:28)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:13)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:59)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:13)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":225:13)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:17)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:33)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":223:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":224:17)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:31)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:45)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:58)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:76)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:79)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:26)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:13)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:80)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:13)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":231:13)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:17)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:31)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:44)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:47)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:61)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":229:13)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":230:17)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:39)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:25)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:13)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:25)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:20)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:36)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":237:16)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:9)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":241:9)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:13)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:29)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":239:9)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":240:26)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":240:13)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:9)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":245:9)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:13)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:29)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":243:9)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":244:26)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":244:13)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":253:22)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":253:5)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":254:18)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":254:5)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":151:1)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":151:29)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:1)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":275:1)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":259:1)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":260:5)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":274:5)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":260:8)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":261:5)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":262:9)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":273:9)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":263:13)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":263:34)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:13)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":272:13)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:17)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:25)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:27)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:30)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:38)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:40)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":266:13)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":268:13)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":270:13)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:37)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:30)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:17)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":271:27)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":271:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":277:1)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":353:1)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":279:5)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":279:9)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:13)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:12)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:5)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":282:5)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":350:5)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":287:9)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":287:13)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":288:9)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":288:28)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":289:9)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":289:31)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":290:9)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":290:31)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":291:9)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":291:41)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":292:9)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":335:17)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:35)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:44)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:57)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:28)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:13)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:68)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:13)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":306:13)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:17)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:33)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":304:13)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":305:17)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:20)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:21)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:30)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:33)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:47)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:13)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:48)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":308:34)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":308:13)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":309:39)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":309:13)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:38)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:32)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:13)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:46)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:13)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":314:13)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:22)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:54)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:55)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:64)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:78)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:17)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:84)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":312:13)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":313:17)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:13)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":318:13)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:24)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:38)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:17)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:57)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":316:13)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":317:17)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:35)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:49)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:55)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:28)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:13)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:59)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:13)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":323:13)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:17)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:33)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":321:13)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":322:17)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:31)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:45)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:58)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:76)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:79)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:26)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:13)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:80)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:13)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":329:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:17)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:31)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:44)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:47)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:61)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":327:13)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":328:17)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:39)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:25)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:13)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:25)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:20)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:13)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:36)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":335:16)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:9)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":339:9)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:13)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:29)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":337:9)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":338:26)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":338:13)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:9)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":343:9)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:13)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:29)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":341:9)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":342:26)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":342:13)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":351:22)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":351:5)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":352:18)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":352:5)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":152:1)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":152:28)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:1)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":374:1)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":357:1)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":358:5)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":373:5)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":358:8)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":359:5)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":360:9)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":372:9)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":361:13)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":361:34)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:13)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":371:13)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:17)
#loc538 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:25)
#loc539 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":365:13)
#loc540 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":367:13)
#loc541 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":369:13)
#loc542 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:37)
#loc543 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:30)
#loc544 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:17)
#loc545 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":370:27)
#loc546 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":370:17)
#loc547 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":376:1)
#loc548 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":386:1)
#loc549 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":378:5)
#loc550 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":378:9)
#loc551 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:13)
#loc552 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:12)
#loc553 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:5)
#loc554 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":383:12)
#loc555 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":383:5)
#loc556 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":384:21)
#loc557 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":384:5)
#loc558 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":385:17)
#loc559 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":385:5)
#loc560 = loc(fused[#loc1, #loc2])
#loc561 = loc(fused[#loc3, #loc4])
#loc562 = loc(fused[#loc5, #loc6])
#loc563 = loc(fused[#loc7, #loc8])
#loc564 = loc(fused[#loc9, #loc10])
#loc565 = loc(fused[#loc11, #loc12])
#loc566 = loc(fused[#loc13, #loc14])
#loc567 = loc(fused[#loc15, #loc16])
#loc568 = loc(fused[#loc17, #loc18])
#loc569 = loc(fused[#loc19, #loc20])
#loc570 = loc(fused[#loc22, #loc23])
#loc572 = loc(fused[#loc27, #loc28])
#loc573 = loc(fused[#loc30, #loc28])
#loc574 = loc(fused[#loc31, #loc32])
#loc575 = loc(fused[#loc33, #loc34])
#loc576 = loc(fused[#loc35, #loc36])
#loc577 = loc(fused[#loc37, #loc38])
#loc578 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc579 = loc(fused[#loc46, #loc47])
#loc580 = loc(fused[#loc48, #loc49])
#loc581 = loc(fused[#loc52, #loc50])
#loc582 = loc(fused[#loc53, #loc54])
#loc583 = loc(fused[#loc55, #loc56])
#loc584 = loc(fused[#loc57, #loc58])
#loc585 = loc(fused[#loc59, #loc60])
#loc586 = loc(fused[#loc61, #loc62])
#loc587 = loc(fused[#loc63, #loc64])
#loc588 = loc(fused[#loc65, #loc66])
#loc589 = loc(fused[#loc71, #loc72])
#loc590 = loc(fused[#loc73, #loc74])
#loc591 = loc(fused[#loc75, #loc76])
#loc592 = loc(fused[#loc77, #loc74])
#loc593 = loc(fused[#loc79, #loc80])
#loc594 = loc(fused[#loc82, #loc83])
#loc595 = loc(fused[#loc84, #loc85])
#loc596 = loc(fused[#loc88, #loc86])
#loc597 = loc(fused[#loc92, #loc89])
#loc598 = loc(fused[#loc96, #loc97])
#loc599 = loc(fused[#loc98, #loc99])
#loc600 = loc(fused[#loc101, #loc102])
#loc601 = loc(fused[#loc103, #loc104])
#loc602 = loc(fused[#loc105, #loc106])
#loc603 = loc(fused[#loc107, #loc99])
#loc604 = loc(fused[#loc109, #loc110])
#loc605 = loc(fused[#loc113, #loc114])
#loc606 = loc(fused[#loc115, #loc110])
#loc607 = loc(fused[#loc121, #loc122])
#loc608 = loc(fused[#loc123, #loc124])
#loc609 = loc(fused[#loc125, #loc126])
#loc610 = loc(fused[#loc127, #loc124])
#loc611 = loc(fused[#loc131, #loc132])
#loc612 = loc(fused[#loc135, #loc136])
#loc613 = loc(fused[#loc137, #loc138])
#loc614 = loc(fused[#loc139, #loc140])
#loc615 = loc(fused[#loc142, #loc143])
#loc616 = loc(fused[#loc144, #loc138])
#loc617 = loc(fused[#loc148, #loc146])
#loc618 = loc(fused[#loc151, #loc152])
#loc619 = loc(fused[#loc154, #loc155])
#loc620 = loc(fused[#loc156, #loc157])
#loc621 = loc(fused[#loc158, #loc155])
#loc622 = loc(fused[#loc161, #loc162])
#loc623 = loc(fused[#loc163, #loc164])
#loc624 = loc(fused[#loc165, #loc162])
#loc625 = loc(fused[#loc169, #loc168])
#loc626 = loc(fused[#loc172, #loc173])
#loc627 = loc(fused[#loc174, #loc175])
#loc628 = loc(fused[#loc176, #loc177])
#loc629 = loc(fused[#loc178, #loc179])
#loc630 = loc(fused[#loc180, #loc181])
#loc631 = loc(fused[#loc182, #loc183])
#loc632 = loc(fused[#loc184, #loc185])
#loc633 = loc(fused[#loc190, #loc191])
#loc636 = loc(fused[#loc201, #loc202])
#loc637 = loc(fused[#loc205, #loc206])
#loc638 = loc(fused[#loc209, #loc208])
#loc639 = loc(fused[#loc210, #loc211])
#loc640 = loc(fused[#loc214, #loc215])
#loc642 = loc(fused[#loc219, #loc220])
#loc643 = loc(fused[#loc222, #loc223, #loc224, #loc220])
#loc644 = loc(fused[#loc226, #loc227])
#loc645 = loc(fused[#loc228, #loc229])
#loc646 = loc(fused[#loc230, #loc231])
#loc647 = loc(fused[#loc232, #loc233])
#loc648 = loc(fused[#loc235, #loc237])
#loc649 = loc(fused[#loc238, #loc239, #loc240, #loc231])
#loc650 = loc(fused[#loc245, #loc246])
#loc651 = loc(fused[#loc247, #loc248])
#loc652 = loc(fused[#loc251, #loc249])
#loc653 = loc(fused[#loc252, #loc253])
#loc654 = loc(fused[#loc254, #loc255])
#loc655 = loc(fused[#loc256, #loc257])
#loc656 = loc(fused[#loc258, #loc259])
#loc657 = loc(fused[#loc260, #loc261])
#loc658 = loc(fused[#loc262, #loc263])
#loc659 = loc(fused[#loc264, #loc265])
#loc660 = loc(fused[#loc270, #loc271])
#loc661 = loc(fused[#loc272, #loc273])
#loc662 = loc(fused[#loc274, #loc275])
#loc663 = loc(fused[#loc276, #loc273])
#loc664 = loc(fused[#loc278, #loc279])
#loc665 = loc(fused[#loc281, #loc282])
#loc666 = loc(fused[#loc283, #loc284])
#loc667 = loc(fused[#loc286, #loc285])
#loc668 = loc(fused[#loc288, #loc287])
#loc669 = loc(fused[#loc291, #loc292])
#loc670 = loc(fused[#loc293, #loc294])
#loc671 = loc(fused[#loc296, #loc297])
#loc672 = loc(fused[#loc298, #loc299])
#loc673 = loc(fused[#loc300, #loc301])
#loc674 = loc(fused[#loc302, #loc294])
#loc675 = loc(fused[#loc304, #loc305])
#loc676 = loc(fused[#loc308, #loc309])
#loc677 = loc(fused[#loc310, #loc305])
#loc678 = loc(fused[#loc316, #loc317])
#loc679 = loc(fused[#loc318, #loc319])
#loc680 = loc(fused[#loc320, #loc321])
#loc681 = loc(fused[#loc322, #loc319])
#loc682 = loc(fused[#loc326, #loc327])
#loc683 = loc(fused[#loc330, #loc331])
#loc684 = loc(fused[#loc332, #loc333])
#loc685 = loc(fused[#loc334, #loc335])
#loc686 = loc(fused[#loc337, #loc338])
#loc687 = loc(fused[#loc339, #loc333])
#loc688 = loc(fused[#loc343, #loc341])
#loc689 = loc(fused[#loc346, #loc347])
#loc690 = loc(fused[#loc349, #loc350])
#loc691 = loc(fused[#loc351, #loc352])
#loc692 = loc(fused[#loc353, #loc350])
#loc693 = loc(fused[#loc356, #loc357])
#loc694 = loc(fused[#loc358, #loc359])
#loc695 = loc(fused[#loc360, #loc357])
#loc696 = loc(fused[#loc364, #loc363])
#loc697 = loc(fused[#loc367, #loc368])
#loc698 = loc(fused[#loc369, #loc370])
#loc700 = loc(fused[#loc374, #loc375])
#loc701 = loc(fused[#loc377, #loc375])
#loc702 = loc(fused[#loc378, #loc379])
#loc703 = loc(fused[#loc380, #loc381])
#loc704 = loc(fused[#loc382, #loc383])
#loc705 = loc(fused[#loc384, #loc385])
#loc706 = loc(fused[#loc387, #loc389])
#loc707 = loc(fused[#loc390, #loc391, #loc392, #loc383])
#loc708 = loc(fused[#loc398, #loc399])
#loc709 = loc(fused[#loc400, #loc401])
#loc710 = loc(fused[#loc404, #loc402])
#loc711 = loc(fused[#loc405, #loc406])
#loc712 = loc(fused[#loc407, #loc408])
#loc713 = loc(fused[#loc409, #loc410])
#loc714 = loc(fused[#loc411, #loc412])
#loc715 = loc(fused[#loc413, #loc414])
#loc716 = loc(fused[#loc415, #loc416])
#loc717 = loc(fused[#loc417, #loc418])
#loc718 = loc(fused[#loc423, #loc424])
#loc719 = loc(fused[#loc425, #loc426])
#loc720 = loc(fused[#loc427, #loc428])
#loc721 = loc(fused[#loc429, #loc426])
#loc722 = loc(fused[#loc431, #loc432])
#loc723 = loc(fused[#loc434, #loc435])
#loc724 = loc(fused[#loc436, #loc437])
#loc725 = loc(fused[#loc439, #loc438])
#loc726 = loc(fused[#loc441, #loc440])
#loc727 = loc(fused[#loc444, #loc445])
#loc728 = loc(fused[#loc446, #loc447])
#loc729 = loc(fused[#loc449, #loc450])
#loc730 = loc(fused[#loc451, #loc452])
#loc731 = loc(fused[#loc453, #loc454])
#loc732 = loc(fused[#loc455, #loc447])
#loc733 = loc(fused[#loc457, #loc458])
#loc734 = loc(fused[#loc461, #loc462])
#loc735 = loc(fused[#loc463, #loc458])
#loc736 = loc(fused[#loc469, #loc470])
#loc737 = loc(fused[#loc471, #loc472])
#loc738 = loc(fused[#loc473, #loc474])
#loc739 = loc(fused[#loc475, #loc472])
#loc740 = loc(fused[#loc479, #loc480])
#loc741 = loc(fused[#loc483, #loc484])
#loc742 = loc(fused[#loc485, #loc486])
#loc743 = loc(fused[#loc487, #loc488])
#loc744 = loc(fused[#loc490, #loc491])
#loc745 = loc(fused[#loc492, #loc486])
#loc746 = loc(fused[#loc496, #loc494])
#loc747 = loc(fused[#loc499, #loc500])
#loc748 = loc(fused[#loc502, #loc503])
#loc749 = loc(fused[#loc504, #loc505])
#loc750 = loc(fused[#loc506, #loc503])
#loc751 = loc(fused[#loc509, #loc510])
#loc752 = loc(fused[#loc511, #loc512])
#loc753 = loc(fused[#loc513, #loc510])
#loc754 = loc(fused[#loc517, #loc516])
#loc755 = loc(fused[#loc520, #loc521])
#loc756 = loc(fused[#loc522, #loc523])
#loc758 = loc(fused[#loc527, #loc528])
#loc759 = loc(fused[#loc530, #loc528])
#loc760 = loc(fused[#loc531, #loc532])
#loc761 = loc(fused[#loc533, #loc534])
#loc762 = loc(fused[#loc535, #loc536])
#loc763 = loc(fused[#loc537, #loc538])
#loc764 = loc(fused[#loc539, #loc540, #loc541, #loc536])
#loc765 = loc(fused[#loc547, #loc548])
#loc766 = loc(fused[#loc549, #loc550])
#loc767 = loc(fused[#loc553, #loc551])
#loc768 = loc(fused[#loc555, #loc554])
#loc769 = loc(fused[#loc557, #loc556])
