!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc175)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc176)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc178)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc19)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc21)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc21)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc21)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %21, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc23)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc24)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc28)
    %31 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc30)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc30)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    %36 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %38 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc35)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %42 bytes from %37 set to %38 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc39)
    %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc41)
    %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    %50 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %50, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    cir.store %51, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.store %52, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %53 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %55 = cir.const #cir.int<67> : !s32i loc(#loc51)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc52)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc52)
    cir.libc.memset %59 bytes from %54 set to %55 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc56)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc57)
    %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
    %68 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
    cir.store %69, %3 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %70 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc66)
    cir.store %71, %2 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb4 loc(#loc190)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %72 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %73 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %74 = cir.cmp(lt, %72, %73) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %74 ^bb5, ^bb9 loc(#loc70)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc193)
  ^bb6:  // pred: ^bb5
    %75 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %76 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc72)
    %79 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %80 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // pred: ^bb7
    %82 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %83 = cir.unary(inc, %82) : !u64i, !u64i loc(#loc78)
    cir.store %83, %2 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb4 loc(#loc190)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    %84 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %85 = cir.cast(integral, %84 : !s32i), !s8i loc(#loc79)
    %86 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %87 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %88 = cir.binop(sub, %86, %87) nsw : !s32i loc(#loc80)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %85, %90 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%91) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc171)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc202)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc203)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc204)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc206)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc103)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc103)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc103)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc103)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc207)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc103)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc105)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc105)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc105)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %21, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc107)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc108)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc108)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc108)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc208)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc112)
    %31 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc114)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc114)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    %36 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %38 = cir.const #cir.int<65> : !s32i loc(#loc118)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc119)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc119)
    cir.libc.memset %42 bytes from %37 set to %38 : !cir.ptr<!void>, !s32i, !u64i loc(#loc210)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc123)
    %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc125)
    %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    %50 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.store %50, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.store %51, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.store %52, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb2 loc(#loc214)
  ^bb2:  // pred: ^bb1
    %53 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    %55 = cir.const #cir.int<67> : !s32i loc(#loc135)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc136)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc136)
    cir.libc.memset %59 bytes from %54 set to %55 : !cir.ptr<!void>, !s32i, !u64i loc(#loc215)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc140)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc141)
    %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc144)
    %68 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc144)
    cir.store %69, %3 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb3 loc(#loc218)
  ^bb3:  // pred: ^bb2
    %70 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc150)
    cir.store %71, %2 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb4 loc(#loc218)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %72 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %73 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %74 = cir.cmp(lt, %72, %73) : !u64i, !cir.bool loc(#loc220)
    cir.brcond %74 ^bb5, ^bb9 loc(#loc154)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %75 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %76 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc158)
    %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc156)
    %79 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc159)
    %80 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
    %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc160)
    cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.br ^bb7 loc(#loc149)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc149)
  ^bb8:  // pred: ^bb7
    %82 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc161)
    %83 = cir.unary(inc, %82) : !u64i, !u64i loc(#loc162)
    cir.store %83, %2 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb4 loc(#loc218)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc149)
  ^bb10:  // pred: ^bb9
    %84 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %85 = cir.cast(integral, %84 : !s32i), !s8i loc(#loc163)
    %86 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %87 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %88 = cir.binop(sub, %86, %87) nsw : !s32i loc(#loc164)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %85, %90 : !s8i, !cir.ptr<!s8i> loc(#loc224)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%91) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.br ^bb11 loc(#loc133)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc131)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc90)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":53:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":35:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":35:27)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":36:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":36:23)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":38:13)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":38:20)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":38:23)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":39:13)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":39:26)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":25:5)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":25:12)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":26:36)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":27:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":27:37)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:12)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:27)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:32)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:35)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:5)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":28:36)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":29:27)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":29:5)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":29:19)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":29:22)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":29:23)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:12)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:28)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:33)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:37)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":30:38)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":31:29)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":31:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":31:20)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":31:24)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":31:25)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":33:12)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":33:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":34:5)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":52:5)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":37:9)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":51:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:20)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:26)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:31)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:35)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:13)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":40:36)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":41:27)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":41:18)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":41:22)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":41:13)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":42:23)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":42:30)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":42:13)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":42:34)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:13)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":48:13)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:22)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:18)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:25)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:29)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:27)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":46:13)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":47:27)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":47:32)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":47:33)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":47:22)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":47:17)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:39)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":45:38)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":49:27)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":49:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":49:22)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":49:13)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":50:23)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":50:13)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":92:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":95:1)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":94:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":94:13)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":60:1)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":90:1)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":72:9)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":72:27)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":73:9)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":73:23)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":75:13)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":75:20)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":75:23)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":76:13)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":76:26)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":62:5)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":62:12)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":63:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":63:36)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":64:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":64:37)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:12)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:27)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:32)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:35)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:5)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":65:36)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":66:27)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":66:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":66:19)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":66:22)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":66:23)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:12)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:28)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:33)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:37)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":67:38)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":68:29)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":68:5)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":68:20)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":68:24)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":68:25)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":70:12)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":70:5)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":71:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":89:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":74:9)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":88:9)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:20)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:26)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:31)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:35)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:13)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":77:36)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":78:27)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":78:18)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":78:22)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":78:13)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":79:23)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":79:30)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":79:13)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":79:34)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:13)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":85:13)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:22)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:18)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:25)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:29)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:27)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":83:13)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":84:27)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":84:32)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":84:33)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":84:22)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":84:17)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:39)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":82:38)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":86:27)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":86:18)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":86:22)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":86:13)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":87:23)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_31.c":87:13)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc11, #loc13])
#loc176 = loc(fused[#loc14, #loc15])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc26, #loc27])
#loc181 = loc(fused[#loc29, #loc28])
#loc182 = loc(fused[#loc37, #loc38])
#loc183 = loc(fused[#loc40, #loc39])
#loc184 = loc(fused[#loc45, #loc44])
#loc185 = loc(fused[#loc46, #loc47])
#loc186 = loc(fused[#loc48, #loc49])
#loc187 = loc(fused[#loc54, #loc55])
#loc188 = loc(fused[#loc59, #loc56])
#loc189 = loc(fused[#loc62, #loc63])
#loc190 = loc(fused[#loc64, #loc65])
#loc191 = loc(fused[#loc67, #loc66])
#loc192 = loc(fused[#loc68, #loc69])
#loc193 = loc(fused[#loc71, #loc65])
#loc194 = loc(fused[#loc76, #loc74])
#loc195 = loc(fused[#loc78, #loc77])
#loc196 = loc(fused[#loc82, #loc79])
#loc197 = loc(fused[#loc85, #loc86])
#loc198 = loc(fused[#loc87, #loc88])
#loc199 = loc(fused[#loc89, #loc90])
#loc200 = loc(fused[#loc91, #loc92])
#loc201 = loc(fused[#loc93, #loc94])
#loc202 = loc(fused[#loc95, #loc96])
#loc203 = loc(fused[#loc95, #loc97])
#loc204 = loc(fused[#loc98, #loc99])
#loc205 = loc(fused[#loc100, #loc101])
#loc206 = loc(fused[#loc102, #loc103])
#loc207 = loc(fused[#loc104, #loc105])
#loc208 = loc(fused[#loc110, #loc111])
#loc209 = loc(fused[#loc113, #loc112])
#loc210 = loc(fused[#loc121, #loc122])
#loc211 = loc(fused[#loc124, #loc123])
#loc212 = loc(fused[#loc129, #loc128])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc132, #loc133])
#loc215 = loc(fused[#loc138, #loc139])
#loc216 = loc(fused[#loc143, #loc140])
#loc217 = loc(fused[#loc146, #loc147])
#loc218 = loc(fused[#loc148, #loc149])
#loc219 = loc(fused[#loc151, #loc150])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc155, #loc149])
#loc222 = loc(fused[#loc160, #loc158])
#loc223 = loc(fused[#loc162, #loc161])
#loc224 = loc(fused[#loc166, #loc163])
