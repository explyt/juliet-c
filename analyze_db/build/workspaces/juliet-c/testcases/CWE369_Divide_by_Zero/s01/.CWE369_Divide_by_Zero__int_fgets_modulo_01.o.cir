!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc98)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc99)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc100)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc102)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc107)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc107)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc107)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc26)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc26)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc26)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc26)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc26)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc26)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc26)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc109)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc34)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc110)
      } loc(#loc108)
    } loc(#loc106)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc112)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc103)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc113)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc52)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc54)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc120)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc58)
    cir.return loc(#loc48)
  } loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc59)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc125)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc125)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc125)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc73)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc74)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc74)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc74)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc74)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc74)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc74)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc74)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc74)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc82)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc86)
        } loc(#loc128)
      } loc(#loc126)
    } loc(#loc124)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc131)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc94)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
        %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc133)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc96)
      } else {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc59)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc61)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":44:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":26:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":26:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":28:13)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":28:12)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":28:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":29:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":41:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":30:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":30:45)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":40:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:19)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:32)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:49)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":32:59)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":33:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":36:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":38:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":35:25)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":35:20)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":35:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":35:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":39:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":43:18)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":43:24)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":43:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":92:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":96:1)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":94:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":94:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":95:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":95:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":51:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":60:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":53:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":53:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":55:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":55:12)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":55:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":57:12)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":57:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":59:18)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":59:24)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":59:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":88:19)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":63:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":90:1)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":65:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":65:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":67:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":67:12)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":67:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":68:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":80:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":69:9)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":69:45)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:9)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":79:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:19)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:32)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:49)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":71:59)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":72:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":75:9)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":77:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":74:25)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":74:20)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":74:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":74:36)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":78:23)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":78:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":82:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":89:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":82:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":82:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":83:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":85:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":87:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":84:22)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":84:28)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":84:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_01.c":88:9)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc10, #loc11])
#loc103 = loc(fused[#loc12, #loc13])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc18, #loc16])
#loc106 = loc(fused[#loc19, #loc20])
#loc107 = loc(fused[#loc21, #loc22])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc28, #loc29])
#loc110 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc111 = loc(fused[#loc35, #loc36])
#loc112 = loc(fused[#loc38, #loc39])
#loc113 = loc(fused[#loc41, #loc42])
#loc114 = loc(fused[#loc43, #loc44])
#loc115 = loc(fused[#loc45, #loc46])
#loc116 = loc(fused[#loc47, #loc48])
#loc117 = loc(fused[#loc49, #loc50])
#loc118 = loc(fused[#loc53, #loc51])
#loc119 = loc(fused[#loc55, #loc54])
#loc120 = loc(fused[#loc56, #loc57])
#loc121 = loc(fused[#loc60, #loc61])
#loc122 = loc(fused[#loc62, #loc63])
#loc123 = loc(fused[#loc66, #loc64])
#loc124 = loc(fused[#loc67, #loc68])
#loc125 = loc(fused[#loc69, #loc70])
#loc126 = loc(fused[#loc71, #loc72])
#loc127 = loc(fused[#loc76, #loc77])
#loc128 = loc(fused[#loc78, #loc79, #loc80, #loc72])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc87, #loc88])
#loc131 = loc(fused[#loc89, #loc90])
#loc132 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc133 = loc(fused[#loc94, #loc95])
