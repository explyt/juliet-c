!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":43:82)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":43:86)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:44)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":142:86)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":142:90)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc259 = loc(fused[#loc11, #loc12])
#loc331 = loc(fused[#loc196, #loc197])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc254)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc255)
  cir.func private @printIntLine(!s32i) loc(#loc256)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc257)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc260)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc259)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc262)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc263)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc264)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc265)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc266)
    cir.br ^bb2 loc(#loc267)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc268)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc269)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc270)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb7 loc(#loc270)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc272)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc273)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc45)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc47)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb7 loc(#loc270)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc51)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb14 loc(#loc19)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc258)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc276)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc277)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc278)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc279)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc280)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @close(!s32i) -> !s32i loc(#loc283)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc287)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc288)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc289)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc85)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc77)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc79)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb2 loc(#loc293)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc293)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc92)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc94)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb5 loc(#loc295)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc101)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc297)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc103)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc298)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc299)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc111)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc112)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc301)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc114)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc115)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc116)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc302)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc118)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc118)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc119)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc120)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc303)
    cir.br ^bb9 loc(#loc304)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc305)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc306)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc306)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc130)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc131)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc308)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc133)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc309)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc137)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc138)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc139)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc311)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc141)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc135)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc143)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc144)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc145)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb17 loc(#loc313)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc151)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc315)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc153)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc149)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc155)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc156)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc156)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc156)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc156)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc156)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc156)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc156)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc157)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc316)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc159)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc159)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb21 loc(#loc318)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc165)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc166)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc166)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc166)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc166)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc166)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc166)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc166)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc166)
  ^bb26(%84: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc166)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc166)
  ^bb28(%85: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc166)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc321)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc170)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc163)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc171)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc173)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc173)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc322)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc174)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc175)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb3 loc(#loc90)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc90)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc324)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc181)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc326)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc184)
    cir.br ^bb37 loc(#loc179)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc179)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc327)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc188)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc328)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc329)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc191)
    cir.br ^bb41 loc(#loc186)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc186)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc88)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_badSink(%105) : (!s32i) -> () loc(#loc193)
    cir.return loc(#loc71)
  } loc(#loc284)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_goodG2BSink(%arg0: !s32i loc(fused[#loc196, #loc197])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc333)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc331)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb1 loc(#loc334)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc205)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc206)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc335)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc336)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc205)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc337)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc338)
    cir.br ^bb2 loc(#loc339)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc214)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc214)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc340)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc341)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc216)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc218)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc342)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc221)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc343)
    cir.br ^bb7 loc(#loc342)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc223)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc224)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc344)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc225)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc345)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc229)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc230)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc220)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc232)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc347)
    cir.br ^bb7 loc(#loc342)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc220)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc233)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc235)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc236)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc237)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc238)
    cir.br ^bb14 loc(#loc204)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc195)
  } loc(#loc330)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc241)
    cir.return loc(#loc240)
  } loc(#loc348)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc248)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc250)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41_goodG2BSink(%4) : (!s32i) -> () loc(#loc253)
    cir.return loc(#loc244)
  } loc(#loc350)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":59:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":46:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":46:16)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":47:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":47:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":44:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":45:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":58:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":50:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":51:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":55:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":53:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":54:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":54:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":54:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":54:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":52:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":56:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":56:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":56:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":56:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":57:14)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":57:9)
#loc54 = loc("/usr/include/sys/socket.h":102:1)
#loc55 = loc("/usr/include/sys/socket.h":102:62)
#loc56 = loc("/usr/include/netinet/in.h":404:1)
#loc57 = loc("/usr/include/netinet/in.h":405:40)
#loc58 = loc("/usr/include/sys/socket.h":112:1)
#loc59 = loc("/usr/include/sys/socket.h":113:6)
#loc60 = loc("/usr/include/sys/socket.h":296:1)
#loc61 = loc("/usr/include/sys/socket.h":296:39)
#loc62 = loc("/usr/include/sys/socket.h":306:1)
#loc63 = loc("/usr/include/sys/socket.h":307:38)
#loc64 = loc("/usr/include/sys/socket.h":145:1)
#loc65 = loc("/usr/include/sys/socket.h":145:68)
#loc66 = loc("/usr/include/stdlib.h":105:1)
#loc67 = loc("/usr/include/stdlib.h":106:33)
#loc68 = loc("/usr/include/unistd.h":358:1)
#loc69 = loc("/usr/include/unistd.h":358:27)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":61:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":136:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":71:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":71:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":72:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":72:28)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":73:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":73:31)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":74:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":74:31)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":75:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":75:41)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":63:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":63:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":65:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":65:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":65:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":66:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":134:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":76:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":119:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":119:16)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:35)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:44)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:57)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:28)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":86:68)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":87:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":90:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":87:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":87:33)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":88:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":89:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:20)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:21)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:30)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:33)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:47)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":91:48)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":92:34)
#loc112 = loc("/usr/include/netinet/in.h":249:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":92:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":93:39)
#loc115 = loc("/usr/include/netinet/in.h":251:20)
#loc116 = loc("/usr/include/netinet/in.h":33:15)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":93:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":94:38)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":94:32)
#loc120 = loc("/usr/include/netinet/in.h":250:15)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":94:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":94:46)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":98:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:22)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:54)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:55)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:64)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:78)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":95:84)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":96:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":97:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":99:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":102:13)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":99:24)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":99:38)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":99:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":99:57)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":100:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":101:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:35)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:49)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:55)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:28)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":103:59)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":104:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":107:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":104:17)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":104:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":105:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":106:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:31)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:45)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:58)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:76)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:79)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:26)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:13)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":109:80)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:13)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":113:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:17)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:31)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:47)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":110:61)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":111:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":112:17)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":115:39)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":115:25)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":115:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":117:25)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":117:20)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":117:13)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":117:36)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":120:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":123:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":120:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":120:29)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":121:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":122:26)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":122:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":124:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":127:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":124:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":124:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":125:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":126:26)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":126:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":135:81)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":135:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":142:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":158:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":145:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":145:16)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":146:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":146:14)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":143:1)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":144:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":157:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:28)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:35)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:42)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:52)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:53)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":149:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:43)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:13)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:27)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:33)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:34)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:40)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":150:39)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":154:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:18)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:14)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:21)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:33)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:23)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":152:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":153:29)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":153:13)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":153:24)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":153:25)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:40)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":151:39)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":155:22)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":155:33)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":155:34)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":155:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":156:14)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":156:9)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":171:1)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":174:1)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":173:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":173:13)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":161:1)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":169:1)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":163:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":163:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":165:13)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":165:12)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":165:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":167:12)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":167:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":168:85)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_41.c":168:5)
#loc254 = loc(fused[#loc1, #loc2])
#loc255 = loc(fused[#loc3, #loc4])
#loc256 = loc(fused[#loc5, #loc6])
#loc257 = loc(fused[#loc7, #loc8])
#loc258 = loc(fused[#loc9, #loc10])
#loc260 = loc(fused[#loc13, #loc14])
#loc261 = loc(fused[#loc15, #loc16])
#loc262 = loc(fused[#loc18, #loc19])
#loc263 = loc(fused[#loc22, #loc23])
#loc264 = loc(fused[#loc21, #loc23])
#loc265 = loc(fused[#loc20, #loc24])
#loc266 = loc(fused[#loc25, #loc24])
#loc267 = loc(fused[#loc26, #loc27])
#loc268 = loc(fused[#loc28, #loc29])
#loc269 = loc(fused[#loc30, #loc27])
#loc270 = loc(fused[#loc34, #loc35])
#loc271 = loc(fused[#loc37, #loc36])
#loc272 = loc(fused[#loc38, #loc39])
#loc273 = loc(fused[#loc41, #loc35])
#loc274 = loc(fused[#loc43, #loc42])
#loc275 = loc(fused[#loc47, #loc46])
#loc276 = loc(fused[#loc54, #loc55])
#loc277 = loc(fused[#loc56, #loc57])
#loc278 = loc(fused[#loc58, #loc59])
#loc279 = loc(fused[#loc60, #loc61])
#loc280 = loc(fused[#loc62, #loc63])
#loc281 = loc(fused[#loc64, #loc65])
#loc282 = loc(fused[#loc66, #loc67])
#loc283 = loc(fused[#loc68, #loc69])
#loc284 = loc(fused[#loc70, #loc71])
#loc285 = loc(fused[#loc72, #loc73])
#loc286 = loc(fused[#loc74, #loc75])
#loc287 = loc(fused[#loc76, #loc77])
#loc288 = loc(fused[#loc78, #loc79])
#loc289 = loc(fused[#loc80, #loc81])
#loc290 = loc(fused[#loc82, #loc83])
#loc291 = loc(fused[#loc86, #loc84])
#loc292 = loc(fused[#loc87, #loc88])
#loc293 = loc(fused[#loc89, #loc90])
#loc294 = loc(fused[#loc96, #loc97])
#loc295 = loc(fused[#loc98, #loc99])
#loc296 = loc(fused[#loc100, #loc101])
#loc297 = loc(fused[#loc102, #loc99])
#loc298 = loc(fused[#loc104, #loc105])
#loc299 = loc(fused[#loc107, #loc108])
#loc300 = loc(fused[#loc109, #loc110])
#loc301 = loc(fused[#loc113, #loc111])
#loc302 = loc(fused[#loc117, #loc114])
#loc303 = loc(fused[#loc121, #loc122])
#loc304 = loc(fused[#loc123, #loc124])
#loc305 = loc(fused[#loc126, #loc127])
#loc306 = loc(fused[#loc128, #loc129])
#loc307 = loc(fused[#loc130, #loc131])
#loc308 = loc(fused[#loc132, #loc124])
#loc309 = loc(fused[#loc134, #loc135])
#loc310 = loc(fused[#loc138, #loc139])
#loc311 = loc(fused[#loc140, #loc135])
#loc312 = loc(fused[#loc146, #loc147])
#loc313 = loc(fused[#loc148, #loc149])
#loc314 = loc(fused[#loc150, #loc151])
#loc315 = loc(fused[#loc152, #loc149])
#loc316 = loc(fused[#loc156, #loc157])
#loc317 = loc(fused[#loc160, #loc161])
#loc318 = loc(fused[#loc162, #loc163])
#loc319 = loc(fused[#loc164, #loc165])
#loc320 = loc(fused[#loc167, #loc168])
#loc321 = loc(fused[#loc169, #loc163])
#loc322 = loc(fused[#loc173, #loc171])
#loc323 = loc(fused[#loc176, #loc177])
#loc324 = loc(fused[#loc178, #loc179])
#loc325 = loc(fused[#loc180, #loc181])
#loc326 = loc(fused[#loc182, #loc179])
#loc327 = loc(fused[#loc185, #loc186])
#loc328 = loc(fused[#loc187, #loc188])
#loc329 = loc(fused[#loc189, #loc186])
#loc330 = loc(fused[#loc194, #loc195])
#loc332 = loc(fused[#loc198, #loc199])
#loc333 = loc(fused[#loc200, #loc201])
#loc334 = loc(fused[#loc203, #loc204])
#loc335 = loc(fused[#loc207, #loc208])
#loc336 = loc(fused[#loc206, #loc208])
#loc337 = loc(fused[#loc205, #loc209])
#loc338 = loc(fused[#loc210, #loc209])
#loc339 = loc(fused[#loc211, #loc212])
#loc340 = loc(fused[#loc213, #loc214])
#loc341 = loc(fused[#loc215, #loc212])
#loc342 = loc(fused[#loc219, #loc220])
#loc343 = loc(fused[#loc222, #loc221])
#loc344 = loc(fused[#loc223, #loc224])
#loc345 = loc(fused[#loc226, #loc220])
#loc346 = loc(fused[#loc228, #loc227])
#loc347 = loc(fused[#loc232, #loc231])
#loc348 = loc(fused[#loc239, #loc240])
#loc349 = loc(fused[#loc241, #loc242])
#loc350 = loc(fused[#loc243, #loc244])
#loc351 = loc(fused[#loc245, #loc246])
#loc352 = loc(fused[#loc249, #loc247])
#loc353 = loc(fused[#loc251, #loc250])
