!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc229)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc231)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc234)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc237)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc26)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc242)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%9) loc(#loc30)
      } body {
        cir.scope {
          %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc32)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc244)
        } loc(#loc243)
        cir.yield loc(#loc25)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc36)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
        cir.yield loc(#loc240)
      } loc(#loc240)
    } loc(#loc240)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc39)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc248)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc43)
        cir.condition(%9) loc(#loc43)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc251)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc253)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc254)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc54)
              cir.if %10 {
                %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
                %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                %13 = cir.const #cir.int<1> : !u64i loc(#loc256)
                %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc257)
                %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
                %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
                cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
                cir.scope {
                  %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
                  %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc261)
                  %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc68)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc71)
                    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc72)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
                  } loc(#loc262)
                } loc(#loc260)
                %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc73)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
                %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
                %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc76)
                %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
                %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
                cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
              } else {
                %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
              } loc(#loc255)
            } loc(#loc252)
          } loc(#loc250)
        } loc(#loc249)
        cir.yield loc(#loc38)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc81)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc263)
        cir.yield loc(#loc246)
      } loc(#loc246)
    } loc(#loc246)
    cir.return loc(#loc16)
  } loc(#loc235)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc264)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc269)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc270)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc100)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc274)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc104)
        cir.condition(%9) loc(#loc104)
      } body {
        cir.scope {
          %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc106)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc106)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc276)
        } loc(#loc275)
        cir.yield loc(#loc99)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc110)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
        cir.yield loc(#loc272)
      } loc(#loc272)
    } loc(#loc272)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc279)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc280)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc117)
        cir.condition(%9) loc(#loc117)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc283)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc285)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc286)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc128)
              %11 = cir.ternary(%10, true {
                %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                %13 = cir.const #cir.int<100> : !s32i loc(#loc131)
                %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc131)
                %15 = cir.cmp(lt, %12, %14) : !u64i, !s32i loc(#loc287)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc132)
                %17 = cir.ternary(%16, true {
                  %18 = cir.const #true loc(#loc129)
                  cir.yield %18 : !cir.bool loc(#loc129)
                }, false {
                  %18 = cir.const #false loc(#loc129)
                  cir.yield %18 : !cir.bool loc(#loc129)
                }) : (!cir.bool) -> !cir.bool loc(#loc129)
                cir.yield %17 : !cir.bool loc(#loc129)
              }, false {
                %12 = cir.const #false loc(#loc129)
                cir.yield %12 : !cir.bool loc(#loc129)
              }) : (!cir.bool) -> !cir.bool loc(#loc129)
              cir.if %11 {
                %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
                %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
                %14 = cir.const #cir.int<1> : !u64i loc(#loc289)
                %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc290)
                %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
                %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc291)
                cir.store %17, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
                cir.scope {
                  %27 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                  %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
                  %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
                  %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc294)
                  %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc146)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc149)
                    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc150)
                    cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
                  } loc(#loc295)
                } loc(#loc293)
                %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
                %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc153)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc153)
                %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
                %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc155)
                %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc156)
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
                cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
              } else {
                %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc88)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc88)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc158)
              } loc(#loc288)
            } loc(#loc284)
          } loc(#loc282)
        } loc(#loc281)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc160)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
        cir.yield loc(#loc278)
      } loc(#loc278)
    } loc(#loc278)
    cir.return loc(#loc90)
  } loc(#loc267)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc299)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc168)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc172)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc304)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc176)
        cir.condition(%9) loc(#loc176)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc178)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc178)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc306)
        } loc(#loc305)
        cir.yield loc(#loc171)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc181)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
        cir.yield loc(#loc302)
      } loc(#loc302)
    } loc(#loc302)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc184)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc309)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc310)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc188)
        cir.condition(%9) loc(#loc188)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc313)
            cir.scope {
              %7 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc196)
              %8 = cir.const #cir.int<5> : !u64i loc(#loc315)
              %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc316)
              %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc199)
              cir.if %10 {
                %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc203)
                %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc204)
                %13 = cir.const #cir.int<1> : !u64i loc(#loc318)
                %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc319)
                %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc203)
                %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc320)
                cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
                cir.scope {
                  %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc212)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc212)
                  %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc323)
                  %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc213)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc215)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc216)
                    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc217)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc215)
                  } loc(#loc324)
                } loc(#loc322)
                %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc218)
                %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
                %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc220)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc220)
                %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
                %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc222)
                %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc223)
                %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
                cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc223)
              } else {
                %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc225)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc225)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
              } loc(#loc317)
            } loc(#loc314)
          } loc(#loc312)
        } loc(#loc311)
        cir.yield loc(#loc183)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc227)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc228)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc325)
        cir.yield loc(#loc308)
      } loc(#loc308)
    } loc(#loc308)
    cir.return loc(#loc162)
  } loc(#loc297)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":51:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":57:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":28:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":61:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":30:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":30:9)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":30:11)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":31:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":31:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":33:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":33:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":38:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:13)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:16)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:20)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:18)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":35:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":37:16)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":37:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":37:21)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:24)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":34:23)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":60:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:16)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:20)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:18)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":40:5)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":41:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":59:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":42:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":42:20)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":46:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":58:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":46:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":46:24)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":46:43)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":46:22)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":47:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":54:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":56:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:36)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:43)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:48)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:59)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:60)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":48:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:49)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:21)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:33)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:30)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:39)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:40)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:46)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":49:45)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":51:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":51:24)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":52:27)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":52:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":53:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":53:22)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":57:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:24)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":39:23)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":139:1)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":143:1)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":141:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":141:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":142:5)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":142:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":97:27)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":68:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":101:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":70:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":70:9)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":70:11)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":71:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":71:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":73:12)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":73:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":78:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:16)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:20)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:18)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":75:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":77:16)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":77:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":77:21)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:24)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":74:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":100:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:16)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:20)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:18)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":80:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":81:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":99:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":82:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":82:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":98:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:43)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:22)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:45)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:48)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:55)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":86:53)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":87:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":94:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":96:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:36)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:43)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:48)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:59)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:60)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":88:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:49)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:21)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:33)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:30)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:39)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:40)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:46)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":89:45)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":91:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":91:24)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":91:34)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":92:27)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":92:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":93:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":93:22)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":97:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:24)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":79:23)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":104:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":137:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":106:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":106:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":106:11)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":107:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":107:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":109:12)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":109:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":114:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:16)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:20)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:18)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":111:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":113:16)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":113:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:24)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":110:23)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":136:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:9)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:16)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:20)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:18)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":116:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":117:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":135:9)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":118:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":118:20)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":122:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":134:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":122:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":122:24)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":122:43)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":122:22)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":123:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":130:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":132:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:36)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:43)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:48)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:59)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:60)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":124:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:49)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:21)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:33)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:30)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:39)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:40)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:46)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":125:45)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":127:17)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":127:24)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":127:34)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":128:27)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":128:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":129:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":129:22)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":133:27)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":133:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:24)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_17.c":115:23)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc10, #loc11])
#loc234 = loc(fused[#loc12, #loc13])
#loc235 = loc(fused[#loc15, #loc16])
#loc236 = loc(fused[#loc17, #loc18])
#loc237 = loc(fused[#loc17, #loc19])
#loc238 = loc(fused[#loc20, #loc21])
#loc239 = loc(fused[#loc23, #loc22])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc27, #loc26])
#loc242 = loc(fused[#loc28, #loc29])
#loc243 = loc(fused[#loc31, #loc25])
#loc244 = loc(fused[#loc33, #loc34])
#loc245 = loc(fused[#loc36, #loc35])
#loc246 = loc(fused[#loc37, #loc38])
#loc247 = loc(fused[#loc40, #loc39])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc44, #loc38])
#loc250 = loc(fused[#loc45, #loc46])
#loc251 = loc(fused[#loc47, #loc48])
#loc252 = loc(fused[#loc49, #loc50])
#loc253 = loc(fused[#loc52, #loc53])
#loc254 = loc(fused[#loc51, #loc53])
#loc255 = loc(fused[#loc55, #loc56, #loc57, #loc50])
#loc256 = loc(fused[#loc60, #loc61])
#loc257 = loc(fused[#loc59, #loc61])
#loc258 = loc(fused[#loc58, #loc62])
#loc259 = loc(fused[#loc63, #loc62])
#loc260 = loc(fused[#loc64, #loc65])
#loc261 = loc(fused[#loc66, #loc67])
#loc262 = loc(fused[#loc69, #loc65])
#loc263 = loc(fused[#loc81, #loc80])
#loc264 = loc(fused[#loc82, #loc83])
#loc265 = loc(fused[#loc84, #loc85])
#loc266 = loc(fused[#loc86, #loc87])
#loc267 = loc(fused[#loc89, #loc90])
#loc268 = loc(fused[#loc91, #loc92])
#loc269 = loc(fused[#loc91, #loc93])
#loc270 = loc(fused[#loc94, #loc95])
#loc271 = loc(fused[#loc97, #loc96])
#loc272 = loc(fused[#loc98, #loc99])
#loc273 = loc(fused[#loc101, #loc100])
#loc274 = loc(fused[#loc102, #loc103])
#loc275 = loc(fused[#loc105, #loc99])
#loc276 = loc(fused[#loc107, #loc108])
#loc277 = loc(fused[#loc110, #loc109])
#loc278 = loc(fused[#loc111, #loc112])
#loc279 = loc(fused[#loc114, #loc113])
#loc280 = loc(fused[#loc115, #loc116])
#loc281 = loc(fused[#loc118, #loc112])
#loc282 = loc(fused[#loc119, #loc120])
#loc283 = loc(fused[#loc121, #loc122])
#loc284 = loc(fused[#loc123, #loc124])
#loc285 = loc(fused[#loc126, #loc127])
#loc286 = loc(fused[#loc125, #loc127])
#loc287 = loc(fused[#loc130, #loc131])
#loc288 = loc(fused[#loc133, #loc134, #loc135, #loc124])
#loc289 = loc(fused[#loc138, #loc139])
#loc290 = loc(fused[#loc137, #loc139])
#loc291 = loc(fused[#loc136, #loc140])
#loc292 = loc(fused[#loc141, #loc140])
#loc293 = loc(fused[#loc142, #loc143])
#loc294 = loc(fused[#loc144, #loc145])
#loc295 = loc(fused[#loc147, #loc143])
#loc296 = loc(fused[#loc160, #loc159])
#loc297 = loc(fused[#loc161, #loc162])
#loc298 = loc(fused[#loc163, #loc164])
#loc299 = loc(fused[#loc163, #loc165])
#loc300 = loc(fused[#loc166, #loc167])
#loc301 = loc(fused[#loc169, #loc168])
#loc302 = loc(fused[#loc170, #loc171])
#loc303 = loc(fused[#loc173, #loc172])
#loc304 = loc(fused[#loc174, #loc175])
#loc305 = loc(fused[#loc177, #loc171])
#loc306 = loc(fused[#loc179, #loc178])
#loc307 = loc(fused[#loc181, #loc180])
#loc308 = loc(fused[#loc182, #loc183])
#loc309 = loc(fused[#loc185, #loc184])
#loc310 = loc(fused[#loc186, #loc187])
#loc311 = loc(fused[#loc189, #loc183])
#loc312 = loc(fused[#loc190, #loc191])
#loc313 = loc(fused[#loc192, #loc193])
#loc314 = loc(fused[#loc194, #loc195])
#loc315 = loc(fused[#loc197, #loc198])
#loc316 = loc(fused[#loc196, #loc198])
#loc317 = loc(fused[#loc200, #loc201, #loc202, #loc195])
#loc318 = loc(fused[#loc205, #loc206])
#loc319 = loc(fused[#loc204, #loc206])
#loc320 = loc(fused[#loc203, #loc207])
#loc321 = loc(fused[#loc208, #loc207])
#loc322 = loc(fused[#loc209, #loc210])
#loc323 = loc(fused[#loc211, #loc212])
#loc324 = loc(fused[#loc214, #loc210])
#loc325 = loc(fused[#loc228, #loc227])
