!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc148)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc154)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc15)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc148)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc22)
    cir.store %10, %2 : !s16i, !cir.ptr<!s16i> loc(#loc158)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc153)
    cir.store %11, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc32)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc33)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc38)
    %27 = cir.cast(integral, %26 : !s16i), !s32i loc(#loc38)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc163)
    cir.brcond %29 ^bb7, ^bb8 loc(#loc164)
  ^bb7:  // pred: ^bb6
    %30 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %33 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc44)
    %34 = cir.cast(integral, %33 : !s16i), !u64i loc(#loc44)
    %35 = cir.call @strncpy(%31, %32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc45)
    %38 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc46)
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s16i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    %41 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc151)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_strncpy_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc166)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc173)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc67)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc169)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc71)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb4 loc(#loc73)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc76)
    %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc76)
    cir.store %13, %2 : !s16i, !cir.ptr<!s16i> loc(#loc177)
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc70)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc178)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc172)
    cir.store %14, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc82)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc83)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc83)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc87)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc88)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // pred: ^bb6
    %29 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc93)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc93)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %32 ^bb8, ^bb9 loc(#loc183)
  ^bb8:  // pred: ^bb7
    %33 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc96)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %36 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc99)
    %37 = cir.cast(integral, %36 : !s16i), !u64i loc(#loc99)
    %38 = cir.call @strncpy(%34, %35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc100)
    %41 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc101)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s16i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc92)
  ^bb10:  // pred: ^bb9
    %44 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc60)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc186)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc187)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc188)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc113)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc148)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc117)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc119)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc119)
    cir.store %11, %2 : !s16i, !cir.ptr<!s16i> loc(#loc192)
    cir.br ^bb3 loc(#loc116)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc187)
    cir.store %12, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc187)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc125)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc126)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc126)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc194)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc130)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc131)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb6 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %27 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc136)
    %28 = cir.cast(integral, %27 : !s16i), !s32i loc(#loc136)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %30 ^bb7, ^bb8 loc(#loc198)
  ^bb7:  // pred: ^bb6
    %31 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc139)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %34 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc142)
    %35 = cir.cast(integral, %34 : !s16i), !u64i loc(#loc142)
    %36 = cir.call @strncpy(%32, %33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc143)
    %39 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc144)
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s16i), !cir.ptr<!s8i> loc(#loc145)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc199)
    cir.br ^bb8 loc(#loc135)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    cir.br ^bb10 loc(#loc123)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc106)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":23:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":23:25)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":28:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":52:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":39:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":39:24)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":40:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":40:26)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":30:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":30:11)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":32:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":32:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":33:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":37:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":33:8)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":34:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":36:17)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":36:16)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":36:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":38:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":51:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:16)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:24)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:29)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:33)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":41:34)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":42:25)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":42:16)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":42:20)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":42:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":43:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":49:9)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":43:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":43:20)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":44:9)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":47:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":47:21)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":47:27)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":47:35)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":48:26)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":48:18)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":48:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":50:19)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":50:9)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":117:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":121:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":119:5)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":119:14)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":120:5)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":120:14)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":24:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":24:26)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":67:19)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":59:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":88:1)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":75:9)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":75:24)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":76:9)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":76:26)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":61:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":61:11)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":63:12)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":63:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":64:5)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":73:5)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":64:8)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":65:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":68:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":70:5)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":67:9)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":72:16)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":72:20)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":72:9)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":74:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":87:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:16)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:24)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:29)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:33)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:9)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":77:34)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":78:25)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":78:16)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":78:20)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":78:9)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":79:9)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":85:9)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":79:13)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":79:20)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":80:9)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":83:13)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":83:21)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":83:27)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":83:35)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":84:26)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":84:18)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":84:13)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":86:19)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":86:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":91:1)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":115:1)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":102:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":102:24)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":103:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":103:26)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":93:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":93:11)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":95:12)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":95:5)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":96:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":100:5)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":96:8)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":97:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":99:16)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":99:20)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":99:9)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":101:5)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":114:5)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:16)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:24)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:29)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:33)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:9)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":104:34)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":105:25)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":105:16)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":105:20)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":105:9)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":106:9)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":112:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":106:13)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":106:20)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":107:9)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":110:13)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":110:21)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":110:27)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":110:35)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":111:26)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":111:18)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":111:13)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":113:19)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_05.c":113:9)
#loc148 = loc(fused[#loc1, #loc2])
#loc149 = loc(fused[#loc3, #loc4])
#loc150 = loc(fused[#loc5, #loc6])
#loc151 = loc(fused[#loc7, #loc8])
#loc152 = loc(fused[#loc9, #loc10])
#loc153 = loc(fused[#loc11, #loc12])
#loc154 = loc(fused[#loc13, #loc14])
#loc155 = loc(fused[#loc16, #loc15])
#loc156 = loc(fused[#loc17, #loc18])
#loc157 = loc(fused[#loc20, #loc18])
#loc158 = loc(fused[#loc23, #loc21])
#loc159 = loc(fused[#loc24, #loc25])
#loc160 = loc(fused[#loc30, #loc31])
#loc161 = loc(fused[#loc35, #loc32])
#loc162 = loc(fused[#loc36, #loc37])
#loc163 = loc(fused[#loc38, #loc39])
#loc164 = loc(fused[#loc40, #loc37])
#loc165 = loc(fused[#loc47, #loc45])
#loc166 = loc(fused[#loc50, #loc51])
#loc167 = loc(fused[#loc52, #loc53])
#loc168 = loc(fused[#loc54, #loc55])
#loc169 = loc(fused[#loc56, #loc57])
#loc170 = loc(fused[#loc59, #loc60])
#loc171 = loc(fused[#loc61, #loc62])
#loc172 = loc(fused[#loc63, #loc64])
#loc173 = loc(fused[#loc65, #loc66])
#loc174 = loc(fused[#loc68, #loc67])
#loc175 = loc(fused[#loc69, #loc70])
#loc176 = loc(fused[#loc72, #loc73, #loc74, #loc70])
#loc177 = loc(fused[#loc78, #loc77])
#loc178 = loc(fused[#loc79, #loc80])
#loc179 = loc(fused[#loc85, #loc86])
#loc180 = loc(fused[#loc90, #loc87])
#loc181 = loc(fused[#loc91, #loc92])
#loc182 = loc(fused[#loc93, #loc94])
#loc183 = loc(fused[#loc95, #loc92])
#loc184 = loc(fused[#loc102, #loc100])
#loc185 = loc(fused[#loc105, #loc106])
#loc186 = loc(fused[#loc107, #loc108])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc114, #loc113])
#loc190 = loc(fused[#loc115, #loc116])
#loc191 = loc(fused[#loc118, #loc116])
#loc192 = loc(fused[#loc121, #loc120])
#loc193 = loc(fused[#loc122, #loc123])
#loc194 = loc(fused[#loc128, #loc129])
#loc195 = loc(fused[#loc133, #loc130])
#loc196 = loc(fused[#loc134, #loc135])
#loc197 = loc(fused[#loc136, #loc137])
#loc198 = loc(fused[#loc138, #loc135])
#loc199 = loc(fused[#loc145, #loc143])
