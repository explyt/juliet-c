!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc72 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc311)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc312)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc313)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc314)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_063badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc316)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc317)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc318)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc319)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc320)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc321)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc323)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc324)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc30)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc325)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.br ^bb5 loc(#loc327)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc328)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc329)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc330)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<5> : !s32i loc(#loc44)
    %24 = cir.const #cir.int<5> : !s32i loc(#loc45)
    %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc332)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc43)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc334)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<5> : !s32i loc(#loc51)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc52)
    %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %29 ^bb14, ^bb17 loc(#loc336)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc337)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<8> : !u64i loc(#loc338)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc338)
    cir.call @_ZN12TwoIntsClassC2Ev(%33) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc13)
    cir.store %33, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc316)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc58)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc61)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %37, %39 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc66)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb16 loc(#loc55)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc50)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc50)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc11)
  } loc(#loc315)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc341)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc72)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc72)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc72)
    cir.return loc(#loc72)
  } loc(#loc72)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc343)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc345)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc346)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc347)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc348)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
    cir.br ^bb1 loc(#loc349)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc350)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc351)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc93)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc352)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc353)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
    cir.br ^bb5 loc(#loc354)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc355)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc356)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc104)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc357)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %24 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc359)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc361)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %29 = cir.cmp(ne, %27, %28) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %29 ^bb14, ^bb15 loc(#loc363)
  ^bb14:  // pred: ^bb13
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb18 loc(#loc117)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc364)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<4> : !u64i loc(#loc365)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc365)
    cir.call @_ZN11OneIntClassC2Ev(%35) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr) loc(#loc76)
    cir.store %35, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc343)
    %36 = cir.const #cir.int<5> : !s32i loc(#loc124)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc125)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc126)
    cir.store %36, %38 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc127)
    %40 = cir.get_member %39[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc126)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc129)
    %42 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc130)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc130)
    cir.br ^bb17 loc(#loc121)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc113)
  ^bb18:  // 2 preds: ^bb14, ^bb17
    cir.br ^bb19 loc(#loc113)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc74)
  } loc(#loc342)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc368)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc369)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc370)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc371)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc142)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc372)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc373)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
    cir.br ^bb1 loc(#loc374)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc148)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc375)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc376)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc152)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc377)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc378)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
    cir.br ^bb5 loc(#loc379)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc159)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc380)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc381)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc163)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc382)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<5> : !s32i loc(#loc166)
    %24 = cir.const #cir.int<5> : !s32i loc(#loc167)
    %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc384)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
    cir.br ^bb11 loc(#loc165)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc165)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc386)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<5> : !s32i loc(#loc173)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc174)
    %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc387)
    cir.brcond %29 ^bb14, ^bb17 loc(#loc388)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc389)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<4> : !u64i loc(#loc390)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc390)
    cir.call @_ZN11OneIntClassC2Ev(%33) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr) loc(#loc135)
    cir.store %33, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc368)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc180)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc181)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc126)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc182)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc126)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc184)
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc185)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc186)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
    cir.br ^bb16 loc(#loc177)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc172)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc172)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc133)
  } loc(#loc367)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc393)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc394)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc395)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc396)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc197)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc397)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc197)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc398)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc395)
    cir.br ^bb1 loc(#loc399)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc203)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc400)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc401)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc207)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc205)
    cir.br ^bb3 loc(#loc201)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc201)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc402)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc403)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
    cir.br ^bb5 loc(#loc404)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc214)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc405)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc406)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc216)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc218)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc407)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<5> : !s32i loc(#loc221)
    %24 = cir.const #cir.int<5> : !s32i loc(#loc222)
    %25 = cir.cmp(ne, %23, %24) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc409)
  ^bb10:  // pred: ^bb9
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    cir.br ^bb12 loc(#loc224)
  ^bb11:  // pred: ^bb9
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
    cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc410)
    cir.br ^bb12 loc(#loc220)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc220)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc411)
  ^bb14:  // pred: ^bb13
    %29 = cir.const #cir.int<5> : !s32i loc(#loc232)
    %30 = cir.const #cir.int<5> : !s32i loc(#loc233)
    %31 = cir.cmp(eq, %29, %30) : !s32i, !cir.bool loc(#loc412)
    cir.brcond %31 ^bb15, ^bb18 loc(#loc413)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc414)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<8> : !u64i loc(#loc415)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc238)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc415)
    cir.call @_ZN12TwoIntsClassC2Ev(%35) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc190)
    cir.store %35, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc393)
    %36 = cir.const #cir.int<5> : !s32i loc(#loc239)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc240)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %36, %38 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc241)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc242)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %39, %41 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc243)
    %43 = cir.get_member %42[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc245)
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc246)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc246)
    cir.br ^bb17 loc(#loc236)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc231)
  ^bb18:  // 2 preds: ^bb14, ^bb17
    cir.br ^bb19 loc(#loc231)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc188)
  } loc(#loc392)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc419)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc420)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc421)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc422)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc258)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc423)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc258)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc424)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc421)
    cir.br ^bb1 loc(#loc425)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc264)
    %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc426)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc427)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc266)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc268)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc266)
    cir.br ^bb3 loc(#loc262)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc262)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<8> : !u64i loc(#loc428)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc271)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc429)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc422)
    cir.br ^bb5 loc(#loc430)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc275)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc431)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc432)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc277)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc279)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc277)
    cir.br ^bb7 loc(#loc273)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc273)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc433)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<5> : !s32i loc(#loc282)
    %24 = cir.const #cir.int<5> : !s32i loc(#loc283)
    %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc435)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc436)
    cir.br ^bb11 loc(#loc281)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc281)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc437)
  ^bb13:  // pred: ^bb12
    %27 = cir.const #cir.int<5> : !s32i loc(#loc289)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc290)
    %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc438)
    cir.brcond %29 ^bb14, ^bb17 loc(#loc439)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc440)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<8> : !u64i loc(#loc441)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc295)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc295)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc441)
    cir.call @_ZN12TwoIntsClassC2Ev(%33) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc251)
    cir.store %33, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc419)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc296)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc297)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc298)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc299)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %37, %39 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc300)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc302)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc303)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc304)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc303)
    cir.br ^bb16 loc(#loc293)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc288)
  ^bb17:  // 2 preds: ^bb13, ^bb16
    cir.br ^bb18 loc(#loc288)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc249)
  } loc(#loc418)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_064goodEv() extra(#fn_attr2) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodB2G1Ev() : () -> () loc(#loc307)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodB2G2Ev() : () -> () loc(#loc308)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodG2B1Ev() : () -> () loc(#loc309)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_06L8goodG2B2Ev() : () -> () loc(#loc310)
    cir.return loc(#loc306)
  } loc(#loc444)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":30:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":59:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":50:13)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":50:49)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":32:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":33:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":33:62)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":35:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":35:64)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":33:36)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":33:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":33:61)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:26)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:39)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":34:38)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":35:44)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":35:63)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":35:37)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:43)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:33)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:34)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:40)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":36:39)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":37:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":41:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":37:8)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":37:27)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":38:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":40:16)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":40:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":42:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":58:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":42:8)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":42:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":43:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":44:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":57:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":50:39)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":50:43)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":52:32)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":52:13)
#loc60 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":53:32)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":53:13)
#loc63 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":54:26)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":54:36)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":54:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":56:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":56:18)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":81:19)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":66:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":98:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":91:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":91:48)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":68:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":68:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":69:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":69:62)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":71:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":71:64)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":69:36)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":69:43)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":69:61)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:42)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:26)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:32)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:33)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:39)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":70:38)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":71:44)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":71:63)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":71:37)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:43)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:27)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:34)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:40)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":72:39)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":73:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":77:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":73:8)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":73:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":74:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":76:16)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":76:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":78:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":97:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":78:8)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":78:27)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":79:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":82:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":84:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":81:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":85:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":96:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":91:38)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":91:42)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":93:32)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":93:13)
#loc126 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":94:26)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":94:36)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":94:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":95:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":95:18)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":101:1)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":128:1)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":121:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":121:48)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":103:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":103:12)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":104:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":104:62)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":106:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":106:64)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":104:36)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":104:43)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":104:61)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:42)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:26)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:32)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:33)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:39)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":105:38)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":106:44)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":106:63)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":106:37)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:43)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:27)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:33)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:34)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:40)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":107:39)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":108:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":112:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":108:8)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":108:27)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":109:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":111:16)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":111:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":113:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":127:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":113:8)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":113:27)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":114:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":115:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":126:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":121:38)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":121:42)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":123:32)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":123:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":124:26)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":124:36)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":124:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":125:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":125:18)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":131:1)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":165:1)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":156:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":156:49)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":133:5)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":133:12)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":134:5)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":134:62)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":136:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":136:64)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":134:36)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":134:43)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":134:61)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:5)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:42)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:26)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:32)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:33)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:39)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":135:38)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":136:44)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":136:63)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":136:37)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:5)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:43)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:27)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:33)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:34)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:40)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":137:39)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":138:5)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":147:5)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":138:8)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":138:27)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":139:5)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":142:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":144:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":141:19)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":141:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":146:16)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":146:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":148:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":164:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":148:8)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":148:27)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":149:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":150:9)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":163:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":156:39)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":156:43)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":158:32)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":158:13)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":159:32)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":159:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":160:26)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":160:36)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":160:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":162:13)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":162:18)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":168:1)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":197:1)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":188:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":188:49)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":170:5)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":170:12)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":171:5)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":171:62)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":173:5)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":173:64)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":171:36)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":171:43)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":171:61)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:5)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:42)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:9)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:26)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:32)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:33)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:39)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":172:38)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":173:44)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":173:63)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":173:37)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:5)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:43)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:9)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:27)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:33)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:34)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:40)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":174:39)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":175:5)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":179:5)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":175:8)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":175:27)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":176:5)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":178:16)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":178:9)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":180:5)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":196:5)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":180:8)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":180:27)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":181:5)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":182:9)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":195:9)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":188:39)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":188:43)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":190:32)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":190:13)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":191:32)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":191:13)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":192:26)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":192:36)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":192:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":194:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":194:18)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":199:1)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":205:1)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":201:5)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":202:5)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":203:5)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_06.cpp":204:5)
#loc311 = loc(fused[#loc1, #loc2])
#loc312 = loc(fused[#loc3, #loc4])
#loc313 = loc(fused[#loc6, #loc7])
#loc314 = loc(fused[#loc8, #loc9])
#loc315 = loc(fused[#loc10, #loc11])
#loc316 = loc(fused[#loc12, #loc13])
#loc317 = loc(fused[#loc14, #loc15])
#loc318 = loc(fused[#loc16, #loc17])
#loc319 = loc(fused[#loc18, #loc19])
#loc320 = loc(fused[#loc21, #loc22])
#loc321 = loc(fused[#loc20, #loc17])
#loc322 = loc(fused[#loc23, #loc24])
#loc323 = loc(fused[#loc25, #loc26])
#loc324 = loc(fused[#loc27, #loc24])
#loc325 = loc(fused[#loc31, #loc32])
#loc326 = loc(fused[#loc33, #loc19])
#loc327 = loc(fused[#loc34, #loc35])
#loc328 = loc(fused[#loc36, #loc37])
#loc329 = loc(fused[#loc38, #loc35])
#loc330 = loc(fused[#loc42, #loc43])
#loc331 = loc(fused[#loc44, #loc45])
#loc332 = loc(fused[#loc46, #loc43])
#loc333 = loc(fused[#loc48, #loc47])
#loc334 = loc(fused[#loc49, #loc50])
#loc335 = loc(fused[#loc51, #loc52])
#loc336 = loc(fused[#loc53, #loc50])
#loc337 = loc(fused[#loc54, #loc55])
#loc338 = loc(fused[#loc56, #loc13])
#loc339 = loc(fused[#loc59, #loc58])
#loc340 = loc(fused[#loc62, #loc61])
#loc341 = loc(fused[#loc69, #loc70])
#loc342 = loc(fused[#loc73, #loc74])
#loc343 = loc(fused[#loc75, #loc76])
#loc344 = loc(fused[#loc77, #loc78])
#loc345 = loc(fused[#loc79, #loc80])
#loc346 = loc(fused[#loc81, #loc82])
#loc347 = loc(fused[#loc84, #loc85])
#loc348 = loc(fused[#loc83, #loc80])
#loc349 = loc(fused[#loc86, #loc87])
#loc350 = loc(fused[#loc88, #loc89])
#loc351 = loc(fused[#loc90, #loc87])
#loc352 = loc(fused[#loc94, #loc95])
#loc353 = loc(fused[#loc96, #loc82])
#loc354 = loc(fused[#loc97, #loc98])
#loc355 = loc(fused[#loc99, #loc100])
#loc356 = loc(fused[#loc101, #loc98])
#loc357 = loc(fused[#loc105, #loc106])
#loc358 = loc(fused[#loc107, #loc108])
#loc359 = loc(fused[#loc109, #loc106])
#loc360 = loc(fused[#loc111, #loc110])
#loc361 = loc(fused[#loc112, #loc113])
#loc362 = loc(fused[#loc114, #loc115])
#loc363 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc364 = loc(fused[#loc120, #loc121])
#loc365 = loc(fused[#loc122, #loc76])
#loc366 = loc(fused[#loc125, #loc124])
#loc367 = loc(fused[#loc132, #loc133])
#loc368 = loc(fused[#loc134, #loc135])
#loc369 = loc(fused[#loc136, #loc137])
#loc370 = loc(fused[#loc138, #loc139])
#loc371 = loc(fused[#loc140, #loc141])
#loc372 = loc(fused[#loc143, #loc144])
#loc373 = loc(fused[#loc142, #loc139])
#loc374 = loc(fused[#loc145, #loc146])
#loc375 = loc(fused[#loc147, #loc148])
#loc376 = loc(fused[#loc149, #loc146])
#loc377 = loc(fused[#loc153, #loc154])
#loc378 = loc(fused[#loc155, #loc141])
#loc379 = loc(fused[#loc156, #loc157])
#loc380 = loc(fused[#loc158, #loc159])
#loc381 = loc(fused[#loc160, #loc157])
#loc382 = loc(fused[#loc164, #loc165])
#loc383 = loc(fused[#loc166, #loc167])
#loc384 = loc(fused[#loc168, #loc165])
#loc385 = loc(fused[#loc170, #loc169])
#loc386 = loc(fused[#loc171, #loc172])
#loc387 = loc(fused[#loc173, #loc174])
#loc388 = loc(fused[#loc175, #loc172])
#loc389 = loc(fused[#loc176, #loc177])
#loc390 = loc(fused[#loc178, #loc135])
#loc391 = loc(fused[#loc181, #loc180])
#loc392 = loc(fused[#loc187, #loc188])
#loc393 = loc(fused[#loc189, #loc190])
#loc394 = loc(fused[#loc191, #loc192])
#loc395 = loc(fused[#loc193, #loc194])
#loc396 = loc(fused[#loc195, #loc196])
#loc397 = loc(fused[#loc198, #loc199])
#loc398 = loc(fused[#loc197, #loc194])
#loc399 = loc(fused[#loc200, #loc201])
#loc400 = loc(fused[#loc202, #loc203])
#loc401 = loc(fused[#loc204, #loc201])
#loc402 = loc(fused[#loc208, #loc209])
#loc403 = loc(fused[#loc210, #loc196])
#loc404 = loc(fused[#loc211, #loc212])
#loc405 = loc(fused[#loc213, #loc214])
#loc406 = loc(fused[#loc215, #loc212])
#loc407 = loc(fused[#loc219, #loc220])
#loc408 = loc(fused[#loc221, #loc222])
#loc409 = loc(fused[#loc223, #loc224, #loc225, #loc220])
#loc410 = loc(fused[#loc229, #loc228])
#loc411 = loc(fused[#loc230, #loc231])
#loc412 = loc(fused[#loc232, #loc233])
#loc413 = loc(fused[#loc234, #loc231])
#loc414 = loc(fused[#loc235, #loc236])
#loc415 = loc(fused[#loc237, #loc190])
#loc416 = loc(fused[#loc240, #loc239])
#loc417 = loc(fused[#loc242, #loc241])
#loc418 = loc(fused[#loc248, #loc249])
#loc419 = loc(fused[#loc250, #loc251])
#loc420 = loc(fused[#loc252, #loc253])
#loc421 = loc(fused[#loc254, #loc255])
#loc422 = loc(fused[#loc256, #loc257])
#loc423 = loc(fused[#loc259, #loc260])
#loc424 = loc(fused[#loc258, #loc255])
#loc425 = loc(fused[#loc261, #loc262])
#loc426 = loc(fused[#loc263, #loc264])
#loc427 = loc(fused[#loc265, #loc262])
#loc428 = loc(fused[#loc269, #loc270])
#loc429 = loc(fused[#loc271, #loc257])
#loc430 = loc(fused[#loc272, #loc273])
#loc431 = loc(fused[#loc274, #loc275])
#loc432 = loc(fused[#loc276, #loc273])
#loc433 = loc(fused[#loc280, #loc281])
#loc434 = loc(fused[#loc282, #loc283])
#loc435 = loc(fused[#loc284, #loc281])
#loc436 = loc(fused[#loc286, #loc285])
#loc437 = loc(fused[#loc287, #loc288])
#loc438 = loc(fused[#loc289, #loc290])
#loc439 = loc(fused[#loc291, #loc288])
#loc440 = loc(fused[#loc292, #loc293])
#loc441 = loc(fused[#loc294, #loc251])
#loc442 = loc(fused[#loc297, #loc296])
#loc443 = loc(fused[#loc299, #loc298])
#loc444 = loc(fused[#loc305, #loc306])
