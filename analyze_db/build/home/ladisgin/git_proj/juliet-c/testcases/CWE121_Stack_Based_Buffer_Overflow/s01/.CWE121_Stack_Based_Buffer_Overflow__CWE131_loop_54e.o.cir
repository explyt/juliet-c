!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":23:66)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":23:72)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":42:70)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":42:76)
#loc67 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc36, #loc37])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc65)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc68)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc67)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc68)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc68)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc72)
    cir.br ^bb3 loc(#loc71)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc73)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc23)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc23)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc26)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc29)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc76)
    cir.br ^bb3 loc(#loc71)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc33)
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc66)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc36, #loc37])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc79)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc78)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc42)
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc79)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc79)
    cir.br ^bb2 loc(#loc82)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc47)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc83)
    cir.br ^bb3 loc(#loc82)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc50)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc84)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc51)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc85)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc54)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc54)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc57)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc60)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc87)
    cir.br ^bb3 loc(#loc82)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc46)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc64)
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc35)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":35:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":26:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":26:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":27:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":27:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":34:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":32:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:18)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:14)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:21)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":30:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:30)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":31:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:30)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":29:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":33:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":33:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":33:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":33:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":42:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":54:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":45:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":45:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":46:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":46:16)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":43:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":44:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":53:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":51:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:18)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:21)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:25)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:23)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":49:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":50:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:30)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":48:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":52:22)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":52:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":52:28)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_54e.c":52:9)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc3, #loc4])
#loc68 = loc(fused[#loc7, #loc8])
#loc69 = loc(fused[#loc9, #loc10])
#loc70 = loc(fused[#loc12, #loc13])
#loc71 = loc(fused[#loc14, #loc15])
#loc72 = loc(fused[#loc17, #loc16])
#loc73 = loc(fused[#loc18, #loc19])
#loc74 = loc(fused[#loc21, #loc15])
#loc75 = loc(fused[#loc24, #loc27])
#loc76 = loc(fused[#loc29, #loc28])
#loc77 = loc(fused[#loc34, #loc35])
#loc79 = loc(fused[#loc38, #loc39])
#loc80 = loc(fused[#loc40, #loc41])
#loc81 = loc(fused[#loc43, #loc44])
#loc82 = loc(fused[#loc45, #loc46])
#loc83 = loc(fused[#loc48, #loc47])
#loc84 = loc(fused[#loc49, #loc50])
#loc85 = loc(fused[#loc52, #loc46])
#loc86 = loc(fused[#loc55, #loc58])
#loc87 = loc(fused[#loc60, #loc59])
