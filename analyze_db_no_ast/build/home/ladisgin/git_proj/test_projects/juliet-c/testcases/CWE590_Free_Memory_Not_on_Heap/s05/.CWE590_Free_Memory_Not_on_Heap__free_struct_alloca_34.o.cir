!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType = !cir.struct<union "CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType" {!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc129)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc130)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType, !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc16)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc16)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc16)
      %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
      cir.store %12, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
      cir.scope {
        %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc138)
        cir.scope {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc23)
          cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc140)
          cir.for : cond {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc25)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc26)
            %20 = cir.cmp(lt, %17, %19) : !u64i, !s32i loc(#loc141)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc27)
            cir.condition(%21) loc(#loc27)
          } body {
            cir.scope {
              %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %19 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
              %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc143)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
              %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %24 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc36)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc144)
            } loc(#loc142)
            cir.yield loc(#loc22)
          } step {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc40)
            cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc145)
            cir.yield loc(#loc139)
          } loc(#loc139)
        } loc(#loc139)
      } loc(#loc137)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
      cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
    } loc(#loc135)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %4 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc44)
    cir.store %3, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc147)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
      %6 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc50)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
      cir.call @printStructLine(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc55)
      %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc56)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    } loc(#loc148)
    cir.return loc(#loc6)
  } loc(#loc131)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc150)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType, !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc81)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc161)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc162)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
      cir.store %12, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
      cir.scope {
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
        %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc165)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc88)
        cir.if %18 {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc92)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
        } loc(#loc166)
      } loc(#loc164)
      cir.scope {
        %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
        cir.scope {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc99)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc99)
          cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc170)
          cir.for : cond {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc102)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc102)
            %20 = cir.cmp(lt, %17, %19) : !u64i, !s32i loc(#loc171)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc103)
            cir.condition(%21) loc(#loc103)
          } body {
            cir.scope {
              %17 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
              %19 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc107)
              %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
              %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc173)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
              %24 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc111)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc174)
            } loc(#loc172)
            cir.yield loc(#loc98)
          } step {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc113)
            %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc114)
            cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc175)
            cir.yield loc(#loc169)
          } loc(#loc169)
        } loc(#loc169)
      } loc(#loc167)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
      cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    } loc(#loc159)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %4 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc44)
    cir.store %3, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
      %6 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc50)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc124)
      %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
      cir.call @printStructLine(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc126)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc127)
      %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc128)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    } loc(#loc178)
    cir.return loc(#loc69)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":29:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":54:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":31:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":31:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":32:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":32:69)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":33:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":33:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":34:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":46:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":36:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":36:55)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":37:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":44:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":38:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":38:20)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":43:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:22)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:18)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:25)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:29)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:27)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":40:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":41:40)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":41:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":41:28)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":41:29)
#loc33 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":42:40)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":42:17)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":42:28)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":42:29)
#loc38 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:35)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":39:34)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":45:16)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":47:26)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":23:21)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":47:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":48:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":53:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":49:9)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":49:40)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":24:21)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":50:26)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":50:31)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":50:32)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":50:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":52:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":52:14)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":93:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":96:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":95:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":95:13)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":71:23)
#loc66 = loc("/usr/include/stdlib.h":756:1)
#loc67 = loc("/usr/include/stdlib.h":756:70)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":61:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":91:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":63:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":63:21)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":64:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":64:69)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":65:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":65:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":66:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":83:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:87)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:55)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:62)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:66)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":68:86)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":69:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":73:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":69:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":69:27)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":69:24)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":70:9)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":71:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":72:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":72:18)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":74:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":81:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":75:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":75:20)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:13)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":80:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:22)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:18)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:25)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:29)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:27)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":77:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":78:40)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":78:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":78:28)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":78:29)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":79:40)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":79:17)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":79:28)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":79:29)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:35)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":76:34)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":82:16)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":82:9)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":84:26)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":84:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":85:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":90:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":86:9)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":86:40)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":87:26)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":87:31)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":87:32)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":87:9)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":89:9)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_34.c":89:14)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc12, #loc11])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc15, #loc16])
#loc137 = loc(fused[#loc17, #loc18])
#loc138 = loc(fused[#loc19, #loc20])
#loc139 = loc(fused[#loc21, #loc22])
#loc140 = loc(fused[#loc24, #loc23])
#loc141 = loc(fused[#loc25, #loc26])
#loc142 = loc(fused[#loc28, #loc22])
#loc143 = loc(fused[#loc30, #loc29])
#loc144 = loc(fused[#loc35, #loc34])
#loc145 = loc(fused[#loc40, #loc39])
#loc146 = loc(fused[#loc42, #loc41])
#loc147 = loc(fused[#loc45, #loc43])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc57, #loc58])
#loc151 = loc(fused[#loc59, #loc60])
#loc152 = loc(fused[#loc61, #loc62])
#loc153 = loc(fused[#loc63, #loc64])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc68, #loc69])
#loc156 = loc(fused[#loc70, #loc71])
#loc157 = loc(fused[#loc72, #loc73])
#loc158 = loc(fused[#loc75, #loc74])
#loc159 = loc(fused[#loc76, #loc77])
#loc160 = loc(fused[#loc78, #loc79])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc81, #loc83])
#loc163 = loc(fused[#loc80, #loc79])
#loc164 = loc(fused[#loc84, #loc85])
#loc165 = loc(fused[#loc86, #loc87])
#loc166 = loc(fused[#loc89, #loc85])
#loc167 = loc(fused[#loc93, #loc94])
#loc168 = loc(fused[#loc95, #loc96])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc100, #loc99])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc104, #loc98])
#loc173 = loc(fused[#loc106, #loc105])
#loc174 = loc(fused[#loc110, #loc109])
#loc175 = loc(fused[#loc114, #loc113])
#loc176 = loc(fused[#loc116, #loc115])
#loc177 = loc(fused[#loc118, #loc117])
#loc178 = loc(fused[#loc119, #loc120])
#loc179 = loc(fused[#loc121, #loc122])
