!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc99)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc105)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc17)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc20)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc21)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc107)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc111)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc102)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc117)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc50)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc50)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc50)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc50)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc50)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc54)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc54)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc41)
  } loc(#loc114)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc125)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc71)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc72)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc127)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc131)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc84)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
    cir.br ^bb3 loc(#loc78)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc86)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc86)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc92)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc62)
  } loc(#loc122)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodG2BEv() : () -> () loc(#loc96)
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodB2GEv() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":27:1)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":43:1)
#loc12 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":39:9)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":39:23)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":29:5)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":29:12)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":30:5)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":30:23)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":31:12)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":31:5)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:20)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:27)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:32)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:43)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:44)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:5)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:5)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:33)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:9)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:17)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:23)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:24)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:30)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:29)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:12)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:5)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":37:15)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":37:5)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":38:5)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":42:5)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":50:1)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":65:1)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":61:9)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":61:23)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":52:5)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":52:12)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":53:5)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":53:23)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":54:12)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":54:5)
#loc50 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":56:20)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":56:5)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:5)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:12)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:18)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":59:15)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":59:5)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":60:5)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":64:5)
#loc59 = loc("/usr/include/stdlib.h":687:1)
#loc60 = loc("/usr/include/stdlib.h":687:32)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":68:1)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":84:1)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":80:9)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":80:23)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":70:5)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":70:12)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":71:5)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":71:23)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":72:12)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":72:5)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:20)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:27)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:32)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:43)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:44)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:5)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:5)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:33)
#loc79 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:9)
#loc80 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:17)
#loc81 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:23)
#loc82 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:24)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:30)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:29)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:12)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:18)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:5)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":78:15)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":78:5)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":79:5)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":83:5)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":82:9)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":82:14)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":86:1)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":90:1)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":88:5)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":89:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc8, #loc9])
#loc102 = loc(fused[#loc10, #loc11])
#loc103 = loc(fused[#loc12, #loc13])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc19, #loc18])
#loc107 = loc(fused[#loc22, #loc23])
#loc108 = loc(fused[#loc20, #loc24])
#loc109 = loc(fused[#loc25, #loc24])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc27])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc46, #loc47])
#loc118 = loc(fused[#loc49, #loc48])
#loc119 = loc(fused[#loc51, #loc50])
#loc120 = loc(fused[#loc57, #loc58])
#loc121 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc61, #loc62])
#loc123 = loc(fused[#loc63, #loc64])
#loc124 = loc(fused[#loc65, #loc66])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc70, #loc69])
#loc127 = loc(fused[#loc73, #loc74])
#loc128 = loc(fused[#loc71, #loc75])
#loc129 = loc(fused[#loc76, #loc75])
#loc130 = loc(fused[#loc77, #loc78])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc81, #loc78])
#loc133 = loc(fused[#loc90, #loc91])
#loc134 = loc(fused[#loc94, #loc95])
