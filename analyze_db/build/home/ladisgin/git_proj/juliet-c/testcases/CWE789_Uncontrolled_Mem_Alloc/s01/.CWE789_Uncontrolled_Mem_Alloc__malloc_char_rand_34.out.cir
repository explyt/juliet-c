!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":153:10)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":153:14)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":153:20)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":153:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType = !cir.struct<union "CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType" {!u64i, !u64i}>
#loc240 = loc(fused[#loc83, #loc84])
#loc241 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc207)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc209)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc21)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc23)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %7 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc27)
    cir.store %6, %7 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc220)
      %9 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc33)
      %10 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc32)
      cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc220)
      cir.scope {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc222)
        cir.scope {
          %12 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %13 = cir.const #cir.int<5> : !u64i loc(#loc224)
          %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc225)
          cir.if %14 {
            %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc46)
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %17 = cir.const #cir.int<1> : !u64i loc(#loc227)
            %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc228)
            %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
            cir.store %20, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
            cir.scope {
              %30 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc59)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
              } loc(#loc233)
            } loc(#loc231)
            %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc60)
            %22 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
            %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
            %26 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc63)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc64)
            %28 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
          } else {
            %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          } loc(#loc226)
        } loc(#loc223)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc16)
  } loc(#loc213)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc234)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc237)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %17 : !s32i loc(#loc244)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc107)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc109)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc109)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %7 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc27)
    cir.store %6, %7 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc252)
      %9 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc33)
      %10 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc116)
      cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc252)
      cir.scope {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc254)
        cir.scope {
          %12 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %13 = cir.const #cir.int<5> : !u64i loc(#loc256)
          %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc257)
          cir.if %14 {
            %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc129)
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc130)
            %17 = cir.const #cir.int<1> : !u64i loc(#loc259)
            %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc260)
            %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
            cir.store %20, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
            cir.scope {
              %30 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc140)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc141)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc142)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc140)
              } loc(#loc265)
            } loc(#loc263)
            %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc143)
            %22 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc145)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc145)
            %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
            %26 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc147)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc148)
            %28 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc149)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
          } else {
            %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc150)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc150)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc151)
          } loc(#loc258)
        } loc(#loc255)
      } loc(#loc253)
    } loc(#loc251)
    cir.return loc(#loc102)
  } loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc152)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc159)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc161)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc161)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc164)
    %7 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc27)
    cir.store %6, %7 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc273)
      %9 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34_unionType> -> !cir.ptr<!u64i> loc(#loc33)
      %10 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc169)
      cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc273)
      cir.scope {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc275)
        cir.scope {
          %12 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc176)
          %13 = cir.const #cir.int<5> : !u64i loc(#loc277)
          %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc278)
          %15 = cir.ternary(%14, true {
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc180)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc181)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc181)
            %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc279)
            %20 = cir.ternary(%19, true {
              %21 = cir.const #true loc(#loc179)
              cir.yield %21 : !cir.bool loc(#loc179)
            }, false {
              %21 = cir.const #false loc(#loc179)
              cir.yield %21 : !cir.bool loc(#loc179)
            }) : (!cir.bool) -> !cir.bool loc(#loc179)
            cir.yield %20 : !cir.bool loc(#loc179)
          }, false {
            %16 = cir.const #false loc(#loc179)
            cir.yield %16 : !cir.bool loc(#loc179)
          }) : (!cir.bool) -> !cir.bool loc(#loc179)
          cir.if %15 {
            %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc185)
            %17 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc186)
            %18 = cir.const #cir.int<1> : !u64i loc(#loc281)
            %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc282)
            %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc283)
            cir.store %21, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
            cir.scope {
              %31 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
              %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc286)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc196)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc197)
                %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc198)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc196)
              } loc(#loc287)
            } loc(#loc285)
            %22 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc199)
            %23 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc201)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc201)
            %26 = cir.call @strcpy(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
            %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
            cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc203)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc204)
            %29 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc204)
          } else {
            %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc152)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc152)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc206)
          } loc(#loc280)
        } loc(#loc276)
      } loc(#loc274)
    } loc(#loc272)
    cir.return loc(#loc154)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":55:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":61:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":34:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":65:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":36:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":36:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":37:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":37:66)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":39:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":39:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":41:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":41:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":41:17)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":42:26)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":28:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":42:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":43:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":64:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":44:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":44:31)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":29:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":45:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":63:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":46:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":46:20)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":50:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":62:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":50:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":50:24)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":50:43)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":51:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":58:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":60:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:36)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:43)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:48)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:59)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:60)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":52:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:49)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:21)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:33)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:39)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:40)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:46)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":53:45)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":55:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":55:24)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":56:27)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":56:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":57:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":57:22)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":61:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":139:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":143:1)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":141:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":141:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":142:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":142:13)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":158:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":160:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":163:15)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":165:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":153:1)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":168:1)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":154:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":156:27)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":156:22)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":156:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":158:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":159:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":159:61)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":160:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":163:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":164:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":164:60)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":165:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":167:12)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":167:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":72:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":103:1)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":74:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":74:12)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":75:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":75:66)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":77:12)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":77:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":79:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":79:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":80:26)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":80:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":81:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":102:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":82:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":82:31)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":83:9)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":101:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":84:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":84:20)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":88:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":100:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":88:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":88:24)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":88:43)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":89:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":96:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":98:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:36)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:43)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:48)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:59)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:60)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":90:17)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:17)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:49)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:21)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:33)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:39)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:40)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:46)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":91:45)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":93:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":93:24)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":93:34)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":94:27)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":94:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":95:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":95:22)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":99:27)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":99:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":133:27)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":106:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":137:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":108:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":108:12)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":109:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":109:66)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":111:12)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":111:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":113:12)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":113:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":113:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":114:26)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":114:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":115:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":136:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":116:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":116:31)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":117:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":135:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":118:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":118:20)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":134:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:17)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:24)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:43)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:45)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:48)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":122:55)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":123:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":130:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":132:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:36)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:43)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:48)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:59)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:60)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":124:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:49)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:21)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:33)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:39)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:40)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:46)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":125:45)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":127:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":127:24)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":127:34)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":128:27)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":128:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":129:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":129:22)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_34.c":133:17)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc7, #loc8])
#loc211 = loc(fused[#loc10, #loc11])
#loc212 = loc(fused[#loc12, #loc13])
#loc213 = loc(fused[#loc15, #loc16])
#loc214 = loc(fused[#loc17, #loc18])
#loc215 = loc(fused[#loc19, #loc20])
#loc216 = loc(fused[#loc22, #loc21])
#loc217 = loc(fused[#loc24, #loc25])
#loc218 = loc(fused[#loc28, #loc26])
#loc219 = loc(fused[#loc29, #loc30])
#loc220 = loc(fused[#loc31, #loc32])
#loc221 = loc(fused[#loc34, #loc35])
#loc222 = loc(fused[#loc36, #loc37])
#loc223 = loc(fused[#loc38, #loc39])
#loc224 = loc(fused[#loc41, #loc42])
#loc225 = loc(fused[#loc40, #loc42])
#loc226 = loc(fused[#loc43, #loc44, #loc45, #loc39])
#loc227 = loc(fused[#loc48, #loc49])
#loc228 = loc(fused[#loc47, #loc49])
#loc229 = loc(fused[#loc46, #loc50])
#loc230 = loc(fused[#loc51, #loc50])
#loc231 = loc(fused[#loc52, #loc53])
#loc232 = loc(fused[#loc54, #loc55])
#loc233 = loc(fused[#loc56, #loc53])
#loc234 = loc(fused[#loc67, #loc68])
#loc235 = loc(fused[#loc69, #loc70])
#loc236 = loc(fused[#loc71, #loc72])
#loc237 = loc(fused[#loc73, #loc74])
#loc238 = loc(fused[#loc75, #loc76])
#loc239 = loc(fused[#loc81, #loc82])
#loc242 = loc(fused[#loc92, #loc93])
#loc243 = loc(fused[#loc96, #loc97])
#loc244 = loc(fused[#loc100, #loc99])
#loc245 = loc(fused[#loc101, #loc102])
#loc246 = loc(fused[#loc103, #loc104])
#loc247 = loc(fused[#loc105, #loc106])
#loc248 = loc(fused[#loc108, #loc107])
#loc249 = loc(fused[#loc110, #loc109])
#loc250 = loc(fused[#loc112, #loc111])
#loc251 = loc(fused[#loc113, #loc114])
#loc252 = loc(fused[#loc115, #loc116])
#loc253 = loc(fused[#loc117, #loc118])
#loc254 = loc(fused[#loc119, #loc120])
#loc255 = loc(fused[#loc121, #loc122])
#loc256 = loc(fused[#loc124, #loc125])
#loc257 = loc(fused[#loc123, #loc125])
#loc258 = loc(fused[#loc126, #loc127, #loc128, #loc122])
#loc259 = loc(fused[#loc131, #loc132])
#loc260 = loc(fused[#loc130, #loc132])
#loc261 = loc(fused[#loc129, #loc133])
#loc262 = loc(fused[#loc134, #loc133])
#loc263 = loc(fused[#loc135, #loc136])
#loc264 = loc(fused[#loc137, #loc138])
#loc265 = loc(fused[#loc139, #loc136])
#loc266 = loc(fused[#loc153, #loc154])
#loc267 = loc(fused[#loc155, #loc156])
#loc268 = loc(fused[#loc157, #loc158])
#loc269 = loc(fused[#loc160, #loc159])
#loc270 = loc(fused[#loc162, #loc163])
#loc271 = loc(fused[#loc165, #loc164])
#loc272 = loc(fused[#loc166, #loc167])
#loc273 = loc(fused[#loc168, #loc169])
#loc274 = loc(fused[#loc170, #loc171])
#loc275 = loc(fused[#loc172, #loc173])
#loc276 = loc(fused[#loc174, #loc175])
#loc277 = loc(fused[#loc177, #loc178])
#loc278 = loc(fused[#loc176, #loc178])
#loc279 = loc(fused[#loc180, #loc181])
#loc280 = loc(fused[#loc182, #loc183, #loc184, #loc175])
#loc281 = loc(fused[#loc187, #loc188])
#loc282 = loc(fused[#loc186, #loc188])
#loc283 = loc(fused[#loc185, #loc189])
#loc284 = loc(fused[#loc190, #loc189])
#loc285 = loc(fused[#loc191, #loc192])
#loc286 = loc(fused[#loc193, #loc194])
#loc287 = loc(fused[#loc195, #loc192])
