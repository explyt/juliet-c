!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:21)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:25)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":166:10)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":166:14)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":166:20)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":166:32)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:25)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:29)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:23)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:25)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:29)
#true = #cir.bool<true> : !cir.bool
#loc232 = loc(fused[#loc15, #loc16])
#loc260 = loc(fused[#loc92, #loc93])
#loc261 = loc(fused[#loc94, #loc95])
#loc266 = loc(fused[#loc113, #loc114])
#loc290 = loc(fused[#loc181, #loc182])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc226)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc227)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc228)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc234)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc232)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc234)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc234)
    cir.br ^bb2 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %6 ^bb3, ^bb12 loc(#loc238)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc33)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc33)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb4 loc(#loc240)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb5 loc(#loc240)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc39)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %14 ^bb6, ^bb10 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc243)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc43)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc46)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb5 loc(#loc240)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc29)
  ^bb12:  // pred: ^bb2
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc23)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc14)
  } loc(#loc231)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc246)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc247)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc55)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc246)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc246)
    cir.br ^bb2 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc61)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc62)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc62)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc62)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc62)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc62)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc62)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc62)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc227)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc64)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc252)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc69)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc70)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb5 loc(#loc67)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    cir.call @badSink(%24) : (!s32i) -> () loc(#loc75)
    cir.return loc(#loc49)
  } loc(#loc245)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc77)
  } loc(#loc254)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc257)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.return %17 : !s32i loc(#loc264)
  } loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc110)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc113, #loc114])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc266)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb1 loc(#loc269)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc268)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc268)
    cir.br ^bb2 loc(#loc270)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc271)
    cir.brcond %6 ^bb3, ^bb8 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc128)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #true loc(#loc126)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc126)
  ^bb5:  // pred: ^bb3
    %11 = cir.const #false loc(#loc126)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc126)
  ^bb6(%12: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%12 : !cir.bool) loc(#loc126)
  ^bb8:  // pred: ^bb2
    %13 = cir.const #false loc(#loc126)
    cir.br ^bb9(%13 : !cir.bool) loc(#loc126)
  ^bb9(%14: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc126)
  ^bb10:  // pred: ^bb9
    cir.brcond %14 ^bb11, ^bb20 loc(#loc273)
  ^bb11:  // pred: ^bb10
    %15 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc135)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc135)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb12 loc(#loc275)
  ^bb12:  // pred: ^bb11
    %19 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb13 loc(#loc275)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc141)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %22 ^bb14, ^bb18 loc(#loc142)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc278)
  ^bb15:  // pred: ^bb14
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc145)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc145)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc146)
    cir.br ^bb16 loc(#loc137)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc137)
  ^bb17:  // pred: ^bb16
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc148)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb13 loc(#loc275)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc137)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc131)
  ^bb20:  // pred: ^bb10
    %29 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc110)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb21 loc(#loc123)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc123)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc121)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc112)
  } loc(#loc265)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc157)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc281)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc281)
    cir.br ^bb2 loc(#loc285)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc163)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc164)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc164)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc164)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc164)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc164)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc164)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc164)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc164)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc227)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc286)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc287)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc171)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc172)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb5 loc(#loc169)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.call @goodB2GSink(%24) : (!s32i) -> () loc(#loc178)
    cir.return loc(#loc151)
  } loc(#loc280)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc181, #loc182])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc290)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb1 loc(#loc293)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc292)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc292)
    cir.br ^bb2 loc(#loc294)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %6 ^bb3, ^bb12 loc(#loc296)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc199)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc199)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb4 loc(#loc298)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc202)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc205)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %14 ^bb6, ^bb10 loc(#loc206)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc301)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc209)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc210)
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc201)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc212)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb5 loc(#loc298)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc201)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc195)
  ^bb12:  // pred: ^bb2
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc213)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc214)
    cir.br ^bb13 loc(#loc191)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc191)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc189)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc180)
  } loc(#loc289)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc220)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc222)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc225)
    cir.return loc(#loc216)
  } loc(#loc303)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":62:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":42:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":45:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":27:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":27:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":28:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":28:30)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":25:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":26:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":44:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":43:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:21)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":32:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":39:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":41:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:28)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:20)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":38:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:17)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:24)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":36:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:37)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:30)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:17)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:33)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:32)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":42:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":47:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":66:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":53:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":53:45)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":49:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":49:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":52:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":64:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":63:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:32)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:49)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:59)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":56:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":59:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":61:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:20)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:36)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":62:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":65:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":65:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":151:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":155:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":153:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":153:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":154:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":154:13)
#loc82 = loc("/usr/include/stdlib.h":575:1)
#loc83 = loc("/usr/include/stdlib.h":575:41)
#loc84 = loc("/usr/include/time.h":76:1)
#loc85 = loc("/usr/include/time.h":76:38)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":171:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":173:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":176:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":178:15)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":166:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":181:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":167:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":169:27)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":169:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":169:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":171:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":172:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":172:62)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":173:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":176:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":177:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":177:61)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":178:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":180:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":180:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":125:23)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:1)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":128:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":111:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":111:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":112:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":112:30)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":109:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":110:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":127:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":126:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:21)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:36)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":115:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":122:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":124:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:28)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:20)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":121:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:21)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:24)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:28)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:26)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":119:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:37)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:30)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:33)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:32)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":125:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":130:1)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":149:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":136:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":136:45)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":132:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":132:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:12)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":135:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":147:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":146:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:19)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:32)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:49)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:13)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:59)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":139:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":142:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":144:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:25)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:20)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:36)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":145:23)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":145:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":148:17)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":148:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":94:1)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":76:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":76:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":77:9)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":77:30)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":74:1)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":75:5)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":93:5)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":92:9)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:21)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":81:9)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":88:9)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":90:9)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:28)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:20)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:13)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":87:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:21)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:24)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:28)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:26)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":85:13)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:37)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:30)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:33)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:32)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":91:23)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":91:13)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":96:1)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":105:1)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":98:5)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":98:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:13)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:12)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:5)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":103:12)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":103:5)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":104:17)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":104:5)
#loc226 = loc(fused[#loc1, #loc2])
#loc227 = loc(fused[#loc3, #loc4])
#loc228 = loc(fused[#loc5, #loc6])
#loc229 = loc(fused[#loc7, #loc8])
#loc230 = loc(fused[#loc10, #loc11])
#loc231 = loc(fused[#loc13, #loc14])
#loc233 = loc(fused[#loc17, #loc18])
#loc234 = loc(fused[#loc19, #loc20])
#loc235 = loc(fused[#loc22, #loc23])
#loc236 = loc(fused[#loc24, #loc25])
#loc237 = loc(fused[#loc26, #loc27])
#loc238 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc239 = loc(fused[#loc33, #loc31])
#loc240 = loc(fused[#loc34, #loc35])
#loc241 = loc(fused[#loc37, #loc36])
#loc242 = loc(fused[#loc38, #loc39])
#loc243 = loc(fused[#loc41, #loc35])
#loc244 = loc(fused[#loc46, #loc45])
#loc245 = loc(fused[#loc48, #loc49])
#loc246 = loc(fused[#loc50, #loc51])
#loc247 = loc(fused[#loc52, #loc53])
#loc248 = loc(fused[#loc56, #loc54])
#loc249 = loc(fused[#loc57, #loc58])
#loc250 = loc(fused[#loc59, #loc60])
#loc251 = loc(fused[#loc64, #loc65])
#loc252 = loc(fused[#loc66, #loc67, #loc68, #loc60])
#loc253 = loc(fused[#loc71, #loc72])
#loc254 = loc(fused[#loc76, #loc77])
#loc255 = loc(fused[#loc78, #loc79])
#loc256 = loc(fused[#loc80, #loc81])
#loc257 = loc(fused[#loc82, #loc83])
#loc258 = loc(fused[#loc84, #loc85])
#loc259 = loc(fused[#loc90, #loc91])
#loc262 = loc(fused[#loc101, #loc102])
#loc263 = loc(fused[#loc105, #loc106])
#loc264 = loc(fused[#loc109, #loc108])
#loc265 = loc(fused[#loc111, #loc112])
#loc267 = loc(fused[#loc115, #loc116])
#loc268 = loc(fused[#loc117, #loc118])
#loc269 = loc(fused[#loc120, #loc121])
#loc270 = loc(fused[#loc122, #loc123])
#loc271 = loc(fused[#loc124, #loc125])
#loc272 = loc(fused[#loc127, #loc129])
#loc273 = loc(fused[#loc130, #loc131, #loc132, #loc123])
#loc274 = loc(fused[#loc135, #loc133])
#loc275 = loc(fused[#loc136, #loc137])
#loc276 = loc(fused[#loc139, #loc138])
#loc277 = loc(fused[#loc140, #loc141])
#loc278 = loc(fused[#loc143, #loc137])
#loc279 = loc(fused[#loc148, #loc147])
#loc280 = loc(fused[#loc150, #loc151])
#loc281 = loc(fused[#loc152, #loc153])
#loc282 = loc(fused[#loc154, #loc155])
#loc283 = loc(fused[#loc158, #loc156])
#loc284 = loc(fused[#loc159, #loc160])
#loc285 = loc(fused[#loc161, #loc162])
#loc286 = loc(fused[#loc166, #loc167])
#loc287 = loc(fused[#loc168, #loc169, #loc170, #loc162])
#loc288 = loc(fused[#loc173, #loc174])
#loc289 = loc(fused[#loc179, #loc180])
#loc291 = loc(fused[#loc183, #loc184])
#loc292 = loc(fused[#loc185, #loc186])
#loc293 = loc(fused[#loc188, #loc189])
#loc294 = loc(fused[#loc190, #loc191])
#loc295 = loc(fused[#loc192, #loc193])
#loc296 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc297 = loc(fused[#loc199, #loc197])
#loc298 = loc(fused[#loc200, #loc201])
#loc299 = loc(fused[#loc203, #loc202])
#loc300 = loc(fused[#loc204, #loc205])
#loc301 = loc(fused[#loc207, #loc201])
#loc302 = loc(fused[#loc212, #loc211])
#loc303 = loc(fused[#loc215, #loc216])
#loc304 = loc(fused[#loc217, #loc218])
#loc305 = loc(fused[#loc221, #loc219])
#loc306 = loc(fused[#loc223, #loc222])
