!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %17 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc15)
      cir.if %18 {
        %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
        cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc19)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc21)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc22)
        cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc135)
      } loc(#loc133)
    } loc(#loc132)
    cir.scope {
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc28)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc29)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc29)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc29)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc33)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc34)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc36)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc139)
      %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc37)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %34 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
      %35 = cir.call @strcpy(%33, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    } loc(#loc136)
    cir.return loc(#loc6)
  } loc(#loc128)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc54)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc54)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc54)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc54)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc146)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc56)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc56)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc56)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc56)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc56)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %17 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc59)
      cir.if %18 {
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
        cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc66)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc69)
        cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc150)
      } loc(#loc148)
    } loc(#loc147)
    cir.scope {
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc75)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc76)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc76)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc80)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc80)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc81)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc83)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc84)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %34 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %35 = cir.call @strcpy(%33, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc84)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    } loc(#loc151)
    cir.return loc(#loc50)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc94)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc94)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc94)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc94)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc94)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc158)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc94)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc96)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc96)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.scope {
      %17 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc99)
      cir.if %18 {
        %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc103)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc106)
        cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc162)
      } loc(#loc160)
    } loc(#loc159)
    cir.scope {
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc164)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc112)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc114)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc113)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc113)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc117)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc117)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc118)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc119)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc118)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc120)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc121)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
      %34 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
      %35 = cir.call @strcpy(%33, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    } loc(#loc163)
    cir.return loc(#loc90)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":30:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":32:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":32:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":33:36)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":34:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":34:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":35:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":41:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":35:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":39:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":39:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":40:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":40:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":40:14)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":40:15)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":42:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":49:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":43:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":43:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":44:34)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":45:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":45:16)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":45:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":45:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":47:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":47:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":48:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":48:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":105:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":109:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":107:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":107:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":108:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":108:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":65:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":57:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":81:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":59:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":59:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":60:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":60:36)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":61:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":61:37)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":62:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":72:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":62:8)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":63:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":66:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":68:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":65:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":70:16)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":70:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":71:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":71:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":71:14)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":71:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":73:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":80:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":74:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":74:24)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:16)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":75:34)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":76:25)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":76:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":76:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":76:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":78:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":78:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":78:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":79:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":79:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":84:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":103:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":86:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":86:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":87:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":87:36)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":88:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":88:37)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":89:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":94:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":89:8)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":90:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":92:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":92:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":93:19)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":93:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":93:14)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":93:15)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":95:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":102:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":96:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":96:24)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:33)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":97:34)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":98:25)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":98:16)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":98:20)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":98:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":100:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":100:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":100:22)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":101:19)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_04.c":101:9)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc7, #loc8])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc13, #loc14])
#loc133 = loc(fused[#loc16, #loc14])
#loc134 = loc(fused[#loc18, #loc17])
#loc135 = loc(fused[#loc20, #loc19])
#loc136 = loc(fused[#loc23, #loc24])
#loc137 = loc(fused[#loc25, #loc26])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc36, #loc33])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc44, #loc45])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc149 = loc(fused[#loc65, #loc64])
#loc150 = loc(fused[#loc67, #loc66])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc83, #loc80])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc100, #loc98])
#loc161 = loc(fused[#loc102, #loc101])
#loc162 = loc(fused[#loc104, #loc103])
#loc163 = loc(fused[#loc107, #loc108])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc115, #loc116])
#loc166 = loc(fused[#loc120, #loc117])
