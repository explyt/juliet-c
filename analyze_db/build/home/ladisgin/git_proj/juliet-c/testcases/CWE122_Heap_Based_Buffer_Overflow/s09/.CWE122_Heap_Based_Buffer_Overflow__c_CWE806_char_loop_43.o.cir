!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":26:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":26:31)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":59:27)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":59:35)
#loc151 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc80, #loc81])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc149)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc151)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc10)
    %4 = cir.const #cir.int<65> : !s8i loc(#loc11)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc11)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc12)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc12)
    cir.libc.memset %9 bytes from %3 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc152)
    %10 = cir.const #cir.int<0> : !s8i loc(#loc16)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc18)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %10, %16 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.return loc(#loc6)
  } loc(#loc150)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc154)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc160)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc36)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc37)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc163)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc49)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb3 loc(#loc43)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L9badSourceERPc(%3) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc50)
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc158)
    cir.store %17, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc158)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb6 loc(#loc171)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc59)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb7 loc(#loc171)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %25 = cir.cmp(lt, %23, %24) : !u64i, !cir.bool loc(#loc173)
    cir.brcond %25 ^bb8, ^bb10 loc(#loc173)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc65)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc63)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc67)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb9 loc(#loc58)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc69)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb7 loc(#loc171)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    %35 = cir.const #cir.int<0> : !s8i loc(#loc70)
    %36 = cir.const #cir.int<50> : !s32i loc(#loc71)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc71)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc73)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb12 loc(#loc52)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc28)
  } loc(#loc157)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc178)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %4 = cir.const #cir.int<65> : !s8i loc(#loc84)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc84)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc85)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc85)
    cir.libc.memset %9 bytes from %3 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %10 = cir.const #cir.int<0> : !s8i loc(#loc89)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc91)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc91)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %10, %16 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    cir.return loc(#loc79)
  } loc(#loc177)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc182)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc104)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc187)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc112)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc116)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L13goodG2BSourceERPc(%3) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc117)
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc182)
    cir.store %17, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc182)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc120)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc120)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc126)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc196)
    cir.br ^bb7 loc(#loc195)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %25 = cir.cmp(lt, %23, %24) : !u64i, !cir.bool loc(#loc197)
    cir.brcond %25 ^bb8, ^bb10 loc(#loc197)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc132)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc130)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc134)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb9 loc(#loc125)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc136)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb7 loc(#loc195)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    %35 = cir.const #cir.int<0> : !s8i loc(#loc137)
    %36 = cir.const #cir.int<50> : !s32i loc(#loc138)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc138)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc140)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc95)
  } loc(#loc181)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43L7goodG2BEv() : () -> () loc(#loc147)
    cir.return loc(#loc146)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":31:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:18)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:27)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":29:28)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":30:19)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":30:10)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":30:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":30:15)
#loc21 = loc("/usr/include/string.h":407:1)
#loc22 = loc("/usr/include/string.h":408:33)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":33:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":52:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":40:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":40:25)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":41:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":41:16)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":41:19)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":35:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":35:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:20)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:42)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:43)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":36:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:23)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":37:29)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":38:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":39:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":51:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":42:19)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":42:26)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":42:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":42:30)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":47:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:18)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:21)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:25)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":46:23)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":46:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":46:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":46:18)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":46:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":44:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":48:22)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":48:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":48:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":48:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":49:19)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":49:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":50:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":50:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":59:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":64:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":60:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:18)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:26)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":62:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":63:18)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":63:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":63:10)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":63:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":63:14)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":66:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":85:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":73:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":73:25)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":74:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":74:16)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":74:19)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":68:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":68:12)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:42)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:43)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":69:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:23)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:24)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:30)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":70:29)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":71:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":72:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":84:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":75:19)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":75:26)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":75:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":75:30)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":80:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:18)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:14)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:21)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:25)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":79:23)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":79:28)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":79:29)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":79:18)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":79:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:35)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":77:34)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":81:22)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":81:14)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":81:17)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":81:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":82:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":82:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":83:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":83:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":87:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":90:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_43.cpp":89:5)
#loc148 = loc(fused[#loc1, #loc2])
#loc149 = loc(fused[#loc3, #loc4])
#loc150 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc14, #loc15])
#loc153 = loc(fused[#loc17, #loc16])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc23, #loc24])
#loc156 = loc(fused[#loc25, #loc26])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc29, #loc30])
#loc159 = loc(fused[#loc31, #loc32])
#loc160 = loc(fused[#loc31, #loc33])
#loc161 = loc(fused[#loc34, #loc35])
#loc162 = loc(fused[#loc38, #loc39])
#loc163 = loc(fused[#loc37, #loc39])
#loc164 = loc(fused[#loc36, #loc40])
#loc165 = loc(fused[#loc41, #loc40])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc44, #loc45])
#loc168 = loc(fused[#loc46, #loc43])
#loc169 = loc(fused[#loc51, #loc52])
#loc170 = loc(fused[#loc55, #loc56])
#loc171 = loc(fused[#loc57, #loc58])
#loc172 = loc(fused[#loc60, #loc59])
#loc173 = loc(fused[#loc61, #loc62])
#loc174 = loc(fused[#loc67, #loc65])
#loc175 = loc(fused[#loc69, #loc68])
#loc176 = loc(fused[#loc73, #loc70])
#loc177 = loc(fused[#loc78, #loc79])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc90, #loc89])
#loc181 = loc(fused[#loc94, #loc95])
#loc182 = loc(fused[#loc96, #loc97])
#loc183 = loc(fused[#loc98, #loc99])
#loc184 = loc(fused[#loc98, #loc100])
#loc185 = loc(fused[#loc101, #loc102])
#loc186 = loc(fused[#loc105, #loc106])
#loc187 = loc(fused[#loc104, #loc106])
#loc188 = loc(fused[#loc103, #loc107])
#loc189 = loc(fused[#loc108, #loc107])
#loc190 = loc(fused[#loc109, #loc110])
#loc191 = loc(fused[#loc111, #loc112])
#loc192 = loc(fused[#loc113, #loc110])
#loc193 = loc(fused[#loc118, #loc119])
#loc194 = loc(fused[#loc122, #loc123])
#loc195 = loc(fused[#loc124, #loc125])
#loc196 = loc(fused[#loc127, #loc126])
#loc197 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc134, #loc132])
#loc199 = loc(fused[#loc136, #loc135])
#loc200 = loc(fused[#loc140, #loc137])
#loc201 = loc(fused[#loc145, #loc146])
