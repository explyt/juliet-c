!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:48)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:48)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc468)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc469)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc470)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc471)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc472)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc473)
  cir.func private @close(!s32i) -> !s32i loc(#loc474)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc475)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc476)
  cir.func private @printIntLine(!s32i) loc(#loc477)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc24)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc479)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc481)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc482)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc483)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc484)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc485)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc486)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc487)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc488)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc489)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc490)
    %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc491)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc490)
    cir.store %8, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc491)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc52)
    cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc492)
    cir.br ^bb1 loc(#loc493)
  ^bb1:  // pred: ^bb0
    %13 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.br ^bb2 loc(#loc494)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc36)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.br ^bb3 loc(#loc495)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc495)
  ^bb4:  // pred: ^bb27
    %17 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %18 ^bb5, ^bb28 loc(#loc61)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc496)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc66)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.br ^bb7 loc(#loc498)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc73)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc499)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc500)
  ^bb8:  // pred: ^bb7
    cir.br ^bb28 loc(#loc75)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc501)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc502)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc503)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc83)
    %32 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc504)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc86)
    %36 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc505)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc91)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc91)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc92)
    %41 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc506)
    cir.br ^bb11 loc(#loc507)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %43 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc508)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc509)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc509)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc103)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc104)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc510)
    cir.brcond %49 ^bb12, ^bb13 loc(#loc511)
  ^bb12:  // pred: ^bb11
    cir.br ^bb28 loc(#loc106)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc97)
  ^bb14:  // pred: ^bb13
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %53 = cir.const #cir.int<3> : !s32i loc(#loc109)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc109)
    %55 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %56 = cir.binop(mul, %54, %55) : !u64i loc(#loc109)
    %57 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc109)
    %59 = cir.binop(add, %56, %58) : !u64i loc(#loc109)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc110)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc512)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %64 = cir.call @recv(%50, %52, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc112)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc513)
    cir.br ^bb15 loc(#loc514)
  ^bb15:  // pred: ^bb14
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc118)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %69 ^bb16, ^bb17 loc(#loc119)
  ^bb16:  // pred: ^bb15
    %70 = cir.const #true loc(#loc119)
    cir.br ^bb22(%70 : !cir.bool) loc(#loc119)
  ^bb17:  // pred: ^bb15
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc516)
    cir.brcond %73 ^bb18, ^bb19 loc(#loc119)
  ^bb18:  // pred: ^bb17
    %74 = cir.const #true loc(#loc119)
    cir.br ^bb20(%74 : !cir.bool) loc(#loc119)
  ^bb19:  // pred: ^bb17
    %75 = cir.const #false loc(#loc119)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc119)
  ^bb20(%76: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc119)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%76 : !cir.bool) loc(#loc119)
  ^bb22(%77: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc119)
  ^bb23:  // pred: ^bb22
    cir.brcond %77 ^bb24, ^bb25 loc(#loc517)
  ^bb24:  // pred: ^bb23
    cir.br ^bb28 loc(#loc123)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc116)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc124)
    %80 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc518)
    %83 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
    %84 = cir.call @atoi(%83) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc128)
    cir.store %84, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb27 loc(#loc63)
  ^bb27:  // pred: ^bb26
    cir.br ^bb4 loc(#loc60)
  ^bb28:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb29 loc(#loc60)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc520)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc134)
    %88 = cir.cmp(ne, %85, %87) : !s32i, !cir.bool loc(#loc521)
    cir.brcond %88 ^bb31, ^bb32 loc(#loc522)
  ^bb31:  // pred: ^bb30
    %89 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %90 = cir.call @close(%89) : (!s32i) -> !s32i loc(#loc137)
    cir.br ^bb32 loc(#loc132)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc132)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc58)
  ^bb34:  // pred: ^bb33
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %92 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    cir.store %91, %92 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    cir.br ^bb35 loc(#loc55)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc524)
  ^bb36:  // pred: ^bb35
    %93 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %94 = cir.load %93 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc486)
    cir.br ^bb37 loc(#loc525)
  ^bb37:  // pred: ^bb36
    %95 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc146)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc147)
    %97 = cir.cast(integral, %96 : !s32i), !u64i loc(#loc147)
    %98 = cir.const #cir.int<4> : !u64i loc(#loc526)
    %99 = cir.binop(mul, %97, %98) : !u64i loc(#loc527)
    %100 = cir.call @malloc(%99) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
    %101 = cir.cast(bitcast, %100 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc528)
    cir.store %101, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc488)
    cir.br ^bb38 loc(#loc529)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
    %103 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
    %104 = cir.cast(bitcast, %103 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
    %105 = cir.cmp(eq, %102, %104) : !cir.ptr<!s32i>, !cir.bool loc(#loc530)
    cir.brcond %105 ^bb39, ^bb40 loc(#loc531)
  ^bb39:  // pred: ^bb38
    %106 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc155)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc157)
    cir.call @exit(%108) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
    cir.br ^bb40 loc(#loc151)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc151)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc532)
  ^bb42:  // pred: ^bb41
    %109 = cir.const #cir.int<0> : !s32i loc(#loc160)
    cir.store %109, %6 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    cir.br ^bb43 loc(#loc532)
  ^bb43:  // 2 preds: ^bb42, ^bb47
    %110 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %111 = cir.const #cir.int<10> : !s32i loc(#loc163)
    %112 = cir.cmp(lt, %110, %111) : !s32i, !cir.bool loc(#loc534)
    cir.brcond %112 ^bb44, ^bb48 loc(#loc164)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc535)
  ^bb45:  // pred: ^bb44
    %113 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %114 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %116 = cir.ptr_stride(%114 : !cir.ptr<!s32i>, %115 : !s32i), !cir.ptr<!s32i> loc(#loc169)
    cir.store %113, %116 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.br ^bb46 loc(#loc159)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc159)
  ^bb47:  // pred: ^bb46
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %118 = cir.unary(inc, %117) nsw : !s32i, !s32i loc(#loc171)
    cir.store %118, %6 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb43 loc(#loc532)
  ^bb48:  // pred: ^bb43
    cir.br ^bb49 loc(#loc159)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc538)
  ^bb50:  // pred: ^bb49
    %119 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %120 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %121 = cir.cmp(ge, %119, %120) : !s32i, !cir.bool loc(#loc539)
    cir.brcond %121 ^bb51, ^bb60 loc(#loc540)
  ^bb51:  // pred: ^bb50
    %122 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %123 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
    %124 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %125 = cir.ptr_stride(%123 : !cir.ptr<!s32i>, %124 : !s32i), !cir.ptr<!s32i> loc(#loc182)
    cir.store %122, %125 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb52 loc(#loc542)
  ^bb52:  // pred: ^bb51
    %126 = cir.const #cir.int<0> : !s32i loc(#loc185)
    cir.store %126, %6 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb53 loc(#loc542)
  ^bb53:  // 2 preds: ^bb52, ^bb57
    %127 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %128 = cir.const #cir.int<10> : !s32i loc(#loc188)
    %129 = cir.cmp(lt, %127, %128) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %129 ^bb54, ^bb58 loc(#loc189)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc545)
  ^bb55:  // pred: ^bb54
    %130 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
    %131 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %132 = cir.ptr_stride(%130 : !cir.ptr<!s32i>, %131 : !s32i), !cir.ptr<!s32i> loc(#loc193)
    %133 = cir.load %132 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @printIntLine(%133) : (!s32i) -> () loc(#loc194)
    cir.br ^bb56 loc(#loc184)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc184)
  ^bb57:  // pred: ^bb56
    %134 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %135 = cir.unary(inc, %134) nsw : !s32i, !s32i loc(#loc196)
    cir.store %135, %6 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    cir.br ^bb53 loc(#loc542)
  ^bb58:  // pred: ^bb53
    cir.br ^bb59 loc(#loc184)
  ^bb59:  // pred: ^bb58
    cir.br ^bb61 loc(#loc177)
  ^bb60:  // pred: ^bb50
    %136 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
    %137 = cir.cast(array_to_ptrdecay, %136 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%137) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.br ^bb61 loc(#loc173)
  ^bb61:  // 2 preds: ^bb59, ^bb60
    cir.br ^bb62 loc(#loc173)
  ^bb62:  // pred: ^bb61
    %138 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
    %139 = cir.cast(bitcast, %138 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc198)
    cir.call @free(%139) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc199)
    cir.br ^bb63 loc(#loc145)
  ^bb63:  // pred: ^bb62
    cir.br ^bb64 loc(#loc142)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc28)
  } loc(#loc480)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc548)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc202)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc549)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc204)
    cir.return loc(#loc201)
  } loc(#loc547)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc551)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc552)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc553)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc554)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc555)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc556)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc557)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc556)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc557)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc223)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb1 loc(#loc559)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    %11 = cir.const #cir.int<7> : !s32i loc(#loc228)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    cir.br ^bb2 loc(#loc226)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc562)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc552)
    cir.br ^bb4 loc(#loc563)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc238)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc239)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc239)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc564)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc565)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc238)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc566)
    cir.store %22, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc554)
    cir.br ^bb5 loc(#loc567)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc244)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc245)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc245)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc568)
    cir.brcond %26 ^bb6, ^bb7 loc(#loc569)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc247)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc248)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc249)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc247)
    cir.br ^bb7 loc(#loc243)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc243)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc570)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc252)
    cir.store %30, %2 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb10 loc(#loc570)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc255)
    %33 = cir.cmp(lt, %31, %32) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %33 ^bb11, ^bb15 loc(#loc256)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc573)
  ^bb12:  // pred: ^bb11
    %34 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc259)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc261)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb13 loc(#loc251)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc251)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %39 = cir.unary(inc, %38) nsw : !s32i, !s32i loc(#loc263)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc575)
    cir.br ^bb10 loc(#loc570)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc251)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc576)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %42 = cir.cmp(ge, %40, %41) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %42 ^bb18, ^bb27 loc(#loc578)
  ^bb18:  // pred: ^bb17
    %43 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc272)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc274)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc579)
    cir.br ^bb19 loc(#loc580)
  ^bb19:  // pred: ^bb18
    %47 = cir.const #cir.int<0> : !s32i loc(#loc277)
    cir.store %47, %2 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.br ^bb20 loc(#loc580)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc280)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %50 ^bb21, ^bb25 loc(#loc281)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc583)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc285)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc286)
    cir.br ^bb23 loc(#loc276)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc276)
  ^bb24:  // pred: ^bb23
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %56 = cir.unary(inc, %55) nsw : !s32i, !s32i loc(#loc288)
    cir.store %56, %2 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb20 loc(#loc580)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc276)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc269)
  ^bb27:  // pred: ^bb17
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc289)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc289)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc290)
    cir.br ^bb28 loc(#loc265)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc265)
  ^bb29:  // pred: ^bb28
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc291)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc291)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc292)
    cir.br ^bb30 loc(#loc237)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc234)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc207)
  } loc(#loc550)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc293)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc586)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc587)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc588)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc589)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc590)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc591)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc592)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc593)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc594)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc595)
    %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc596)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc595)
    cir.store %8, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc596)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc318)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc319)
    cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    cir.br ^bb1 loc(#loc598)
  ^bb1:  // pred: ^bb0
    %13 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc297)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb2 loc(#loc599)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc303)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.br ^bb3 loc(#loc600)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc600)
  ^bb4:  // pred: ^bb27
    %17 = cir.const #cir.int<0> : !s32i loc(#loc328)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc328)
    cir.brcond %18 ^bb5, ^bb28 loc(#loc328)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc601)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc331)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc332)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc333)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc334)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc602)
    cir.br ^bb7 loc(#loc603)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc340)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc340)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc604)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc605)
  ^bb8:  // pred: ^bb7
    cir.br ^bb28 loc(#loc342)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc338)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc606)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc345)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc607)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc608)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc350)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc350)
    %32 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc609)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc352)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc352)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc353)
    %36 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc610)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc356)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc356)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc357)
    %41 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc611)
    cir.br ^bb11 loc(#loc612)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    %43 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc613)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc614)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc614)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc367)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc368)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc368)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc615)
    cir.brcond %49 ^bb12, ^bb13 loc(#loc616)
  ^bb12:  // pred: ^bb11
    cir.br ^bb28 loc(#loc370)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc361)
  ^bb14:  // pred: ^bb13
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc371)
    %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc372)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc372)
    %53 = cir.const #cir.int<3> : !s32i loc(#loc373)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc373)
    %55 = cir.const #cir.int<4> : !u64i loc(#loc373)
    %56 = cir.binop(mul, %54, %55) : !u64i loc(#loc373)
    %57 = cir.const #cir.int<2> : !s32i loc(#loc373)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc373)
    %59 = cir.binop(add, %56, %58) : !u64i loc(#loc373)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc374)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc374)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc617)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc375)
    %64 = cir.call @recv(%50, %52, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc376)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc376)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc618)
    cir.br ^bb15 loc(#loc619)
  ^bb15:  // pred: ^bb14
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc381)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc382)
    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc382)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %69 ^bb16, ^bb17 loc(#loc383)
  ^bb16:  // pred: ^bb15
    %70 = cir.const #true loc(#loc383)
    cir.br ^bb22(%70 : !cir.bool) loc(#loc383)
  ^bb17:  // pred: ^bb15
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc385)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc621)
    cir.brcond %73 ^bb18, ^bb19 loc(#loc383)
  ^bb18:  // pred: ^bb17
    %74 = cir.const #true loc(#loc383)
    cir.br ^bb20(%74 : !cir.bool) loc(#loc383)
  ^bb19:  // pred: ^bb17
    %75 = cir.const #false loc(#loc383)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc383)
  ^bb20(%76: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc383)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%76 : !cir.bool) loc(#loc383)
  ^bb22(%77: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc383)
  ^bb23:  // pred: ^bb22
    cir.brcond %77 ^bb24, ^bb25 loc(#loc622)
  ^bb24:  // pred: ^bb23
    cir.br ^bb28 loc(#loc387)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc380)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #cir.int<0> : !s32i loc(#loc388)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc388)
    %80 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc390)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !s32i), !cir.ptr<!s8i> loc(#loc390)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc623)
    %83 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc391)
    %84 = cir.call @atoi(%83) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc392)
    cir.store %84, %0 : !s32i, !cir.ptr<!s32i> loc(#loc624)
    cir.br ^bb27 loc(#loc330)
  ^bb27:  // pred: ^bb26
    cir.br ^bb4 loc(#loc327)
  ^bb28:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb29 loc(#loc327)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc625)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc397)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc398)
    %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc398)
    %88 = cir.cmp(ne, %85, %87) : !s32i, !cir.bool loc(#loc626)
    cir.brcond %88 ^bb31, ^bb32 loc(#loc627)
  ^bb31:  // pred: ^bb30
    %89 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    %90 = cir.call @close(%89) : (!s32i) -> !s32i loc(#loc401)
    cir.br ^bb32 loc(#loc396)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc396)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc325)
  ^bb34:  // pred: ^bb33
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc402)
    %92 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc403)
    cir.store %91, %92 : !s32i, !cir.ptr<!s32i> loc(#loc628)
    cir.br ^bb35 loc(#loc322)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc629)
  ^bb36:  // pred: ^bb35
    %93 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc307)
    %94 = cir.load %93 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc591)
    cir.br ^bb37 loc(#loc630)
  ^bb37:  // pred: ^bb36
    %95 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc410)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc411)
    %97 = cir.cast(integral, %96 : !s32i), !u64i loc(#loc411)
    %98 = cir.const #cir.int<4> : !u64i loc(#loc631)
    %99 = cir.binop(mul, %97, %98) : !u64i loc(#loc632)
    %100 = cir.call @malloc(%99) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc410)
    %101 = cir.cast(bitcast, %100 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc633)
    cir.store %101, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc593)
    cir.br ^bb38 loc(#loc634)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc416)
    %103 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc417)
    %104 = cir.cast(bitcast, %103 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc417)
    %105 = cir.cmp(eq, %102, %104) : !cir.ptr<!s32i>, !cir.bool loc(#loc635)
    cir.brcond %105 ^bb39, ^bb40 loc(#loc636)
  ^bb39:  // pred: ^bb38
    %106 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc419)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc420)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc421)
    cir.call @exit(%108) : (!s32i) -> () extra(#fn_attr) loc(#loc419)
    cir.br ^bb40 loc(#loc415)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc415)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc637)
  ^bb42:  // pred: ^bb41
    %109 = cir.const #cir.int<0> : !s32i loc(#loc424)
    cir.store %109, %6 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    cir.br ^bb43 loc(#loc637)
  ^bb43:  // 2 preds: ^bb42, ^bb47
    %110 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %111 = cir.const #cir.int<10> : !s32i loc(#loc427)
    %112 = cir.cmp(lt, %110, %111) : !s32i, !cir.bool loc(#loc639)
    cir.brcond %112 ^bb44, ^bb48 loc(#loc428)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc640)
  ^bb45:  // pred: ^bb44
    %113 = cir.const #cir.int<0> : !s32i loc(#loc430)
    %114 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc431)
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    %116 = cir.ptr_stride(%114 : !cir.ptr<!s32i>, %115 : !s32i), !cir.ptr<!s32i> loc(#loc433)
    cir.store %113, %116 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    cir.br ^bb46 loc(#loc423)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc423)
  ^bb47:  // pred: ^bb46
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %118 = cir.unary(inc, %117) nsw : !s32i, !s32i loc(#loc435)
    cir.store %118, %6 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    cir.br ^bb43 loc(#loc637)
  ^bb48:  // pred: ^bb43
    cir.br ^bb49 loc(#loc423)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc643)
  ^bb50:  // pred: ^bb49
    %119 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    %120 = cir.const #cir.int<0> : !s32i loc(#loc439)
    %121 = cir.cmp(ge, %119, %120) : !s32i, !cir.bool loc(#loc644)
    cir.brcond %121 ^bb51, ^bb56 loc(#loc440)
  ^bb51:  // pred: ^bb50
    %122 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    %123 = cir.const #cir.int<10> : !s32i loc(#loc442)
    %124 = cir.cmp(lt, %122, %123) : !s32i, !cir.bool loc(#loc645)
    cir.brcond %124 ^bb52, ^bb53 loc(#loc440)
  ^bb52:  // pred: ^bb51
    %125 = cir.const #true loc(#loc440)
    cir.br ^bb54(%125 : !cir.bool) loc(#loc440)
  ^bb53:  // pred: ^bb51
    %126 = cir.const #false loc(#loc440)
    cir.br ^bb54(%126 : !cir.bool) loc(#loc440)
  ^bb54(%127: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:27)):  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc440)
  ^bb55:  // pred: ^bb54
    cir.br ^bb57(%127 : !cir.bool) loc(#loc440)
  ^bb56:  // pred: ^bb50
    %128 = cir.const #false loc(#loc440)
    cir.br ^bb57(%128 : !cir.bool) loc(#loc440)
  ^bb57(%129: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:27)):  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc440)
  ^bb58:  // pred: ^bb57
    cir.brcond %129 ^bb59, ^bb68 loc(#loc646)
  ^bb59:  // pred: ^bb58
    %130 = cir.const #cir.int<1> : !s32i loc(#loc447)
    %131 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc448)
    %132 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc449)
    %133 = cir.ptr_stride(%131 : !cir.ptr<!s32i>, %132 : !s32i), !cir.ptr<!s32i> loc(#loc450)
    cir.store %130, %133 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.br ^bb60 loc(#loc648)
  ^bb60:  // pred: ^bb59
    %134 = cir.const #cir.int<0> : !s32i loc(#loc453)
    cir.store %134, %6 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    cir.br ^bb61 loc(#loc648)
  ^bb61:  // 2 preds: ^bb60, ^bb65
    %135 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc455)
    %136 = cir.const #cir.int<10> : !s32i loc(#loc456)
    %137 = cir.cmp(lt, %135, %136) : !s32i, !cir.bool loc(#loc650)
    cir.brcond %137 ^bb62, ^bb66 loc(#loc457)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc651)
  ^bb63:  // pred: ^bb62
    %138 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc459)
    %139 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %140 = cir.ptr_stride(%138 : !cir.ptr<!s32i>, %139 : !s32i), !cir.ptr<!s32i> loc(#loc461)
    %141 = cir.load %140 : !cir.ptr<!s32i>, !s32i loc(#loc459)
    cir.call @printIntLine(%141) : (!s32i) -> () loc(#loc462)
    cir.br ^bb64 loc(#loc452)
  ^bb64:  // pred: ^bb63
    cir.br ^bb65 loc(#loc452)
  ^bb65:  // pred: ^bb64
    %142 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %143 = cir.unary(inc, %142) nsw : !s32i, !s32i loc(#loc464)
    cir.store %143, %6 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.br ^bb61 loc(#loc648)
  ^bb66:  // pred: ^bb61
    cir.br ^bb67 loc(#loc452)
  ^bb67:  // pred: ^bb66
    cir.br ^bb69 loc(#loc445)
  ^bb68:  // pred: ^bb58
    %144 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc293)
    %145 = cir.cast(array_to_ptrdecay, %144 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc293)
    cir.call @printLine(%145) : (!cir.ptr<!s8i>) -> () loc(#loc465)
    cir.br ^bb69 loc(#loc437)
  ^bb69:  // 2 preds: ^bb67, ^bb68
    cir.br ^bb70 loc(#loc437)
  ^bb70:  // pred: ^bb69
    %146 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc466)
    %147 = cir.cast(bitcast, %146 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc466)
    cir.call @free(%147) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc467)
    cir.br ^bb71 loc(#loc409)
  ^bb71:  // pred: ^bb70
    cir.br ^bb72 loc(#loc406)
  ^bb72:  // pred: ^bb71
    cir.return loc(#loc295)
  } loc(#loc585)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":135:27)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":44:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":140:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":52:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":52:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":58:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":58:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":59:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":59:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":60:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":60:36)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":61:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":61:45)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":112:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":112:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":114:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":114:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:58)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":46:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":46:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":47:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":47:22)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":48:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":48:22)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":50:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":50:12)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":50:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":51:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":110:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":52:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":53:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":108:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":62:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":97:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":97:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":63:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":96:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:40)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:49)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:62)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":72:73)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":73:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":76:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":73:21)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":73:38)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":74:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":75:21)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:24)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:25)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:34)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:37)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:51)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":77:52)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":78:38)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":78:17)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":79:43)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":79:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":79:63)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":80:42)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":80:36)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":80:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":80:50)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":84:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:62)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:63)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:72)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:86)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:21)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":81:92)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":82:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":83:21)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:35)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:50)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:63)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:81)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:84)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:30)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:17)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":87:85)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:17)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":91:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:21)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:35)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:51)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":88:65)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":89:17)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":90:21)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":93:43)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":93:29)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":93:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":95:29)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":95:24)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":95:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":95:40)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":98:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":101:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":98:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":98:34)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":99:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":100:30)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":100:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":109:21)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":109:10)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":109:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":111:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":139:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":112:20)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":113:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":138:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:35)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:42)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:47)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":115:57)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:43)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:17)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:27)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:33)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:34)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:40)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":116:39)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:13)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":121:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:22)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:18)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:25)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:29)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:27)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":119:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":120:29)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":120:17)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":120:24)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":120:25)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:34)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":118:33)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":124:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":136:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":124:17)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":124:25)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":125:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":132:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":134:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":126:32)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":126:17)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":126:24)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":126:28)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:17)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":131:17)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:21)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:28)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:32)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:30)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":129:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":130:34)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":130:41)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":130:42)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":130:21)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:37)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":128:36)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":135:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":137:18)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":137:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":290:1)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":294:1)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":292:5)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":292:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":293:5)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":293:13)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":147:1)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":190:1)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":155:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":155:21)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":162:9)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":162:21)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":164:13)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":164:17)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:58)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":149:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":149:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":150:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":150:22)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":151:5)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":151:22)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":153:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":153:12)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":153:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":154:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":160:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":155:20)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":158:16)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":158:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":159:21)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":159:10)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":159:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":161:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":189:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":162:20)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":163:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":188:9)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:35)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:42)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:47)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":165:57)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:43)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:17)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:27)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:33)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:34)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:40)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":166:39)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":171:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:22)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:18)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:25)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:29)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:27)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":169:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":170:29)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":170:17)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":170:24)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":170:25)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:34)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":168:33)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":174:13)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":186:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":174:17)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":174:25)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":175:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":182:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":184:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":176:32)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":176:17)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":176:24)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":176:28)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":181:17)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:25)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:21)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:28)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:32)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:30)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":179:17)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":180:34)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":180:41)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":180:42)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":180:21)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:37)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":178:36)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":185:27)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":185:17)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":187:18)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":187:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":283:27)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":193:1)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":288:1)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":201:9)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":201:21)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":207:13)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":207:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":208:13)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":208:32)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":209:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":209:36)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":210:13)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":210:45)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":261:9)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":261:21)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":263:13)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":263:17)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:58)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":195:5)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":195:9)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":196:5)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":196:22)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":197:5)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":197:22)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":199:13)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":199:12)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":199:5)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":200:5)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":259:5)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":201:20)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":202:9)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":257:9)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":211:13)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":246:21)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":246:20)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":212:13)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":245:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:40)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:49)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:62)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:33)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:17)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":221:73)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":222:17)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":225:17)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":222:21)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":222:38)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":223:17)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":224:21)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:24)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:25)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:34)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:37)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:51)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:17)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":226:52)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":227:38)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":227:17)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":228:53)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":228:43)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":228:17)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":228:63)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":229:42)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":229:36)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":229:17)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":229:50)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:17)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":233:17)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:29)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:62)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:63)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:72)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:86)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:21)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":230:92)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":231:17)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":232:21)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:35)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:50)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:63)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:81)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:84)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:30)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:17)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":236:85)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:17)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":240:17)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:21)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:35)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:51)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":237:65)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":238:17)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":239:21)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":242:43)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":242:29)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":242:17)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":244:29)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":244:24)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":244:17)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":244:40)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":247:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":250:13)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":247:17)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":247:34)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":248:13)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":249:30)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":249:17)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":258:21)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":258:10)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":258:9)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":260:5)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":287:5)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":261:20)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":262:9)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":286:9)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:35)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:42)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:47)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":264:57)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:13)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:43)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:17)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:27)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:33)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:34)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:40)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":265:39)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":270:13)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:22)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:18)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:25)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:29)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:27)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":268:13)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":269:29)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":269:17)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":269:24)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":269:25)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:34)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":267:33)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":284:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:17)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:25)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:30)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:38)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":272:40)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":273:13)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":280:13)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":282:13)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":274:32)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":274:17)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":274:24)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":274:28)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:17)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":279:17)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:25)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:21)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:28)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:32)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:30)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":277:17)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":278:34)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":278:41)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":278:42)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":278:21)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:37)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":276:36)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":283:17)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":285:18)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_32.c":285:13)
#loc468 = loc(fused[#loc1, #loc2])
#loc469 = loc(fused[#loc3, #loc4])
#loc470 = loc(fused[#loc6, #loc7])
#loc471 = loc(fused[#loc8, #loc9])
#loc472 = loc(fused[#loc10, #loc11])
#loc473 = loc(fused[#loc12, #loc13])
#loc474 = loc(fused[#loc14, #loc15])
#loc475 = loc(fused[#loc16, #loc17])
#loc476 = loc(fused[#loc18, #loc19])
#loc477 = loc(fused[#loc20, #loc21])
#loc478 = loc(fused[#loc22, #loc23])
#loc479 = loc(fused[#loc25, #loc26])
#loc480 = loc(fused[#loc27, #loc28])
#loc481 = loc(fused[#loc29, #loc30])
#loc482 = loc(fused[#loc31, #loc32])
#loc483 = loc(fused[#loc33, #loc34])
#loc484 = loc(fused[#loc35, #loc36])
#loc485 = loc(fused[#loc37, #loc38])
#loc486 = loc(fused[#loc39, #loc40])
#loc487 = loc(fused[#loc41, #loc42])
#loc488 = loc(fused[#loc43, #loc44])
#loc489 = loc(fused[#loc45, #loc46])
#loc490 = loc(fused[#loc47, #loc48])
#loc491 = loc(fused[#loc49, #loc50])
#loc492 = loc(fused[#loc53, #loc51])
#loc493 = loc(fused[#loc54, #loc55])
#loc494 = loc(fused[#loc57, #loc58])
#loc495 = loc(fused[#loc59, #loc60])
#loc496 = loc(fused[#loc62, #loc63])
#loc497 = loc(fused[#loc68, #loc69])
#loc498 = loc(fused[#loc70, #loc71])
#loc499 = loc(fused[#loc72, #loc73])
#loc500 = loc(fused[#loc74, #loc71])
#loc501 = loc(fused[#loc76, #loc77])
#loc502 = loc(fused[#loc79, #loc80])
#loc503 = loc(fused[#loc81, #loc82])
#loc504 = loc(fused[#loc85, #loc83])
#loc505 = loc(fused[#loc89, #loc90])
#loc506 = loc(fused[#loc94, #loc95])
#loc507 = loc(fused[#loc96, #loc97])
#loc508 = loc(fused[#loc99, #loc100])
#loc509 = loc(fused[#loc101, #loc102])
#loc510 = loc(fused[#loc103, #loc104])
#loc511 = loc(fused[#loc105, #loc97])
#loc512 = loc(fused[#loc109, #loc110])
#loc513 = loc(fused[#loc113, #loc114])
#loc514 = loc(fused[#loc115, #loc116])
#loc515 = loc(fused[#loc117, #loc118])
#loc516 = loc(fused[#loc120, #loc121])
#loc517 = loc(fused[#loc122, #loc116])
#loc518 = loc(fused[#loc126, #loc124])
#loc519 = loc(fused[#loc129, #loc130])
#loc520 = loc(fused[#loc131, #loc132])
#loc521 = loc(fused[#loc133, #loc134])
#loc522 = loc(fused[#loc135, #loc132])
#loc523 = loc(fused[#loc140, #loc138])
#loc524 = loc(fused[#loc141, #loc142])
#loc525 = loc(fused[#loc144, #loc145])
#loc526 = loc(fused[#loc148, #loc149])
#loc527 = loc(fused[#loc147, #loc149])
#loc528 = loc(fused[#loc146, #loc44])
#loc529 = loc(fused[#loc150, #loc151])
#loc530 = loc(fused[#loc152, #loc153])
#loc531 = loc(fused[#loc154, #loc151])
#loc532 = loc(fused[#loc158, #loc159])
#loc533 = loc(fused[#loc161, #loc160])
#loc534 = loc(fused[#loc162, #loc163])
#loc535 = loc(fused[#loc165, #loc159])
#loc536 = loc(fused[#loc167, #loc166])
#loc537 = loc(fused[#loc171, #loc170])
#loc538 = loc(fused[#loc172, #loc173])
#loc539 = loc(fused[#loc174, #loc175])
#loc540 = loc(fused[#loc176, #loc177, #loc178, #loc173])
#loc541 = loc(fused[#loc180, #loc179])
#loc542 = loc(fused[#loc183, #loc184])
#loc543 = loc(fused[#loc186, #loc185])
#loc544 = loc(fused[#loc187, #loc188])
#loc545 = loc(fused[#loc190, #loc184])
#loc546 = loc(fused[#loc196, #loc195])
#loc547 = loc(fused[#loc200, #loc201])
#loc548 = loc(fused[#loc202, #loc203])
#loc549 = loc(fused[#loc204, #loc205])
#loc550 = loc(fused[#loc206, #loc207])
#loc551 = loc(fused[#loc208, #loc209])
#loc552 = loc(fused[#loc210, #loc211])
#loc553 = loc(fused[#loc212, #loc213])
#loc554 = loc(fused[#loc214, #loc215])
#loc555 = loc(fused[#loc216, #loc217])
#loc556 = loc(fused[#loc218, #loc219])
#loc557 = loc(fused[#loc220, #loc221])
#loc558 = loc(fused[#loc224, #loc222])
#loc559 = loc(fused[#loc225, #loc226])
#loc560 = loc(fused[#loc229, #loc228])
#loc561 = loc(fused[#loc232, #loc230])
#loc562 = loc(fused[#loc233, #loc234])
#loc563 = loc(fused[#loc236, #loc237])
#loc564 = loc(fused[#loc240, #loc241])
#loc565 = loc(fused[#loc239, #loc241])
#loc566 = loc(fused[#loc238, #loc215])
#loc567 = loc(fused[#loc242, #loc243])
#loc568 = loc(fused[#loc244, #loc245])
#loc569 = loc(fused[#loc246, #loc243])
#loc570 = loc(fused[#loc250, #loc251])
#loc571 = loc(fused[#loc253, #loc252])
#loc572 = loc(fused[#loc254, #loc255])
#loc573 = loc(fused[#loc257, #loc251])
#loc574 = loc(fused[#loc259, #loc258])
#loc575 = loc(fused[#loc263, #loc262])
#loc576 = loc(fused[#loc264, #loc265])
#loc577 = loc(fused[#loc266, #loc267])
#loc578 = loc(fused[#loc268, #loc269, #loc270, #loc265])
#loc579 = loc(fused[#loc272, #loc271])
#loc580 = loc(fused[#loc275, #loc276])
#loc581 = loc(fused[#loc278, #loc277])
#loc582 = loc(fused[#loc279, #loc280])
#loc583 = loc(fused[#loc282, #loc276])
#loc584 = loc(fused[#loc288, #loc287])
#loc585 = loc(fused[#loc294, #loc295])
#loc586 = loc(fused[#loc296, #loc297])
#loc587 = loc(fused[#loc298, #loc299])
#loc588 = loc(fused[#loc300, #loc301])
#loc589 = loc(fused[#loc302, #loc303])
#loc590 = loc(fused[#loc304, #loc305])
#loc591 = loc(fused[#loc306, #loc307])
#loc592 = loc(fused[#loc308, #loc309])
#loc593 = loc(fused[#loc310, #loc311])
#loc594 = loc(fused[#loc312, #loc313])
#loc595 = loc(fused[#loc314, #loc315])
#loc596 = loc(fused[#loc316, #loc317])
#loc597 = loc(fused[#loc320, #loc318])
#loc598 = loc(fused[#loc321, #loc322])
#loc599 = loc(fused[#loc324, #loc325])
#loc600 = loc(fused[#loc326, #loc327])
#loc601 = loc(fused[#loc329, #loc330])
#loc602 = loc(fused[#loc335, #loc336])
#loc603 = loc(fused[#loc337, #loc338])
#loc604 = loc(fused[#loc339, #loc340])
#loc605 = loc(fused[#loc341, #loc338])
#loc606 = loc(fused[#loc343, #loc344])
#loc607 = loc(fused[#loc346, #loc347])
#loc608 = loc(fused[#loc348, #loc349])
#loc609 = loc(fused[#loc351, #loc350])
#loc610 = loc(fused[#loc354, #loc355])
#loc611 = loc(fused[#loc358, #loc359])
#loc612 = loc(fused[#loc360, #loc361])
#loc613 = loc(fused[#loc363, #loc364])
#loc614 = loc(fused[#loc365, #loc366])
#loc615 = loc(fused[#loc367, #loc368])
#loc616 = loc(fused[#loc369, #loc361])
#loc617 = loc(fused[#loc373, #loc374])
#loc618 = loc(fused[#loc377, #loc378])
#loc619 = loc(fused[#loc379, #loc380])
#loc620 = loc(fused[#loc381, #loc382])
#loc621 = loc(fused[#loc384, #loc385])
#loc622 = loc(fused[#loc386, #loc380])
#loc623 = loc(fused[#loc390, #loc388])
#loc624 = loc(fused[#loc393, #loc394])
#loc625 = loc(fused[#loc395, #loc396])
#loc626 = loc(fused[#loc397, #loc398])
#loc627 = loc(fused[#loc399, #loc396])
#loc628 = loc(fused[#loc404, #loc402])
#loc629 = loc(fused[#loc405, #loc406])
#loc630 = loc(fused[#loc408, #loc409])
#loc631 = loc(fused[#loc412, #loc413])
#loc632 = loc(fused[#loc411, #loc413])
#loc633 = loc(fused[#loc410, #loc311])
#loc634 = loc(fused[#loc414, #loc415])
#loc635 = loc(fused[#loc416, #loc417])
#loc636 = loc(fused[#loc418, #loc415])
#loc637 = loc(fused[#loc422, #loc423])
#loc638 = loc(fused[#loc425, #loc424])
#loc639 = loc(fused[#loc426, #loc427])
#loc640 = loc(fused[#loc429, #loc423])
#loc641 = loc(fused[#loc431, #loc430])
#loc642 = loc(fused[#loc435, #loc434])
#loc643 = loc(fused[#loc436, #loc437])
#loc644 = loc(fused[#loc438, #loc439])
#loc645 = loc(fused[#loc441, #loc443])
#loc646 = loc(fused[#loc444, #loc445, #loc446, #loc437])
#loc647 = loc(fused[#loc448, #loc447])
#loc648 = loc(fused[#loc451, #loc452])
#loc649 = loc(fused[#loc454, #loc453])
#loc650 = loc(fused[#loc455, #loc456])
#loc651 = loc(fused[#loc458, #loc452])
#loc652 = loc(fused[#loc464, #loc463])
