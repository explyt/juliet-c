!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":116:10)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":116:14)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":116:20)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":116:32)
#loc155 = loc(fused[#loc38, #loc39])
#loc156 = loc(fused[#loc40, #loc41])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc142)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc12)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc145)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc14)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc14)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc16)
    %10 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData : !cir.ptr<!u32i> loc(#loc142)
    cir.store %9, %10 : !u32i, !cir.ptr<!u32i> loc(#loc146)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc9)
  } loc(#loc143)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc35)
  cir.func @main(%arg0: !s32i loc(fused[#loc38, #loc39]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc40, #loc41])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc37)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc42)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc43)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc44)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc44)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc45)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc32)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %8 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_good() : () -> () loc(#loc47)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc33)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc34)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %13 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_bad() : () -> () loc(#loc51)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc35)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.func private @printUnsignedLine(!u32i) loc(#loc160)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
    %2 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_badData : !cir.ptr<!u32i> loc(#loc142)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc63)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc66)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc67)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc165)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc69)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc61)
    %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc167)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc162)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc70)
    cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc71)
    cir.br ^bb3 loc(#loc65)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc59)
  } loc(#loc161)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc168)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc78)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc171)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc80)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc172)
    %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc82)
    %6 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData : !cir.ptr<!u32i> loc(#loc168)
    cir.store %5, %6 : !u32i, !cir.ptr<!u32i> loc(#loc173)
    %7 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc75)
  } loc(#loc169)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc177)
    %2 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodG2BData : !cir.ptr<!u32i> loc(#loc168)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc91)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc94)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc95)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc179)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc97)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc89)
    %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc181)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc176)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc98)
    cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc99)
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc87)
  } loc(#loc175)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc182)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc106)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc185)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc111)
    %10 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData : !cir.ptr<!u32i> loc(#loc182)
    cir.store %9, %10 : !u32i, !cir.ptr<!u32i> loc(#loc186)
    %11 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    cir.return loc(#loc103)
  } loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc190)
    %2 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45_goodB2GData : !cir.ptr<!u32i> loc(#loc182)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc121)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc190)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc124)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc125)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc192)
    cir.brcond %7 ^bb2, ^bb8 loc(#loc193)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc194)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc129)
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc130)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc130)
    %11 = cir.const #cir.int<2> : !u32i loc(#loc130)
    %12 = cir.binop(mul, %10, %11) : !u32i loc(#loc130)
    %13 = cir.const #cir.int<1> : !u32i loc(#loc130)
    %14 = cir.binop(add, %12, %13) : !u32i loc(#loc130)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc131)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc131)
    %17 = cir.binop(div, %14, %16) : !u32i loc(#loc195)
    %18 = cir.cmp(lt, %8, %17) : !u32i, !cir.bool loc(#loc196)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc136)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc119)
    %22 = cir.binop(mul, %19, %21) : !u32i loc(#loc198)
    cir.store %22, %0 : !u32i, !cir.ptr<!u32i> loc(#loc189)
    %23 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc137)
    cir.call @printUnsignedLine(%23) : (!u32i) -> () loc(#loc138)
    cir.br ^bb6 loc(#loc134)
  ^bb5:  // pred: ^bb3
    %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc115)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc123)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc117)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":42:20)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":20:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":20:21)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":37:1)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":39:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":39:18)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":40:12)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":40:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":42:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":42:13)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":43:72)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":43:5)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":44:5)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":44:13)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":102:1)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":106:1)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":104:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":104:13)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":105:5)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":105:13)
#loc26 = loc("/usr/include/stdlib.h":575:1)
#loc27 = loc("/usr/include/stdlib.h":575:41)
#loc28 = loc("/usr/include/time.h":76:1)
#loc29 = loc("/usr/include/time.h":76:38)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":121:15)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":123:15)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":126:15)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":128:15)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":116:1)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":131:1)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":117:1)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":119:27)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":119:22)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":119:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":121:5)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":122:5)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":122:67)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":123:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":126:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":127:5)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":127:66)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":128:5)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":130:12)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":130:5)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":26:1)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":35:1)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":32:9)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":32:38)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":28:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":28:25)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":29:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":34:5)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":29:8)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":29:15)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":30:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":32:31)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":33:27)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":33:9)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":21:1)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":21:21)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":63:1)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":71:1)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":65:5)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":65:18)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":66:12)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":66:5)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":68:12)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":68:5)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":69:76)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":69:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":70:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":70:17)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":52:1)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":61:1)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":58:9)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":58:38)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":54:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":54:25)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":55:5)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":60:5)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":55:8)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":55:15)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":56:5)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":58:31)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":59:27)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":59:9)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":22:1)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":22:21)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":92:1)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":100:1)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":94:5)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":94:18)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":95:12)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":95:5)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":97:5)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":97:13)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":97:20)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":98:76)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":98:5)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":99:5)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":99:17)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":87:23)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":74:1)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":90:1)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":82:13)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":82:42)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":76:5)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":76:25)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":77:5)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":89:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":77:8)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":77:15)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":78:5)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":80:9)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":88:9)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":80:13)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":80:21)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":80:30)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":80:31)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":81:9)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":84:9)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":86:9)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":82:35)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":83:31)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":83:13)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_45.c":87:13)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc6, #loc7])
#loc143 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc13, #loc12])
#loc146 = loc(fused[#loc17, #loc16])
#loc147 = loc(fused[#loc18, #loc19])
#loc148 = loc(fused[#loc20, #loc21])
#loc149 = loc(fused[#loc22, #loc23])
#loc150 = loc(fused[#loc24, #loc25])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc28, #loc29])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc36, #loc37])
#loc157 = loc(fused[#loc47, #loc48])
#loc158 = loc(fused[#loc51, #loc52])
#loc159 = loc(fused[#loc55, #loc54])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc64, #loc65])
#loc165 = loc(fused[#loc66, #loc67])
#loc166 = loc(fused[#loc68, #loc65])
#loc167 = loc(fused[#loc69, #loc61])
#loc168 = loc(fused[#loc72, #loc73])
#loc169 = loc(fused[#loc74, #loc75])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc79, #loc78])
#loc172 = loc(fused[#loc81, #loc80])
#loc173 = loc(fused[#loc83, #loc82])
#loc174 = loc(fused[#loc84, #loc85])
#loc175 = loc(fused[#loc86, #loc87])
#loc176 = loc(fused[#loc88, #loc89])
#loc177 = loc(fused[#loc90, #loc91])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc96, #loc93])
#loc181 = loc(fused[#loc97, #loc89])
#loc182 = loc(fused[#loc100, #loc101])
#loc183 = loc(fused[#loc102, #loc103])
#loc184 = loc(fused[#loc104, #loc105])
#loc185 = loc(fused[#loc107, #loc106])
#loc186 = loc(fused[#loc112, #loc111])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc116, #loc117])
#loc189 = loc(fused[#loc118, #loc119])
#loc190 = loc(fused[#loc120, #loc121])
#loc191 = loc(fused[#loc122, #loc123])
#loc192 = loc(fused[#loc124, #loc125])
#loc193 = loc(fused[#loc126, #loc123])
#loc194 = loc(fused[#loc127, #loc128])
#loc195 = loc(fused[#loc130, #loc131])
#loc196 = loc(fused[#loc129, #loc132])
#loc197 = loc(fused[#loc133, #loc134, #loc135, #loc128])
#loc198 = loc(fused[#loc136, #loc119])
