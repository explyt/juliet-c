!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc142)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc143)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
            %4 = cir.const #cir.int<4> : !u64i loc(#loc144)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc145)
            cir.store %6, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
            cir.scope {
              %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc147)
              cir.if %16 {
                %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
                %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc34)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
              } loc(#loc148)
            } loc(#loc146)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc35)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
            %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc36)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
            cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
            %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc39)
          } loc(#loc141)
          cir.break loc(#loc40)
        } loc(#loc17)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          cir.break loc(#loc43)
        } loc(#loc41)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc140)
    cir.return loc(#loc13)
  } loc(#loc139)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc149)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc54)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          cir.break loc(#loc58)
        } loc(#loc55)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
            %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc156)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
            %4 = cir.const #cir.int<4> : !u64i loc(#loc157)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
            cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
            cir.scope {
              %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc72)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc160)
              cir.if %16 {
                %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc74)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc75)
                %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc76)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
              } loc(#loc161)
            } loc(#loc159)
            %7 = cir.const #cir.int<5> : !s32i loc(#loc77)
            cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc162)
            %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %9 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
            cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            cir.scope {
              %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
              %14 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              cir.store %15, %13 : !s32i, !cir.ptr<!s32i> loc(#loc165)
              %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc88)
            } loc(#loc164)
            %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
            cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
          } loc(#loc154)
          cir.break loc(#loc91)
        } loc(#loc59)
        cir.yield loc(#loc52)
      } loc(#loc52)
    } loc(#loc153)
    cir.return loc(#loc51)
  } loc(#loc152)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc96)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
            %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc170)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc104)
            %4 = cir.const #cir.int<4> : !u64i loc(#loc171)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc172)
            cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
            cir.scope {
              %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc110)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc174)
              cir.if %16 {
                %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc112)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc114)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
              } loc(#loc175)
            } loc(#loc173)
            %7 = cir.const #cir.int<5> : !s32i loc(#loc115)
            cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc176)
            %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %9 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
            cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc177)
            cir.scope {
              %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc179)
              %14 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              cir.store %15, %13 : !s32i, !cir.ptr<!s32i> loc(#loc179)
              %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc126)
            } loc(#loc178)
            %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc127)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc128)
            cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
          } loc(#loc168)
          cir.break loc(#loc129)
        } loc(#loc97)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          cir.break loc(#loc133)
        } loc(#loc130)
        cir.yield loc(#loc94)
      } loc(#loc94)
    } loc(#loc167)
    cir.return loc(#loc93)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":35:19)
#loc12 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":20:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":38:1)
#loc14 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":22:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":37:5)
#loc16 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":22:12)
#loc17 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":24:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":25:5)
#loc19 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":31:5)
#loc20 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":26:9)
#loc21 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":26:50)
#loc22 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":28:9)
#loc23 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":28:21)
#loc24 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":26:32)
#loc25 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":26:39)
#loc26 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":26:49)
#loc27 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:9)
#loc28 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:40)
#loc29 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:13)
#loc30 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:24)
#loc31 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:30)
#loc32 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:31)
#loc33 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:37)
#loc34 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":27:36)
#loc35 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":28:20)
#loc36 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":29:9)
#loc37 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":29:14)
#loc38 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":30:22)
#loc39 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":30:9)
#loc40 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":32:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":33:5)
#loc42 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":35:9)
#loc43 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":36:9)
#loc44 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":96:1)
#loc45 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":100:1)
#loc46 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":98:5)
#loc47 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":98:11)
#loc48 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":99:5)
#loc49 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":99:11)
#loc50 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":45:1)
#loc51 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":68:1)
#loc52 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":47:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":67:5)
#loc54 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":47:12)
#loc55 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":49:5)
#loc56 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":51:19)
#loc57 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":51:9)
#loc58 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":52:9)
#loc59 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":53:5)
#loc60 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":54:5)
#loc61 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":65:5)
#loc62 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":55:9)
#loc63 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":55:13)
#loc64 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":56:9)
#loc65 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":56:50)
#loc66 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":56:32)
#loc67 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":56:39)
#loc68 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":56:49)
#loc69 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:9)
#loc70 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:40)
#loc71 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:13)
#loc72 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:24)
#loc73 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:30)
#loc74 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:31)
#loc75 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:37)
#loc76 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":57:36)
#loc77 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":58:16)
#loc78 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":58:9)
#loc79 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":59:20)
#loc80 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":59:10)
#loc81 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":59:9)
#loc82 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":60:9)
#loc83 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":63:9)
#loc84 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":61:13)
#loc85 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":61:25)
#loc86 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":61:24)
#loc87 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":62:26)
#loc88 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":62:13)
#loc89 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":64:9)
#loc90 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":64:14)
#loc91 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":66:5)
#loc92 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":71:1)
#loc93 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":94:1)
#loc94 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":73:5)
#loc95 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":93:5)
#loc96 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":73:12)
#loc97 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":75:5)
#loc98 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":76:5)
#loc99 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":87:5)
#loc100 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":77:9)
#loc101 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":77:13)
#loc102 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":78:9)
#loc103 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":78:50)
#loc104 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":78:32)
#loc105 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":78:39)
#loc106 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":78:49)
#loc107 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:9)
#loc108 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:40)
#loc109 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:13)
#loc110 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:24)
#loc111 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:30)
#loc112 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:31)
#loc113 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:37)
#loc114 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":79:36)
#loc115 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":80:16)
#loc116 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":80:9)
#loc117 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":81:20)
#loc118 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":81:10)
#loc119 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":81:9)
#loc120 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":82:9)
#loc121 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":85:9)
#loc122 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":83:13)
#loc123 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":83:25)
#loc124 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":83:24)
#loc125 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":84:26)
#loc126 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":84:13)
#loc127 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":86:9)
#loc128 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":86:14)
#loc129 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":88:5)
#loc130 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":89:5)
#loc131 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":91:19)
#loc132 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":91:9)
#loc133 = loc("CWE758_Undefined_Behavior__int_malloc_use_15.c":92:9)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc12, #loc13])
#loc140 = loc(fused[#loc14, #loc15])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc24, #loc21])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc28])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc48, #loc49])
#loc152 = loc(fused[#loc50, #loc51])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc60, #loc61])
#loc155 = loc(fused[#loc62, #loc63])
#loc156 = loc(fused[#loc64, #loc65])
#loc157 = loc(fused[#loc67, #loc68])
#loc158 = loc(fused[#loc66, #loc65])
#loc159 = loc(fused[#loc69, #loc70])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc73, #loc70])
#loc162 = loc(fused[#loc78, #loc77])
#loc163 = loc(fused[#loc81, #loc79])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc92, #loc93])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc102, #loc103])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc104, #loc103])
#loc173 = loc(fused[#loc107, #loc108])
#loc174 = loc(fused[#loc109, #loc110])
#loc175 = loc(fused[#loc111, #loc108])
#loc176 = loc(fused[#loc116, #loc115])
#loc177 = loc(fused[#loc119, #loc117])
#loc178 = loc(fused[#loc120, #loc121])
#loc179 = loc(fused[#loc122, #loc123])
