!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc119)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc122)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc126)
        cir.condition(%6) loc(#loc16)
      } body {
        cir.scope {
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
          cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
        } loc(#loc127)
        cir.yield loc(#loc11)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc21)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
        cir.yield loc(#loc124)
      } loc(#loc124)
    } loc(#loc124)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc24)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc131)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc132)
        cir.condition(%6) loc(#loc28)
      } body {
        cir.scope {
          %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc31)
          %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc32)
          %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc30)
          cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc33)
        } loc(#loc133)
        cir.yield loc(#loc23)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc35)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc134)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc4)
  } loc(#loc120)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc54)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc145)
        cir.condition(%6) loc(#loc58)
      } body {
        cir.scope {
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
          cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
        } loc(#loc146)
        cir.yield loc(#loc53)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc63)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        cir.yield loc(#loc143)
      } loc(#loc143)
    } loc(#loc143)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc66)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc151)
        cir.condition(%6) loc(#loc70)
      } body {
        cir.scope {
          cir.scope {
            %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
            %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
            cir.if %7 {
              %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
              %9 = cir.const #cir.int<0> : !s32i loc(#loc80)
              %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc81)
              %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc79)
              cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc82)
            } else {
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc44)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc44)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc83)
            } loc(#loc155)
          } loc(#loc153)
        } loc(#loc152)
        cir.yield loc(#loc65)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc85)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
        cir.yield loc(#loc149)
      } loc(#loc149)
    } loc(#loc149)
    cir.return loc(#loc46)
  } loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc159)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc96)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc163)
        cir.condition(%6) loc(#loc100)
      } body {
        cir.scope {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc86)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc86)
          cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
        } loc(#loc164)
        cir.yield loc(#loc95)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc104)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
        cir.yield loc(#loc161)
      } loc(#loc161)
    } loc(#loc161)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      cir.for : cond {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc169)
        cir.condition(%6) loc(#loc111)
      } body {
        cir.scope {
          %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc114)
          %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc115)
          %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc113)
          cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc116)
        } loc(#loc170)
        cir.yield loc(#loc106)
      } step {
        %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc118)
        cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc171)
        cir.yield loc(#loc167)
      } loc(#loc167)
    } loc(#loc167)
    cir.return loc(#loc88)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":24:1)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":39:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":26:5)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":26:9)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":26:11)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":27:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":27:12)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":32:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:13)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:16)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:20)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:18)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":29:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":31:16)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":31:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:24)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":28:23)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:5)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":38:5)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:13)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:9)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:16)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:20)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:18)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":34:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":37:26)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":37:31)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":37:32)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":37:9)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:24)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":33:23)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":88:1)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":92:1)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":90:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":90:13)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":91:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":91:13)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":65:23)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":46:1)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":68:1)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":48:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":48:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":48:11)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":49:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":49:12)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":54:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:13)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:9)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:16)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:20)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:18)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":51:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":53:16)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":53:9)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:24)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":50:23)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:5)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":67:5)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:13)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:16)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:20)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:18)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":56:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":58:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":66:9)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":58:13)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":58:21)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":59:9)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":62:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":64:9)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":61:30)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":61:35)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":61:36)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":61:13)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":65:13)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:24)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":55:23)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":78:16)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":71:1)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":86:1)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":73:5)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":73:9)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":73:11)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":74:5)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":74:12)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:5)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":79:5)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:13)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:9)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:16)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:20)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:18)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":76:5)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":78:9)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:24)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":75:23)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:5)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":85:5)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:13)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:9)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:16)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:20)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:18)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":81:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":84:26)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":84:31)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":84:32)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":84:9)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:24)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__char_17.c":80:23)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc5, #loc7])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc13, #loc12])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc17, #loc11])
#loc128 = loc(fused[#loc19, #loc18])
#loc129 = loc(fused[#loc21, #loc20])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc25, #loc24])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc29, #loc23])
#loc134 = loc(fused[#loc35, #loc34])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc39])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc42, #loc43])
#loc139 = loc(fused[#loc45, #loc46])
#loc140 = loc(fused[#loc47, #loc48])
#loc141 = loc(fused[#loc47, #loc49])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
#loc144 = loc(fused[#loc55, #loc54])
#loc145 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc59, #loc53])
#loc147 = loc(fused[#loc61, #loc60])
#loc148 = loc(fused[#loc63, #loc62])
#loc149 = loc(fused[#loc64, #loc65])
#loc150 = loc(fused[#loc67, #loc66])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc71, #loc65])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc156 = loc(fused[#loc85, #loc84])
#loc157 = loc(fused[#loc87, #loc88])
#loc158 = loc(fused[#loc89, #loc90])
#loc159 = loc(fused[#loc89, #loc91])
#loc160 = loc(fused[#loc92, #loc93])
#loc161 = loc(fused[#loc94, #loc95])
#loc162 = loc(fused[#loc97, #loc96])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc101, #loc95])
#loc165 = loc(fused[#loc102, #loc86])
#loc166 = loc(fused[#loc104, #loc103])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc108, #loc107])
#loc169 = loc(fused[#loc109, #loc110])
#loc170 = loc(fused[#loc112, #loc106])
#loc171 = loc(fused[#loc118, #loc117])
