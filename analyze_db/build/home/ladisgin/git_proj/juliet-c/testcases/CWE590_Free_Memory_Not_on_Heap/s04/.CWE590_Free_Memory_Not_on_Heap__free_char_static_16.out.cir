!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":88:10)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":88:14)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":88:20)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":88:32)
#loc129 = loc(fused[#loc48, #loc49])
#loc130 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc115)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.scope {
      cir.while {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc14)
        cir.condition(%7) loc(#loc14)
      } do {
        cir.scope {
          %6 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
          %9 = cir.const #cir.int<65> : !s32i loc(#loc18)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc19)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc20)
          %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc19)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
          cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc121)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc23)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc24)
          %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
          %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc26)
          cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc122)
          %21 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
          cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
        } loc(#loc120)
        cir.break loc(#loc29)
      } loc(#loc119)
    } loc(#loc119)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.return loc(#loc7)
  } loc(#loc116)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc55)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_16_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.scope {
      cir.while {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc79)
        cir.condition(%7) loc(#loc79)
      } do {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc141)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc84)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc85)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc85)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc142)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc143)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
          cir.scope {
            %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
            cir.if %32 {
              %33 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
              cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc93)
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc95)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
            } loc(#loc147)
          } loc(#loc145)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc97)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc98)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc99)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc98)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc98)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc102)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc104)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc105)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc104)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc106)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc149)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
        } loc(#loc140)
        cir.break loc(#loc109)
      } loc(#loc139)
    } loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc72)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":31:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":41:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":25:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":26:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":26:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":37:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":27:11)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":29:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":35:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:20)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:32)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:37)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:41)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":32:42)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:33)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:24)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":33:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":34:20)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":34:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":36:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":38:15)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":38:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":40:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":40:10)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":73:1)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":76:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":75:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":75:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":93:15)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":95:15)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":98:15)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":100:15)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":88:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":103:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":89:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":91:27)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":91:22)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":91:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":93:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":94:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":94:62)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":95:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":98:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":99:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":99:61)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":100:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":102:12)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":102:5)
#loc66 = loc("/usr/include/stdlib.h":672:1)
#loc67 = loc("/usr/include/stdlib.h":672:45)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":59:27)
#loc69 = loc("/usr/include/stdlib.h":756:1)
#loc70 = loc("/usr/include/stdlib.h":756:70)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":48:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":71:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":50:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":50:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":51:12)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":51:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":52:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":67:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":52:11)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":54:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":65:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:64)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:41)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:48)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:52)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":56:63)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":61:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":57:31)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":58:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":59:17)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":60:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":60:22)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:20)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:32)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:37)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:41)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":62:42)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:33)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:24)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:28)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":63:29)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":64:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":64:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":66:9)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":68:15)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":68:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":70:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_16.c":70:10)
#loc114 = loc(fused[#loc2, #loc3])
#loc115 = loc(fused[#loc4, #loc5])
#loc116 = loc(fused[#loc6, #loc7])
#loc117 = loc(fused[#loc8, #loc9])
#loc118 = loc(fused[#loc11, #loc10])
#loc119 = loc(fused[#loc12, #loc13])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc26, #loc23])
#loc123 = loc(fused[#loc28, #loc27])
#loc124 = loc(fused[#loc34, #loc35])
#loc125 = loc(fused[#loc36, #loc37])
#loc126 = loc(fused[#loc38, #loc39])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc61, #loc62])
#loc133 = loc(fused[#loc65, #loc64])
#loc134 = loc(fused[#loc66, #loc67])
#loc135 = loc(fused[#loc69, #loc70])
#loc136 = loc(fused[#loc71, #loc72])
#loc137 = loc(fused[#loc73, #loc74])
#loc138 = loc(fused[#loc76, #loc75])
#loc139 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc80, #loc81])
#loc141 = loc(fused[#loc82, #loc83])
#loc142 = loc(fused[#loc86, #loc87])
#loc143 = loc(fused[#loc85, #loc87])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc88, #loc89])
#loc146 = loc(fused[#loc90, #loc91])
#loc147 = loc(fused[#loc92, #loc89])
#loc148 = loc(fused[#loc100, #loc101])
#loc149 = loc(fused[#loc103, #loc102])
#loc150 = loc(fused[#loc108, #loc107])
