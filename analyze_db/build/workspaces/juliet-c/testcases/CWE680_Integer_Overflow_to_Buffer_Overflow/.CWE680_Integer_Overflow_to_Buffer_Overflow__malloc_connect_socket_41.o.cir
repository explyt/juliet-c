!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":43:83)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":43:87)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":129:87)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":129:91)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc232 = loc(fused[#loc11, #loc12])
#loc293 = loc(fused[#loc169, #loc170])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc227)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc228)
  cir.func private @printIntLine(!s32i) loc(#loc229)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc230)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc232)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc235)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc236)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc237)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc238)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc239)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc241)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc33)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc242)
      } loc(#loc240)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc245)
          cir.condition(%22) loc(#loc40)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          } loc(#loc246)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc47)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc248)
          cir.yield loc(#loc243)
        } loc(#loc243)
      } loc(#loc243)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc233)
    cir.return loc(#loc10)
  } loc(#loc231)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc249)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc58)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc251)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc252)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc253)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private @close(!s32i) -> !s32i loc(#loc255)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc74)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc260)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc261)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc262)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc263)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc83)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc90)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc92)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc266)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc99)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc99)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc268)
              cir.if %55 {
                cir.break loc(#loc101)
              } loc(#loc269)
            } loc(#loc267)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc270)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc271)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc272)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc109)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc109)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc110)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc273)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc58)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc58)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc112)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc113)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc114)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc274)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc117)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc117)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc118)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc119)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc275)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc277)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc278)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc278)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc129)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc130)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc279)
              cir.if %59 {
                cir.break loc(#loc132)
              } loc(#loc280)
            } loc(#loc276)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc135)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc135)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc135)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc135)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc135)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc135)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc135)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc136)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc281)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc138)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc282)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc144)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc284)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc145)
                cir.yield %57 : !cir.bool loc(#loc145)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc147)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc285)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc145)
                  cir.yield %61 : !cir.bool loc(#loc145)
                }, false {
                  %61 = cir.const #false loc(#loc145)
                  cir.yield %61 : !cir.bool loc(#loc145)
                }) : (!cir.bool) -> !cir.bool loc(#loc145)
                cir.yield %60 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.if %56 {
                cir.break loc(#loc149)
              } loc(#loc286)
            } loc(#loc283)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc150)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc152)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc152)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc287)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc154)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
          } loc(#loc265)
          cir.yield loc(#loc87)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc157)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc157)
          cir.condition(%11) loc(#loc157)
        } loc(#loc264)
      } loc(#loc264)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc161)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc290)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc163)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc164)
        } loc(#loc291)
      } loc(#loc289)
    } loc(#loc259)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_badSink(%3) : (!s32i) -> () loc(#loc166)
    cir.return loc(#loc70)
  } loc(#loc256)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_goodG2BSink(%arg0: !s32i loc(fused[#loc169, #loc170])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc293)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc295)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc296)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc178)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc179)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc297)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc298)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc299)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc300)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc302)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc189)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc191)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc189)
        } loc(#loc303)
      } loc(#loc301)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc194)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc194)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc305)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc196)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc197)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc306)
          cir.condition(%22) loc(#loc198)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc200)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc202)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc203)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          } loc(#loc307)
          cir.yield loc(#loc193)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc204)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc205)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc309)
          cir.yield loc(#loc304)
        } loc(#loc304)
      } loc(#loc304)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc207)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc208)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc206)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc209)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc210)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc211)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
    } loc(#loc294)
    cir.return loc(#loc168)
  } loc(#loc292)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc311)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc214)
    cir.return loc(#loc213)
  } loc(#loc310)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc221)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc223)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41_goodG2BSink(%4) : (!s32i) -> () loc(#loc226)
    cir.return loc(#loc217)
  } loc(#loc312)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":59:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":44:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":45:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":58:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":46:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":46:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":47:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":47:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":50:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":51:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":55:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":53:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":54:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":54:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":54:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":54:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":52:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":56:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":56:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":56:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":56:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":57:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":57:14)
#loc54 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc55 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc56 = loc("/usr/include/arpa/inet.h":34:1)
#loc57 = loc("/usr/include/arpa/inet.h":34:47)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":92:49)
#loc59 = loc("/usr/include/netinet/in.h":402:1)
#loc60 = loc("/usr/include/netinet/in.h":403:40)
#loc61 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc62 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc63 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc64 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc65 = loc("/usr/include/stdlib.h":105:1)
#loc66 = loc("/usr/include/stdlib.h":106:33)
#loc67 = loc("/usr/include/unistd.h":358:1)
#loc68 = loc("/usr/include/unistd.h":358:27)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":61:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":123:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":63:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":63:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":65:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":65:12)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":65:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":66:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":121:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":71:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":71:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":72:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":72:28)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":73:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":73:32)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":74:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":74:41)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":75:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":110:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":76:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":109:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:36)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:45)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:58)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:29)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":85:69)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":86:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":89:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":86:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":86:34)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":87:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":88:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:20)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:30)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:47)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":90:48)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":91:34)
#loc110 = loc("/usr/include/netinet/in.h":249:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":91:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":92:39)
#loc113 = loc("/usr/include/netinet/in.h":251:20)
#loc114 = loc("/usr/include/netinet/in.h":33:15)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":92:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":92:59)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":93:38)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":93:32)
#loc119 = loc("/usr/include/netinet/in.h":250:15)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":93:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":93:46)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":97:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:58)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:59)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:68)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:82)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:17)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":94:88)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":95:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":96:17)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:31)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:46)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:59)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:77)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:80)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:26)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":100:81)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":104:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:17)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:31)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:44)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:47)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":101:61)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":102:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":103:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":106:39)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":106:25)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":106:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":108:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":108:20)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":108:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":108:36)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":110:16)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":111:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":114:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":111:13)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":111:30)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":112:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":113:26)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":113:13)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":122:82)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":122:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":129:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":145:1)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":130:1)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":131:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":144:5)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":132:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":132:16)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":133:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":133:14)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:28)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:35)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:42)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:52)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:53)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":136:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:43)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:13)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:27)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:33)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:34)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:40)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":137:39)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":141:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:18)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:14)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:21)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:33)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:23)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":139:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":140:29)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":140:13)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":140:24)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":140:25)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:40)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":138:39)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":142:22)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":142:33)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":142:34)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":142:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":143:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":143:14)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":158:1)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":161:1)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":160:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":160:13)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":148:1)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":156:1)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":150:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":150:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":152:13)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":152:12)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":152:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":154:12)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":154:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":155:86)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_41.c":155:5)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc233 = loc(fused[#loc14, #loc15])
#loc234 = loc(fused[#loc16, #loc17])
#loc235 = loc(fused[#loc18, #loc19])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc21, #loc23])
#loc238 = loc(fused[#loc20, #loc24])
#loc239 = loc(fused[#loc25, #loc24])
#loc240 = loc(fused[#loc26, #loc27])
#loc241 = loc(fused[#loc28, #loc29])
#loc242 = loc(fused[#loc30, #loc27])
#loc243 = loc(fused[#loc34, #loc35])
#loc244 = loc(fused[#loc37, #loc36])
#loc245 = loc(fused[#loc38, #loc39])
#loc246 = loc(fused[#loc41, #loc35])
#loc247 = loc(fused[#loc43, #loc42])
#loc248 = loc(fused[#loc47, #loc46])
#loc249 = loc(fused[#loc54, #loc55])
#loc250 = loc(fused[#loc56, #loc57])
#loc251 = loc(fused[#loc59, #loc60])
#loc252 = loc(fused[#loc61, #loc62])
#loc253 = loc(fused[#loc63, #loc64])
#loc254 = loc(fused[#loc65, #loc66])
#loc255 = loc(fused[#loc67, #loc68])
#loc256 = loc(fused[#loc69, #loc70])
#loc257 = loc(fused[#loc71, #loc72])
#loc258 = loc(fused[#loc75, #loc73])
#loc259 = loc(fused[#loc76, #loc77])
#loc260 = loc(fused[#loc78, #loc79])
#loc261 = loc(fused[#loc80, #loc81])
#loc262 = loc(fused[#loc82, #loc83])
#loc263 = loc(fused[#loc84, #loc85])
#loc264 = loc(fused[#loc86, #loc87])
#loc265 = loc(fused[#loc88, #loc89])
#loc266 = loc(fused[#loc94, #loc95])
#loc267 = loc(fused[#loc96, #loc97])
#loc268 = loc(fused[#loc98, #loc99])
#loc269 = loc(fused[#loc100, #loc97])
#loc270 = loc(fused[#loc102, #loc103])
#loc271 = loc(fused[#loc105, #loc106])
#loc272 = loc(fused[#loc107, #loc108])
#loc273 = loc(fused[#loc111, #loc109])
#loc274 = loc(fused[#loc115, #loc116])
#loc275 = loc(fused[#loc120, #loc121])
#loc276 = loc(fused[#loc122, #loc123])
#loc277 = loc(fused[#loc125, #loc126])
#loc278 = loc(fused[#loc127, #loc128])
#loc279 = loc(fused[#loc129, #loc130])
#loc280 = loc(fused[#loc131, #loc123])
#loc281 = loc(fused[#loc135, #loc136])
#loc282 = loc(fused[#loc139, #loc140])
#loc283 = loc(fused[#loc141, #loc142])
#loc284 = loc(fused[#loc143, #loc144])
#loc285 = loc(fused[#loc146, #loc147])
#loc286 = loc(fused[#loc148, #loc142])
#loc287 = loc(fused[#loc152, #loc150])
#loc288 = loc(fused[#loc155, #loc156])
#loc289 = loc(fused[#loc158, #loc159])
#loc290 = loc(fused[#loc160, #loc161])
#loc291 = loc(fused[#loc162, #loc159])
#loc292 = loc(fused[#loc167, #loc168])
#loc294 = loc(fused[#loc172, #loc173])
#loc295 = loc(fused[#loc174, #loc175])
#loc296 = loc(fused[#loc176, #loc177])
#loc297 = loc(fused[#loc180, #loc181])
#loc298 = loc(fused[#loc179, #loc181])
#loc299 = loc(fused[#loc178, #loc182])
#loc300 = loc(fused[#loc183, #loc182])
#loc301 = loc(fused[#loc184, #loc185])
#loc302 = loc(fused[#loc186, #loc187])
#loc303 = loc(fused[#loc188, #loc185])
#loc304 = loc(fused[#loc192, #loc193])
#loc305 = loc(fused[#loc195, #loc194])
#loc306 = loc(fused[#loc196, #loc197])
#loc307 = loc(fused[#loc199, #loc193])
#loc308 = loc(fused[#loc201, #loc200])
#loc309 = loc(fused[#loc205, #loc204])
#loc310 = loc(fused[#loc212, #loc213])
#loc311 = loc(fused[#loc214, #loc215])
#loc312 = loc(fused[#loc216, #loc217])
#loc313 = loc(fused[#loc218, #loc219])
#loc314 = loc(fused[#loc222, #loc220])
#loc315 = loc(fused[#loc224, #loc223])
