!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":125:10)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":125:14)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":125:20)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":125:32)
#loc186 = loc(fused[#loc124, #loc125])
#loc187 = loc(fused[#loc126, #loc127])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc144)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc147)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc19)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc150)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc150)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc150)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc28)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc28)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc28)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc28)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc28)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc28)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc28)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc28)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc153)
      } loc(#loc151)
    } loc(#loc149)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc156)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc156)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc157)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc46)
    } loc(#loc155)
    cir.return loc(#loc13)
  } loc(#loc145)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc160)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc54)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc56)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc61)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc165)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc64)
    } loc(#loc163)
    cir.return loc(#loc48)
  } loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc65)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc73)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc171)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc171)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc171)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc82)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc82)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc82)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc82)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc82)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc82)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc82)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc82)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc90)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc94)
        } loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc177)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc179)
        cir.if %9 {
          %10 = cir.const #cir.int<100> : !s32i loc(#loc106)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc181)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc108)
        } else {
          %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc65)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        } loc(#loc180)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc67)
  } loc(#loc166)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_33L7goodG2BEv() : () -> () loc(#loc112)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_33L7goodB2GEv() : () -> () loc(#loc113)
    cir.return loc(#loc111)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc183)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc131)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_334goodEv() : () -> () loc(#loc133)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_modulo_333badEv() : () -> () loc(#loc136)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %15 : !s32i loc(#loc188)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":27:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":51:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":29:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":29:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":30:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":30:20)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":32:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":32:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":32:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":33:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":45:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":34:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":34:45)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":44:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:19)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:32)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:49)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":36:59)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":37:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":40:9)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":42:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":39:25)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":39:20)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":39:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":39:36)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":43:13)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":46:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":50:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":47:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":47:20)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":49:22)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":49:28)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":49:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":58:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":71:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":60:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":60:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":61:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":61:20)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":63:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":63:12)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":63:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":65:12)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":65:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":66:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":70:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":67:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":67:20)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":69:22)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":69:28)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":69:9)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":102:23)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":74:1)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":105:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":76:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":76:9)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":77:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":77:20)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":79:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":79:12)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":79:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":80:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":92:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":81:9)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":81:45)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:9)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":91:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:19)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:32)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:49)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":83:59)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":84:9)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":87:9)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":89:9)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":86:25)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":86:20)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":86:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":86:36)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":90:23)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":90:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":93:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":104:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":94:9)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":94:20)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":96:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":103:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":96:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":96:21)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":97:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":99:9)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":101:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":98:26)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":98:32)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":98:13)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":102:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":107:1)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":111:1)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":109:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":110:5)
#loc114 = loc("/usr/include/stdlib.h":575:1)
#loc115 = loc("/usr/include/stdlib.h":575:41)
#loc116 = loc("/usr/include/time.h":76:1)
#loc117 = loc("/usr/include/time.h":76:38)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":130:15)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":132:15)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":135:15)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":137:15)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":125:1)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":140:1)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":126:1)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":128:27)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":128:22)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":128:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":130:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":131:5)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":132:5)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":135:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":136:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":137:5)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":139:12)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_33.cpp":139:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc12, #loc13])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc20, #loc18])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc30, #loc31])
#loc153 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc154 = loc(fused[#loc37, #loc38])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc55, #loc53])
#loc162 = loc(fused[#loc57, #loc56])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc60, #loc61])
#loc165 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc66, #loc67])
#loc167 = loc(fused[#loc68, #loc69])
#loc168 = loc(fused[#loc70, #loc71])
#loc169 = loc(fused[#loc74, #loc72])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc79, #loc80])
#loc173 = loc(fused[#loc84, #loc85])
#loc174 = loc(fused[#loc86, #loc87, #loc88, #loc80])
#loc175 = loc(fused[#loc91, #loc92])
#loc176 = loc(fused[#loc95, #loc96])
#loc177 = loc(fused[#loc97, #loc98])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc122, #loc123])
#loc188 = loc(fused[#loc139, #loc138])
