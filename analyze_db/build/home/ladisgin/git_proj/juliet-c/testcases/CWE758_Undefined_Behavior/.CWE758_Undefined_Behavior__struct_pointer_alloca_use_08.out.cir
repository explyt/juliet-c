!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":116:10)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":116:14)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":116:20)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":116:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc180 = loc(fused[#loc43, #loc44])
#loc181 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc168)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc7)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc7)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc171)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc13)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
          %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
          %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc13)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc171)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
          cir.store %10, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
          %11 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc19)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc20)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc24)
        } loc(#loc170)
      } loc(#loc169)
    } loc(#loc167)
    cir.return loc(#loc4)
  } loc(#loc166)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %2 : !s32i loc(#loc186)
  } loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc188)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc191)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc74)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc194)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc195)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc85)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc85)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc195)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc196)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
          cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc200)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc98)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc96)
            } loc(#loc201)
          } loc(#loc199)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc99)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc202)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc101)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc203)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
          %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
          cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc204)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc206)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
            cir.store %23, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc113)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc116)
          } loc(#loc205)
        } loc(#loc193)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc71)
  } loc(#loc189)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %2 : !s32i loc(#loc208)
  } loc(#loc207)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc211)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc125)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc125)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc214)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc215)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc133)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc133)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc133)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc215)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc134)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc216)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc134)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc217)
          cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc218)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc220)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc146)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc144)
            } loc(#loc221)
          } loc(#loc219)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc147)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc222)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc149)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc223)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
          %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
          cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc224)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc226)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
            cir.store %23, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc226)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc160)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc161)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc164)
          } loc(#loc225)
        } loc(#loc213)
      } loc(#loc212)
    } loc(#loc210)
    cir.return loc(#loc122)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":33:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":44:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:5)
#loc6 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":43:5)
#loc7 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:8)
#loc8 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:26)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":36:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":37:9)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":42:9)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":38:13)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":38:60)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:13)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:37)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:36)
#loc17 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:26)
#loc18 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:32)
#loc20 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:13)
#loc21 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:26)
#loc22 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:32)
#loc24 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:13)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":101:1)
#loc26 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":105:1)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":103:5)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":103:11)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":104:5)
#loc30 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":104:11)
#loc31 = loc("/usr/include/stdlib.h":575:1)
#loc32 = loc("/usr/include/stdlib.h":575:41)
#loc33 = loc("/usr/include/time.h":76:1)
#loc34 = loc("/usr/include/time.h":76:38)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":121:15)
#loc38 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":123:15)
#loc39 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":126:15)
#loc40 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":128:15)
#loc41 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":116:1)
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":131:1)
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":117:1)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":119:27)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":119:22)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":119:5)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":121:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":122:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":122:66)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":123:5)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":126:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":127:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":127:65)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":128:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":130:12)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":130:5)
#loc61 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":21:1)
#loc62 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":24:1)
#loc63 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":23:12)
#loc64 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":23:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":56:19)
#loc66 = loc("/usr/include/stdlib.h":672:1)
#loc67 = loc("/usr/include/stdlib.h":672:45)
#loc68 = loc("/usr/include/stdlib.h":756:1)
#loc69 = loc("/usr/include/stdlib.h":756:70)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":51:1)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":76:1)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":75:5)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:8)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:27)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":54:5)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":57:5)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":59:5)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":56:9)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":60:9)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":74:9)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":61:13)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":61:29)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":62:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":62:60)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:37)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:44)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:64)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:65)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:13)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:41)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:17)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:25)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:31)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:32)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:38)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:37)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":66:28)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":66:13)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":67:28)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":67:13)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:24)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:14)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:13)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":69:13)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":73:13)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:17)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:41)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:40)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:30)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:36)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:17)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:30)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:36)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:17)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":26:1)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":29:1)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":28:12)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":28:5)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":79:1)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":99:1)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:5)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":98:5)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:8)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:26)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":82:5)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":83:9)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":97:9)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":84:13)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":84:29)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":85:13)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":85:60)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:37)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:44)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:64)
#loc137 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:65)
#loc138 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:13)
#loc139 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:13)
#loc140 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:41)
#loc141 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:17)
#loc142 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:25)
#loc143 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:31)
#loc144 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:32)
#loc145 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:38)
#loc146 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:37)
#loc147 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":89:28)
#loc148 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":89:13)
#loc149 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":90:28)
#loc150 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":90:13)
#loc151 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:24)
#loc152 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:14)
#loc153 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:13)
#loc154 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":92:13)
#loc155 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":96:13)
#loc156 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:17)
#loc157 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:41)
#loc158 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:40)
#loc159 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:30)
#loc160 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:36)
#loc161 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:17)
#loc162 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:30)
#loc163 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:36)
#loc164 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:17)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc7, #loc8])
#loc169 = loc(fused[#loc9, #loc6])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc12, #loc13])
#loc172 = loc(fused[#loc14, #loc15])
#loc173 = loc(fused[#loc25, #loc26])
#loc174 = loc(fused[#loc27, #loc28])
#loc175 = loc(fused[#loc29, #loc30])
#loc176 = loc(fused[#loc31, #loc32])
#loc177 = loc(fused[#loc33, #loc34])
#loc178 = loc(fused[#loc35, #loc36])
#loc179 = loc(fused[#loc41, #loc42])
#loc182 = loc(fused[#loc52, #loc53])
#loc183 = loc(fused[#loc56, #loc57])
#loc184 = loc(fused[#loc60, #loc59])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc64, #loc63])
#loc187 = loc(fused[#loc66, #loc67])
#loc188 = loc(fused[#loc68, #loc69])
#loc189 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc72, #loc73])
#loc191 = loc(fused[#loc74, #loc75])
#loc192 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc193 = loc(fused[#loc80, #loc81])
#loc194 = loc(fused[#loc82, #loc83])
#loc195 = loc(fused[#loc84, #loc85])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc86, #loc89])
#loc198 = loc(fused[#loc90, #loc89])
#loc199 = loc(fused[#loc91, #loc92])
#loc200 = loc(fused[#loc93, #loc94])
#loc201 = loc(fused[#loc95, #loc92])
#loc202 = loc(fused[#loc100, #loc99])
#loc203 = loc(fused[#loc102, #loc101])
#loc204 = loc(fused[#loc105, #loc103])
#loc205 = loc(fused[#loc106, #loc107])
#loc206 = loc(fused[#loc108, #loc109])
#loc207 = loc(fused[#loc117, #loc118])
#loc208 = loc(fused[#loc120, #loc119])
#loc209 = loc(fused[#loc121, #loc122])
#loc210 = loc(fused[#loc123, #loc124])
#loc211 = loc(fused[#loc125, #loc126])
#loc212 = loc(fused[#loc127, #loc124])
#loc213 = loc(fused[#loc128, #loc129])
#loc214 = loc(fused[#loc130, #loc131])
#loc215 = loc(fused[#loc132, #loc133])
#loc216 = loc(fused[#loc135, #loc136])
#loc217 = loc(fused[#loc134, #loc137])
#loc218 = loc(fused[#loc138, #loc137])
#loc219 = loc(fused[#loc139, #loc140])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc143, #loc140])
#loc222 = loc(fused[#loc148, #loc147])
#loc223 = loc(fused[#loc150, #loc149])
#loc224 = loc(fused[#loc153, #loc151])
#loc225 = loc(fused[#loc154, #loc155])
#loc226 = loc(fused[#loc156, #loc157])
