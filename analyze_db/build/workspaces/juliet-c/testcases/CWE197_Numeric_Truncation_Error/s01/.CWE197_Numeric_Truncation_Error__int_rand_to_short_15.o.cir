!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":30:16)
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc84)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printShortLine(!s16i) loc(#loc86)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc88)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc89)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc19)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc17)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc21)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc21)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
    cir.br ^bb7(%20 : !u32i) loc(#loc21)
  ^bb6:  // pred: ^bb4
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc21)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc21)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc21)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc21)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc21)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc21)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc21)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc21)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc21)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc21)
    cir.br ^bb7(%36 : !u32i) loc(#loc21)
  ^bb7(%37: !u32i loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":30:16)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc21)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.br ^bb10 loc(#loc23)
  ^bb9:  // pred: ^bb2
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc93)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    %42 = cir.cast(integral, %41 : !s32i), !s16i loc(#loc11)
    cir.store %42, %0 : !s16i, !cir.ptr<!s16i> loc(#loc88)
    %43 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc28)
    cir.call @printShortLine(%43) : (!s16i) -> () loc(#loc29)
    cir.br ^bb13 loc(#loc27)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc9)
  } loc(#loc87)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_rand_to_short_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc95)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc98)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc99)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc43)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
    cir.br ^bb2 loc(#loc45)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc45)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc48)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb6 loc(#loc51)
  ^bb5:  // pred: ^bb2
    %7 = cir.const #cir.int<127> : !s32i loc(#loc52)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc53)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc52)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb6 loc(#loc55)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc103)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc39)
    cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc98)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc58)
    cir.call @printShortLine(%12) : (!s16i) -> () loc(#loc59)
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc37)
  } loc(#loc97)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortData", init] {alignment = 2 : i64} loc(#loc105)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc67)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc71)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc69)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<127> : !s32i loc(#loc73)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc73)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.br ^bb6 loc(#loc76)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc70)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc63)
    cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc105)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
    cir.call @printShortLine(%12) : (!s16i) -> () loc(#loc83)
    cir.br ^bb9 loc(#loc81)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc61)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":34:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":20:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":20:39)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":21:1)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":42:1)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":39:9)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":39:34)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":23:5)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":23:9)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":25:13)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":25:12)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":25:5)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":26:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":36:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":26:12)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":28:5)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":30:9)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":31:9)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":34:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":35:9)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":37:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":41:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":40:24)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":40:9)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":96:1)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":100:1)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":98:5)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":98:14)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":99:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":99:14)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":49:1)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":70:1)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":67:9)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":67:34)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":51:5)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":51:9)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":53:13)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":53:12)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":53:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":54:5)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":64:5)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":54:12)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":56:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":58:19)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":58:9)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":59:9)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":62:16)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":62:25)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":62:9)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":63:9)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":65:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":69:5)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":68:24)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":68:9)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":73:1)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":94:1)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":91:9)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":91:34)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":75:5)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":75:9)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":77:13)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":77:12)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":77:5)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":78:5)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":88:5)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":78:12)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":80:5)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":82:16)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":82:25)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":82:9)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":83:9)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":86:19)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":86:9)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":87:9)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":89:5)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":93:5)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":92:24)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_rand_to_short_15.c":92:9)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc6, #loc7])
#loc87 = loc(fused[#loc8, #loc9])
#loc88 = loc(fused[#loc10, #loc11])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc16, #loc14])
#loc91 = loc(fused[#loc17, #loc18])
#loc92 = loc(fused[#loc22, #loc21])
#loc93 = loc(fused[#loc26, #loc27])
#loc94 = loc(fused[#loc30, #loc31])
#loc95 = loc(fused[#loc32, #loc33])
#loc96 = loc(fused[#loc34, #loc35])
#loc97 = loc(fused[#loc36, #loc37])
#loc98 = loc(fused[#loc38, #loc39])
#loc99 = loc(fused[#loc40, #loc41])
#loc100 = loc(fused[#loc44, #loc42])
#loc101 = loc(fused[#loc45, #loc46])
#loc102 = loc(fused[#loc54, #loc53])
#loc103 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc64, #loc65])
#loc107 = loc(fused[#loc68, #loc66])
#loc108 = loc(fused[#loc69, #loc70])
#loc109 = loc(fused[#loc75, #loc74])
#loc110 = loc(fused[#loc80, #loc81])
