!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":131:10)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":131:14)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":131:20)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":131:32)
#loc180 = loc(fused[#loc65, #loc66])
#loc181 = loc(fused[#loc67, #loc68])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc155)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc156)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc163)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc163)
    cir.store %4, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc163)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc168)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc170)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc171)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc173)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc15)
    %29 = cir.binop(mul, %27, %28) nsw : !s32i loc(#loc46)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc48)
    cir.br ^bb10 loc(#loc42)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc42)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc13)
  } loc(#loc160)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc174)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_18_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_18_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc83)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc188)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc188)
    cir.store %4, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc188)
    cir.br ^bb2 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc99)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc99)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc99)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc99)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc99)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc99)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc99)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc100)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc101)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb5 loc(#loc104)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc195)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc196)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %26 ^bb9, ^bb15 loc(#loc198)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc199)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %28 = cir.const #cir.int<2147483647> : !s32i loc(#loc122)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc122)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc122)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc123)
    %33 = cir.binop(div, %31, %32) : !s32i loc(#loc200)
    %34 = cir.cmp(gt, %27, %33) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %34 ^bb11, ^bb12 loc(#loc202)
  ^bb11:  // pred: ^bb10
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %37 = cir.binop(mul, %35, %36) nsw : !s32i loc(#loc128)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc130)
    cir.br ^bb13 loc(#loc126)
  ^bb12:  // pred: ^bb10
    %39 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc83)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.br ^bb13 loc(#loc120)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc120)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc115)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc115)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc85)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc143)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb2 loc(#loc209)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc210)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc212)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc152)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc154)
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc133)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":52:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":49:9)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":49:29)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":26:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":26:9)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":32:9)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":32:45)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":28:12)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":28:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":29:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":29:10)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":42:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:19)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:32)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:49)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:13)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":34:59)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":35:9)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":38:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":40:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":37:25)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":37:20)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":37:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":37:36)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":41:13)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":44:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":44:10)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":46:5)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":51:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":46:8)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":46:15)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":47:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":49:22)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":50:22)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":50:9)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":116:1)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":120:1)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":118:5)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":118:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":119:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":119:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":136:15)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":138:15)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":141:15)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":143:15)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":131:1)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":146:1)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":132:1)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":134:27)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":134:22)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":134:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":136:5)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":137:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":137:58)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":138:5)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":141:5)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":142:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":142:57)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":143:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":145:12)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":145:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":91:23)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":59:1)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":94:1)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":86:13)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":86:33)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":61:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":61:9)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":67:9)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":67:45)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":63:12)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":63:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":64:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":64:10)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:9)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":77:9)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:19)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:32)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:49)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:13)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":69:59)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":70:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":73:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":75:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":72:25)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":72:20)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":72:13)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":72:36)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":76:23)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":76:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":79:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":79:10)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":81:5)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":93:5)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":81:8)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":81:15)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":82:5)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":84:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":92:9)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":84:13)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":84:21)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":84:29)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":84:30)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":85:9)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":88:9)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":90:9)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":86:26)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":87:26)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":87:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":91:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":97:1)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":114:1)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":111:9)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":111:29)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":99:5)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":99:9)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":101:12)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":101:5)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":102:5)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":102:10)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":105:13)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":105:12)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":105:5)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":106:5)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":106:10)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":108:5)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":113:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":108:8)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":108:15)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":109:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":111:22)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":112:22)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_18.c":112:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc10, #loc11])
#loc160 = loc(fused[#loc12, #loc13])
#loc161 = loc(fused[#loc14, #loc15])
#loc162 = loc(fused[#loc16, #loc17])
#loc163 = loc(fused[#loc18, #loc19])
#loc164 = loc(fused[#loc21, #loc20])
#loc165 = loc(fused[#loc22, #loc23])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc29, #loc30])
#loc168 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc169 = loc(fused[#loc36, #loc37])
#loc170 = loc(fused[#loc39, #loc40])
#loc171 = loc(fused[#loc41, #loc42])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc45, #loc42])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc51, #loc52])
#loc176 = loc(fused[#loc53, #loc54])
#loc177 = loc(fused[#loc55, #loc56])
#loc178 = loc(fused[#loc57, #loc58])
#loc179 = loc(fused[#loc63, #loc64])
#loc182 = loc(fused[#loc74, #loc75])
#loc183 = loc(fused[#loc78, #loc79])
#loc184 = loc(fused[#loc82, #loc81])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc91])
#loc189 = loc(fused[#loc93, #loc92])
#loc190 = loc(fused[#loc94, #loc95])
#loc191 = loc(fused[#loc96, #loc97])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc103, #loc104, #loc105, #loc97])
#loc194 = loc(fused[#loc108, #loc109])
#loc195 = loc(fused[#loc112, #loc113])
#loc196 = loc(fused[#loc114, #loc115])
#loc197 = loc(fused[#loc116, #loc117])
#loc198 = loc(fused[#loc118, #loc115])
#loc199 = loc(fused[#loc119, #loc120])
#loc200 = loc(fused[#loc122, #loc123])
#loc201 = loc(fused[#loc121, #loc124])
#loc202 = loc(fused[#loc125, #loc126, #loc127, #loc120])
#loc203 = loc(fused[#loc132, #loc133])
#loc204 = loc(fused[#loc134, #loc135])
#loc205 = loc(fused[#loc136, #loc137])
#loc206 = loc(fused[#loc139, #loc138])
#loc207 = loc(fused[#loc140, #loc141])
#loc208 = loc(fused[#loc144, #loc142])
#loc209 = loc(fused[#loc145, #loc146])
#loc210 = loc(fused[#loc147, #loc148])
#loc211 = loc(fused[#loc149, #loc150])
#loc212 = loc(fused[#loc151, #loc148])
