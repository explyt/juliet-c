!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":270:10)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":270:14)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":270:20)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":270:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc478 = loc(fused[#loc189, #loc190])
#loc479 = loc(fused[#loc191, #loc192])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc401)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc402)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc403)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc404)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc405)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc406)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc407)
  cir.func private @close(!s32i) -> !s32i loc(#loc408)
  cir.func private @printIntLine(!s32i) loc(#loc409)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc412)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc413)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc30)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc416)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc417)
        cir.condition(%7) loc(#loc34)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc420)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc421)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc422)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc423)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc424)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc43)
            cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc422)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc45)
            cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc423)
            cir.scope {
              cir.do {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc50)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc52)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc426)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc59)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc428)
                  cir.if %62 {
                    cir.break loc(#loc61)
                  } loc(#loc429)
                } loc(#loc427)
                %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc430)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc431)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc432)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc69)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc69)
                %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc433)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc72)
                %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc72)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc434)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc76)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc435)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc437)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc438)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc438)
                  %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc89)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc439)
                  cir.if %66 {
                    cir.break loc(#loc91)
                  } loc(#loc440)
                } loc(#loc436)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                  %60 = cir.const #cir.int<5> : !s32i loc(#loc95)
                  %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc97)
                  %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc97)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc442)
                  cir.if %64 {
                    cir.break loc(#loc99)
                  } loc(#loc443)
                } loc(#loc441)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
                %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
                cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc444)
                cir.scope {
                  %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc109)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc446)
                  cir.if %62 {
                    cir.break loc(#loc111)
                  } loc(#loc447)
                } loc(#loc445)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
                %39 = cir.const #cir.int<3> : !s32i loc(#loc114)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc114)
                %41 = cir.const #cir.int<4> : !u64i loc(#loc114)
                %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc114)
                %43 = cir.const #cir.int<2> : !s32i loc(#loc114)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc114)
                %45 = cir.binop(add, %42, %44) : !u64i loc(#loc114)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc115)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc448)
                %49 = cir.const #cir.int<0> : !s32i loc(#loc116)
                %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
                %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc117)
                cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
                cir.scope {
                  %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc123)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc123)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc451)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc124)
                    cir.yield %64 : !cir.bool loc(#loc124)
                  }, false {
                    %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc126)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc452)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc124)
                      cir.yield %68 : !cir.bool loc(#loc124)
                    }, false {
                      %68 = cir.const #false loc(#loc124)
                      cir.yield %68 : !cir.bool loc(#loc124)
                    }) : (!cir.bool) -> !cir.bool loc(#loc124)
                    cir.yield %67 : !cir.bool loc(#loc124)
                  }) : (!cir.bool) -> !cir.bool loc(#loc124)
                  cir.if %63 {
                    cir.break loc(#loc128)
                  } loc(#loc453)
                } loc(#loc450)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc129)
                %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc129)
                %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
                %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc131)
                cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc454)
                %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
                %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc133)
                cir.store %58, %2 : !s32i, !cir.ptr<!s32i> loc(#loc455)
                cir.yield loc(#loc49)
              } while {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc136)
                %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc136)
                cir.condition(%15) loc(#loc136)
              } loc(#loc425)
            } loc(#loc425)
            cir.scope {
              %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc140)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc457)
              cir.if %17 {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc143)
              } loc(#loc458)
            } loc(#loc456)
            cir.scope {
              %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc147)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc147)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc460)
              cir.if %17 {
                %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc150)
              } loc(#loc461)
            } loc(#loc459)
          } loc(#loc419)
        } loc(#loc418)
        cir.yield loc(#loc29)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc152)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc462)
        cir.yield loc(#loc415)
      } loc(#loc415)
    } loc(#loc415)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc155)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc464)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc158)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc465)
        cir.condition(%7) loc(#loc159)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc468)
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc165)
            cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc469)
            %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc468)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc167)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc168)
          } loc(#loc467)
        } loc(#loc466)
        cir.yield loc(#loc154)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc170)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc470)
        cir.yield loc(#loc463)
      } loc(#loc463)
    } loc(#loc463)
    cir.return loc(#loc20)
  } loc(#loc410)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc472)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc473)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc175)
    cir.return loc(#loc172)
  } loc(#loc471)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc474)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc475)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc476)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc186)
  cir.func @main(%arg0: !s32i loc(fused[#loc189, #loc190]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc191, #loc192])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc478)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc479)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc193)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc194)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc195)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc196)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc183)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc480)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_preinc_17_good() : () -> () loc(#loc198)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc184)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc185)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc481)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_preinc_17_bad() : () -> () loc(#loc202)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc205)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc482)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc482)
    cir.return %17 : !s32i loc(#loc482)
  } loc(#loc477)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc207)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc484)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc485)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc486)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc215)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc219)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc489)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc222)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc490)
        cir.condition(%7) loc(#loc223)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc493)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc494)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc495)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc496)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc497)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc232)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc232)
            cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc495)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc234)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc234)
            cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc496)
            cir.scope {
              cir.do {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc239)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc240)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc241)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc242)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc499)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc248)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc248)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc501)
                  cir.if %62 {
                    cir.break loc(#loc250)
                  } loc(#loc502)
                } loc(#loc500)
                %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc503)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc253)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc504)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc505)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc258)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc258)
                %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc506)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc260)
                %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc260)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc507)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc262)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc262)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc263)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc508)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                  %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc510)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc511)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc511)
                  %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc273)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc274)
                  %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc274)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc512)
                  cir.if %66 {
                    cir.break loc(#loc276)
                  } loc(#loc513)
                } loc(#loc509)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                  %60 = cir.const #cir.int<5> : !s32i loc(#loc280)
                  %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc281)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc282)
                  %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc282)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc515)
                  cir.if %64 {
                    cir.break loc(#loc284)
                  } loc(#loc516)
                } loc(#loc514)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc286)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc287)
                %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc288)
                cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                cir.scope {
                  %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc294)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc294)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc519)
                  cir.if %62 {
                    cir.break loc(#loc296)
                  } loc(#loc520)
                } loc(#loc518)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc298)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc298)
                %39 = cir.const #cir.int<3> : !s32i loc(#loc299)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc299)
                %41 = cir.const #cir.int<4> : !u64i loc(#loc299)
                %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc299)
                %43 = cir.const #cir.int<2> : !s32i loc(#loc299)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc299)
                %45 = cir.binop(add, %42, %44) : !u64i loc(#loc299)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc300)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc300)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc521)
                %49 = cir.const #cir.int<0> : !s32i loc(#loc301)
                %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
                %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc302)
                cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc522)
                cir.scope {
                  %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc308)
                  %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc308)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc524)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc309)
                    cir.yield %64 : !cir.bool loc(#loc309)
                  }, false {
                    %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc311)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc525)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc309)
                      cir.yield %68 : !cir.bool loc(#loc309)
                    }, false {
                      %68 = cir.const #false loc(#loc309)
                      cir.yield %68 : !cir.bool loc(#loc309)
                    }) : (!cir.bool) -> !cir.bool loc(#loc309)
                    cir.yield %67 : !cir.bool loc(#loc309)
                  }) : (!cir.bool) -> !cir.bool loc(#loc309)
                  cir.if %63 {
                    cir.break loc(#loc313)
                  } loc(#loc526)
                } loc(#loc523)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc314)
                %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc314)
                %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc316)
                %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc316)
                cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc527)
                %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc317)
                %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc318)
                cir.store %58, %2 : !s32i, !cir.ptr<!s32i> loc(#loc528)
                cir.yield loc(#loc238)
              } while {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc321)
                %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc321)
                cir.condition(%15) loc(#loc321)
              } loc(#loc498)
            } loc(#loc498)
            cir.scope {
              %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc325)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc325)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc530)
              cir.if %17 {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc328)
              } loc(#loc531)
            } loc(#loc529)
            cir.scope {
              %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc332)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc332)
              %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc533)
              cir.if %17 {
                %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc335)
              } loc(#loc534)
            } loc(#loc532)
          } loc(#loc492)
        } loc(#loc491)
        cir.yield loc(#loc218)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc337)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
        cir.yield loc(#loc488)
      } loc(#loc488)
    } loc(#loc488)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc340)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc537)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc342)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc343)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc538)
        cir.condition(%7) loc(#loc344)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc348)
            %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc349)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc541)
            cir.if %7 {
              %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc543)
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc355)
              %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc355)
              cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc544)
              %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc354)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc543)
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc358)
            } else {
              %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc207)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc207)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc359)
            } loc(#loc542)
          } loc(#loc540)
        } loc(#loc539)
        cir.yield loc(#loc339)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc360)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc361)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc545)
        cir.yield loc(#loc536)
      } loc(#loc536)
    } loc(#loc536)
    cir.return loc(#loc209)
  } loc(#loc483)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc547)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc548)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc549)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc369)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc550)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc373)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc552)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc375)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc376)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc553)
        cir.condition(%7) loc(#loc377)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<2> : !s32i loc(#loc379)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc555)
        } loc(#loc554)
        cir.yield loc(#loc372)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc381)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc382)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc556)
        cir.yield loc(#loc551)
      } loc(#loc551)
    } loc(#loc551)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc385)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc558)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc387)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc388)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc559)
        cir.condition(%7) loc(#loc389)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc562)
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc395)
            %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc395)
            cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc563)
            %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc394)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc562)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc397)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc398)
          } loc(#loc561)
        } loc(#loc560)
        cir.yield loc(#loc384)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc399)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc400)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc564)
        cir.yield loc(#loc557)
      } loc(#loc557)
    } loc(#loc557)
    cir.return loc(#loc363)
  } loc(#loc546)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":44:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":131:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":46:5)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":46:9)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":46:11)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":47:5)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":47:9)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":49:12)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":49:5)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:5)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":121:5)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:13)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:9)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:16)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:20)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:18)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":51:5)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":52:9)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":120:9)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":57:13)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":57:17)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":58:13)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":58:32)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":59:13)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":59:35)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":60:13)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":60:35)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":61:13)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":61:45)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":62:13)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":105:21)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:39)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:48)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:61)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:32)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:17)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":72:72)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":73:17)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":76:17)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":73:21)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":73:37)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":74:17)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":75:21)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:24)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:25)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:34)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:37)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:51)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:17)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":77:52)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":78:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":78:17)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":79:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":79:17)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":80:42)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":80:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":80:17)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":80:50)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:17)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":84:17)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:26)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:58)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:59)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:68)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:82)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:21)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":81:88)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":82:17)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":83:21)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":85:17)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":88:17)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":85:28)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":85:42)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":85:21)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":85:61)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":86:17)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":87:21)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:39)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:53)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:59)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:32)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:17)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":89:63)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":90:17)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":93:17)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":90:21)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":90:37)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":91:17)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":92:21)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:35)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:49)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:62)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:80)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:83)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:30)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":95:84)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:17)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":99:17)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:21)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:35)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:48)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:51)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":96:65)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":97:17)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":98:21)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":101:43)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":101:29)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":101:17)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":103:29)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":103:24)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":103:17)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":103:40)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":105:20)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":106:13)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":109:13)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":106:17)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":106:33)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":107:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":108:30)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":108:17)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":110:13)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":113:13)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":110:17)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":110:33)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":111:13)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":112:30)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":112:17)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:24)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":50:23)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:5)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":130:5)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:13)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:9)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:16)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:20)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:18)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":123:5)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":124:9)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":129:9)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":127:13)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":127:26)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":126:13)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":126:15)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":128:26)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":128:13)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:24)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":122:23)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":255:1)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":259:1)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":257:5)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":257:13)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":258:5)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":258:13)
#loc177 = loc("/usr/include/stdlib.h":575:1)
#loc178 = loc("/usr/include/stdlib.h":575:41)
#loc179 = loc("/usr/include/time.h":76:1)
#loc180 = loc("/usr/include/time.h":76:38)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":275:15)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":277:15)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":280:15)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":282:15)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":270:1)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":285:1)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":271:1)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":273:27)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":273:22)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":273:5)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":275:5)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":276:5)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":276:63)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":277:5)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":280:5)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":281:5)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":281:62)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":282:5)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":284:12)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":284:5)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":227:23)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":138:1)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":230:1)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":140:5)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":140:9)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":140:11)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":141:5)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":141:9)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":143:12)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":143:5)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:5)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":215:5)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:13)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:9)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:16)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:20)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:18)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":145:5)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":146:9)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":214:9)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":151:13)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":151:17)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":152:13)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":152:32)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":153:13)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":153:35)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":154:13)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":154:35)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":155:13)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":155:45)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":156:13)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":199:21)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:39)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:48)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:61)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:32)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:17)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":166:72)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":167:17)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":170:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":167:21)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":167:37)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":168:17)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":169:21)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:24)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:25)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:34)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:37)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:51)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:17)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":171:52)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":172:38)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":172:17)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":173:43)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":173:17)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":174:42)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":174:36)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":174:17)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":174:50)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:17)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":178:17)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:26)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:58)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:59)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:68)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:82)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:21)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":175:88)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":176:17)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":177:21)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":179:17)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":182:17)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":179:28)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":179:42)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":179:21)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":179:61)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":180:17)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":181:21)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:39)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:53)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:59)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:32)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:17)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":183:63)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":184:17)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":187:17)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":184:21)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":184:37)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":185:17)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":186:21)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:35)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:49)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:62)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:80)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:83)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:30)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:17)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":189:84)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:17)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":193:17)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:21)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:35)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:48)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:51)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":190:65)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":191:17)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":192:21)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":195:43)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":195:29)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":195:17)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":197:29)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":197:24)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":197:17)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":197:40)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":199:20)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":200:13)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":203:13)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":200:17)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":200:33)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":201:13)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":202:30)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":202:17)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":204:13)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":207:13)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":204:17)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":204:33)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":205:13)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":206:30)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":206:17)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:24)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":144:23)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:5)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":229:5)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:13)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:9)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:16)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:20)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:18)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":217:5)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":219:9)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":228:9)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":219:13)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":219:20)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":220:9)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":224:9)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":226:9)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":222:13)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":222:26)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":221:13)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":221:15)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":223:26)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":223:13)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":227:13)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:24)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":216:23)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":233:1)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":253:1)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":235:5)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":235:9)
#loc366 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":235:11)
#loc367 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":236:5)
#loc368 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":236:9)
#loc369 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":238:12)
#loc370 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":238:5)
#loc371 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:5)
#loc372 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":243:5)
#loc373 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:13)
#loc374 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:9)
#loc375 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:16)
#loc376 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:20)
#loc377 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:18)
#loc378 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":240:5)
#loc379 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":242:16)
#loc380 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":242:9)
#loc381 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:24)
#loc382 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":239:23)
#loc383 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:5)
#loc384 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":252:5)
#loc385 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:13)
#loc386 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:9)
#loc387 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:16)
#loc388 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:20)
#loc389 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:18)
#loc390 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":245:5)
#loc391 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":246:9)
#loc392 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":251:9)
#loc393 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":249:13)
#loc394 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":249:26)
#loc395 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":248:13)
#loc396 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":248:15)
#loc397 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":250:26)
#loc398 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":250:13)
#loc399 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:24)
#loc400 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_17.c":244:23)
#loc401 = loc(fused[#loc1, #loc2])
#loc402 = loc(fused[#loc3, #loc4])
#loc403 = loc(fused[#loc5, #loc6])
#loc404 = loc(fused[#loc7, #loc8])
#loc405 = loc(fused[#loc9, #loc10])
#loc406 = loc(fused[#loc11, #loc12])
#loc407 = loc(fused[#loc13, #loc14])
#loc408 = loc(fused[#loc15, #loc16])
#loc409 = loc(fused[#loc17, #loc18])
#loc410 = loc(fused[#loc19, #loc20])
#loc411 = loc(fused[#loc21, #loc22])
#loc412 = loc(fused[#loc21, #loc23])
#loc413 = loc(fused[#loc24, #loc25])
#loc414 = loc(fused[#loc27, #loc26])
#loc415 = loc(fused[#loc28, #loc29])
#loc416 = loc(fused[#loc31, #loc30])
#loc417 = loc(fused[#loc32, #loc33])
#loc418 = loc(fused[#loc35, #loc29])
#loc419 = loc(fused[#loc36, #loc37])
#loc420 = loc(fused[#loc38, #loc39])
#loc421 = loc(fused[#loc40, #loc41])
#loc422 = loc(fused[#loc42, #loc43])
#loc423 = loc(fused[#loc44, #loc45])
#loc424 = loc(fused[#loc46, #loc47])
#loc425 = loc(fused[#loc48, #loc49])
#loc426 = loc(fused[#loc54, #loc55])
#loc427 = loc(fused[#loc56, #loc57])
#loc428 = loc(fused[#loc58, #loc59])
#loc429 = loc(fused[#loc60, #loc57])
#loc430 = loc(fused[#loc62, #loc63])
#loc431 = loc(fused[#loc65, #loc66])
#loc432 = loc(fused[#loc67, #loc68])
#loc433 = loc(fused[#loc71, #loc69])
#loc434 = loc(fused[#loc75, #loc72])
#loc435 = loc(fused[#loc79, #loc80])
#loc436 = loc(fused[#loc81, #loc82])
#loc437 = loc(fused[#loc84, #loc85])
#loc438 = loc(fused[#loc86, #loc87])
#loc439 = loc(fused[#loc88, #loc89])
#loc440 = loc(fused[#loc90, #loc82])
#loc441 = loc(fused[#loc92, #loc93])
#loc442 = loc(fused[#loc96, #loc97])
#loc443 = loc(fused[#loc98, #loc93])
#loc444 = loc(fused[#loc104, #loc105])
#loc445 = loc(fused[#loc106, #loc107])
#loc446 = loc(fused[#loc108, #loc109])
#loc447 = loc(fused[#loc110, #loc107])
#loc448 = loc(fused[#loc114, #loc115])
#loc449 = loc(fused[#loc118, #loc119])
#loc450 = loc(fused[#loc120, #loc121])
#loc451 = loc(fused[#loc122, #loc123])
#loc452 = loc(fused[#loc125, #loc126])
#loc453 = loc(fused[#loc127, #loc121])
#loc454 = loc(fused[#loc131, #loc129])
#loc455 = loc(fused[#loc134, #loc135])
#loc456 = loc(fused[#loc137, #loc138])
#loc457 = loc(fused[#loc139, #loc140])
#loc458 = loc(fused[#loc141, #loc138])
#loc459 = loc(fused[#loc144, #loc145])
#loc460 = loc(fused[#loc146, #loc147])
#loc461 = loc(fused[#loc148, #loc145])
#loc462 = loc(fused[#loc152, #loc151])
#loc463 = loc(fused[#loc153, #loc154])
#loc464 = loc(fused[#loc156, #loc155])
#loc465 = loc(fused[#loc157, #loc158])
#loc466 = loc(fused[#loc160, #loc154])
#loc467 = loc(fused[#loc161, #loc162])
#loc468 = loc(fused[#loc163, #loc164])
#loc469 = loc(fused[#loc165, #loc166])
#loc470 = loc(fused[#loc170, #loc169])
#loc471 = loc(fused[#loc171, #loc172])
#loc472 = loc(fused[#loc173, #loc174])
#loc473 = loc(fused[#loc175, #loc176])
#loc474 = loc(fused[#loc177, #loc178])
#loc475 = loc(fused[#loc179, #loc180])
#loc476 = loc(fused[#loc181, #loc182])
#loc477 = loc(fused[#loc187, #loc188])
#loc480 = loc(fused[#loc198, #loc199])
#loc481 = loc(fused[#loc202, #loc203])
#loc482 = loc(fused[#loc206, #loc205])
#loc483 = loc(fused[#loc208, #loc209])
#loc484 = loc(fused[#loc210, #loc211])
#loc485 = loc(fused[#loc210, #loc212])
#loc486 = loc(fused[#loc213, #loc214])
#loc487 = loc(fused[#loc216, #loc215])
#loc488 = loc(fused[#loc217, #loc218])
#loc489 = loc(fused[#loc220, #loc219])
#loc490 = loc(fused[#loc221, #loc222])
#loc491 = loc(fused[#loc224, #loc218])
#loc492 = loc(fused[#loc225, #loc226])
#loc493 = loc(fused[#loc227, #loc228])
#loc494 = loc(fused[#loc229, #loc230])
#loc495 = loc(fused[#loc231, #loc232])
#loc496 = loc(fused[#loc233, #loc234])
#loc497 = loc(fused[#loc235, #loc236])
#loc498 = loc(fused[#loc237, #loc238])
#loc499 = loc(fused[#loc243, #loc244])
#loc500 = loc(fused[#loc245, #loc246])
#loc501 = loc(fused[#loc247, #loc248])
#loc502 = loc(fused[#loc249, #loc246])
#loc503 = loc(fused[#loc251, #loc252])
#loc504 = loc(fused[#loc254, #loc255])
#loc505 = loc(fused[#loc256, #loc257])
#loc506 = loc(fused[#loc259, #loc258])
#loc507 = loc(fused[#loc261, #loc260])
#loc508 = loc(fused[#loc264, #loc265])
#loc509 = loc(fused[#loc266, #loc267])
#loc510 = loc(fused[#loc269, #loc270])
#loc511 = loc(fused[#loc271, #loc272])
#loc512 = loc(fused[#loc273, #loc274])
#loc513 = loc(fused[#loc275, #loc267])
#loc514 = loc(fused[#loc277, #loc278])
#loc515 = loc(fused[#loc281, #loc282])
#loc516 = loc(fused[#loc283, #loc278])
#loc517 = loc(fused[#loc289, #loc290])
#loc518 = loc(fused[#loc291, #loc292])
#loc519 = loc(fused[#loc293, #loc294])
#loc520 = loc(fused[#loc295, #loc292])
#loc521 = loc(fused[#loc299, #loc300])
#loc522 = loc(fused[#loc303, #loc304])
#loc523 = loc(fused[#loc305, #loc306])
#loc524 = loc(fused[#loc307, #loc308])
#loc525 = loc(fused[#loc310, #loc311])
#loc526 = loc(fused[#loc312, #loc306])
#loc527 = loc(fused[#loc316, #loc314])
#loc528 = loc(fused[#loc319, #loc320])
#loc529 = loc(fused[#loc322, #loc323])
#loc530 = loc(fused[#loc324, #loc325])
#loc531 = loc(fused[#loc326, #loc323])
#loc532 = loc(fused[#loc329, #loc330])
#loc533 = loc(fused[#loc331, #loc332])
#loc534 = loc(fused[#loc333, #loc330])
#loc535 = loc(fused[#loc337, #loc336])
#loc536 = loc(fused[#loc338, #loc339])
#loc537 = loc(fused[#loc341, #loc340])
#loc538 = loc(fused[#loc342, #loc343])
#loc539 = loc(fused[#loc345, #loc339])
#loc540 = loc(fused[#loc346, #loc347])
#loc541 = loc(fused[#loc348, #loc349])
#loc542 = loc(fused[#loc350, #loc351, #loc352, #loc347])
#loc543 = loc(fused[#loc353, #loc354])
#loc544 = loc(fused[#loc355, #loc356])
#loc545 = loc(fused[#loc361, #loc360])
#loc546 = loc(fused[#loc362, #loc363])
#loc547 = loc(fused[#loc364, #loc365])
#loc548 = loc(fused[#loc364, #loc366])
#loc549 = loc(fused[#loc367, #loc368])
#loc550 = loc(fused[#loc370, #loc369])
#loc551 = loc(fused[#loc371, #loc372])
#loc552 = loc(fused[#loc374, #loc373])
#loc553 = loc(fused[#loc375, #loc376])
#loc554 = loc(fused[#loc378, #loc372])
#loc555 = loc(fused[#loc380, #loc379])
#loc556 = loc(fused[#loc382, #loc381])
#loc557 = loc(fused[#loc383, #loc384])
#loc558 = loc(fused[#loc386, #loc385])
#loc559 = loc(fused[#loc387, #loc388])
#loc560 = loc(fused[#loc390, #loc384])
#loc561 = loc(fused[#loc391, #loc392])
#loc562 = loc(fused[#loc393, #loc394])
#loc563 = loc(fused[#loc395, #loc396])
#loc564 = loc(fused[#loc400, #loc399])
