!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":27:57)
#loc6 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":27:110)
#loc20 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":42:61)
#loc21 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":42:114)
#loc37 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":53:61)
#loc38 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":53:114)
!ty__CWE191_Integer_Underflow__char_min_sub_67_structType = !cir.struct<struct "_CWE191_Integer_Underflow__char_min_sub_67_structType" {!s8i}>
#loc57 = loc(fused[#loc5, #loc6])
#loc62 = loc(fused[#loc20, #loc21])
#loc68 = loc(fused[#loc37, #loc38])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_min_sub_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc55)
  cir.func @CWE191_Integer_Underflow__char_min_sub_67b_badSink(%arg0: !ty__CWE191_Integer_Underflow__char_min_sub_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc58)
    %1 = cir.alloca !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc57)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc59)
    cir.store %arg0, %1 : !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> loc(#loc11)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> -> !cir.ptr<!s8i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc10)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc59)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc15)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc58)
    %10 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc16)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc17)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc56)
  cir.func @CWE191_Integer_Underflow__char_min_sub_67b_goodG2BSink(%arg0: !ty__CWE191_Integer_Underflow__char_min_sub_67_structType loc(fused[#loc20, #loc21])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc63)
    %1 = cir.alloca !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc62)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc64)
    cir.store %arg0, %1 : !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> loc(#loc26)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> -> !cir.ptr<!s8i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc25)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc29)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc29)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc29)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc29)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc63)
    %10 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc31)
    cir.br ^bb2 loc(#loc28)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc19)
  } loc(#loc61)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc34)
  cir.func @CWE191_Integer_Underflow__char_min_sub_67b_goodB2GSink(%arg0: !ty__CWE191_Integer_Underflow__char_min_sub_67_structType loc(fused[#loc37, #loc38])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc69)
    %1 = cir.alloca !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc68)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc70)
    cir.store %arg0, %1 : !ty__CWE191_Integer_Underflow__char_min_sub_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> loc(#loc43)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__char_min_sub_67_structType> -> !cir.ptr<!s8i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc42)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc46)
    %7 = cir.const #cir.int<127> : !s32i loc(#loc47)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc47)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc47)
    %11 = cir.cmp(gt, %6, %10) : !s32i, !cir.bool loc(#loc72)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc73)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc51)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc51)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc51)
    cir.store %16, %0 : !s8i, !cir.ptr<!s8i> loc(#loc69)
    %17 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc52)
    cir.call @printHexCharLine(%17) : (!s8i) -> () loc(#loc53)
    cir.br ^bb4 loc(#loc49)
  ^bb3:  // pred: ^bb1
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc34)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb4 loc(#loc45)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc45)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc36)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_min_sub_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":27:1)
#loc4 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":35:1)
#loc7 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":32:9)
#loc8 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":32:30)
#loc9 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":29:5)
#loc10 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":29:26)
#loc11 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":28:1)
#loc12 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":22:10)
#loc13 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":30:5)
#loc14 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":34:5)
#loc15 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":32:23)
#loc16 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":33:26)
#loc17 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":33:9)
#loc18 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":42:1)
#loc19 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":50:1)
#loc22 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":47:9)
#loc23 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":47:30)
#loc24 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":44:5)
#loc25 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":44:26)
#loc26 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":43:1)
#loc27 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":45:5)
#loc28 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":49:5)
#loc29 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":47:23)
#loc30 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":48:26)
#loc31 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":48:9)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":64:19)
#loc35 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":53:1)
#loc36 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":66:1)
#loc39 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":59:9)
#loc40 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":59:30)
#loc41 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":55:5)
#loc42 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":55:26)
#loc43 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":54:1)
#loc44 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":57:5)
#loc45 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":65:5)
#loc46 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":57:9)
#loc47 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":57:16)
#loc48 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":58:5)
#loc49 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":61:5)
#loc50 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":63:5)
#loc51 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":59:23)
#loc52 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":60:26)
#loc53 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":60:9)
#loc54 = loc("CWE191_Integer_Underflow__char_min_sub_67b.c":64:9)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc7, #loc8])
#loc59 = loc(fused[#loc9, #loc10])
#loc60 = loc(fused[#loc13, #loc14])
#loc61 = loc(fused[#loc18, #loc19])
#loc63 = loc(fused[#loc22, #loc23])
#loc64 = loc(fused[#loc24, #loc25])
#loc65 = loc(fused[#loc27, #loc28])
#loc66 = loc(fused[#loc32, #loc33])
#loc67 = loc(fused[#loc35, #loc36])
#loc69 = loc(fused[#loc39, #loc40])
#loc70 = loc(fused[#loc41, #loc42])
#loc71 = loc(fused[#loc44, #loc45])
#loc72 = loc(fused[#loc46, #loc47])
#loc73 = loc(fused[#loc48, #loc49, #loc50, #loc45])
