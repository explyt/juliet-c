!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_17_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc134)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc135)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc140)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc134)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_17_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc29)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc147)
        cir.condition(%8) loc(#loc33)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc150)
            %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
            %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
            cir.store %9, %6 : !u64i, !cir.ptr<!u64i> loc(#loc150)
            cir.scope {
              %10 = cir.const #cir.int<100> : !s32i loc(#loc43)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
              %12 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc44)
              %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc152)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc45)
              %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc153)
              cir.if %16 {
                cir.scope {
                  %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc51)
                  %20 = cir.const #cir.int<100> : !s32i loc(#loc52)
                  %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc52)
                  %22 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                  %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc156)
                  %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc156)
                  %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
                  %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
                  %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
                  %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
                  %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
                  %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
                  cir.if %30 {
                    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
                    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
                    cir.store %33, %6 : !u64i, !cir.ptr<!u64i> loc(#loc159)
                    cir.scope {
                      %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                      %35 = cir.const #cir.int<0> : !s32i loc(#loc67)
                      %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc67)
                      %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc161)
                      %38 = cir.ternary(%37, true {
                        %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                        %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                        %41 = cir.const #cir.int<1> : !s32i loc(#loc71)
                        %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc71)
                        %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc162)
                        %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                        %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc69)
                        %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc69)
                        %47 = cir.const #cir.int<10> : !s32i loc(#loc73)
                        %48 = cir.cmp(eq, %46, %47) : !s32i, !cir.bool loc(#loc163)
                        %49 = cir.ternary(%48, true {
                          %50 = cir.const #true loc(#loc68)
                          cir.yield %50 : !cir.bool loc(#loc68)
                        }, false {
                          %50 = cir.const #false loc(#loc68)
                          cir.yield %50 : !cir.bool loc(#loc68)
                        }) : (!cir.bool) -> !cir.bool loc(#loc68)
                        cir.yield %49 : !cir.bool loc(#loc68)
                      }, false {
                        %39 = cir.const #false loc(#loc68)
                        cir.yield %39 : !cir.bool loc(#loc68)
                      }) : (!cir.bool) -> !cir.bool loc(#loc68)
                      cir.if %38 {
                        %39 = cir.const #cir.int<0> : !s32i loc(#loc75)
                        %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc75)
                        %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                        %42 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                        %43 = cir.const #cir.int<1> : !s32i loc(#loc78)
                        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc78)
                        %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc165)
                        %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                        cir.store %40, %46 : !s8i, !cir.ptr<!s8i> loc(#loc166)
                      } loc(#loc164)
                    } loc(#loc160)
                  } else {
                    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc80)
                    %33 = cir.const #cir.int<0> : !s32i loc(#loc81)
                    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc81)
                    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                    %36 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                    %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc167)
                  } loc(#loc158)
                } loc(#loc155)
              } loc(#loc154)
            } loc(#loc151)
          } loc(#loc149)
        } loc(#loc148)
        cir.yield loc(#loc28)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc86)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
        cir.yield loc(#loc145)
      } loc(#loc145)
    } loc(#loc145)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc90)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc170)
      cir.if %8 {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc94)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc95)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc171)
    } loc(#loc169)
    cir.return loc(#loc20)
  } loc(#loc141)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc172)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc102)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc133)
    %3 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc181)
        cir.condition(%8) loc(#loc117)
      } body {
        cir.scope {
          %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc119)
          %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc102)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc102)
          %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
        } loc(#loc182)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc122)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
        cir.yield loc(#loc179)
      } loc(#loc179)
    } loc(#loc179)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc126)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc185)
      cir.if %8 {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc129)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc131)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc132)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc104)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_17.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":87:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":87:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":40:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":40:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":63:31)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":73:19)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":36:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":76:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":38:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":38:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":39:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":39:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":41:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":41:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":69:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:16)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:20)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:18)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":43:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":44:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":68:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":46:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":46:41)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":46:30)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":46:37)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":48:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":67:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":48:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":48:21)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":48:31)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":49:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":66:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:27)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:32)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:31)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:47)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:51)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:61)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":51:71)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":52:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":60:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":62:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":55:31)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":55:38)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":55:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":55:42)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":59:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:25)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:35)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:37)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:40)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:45)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:53)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:54)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":56:59)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":57:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":58:43)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":58:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":58:30)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":58:38)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":58:39)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":63:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":65:37)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":65:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":65:26)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":65:33)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:24)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":42:23)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":71:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":75:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":71:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":71:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":71:25)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":72:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":73:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":74:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":74:14)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":102:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":105:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":104:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":104:13)
#loc100 = loc("/usr/include/string.h":149:1)
#loc101 = loc("/usr/include/string.h":150:14)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":92:22)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":83:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":100:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":85:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":85:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":86:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":86:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":88:12)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":88:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":93:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:13)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:16)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:20)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:18)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":90:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":92:9)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":92:16)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:24)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":89:23)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":95:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":99:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":95:16)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":95:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":95:25)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":96:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":97:19)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":97:9)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":98:9)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_17.c":98:14)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc26, #loc25])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc30, #loc29])
#loc147 = loc(fused[#loc31, #loc32])
#loc148 = loc(fused[#loc34, #loc28])
#loc149 = loc(fused[#loc35, #loc36])
#loc150 = loc(fused[#loc37, #loc38])
#loc151 = loc(fused[#loc41, #loc42])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc43, #loc45])
#loc154 = loc(fused[#loc46, #loc42])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc55, #loc56])
#loc158 = loc(fused[#loc57, #loc58, #loc59, #loc48])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc64, #loc65])
#loc161 = loc(fused[#loc66, #loc67])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc69, #loc73])
#loc164 = loc(fused[#loc74, #loc65])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc76, #loc75])
#loc167 = loc(fused[#loc82, #loc81])
#loc168 = loc(fused[#loc86, #loc85])
#loc169 = loc(fused[#loc87, #loc88])
#loc170 = loc(fused[#loc90, #loc91])
#loc171 = loc(fused[#loc92, #loc88])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc103, #loc104])
#loc176 = loc(fused[#loc105, #loc106])
#loc177 = loc(fused[#loc107, #loc108])
#loc178 = loc(fused[#loc110, #loc109])
#loc179 = loc(fused[#loc111, #loc112])
#loc180 = loc(fused[#loc114, #loc113])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc118, #loc112])
#loc183 = loc(fused[#loc122, #loc121])
#loc184 = loc(fused[#loc123, #loc124])
#loc185 = loc(fused[#loc126, #loc127])
#loc186 = loc(fused[#loc128, #loc124])
