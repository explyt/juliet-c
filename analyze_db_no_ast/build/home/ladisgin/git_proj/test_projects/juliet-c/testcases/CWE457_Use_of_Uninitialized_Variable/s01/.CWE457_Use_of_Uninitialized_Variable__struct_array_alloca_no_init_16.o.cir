!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc169)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%9) loc(#loc11)
      } do {
        cir.break loc(#loc12)
      } loc(#loc173)
    } loc(#loc173)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%9) loc(#loc15)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc176)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc178)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc24)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc25)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc179)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc26)
              cir.condition(%13) loc(#loc26)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc29)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
                %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc33)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
                %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc38)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc39)
              } loc(#loc180)
              cir.yield loc(#loc21)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc40)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc41)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc181)
              cir.yield loc(#loc177)
            } loc(#loc177)
          } loc(#loc177)
        } loc(#loc175)
        cir.break loc(#loc42)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc4)
  } loc(#loc170)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc182)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc53)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc53)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc53)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc53)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc53)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc57)
        cir.condition(%9) loc(#loc57)
      } do {
        cir.break loc(#loc58)
      } loc(#loc188)
    } loc(#loc188)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc61)
        cir.condition(%9) loc(#loc61)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc191)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc68)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc193)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc71)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc194)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc72)
              cir.condition(%13) loc(#loc72)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
                %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
                cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc196)
                %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
                %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc197)
              } loc(#loc195)
              cir.yield loc(#loc67)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc83)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc198)
              cir.yield loc(#loc192)
            } loc(#loc192)
          } loc(#loc192)
        } loc(#loc190)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc200)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc90)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc202)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc93)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc203)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc94)
              cir.condition(%13) loc(#loc94)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
                %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc100)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
                %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc105)
              } loc(#loc204)
              cir.yield loc(#loc89)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc107)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc205)
              cir.yield loc(#loc201)
            } loc(#loc201)
          } loc(#loc201)
        } loc(#loc199)
        cir.break loc(#loc108)
      } loc(#loc189)
    } loc(#loc189)
    cir.return loc(#loc50)
  } loc(#loc185)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc113)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc113)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc113)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc113)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc113)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc208)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc117)
        cir.condition(%9) loc(#loc117)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc211)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc124)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc213)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc127)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc214)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc128)
              cir.condition(%13) loc(#loc128)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
                %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
                cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc216)
                %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
                %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc217)
              } loc(#loc215)
              cir.yield loc(#loc123)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc139)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc218)
              cir.yield loc(#loc212)
            } loc(#loc212)
          } loc(#loc212)
        } loc(#loc210)
        cir.break loc(#loc140)
      } loc(#loc209)
    } loc(#loc209)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc143)
        cir.condition(%9) loc(#loc143)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc221)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc150)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc223)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc153)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc224)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc154)
              cir.condition(%13) loc(#loc154)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
                %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc160)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
                %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc165)
              } loc(#loc225)
              cir.yield loc(#loc149)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc167)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc226)
              cir.yield loc(#loc222)
            } loc(#loc222)
          } loc(#loc222)
        } loc(#loc220)
        cir.break loc(#loc168)
      } loc(#loc219)
    } loc(#loc219)
    cir.return loc(#loc110)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":45:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":24:21)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":25:29)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":26:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":26:11)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":30:9)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":32:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":44:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":32:11)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":35:9)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":42:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":36:13)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":36:17)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":41:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:19)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:17)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:22)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:24)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:23)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":38:13)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":39:30)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":39:35)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":39:36)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":39:38)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":39:17)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":40:30)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":40:35)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":40:36)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":40:38)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":40:17)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:29)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":37:28)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":43:9)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":118:1)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":122:1)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":120:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":120:13)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":121:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":121:13)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":52:1)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":83:1)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":54:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":54:21)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":55:29)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":55:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":56:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":61:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":56:11)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":60:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":62:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":82:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":62:11)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":65:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":72:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":66:13)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":66:17)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:13)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":71:13)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:19)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:17)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:22)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:24)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:23)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":68:13)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":69:34)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":69:17)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":69:22)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":69:23)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":70:34)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":70:17)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":70:22)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":70:23)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:29)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":67:28)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":73:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":80:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":74:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":74:17)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:13)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":79:13)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:19)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:17)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:22)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:24)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:23)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":76:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":77:30)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":77:35)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":77:36)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":77:38)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":77:17)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":78:30)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":78:35)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":78:36)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":78:38)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":78:17)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:29)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":75:28)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":81:9)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":86:1)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":116:1)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":88:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":88:21)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":89:29)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":89:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":90:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":102:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":90:11)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":93:9)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":100:9)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":94:13)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":94:17)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:13)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":99:13)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:19)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:17)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:22)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:24)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:23)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":96:13)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":97:34)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":97:17)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":97:22)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":97:23)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":98:34)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":98:17)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":98:22)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":98:23)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:29)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":95:28)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":101:9)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":103:5)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":115:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":103:11)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":106:9)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":113:9)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":107:13)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":107:17)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:13)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":112:13)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:19)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:17)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:22)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:24)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:23)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":109:13)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":110:30)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":110:35)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":110:36)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":110:38)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":110:17)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":111:30)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":111:35)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":111:36)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":111:38)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":111:17)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:29)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":108:28)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_16.c":114:9)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc8, #loc7])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc13, #loc14])
#loc175 = loc(fused[#loc16, #loc17])
#loc176 = loc(fused[#loc18, #loc19])
#loc177 = loc(fused[#loc20, #loc21])
#loc178 = loc(fused[#loc23, #loc22])
#loc179 = loc(fused[#loc24, #loc25])
#loc180 = loc(fused[#loc27, #loc21])
#loc181 = loc(fused[#loc41, #loc40])
#loc182 = loc(fused[#loc43, #loc44])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc47, #loc48])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc54, #loc53])
#loc188 = loc(fused[#loc55, #loc56])
#loc189 = loc(fused[#loc59, #loc60])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc64, #loc65])
#loc192 = loc(fused[#loc66, #loc67])
#loc193 = loc(fused[#loc69, #loc68])
#loc194 = loc(fused[#loc70, #loc71])
#loc195 = loc(fused[#loc73, #loc67])
#loc196 = loc(fused[#loc75, #loc74])
#loc197 = loc(fused[#loc79, #loc78])
#loc198 = loc(fused[#loc83, #loc82])
#loc199 = loc(fused[#loc84, #loc85])
#loc200 = loc(fused[#loc86, #loc87])
#loc201 = loc(fused[#loc88, #loc89])
#loc202 = loc(fused[#loc91, #loc90])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc95, #loc89])
#loc205 = loc(fused[#loc107, #loc106])
#loc206 = loc(fused[#loc109, #loc110])
#loc207 = loc(fused[#loc111, #loc112])
#loc208 = loc(fused[#loc114, #loc113])
#loc209 = loc(fused[#loc115, #loc116])
#loc210 = loc(fused[#loc118, #loc119])
#loc211 = loc(fused[#loc120, #loc121])
#loc212 = loc(fused[#loc122, #loc123])
#loc213 = loc(fused[#loc125, #loc124])
#loc214 = loc(fused[#loc126, #loc127])
#loc215 = loc(fused[#loc129, #loc123])
#loc216 = loc(fused[#loc131, #loc130])
#loc217 = loc(fused[#loc135, #loc134])
#loc218 = loc(fused[#loc139, #loc138])
#loc219 = loc(fused[#loc141, #loc142])
#loc220 = loc(fused[#loc144, #loc145])
#loc221 = loc(fused[#loc146, #loc147])
#loc222 = loc(fused[#loc148, #loc149])
#loc223 = loc(fused[#loc151, #loc150])
#loc224 = loc(fused[#loc152, #loc153])
#loc225 = loc(fused[#loc155, #loc149])
#loc226 = loc(fused[#loc167, #loc166])
