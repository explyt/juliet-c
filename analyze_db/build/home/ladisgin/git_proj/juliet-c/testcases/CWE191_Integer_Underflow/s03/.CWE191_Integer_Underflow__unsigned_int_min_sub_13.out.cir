!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":162:10)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":162:14)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":162:20)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":162:32)
#loc218 = loc(fused[#loc52, #loc53])
#loc219 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private @printUnsignedLine(!u32i) loc(#loc195)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_13_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc9)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc198)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc200)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc16)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc16)
        cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc202)
      } loc(#loc201)
    } loc(#loc199)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc21)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc204)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc27)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc26)
          %11 = cir.binop(sub, %8, %10) : !u32i loc(#loc208)
          cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc207)
          %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc28)
          cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc29)
        } loc(#loc206)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc6)
  } loc(#loc196)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_13_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc31)
  } loc(#loc209)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc215)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_min_sub_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE191_Integer_Underflow__unsigned_int_min_sub_13_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_min_sub_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE191_Integer_Underflow__unsigned_int_min_sub_13_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.return %17 : !s32i loc(#loc222)
  } loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc76)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc225)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc81)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc227)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc83)
        cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc229)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc88)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc231)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc95)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc96)
          %10 = cir.cmp(gt, %7, %9) : !u32i, !cir.bool loc(#loc234)
          cir.if %10 {
            %11 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc236)
            %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc102)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc101)
            %15 = cir.binop(sub, %12, %14) : !u32i loc(#loc237)
            cir.store %15, %11 : !u32i, !cir.ptr<!u32i> loc(#loc236)
            %16 = cir.load %11 : !cir.ptr<!u32i>, !u32i loc(#loc103)
            cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc104)
          } else {
            %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc71)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc71)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          } loc(#loc235)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc73)
  } loc(#loc223)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc110)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc240)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc115)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc242)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc117)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc117)
        cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc244)
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc246)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc126)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc127)
          %10 = cir.cmp(gt, %7, %9) : !u32i, !cir.bool loc(#loc249)
          cir.if %10 {
            %11 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc251)
            %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc133)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc132)
            %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc132)
            %15 = cir.binop(sub, %12, %14) : !u32i loc(#loc252)
            cir.store %15, %11 : !u32i, !cir.ptr<!u32i> loc(#loc251)
            %16 = cir.load %11 : !cir.ptr<!u32i>, !u32i loc(#loc134)
            cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc135)
          } else {
            %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc136)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc136)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc137)
          } loc(#loc250)
        } loc(#loc248)
      } loc(#loc247)
    } loc(#loc245)
    cir.return loc(#loc107)
  } loc(#loc238)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc142)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc255)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc257)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc152)
      } else {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc153)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc154)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc154)
        cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc259)
      } loc(#loc258)
    } loc(#loc256)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc159)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc261)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc264)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc165)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc164)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc164)
          %11 = cir.binop(sub, %8, %10) : !u32i loc(#loc265)
          cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc264)
          %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc166)
          cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc167)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc139)
  } loc(#loc253)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc172)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc268)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc177)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc270)
      cir.if %6 {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc179)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc180)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc180)
        cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc272)
      } loc(#loc271)
    } loc(#loc269)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc194)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc185)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc274)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc191)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc190)
          %11 = cir.binop(sub, %8, %10) : !u32i loc(#loc278)
          cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc277)
          %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc192)
          cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc193)
        } loc(#loc276)
      } loc(#loc275)
    } loc(#loc273)
    cir.return loc(#loc169)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":22:1)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":39:1)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":24:5)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":24:18)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":25:12)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":25:5)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":26:5)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":30:5)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":26:8)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":26:27)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":27:5)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":29:16)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":29:9)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":31:5)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":38:5)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":31:8)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":31:27)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":32:5)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":33:9)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":37:9)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":35:13)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":35:42)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":35:35)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":36:31)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":36:13)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":145:1)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":151:1)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":147:5)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":147:14)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":148:5)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":148:14)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":149:5)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":149:14)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":150:5)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":150:14)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":167:15)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":169:15)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":172:15)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":174:15)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":162:1)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":177:1)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":163:1)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":165:27)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":165:22)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":165:5)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":167:5)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":168:5)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":168:60)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":169:5)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":172:5)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":173:5)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":173:59)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":174:5)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":176:12)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":176:5)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":58:19)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":70:23)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":46:1)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":73:1)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":48:5)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":48:18)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":49:12)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":49:5)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":50:5)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":54:5)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":50:8)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":50:27)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":51:5)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":53:16)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":53:9)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":55:5)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":72:5)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":55:8)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":55:27)
#loc89 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":56:5)
#loc90 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":59:5)
#loc91 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":61:5)
#loc92 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":58:9)
#loc93 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":63:9)
#loc94 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":71:9)
#loc95 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":63:13)
#loc96 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":63:20)
#loc97 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":64:9)
#loc98 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":67:9)
#loc99 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":69:9)
#loc100 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":65:13)
#loc101 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":65:42)
#loc102 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":65:35)
#loc103 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":66:31)
#loc104 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":66:13)
#loc105 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":70:13)
#loc106 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":76:1)
#loc107 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":98:1)
#loc108 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":78:5)
#loc109 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":78:18)
#loc110 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":79:12)
#loc111 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":79:5)
#loc112 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":80:5)
#loc113 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":84:5)
#loc114 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":80:8)
#loc115 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":80:27)
#loc116 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":81:5)
#loc117 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":83:16)
#loc118 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":83:9)
#loc119 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":85:5)
#loc120 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":97:5)
#loc121 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":85:8)
#loc122 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":85:27)
#loc123 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":86:5)
#loc124 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":88:9)
#loc125 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":96:9)
#loc126 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":88:13)
#loc127 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":88:20)
#loc128 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":89:9)
#loc129 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":92:9)
#loc130 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":94:9)
#loc131 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":90:13)
#loc132 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":90:42)
#loc133 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":90:35)
#loc134 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":91:31)
#loc135 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":91:13)
#loc136 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":95:23)
#loc137 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":95:13)
#loc138 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":101:1)
#loc139 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":123:1)
#loc140 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":103:5)
#loc141 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":103:18)
#loc142 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":104:12)
#loc143 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":104:5)
#loc144 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":105:5)
#loc145 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":114:5)
#loc146 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":105:8)
#loc147 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":105:27)
#loc148 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":106:5)
#loc149 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":109:5)
#loc150 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":111:5)
#loc151 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":108:19)
#loc152 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":108:9)
#loc153 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":113:17)
#loc154 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":113:16)
#loc155 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":113:9)
#loc156 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":115:5)
#loc157 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":122:5)
#loc158 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":115:8)
#loc159 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":115:27)
#loc160 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":116:5)
#loc161 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":117:9)
#loc162 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":121:9)
#loc163 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":119:13)
#loc164 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":119:42)
#loc165 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":119:35)
#loc166 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":120:31)
#loc167 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":120:13)
#loc168 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":126:1)
#loc169 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":143:1)
#loc170 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":128:5)
#loc171 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":128:18)
#loc172 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":129:12)
#loc173 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":129:5)
#loc174 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":130:5)
#loc175 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":134:5)
#loc176 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":130:8)
#loc177 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":130:27)
#loc178 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":131:5)
#loc179 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":133:17)
#loc180 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":133:16)
#loc181 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":133:9)
#loc182 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":135:5)
#loc183 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":142:5)
#loc184 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":135:8)
#loc185 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":135:27)
#loc186 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":136:5)
#loc187 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":137:9)
#loc188 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":141:9)
#loc189 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":139:13)
#loc190 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":139:42)
#loc191 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":139:35)
#loc192 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":140:31)
#loc193 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_13.c":140:13)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc3, #loc4])
#loc196 = loc(fused[#loc5, #loc6])
#loc197 = loc(fused[#loc7, #loc8])
#loc198 = loc(fused[#loc10, #loc9])
#loc199 = loc(fused[#loc11, #loc12])
#loc200 = loc(fused[#loc13, #loc14])
#loc201 = loc(fused[#loc15, #loc12])
#loc202 = loc(fused[#loc17, #loc16])
#loc203 = loc(fused[#loc18, #loc19])
#loc204 = loc(fused[#loc20, #loc21])
#loc205 = loc(fused[#loc22, #loc19])
#loc206 = loc(fused[#loc23, #loc24])
#loc207 = loc(fused[#loc25, #loc26])
#loc208 = loc(fused[#loc27, #loc26])
#loc209 = loc(fused[#loc30, #loc31])
#loc210 = loc(fused[#loc32, #loc33])
#loc211 = loc(fused[#loc34, #loc35])
#loc212 = loc(fused[#loc36, #loc37])
#loc213 = loc(fused[#loc38, #loc39])
#loc214 = loc(fused[#loc40, #loc41])
#loc215 = loc(fused[#loc42, #loc43])
#loc216 = loc(fused[#loc44, #loc45])
#loc217 = loc(fused[#loc50, #loc51])
#loc220 = loc(fused[#loc61, #loc62])
#loc221 = loc(fused[#loc65, #loc66])
#loc222 = loc(fused[#loc69, #loc68])
#loc223 = loc(fused[#loc72, #loc73])
#loc224 = loc(fused[#loc74, #loc75])
#loc225 = loc(fused[#loc77, #loc76])
#loc226 = loc(fused[#loc78, #loc79])
#loc227 = loc(fused[#loc80, #loc81])
#loc228 = loc(fused[#loc82, #loc79])
#loc229 = loc(fused[#loc84, #loc83])
#loc230 = loc(fused[#loc85, #loc86])
#loc231 = loc(fused[#loc87, #loc88])
#loc232 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc233 = loc(fused[#loc93, #loc94])
#loc234 = loc(fused[#loc95, #loc96])
#loc235 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc236 = loc(fused[#loc100, #loc101])
#loc237 = loc(fused[#loc102, #loc101])
#loc238 = loc(fused[#loc106, #loc107])
#loc239 = loc(fused[#loc108, #loc109])
#loc240 = loc(fused[#loc111, #loc110])
#loc241 = loc(fused[#loc112, #loc113])
#loc242 = loc(fused[#loc114, #loc115])
#loc243 = loc(fused[#loc116, #loc113])
#loc244 = loc(fused[#loc118, #loc117])
#loc245 = loc(fused[#loc119, #loc120])
#loc246 = loc(fused[#loc121, #loc122])
#loc247 = loc(fused[#loc123, #loc120])
#loc248 = loc(fused[#loc124, #loc125])
#loc249 = loc(fused[#loc126, #loc127])
#loc250 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc251 = loc(fused[#loc131, #loc132])
#loc252 = loc(fused[#loc133, #loc132])
#loc253 = loc(fused[#loc138, #loc139])
#loc254 = loc(fused[#loc140, #loc141])
#loc255 = loc(fused[#loc143, #loc142])
#loc256 = loc(fused[#loc144, #loc145])
#loc257 = loc(fused[#loc146, #loc147])
#loc258 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc259 = loc(fused[#loc155, #loc153])
#loc260 = loc(fused[#loc156, #loc157])
#loc261 = loc(fused[#loc158, #loc159])
#loc262 = loc(fused[#loc160, #loc157])
#loc263 = loc(fused[#loc161, #loc162])
#loc264 = loc(fused[#loc163, #loc164])
#loc265 = loc(fused[#loc165, #loc164])
#loc266 = loc(fused[#loc168, #loc169])
#loc267 = loc(fused[#loc170, #loc171])
#loc268 = loc(fused[#loc173, #loc172])
#loc269 = loc(fused[#loc174, #loc175])
#loc270 = loc(fused[#loc176, #loc177])
#loc271 = loc(fused[#loc178, #loc175])
#loc272 = loc(fused[#loc181, #loc179])
#loc273 = loc(fused[#loc182, #loc183])
#loc274 = loc(fused[#loc184, #loc185])
#loc275 = loc(fused[#loc186, #loc183])
#loc276 = loc(fused[#loc187, #loc188])
#loc277 = loc(fused[#loc189, #loc190])
#loc278 = loc(fused[#loc191, #loc190])
