!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc132)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc135)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc139)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc144)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc30)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc145)
    } loc(#loc143)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc37)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc39)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc152)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc152)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc152)
        %30 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc54)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
        %35 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
        %37 = cir.const #cir.int<1> : !u64i loc(#loc153)
        %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc154)
        cir.libc.memmove %38 bytes from %33 to %31 : !cir.ptr<!void>, !u64i loc(#loc155)
        %39 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc62)
        %41 = cir.const #cir.int<50> : !s32i loc(#loc63)
        %42 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc63)
        %44 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc65)
        %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc156)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        %47 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
        %48 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
        cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc12)
  } loc(#loc136)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc81)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc163)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc93)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
      } loc(#loc168)
    } loc(#loc166)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc95)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc96)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc100)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc102)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc102)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %24 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc173)
      %26 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      cir.scope {
        %28 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc175)
        %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc175)
        cir.store %29, %28 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc175)
        %30 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc115)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
        %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc117)
        %35 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc117)
        %37 = cir.const #cir.int<1> : !u64i loc(#loc176)
        %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc177)
        cir.libc.memmove %38 bytes from %33 to %31 : !cir.ptr<!void>, !u64i loc(#loc178)
        %39 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc123)
        %41 = cir.const #cir.int<50> : !s32i loc(#loc124)
        %42 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc124)
        %44 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc126)
        %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc126)
        cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc179)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        %47 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc129)
        %48 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
        cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc129)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc75)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":29:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":50:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":31:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":32:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":32:75)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":33:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":34:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:18)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":36:28)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":37:19)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":37:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":37:10)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":37:14)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":37:15)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":38:26)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":23:12)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":38:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":39:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":49:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":40:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":40:31)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":24:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":41:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":48:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":42:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":42:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:27)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:40)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:46)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:57)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":44:58)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":45:26)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":45:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":45:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":45:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":46:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":46:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":47:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":47:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":80:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":83:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":82:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":82:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":57:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":78:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":59:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":59:12)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":60:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":60:75)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:20)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:27)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:31)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:42)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:43)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":61:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:33)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:23)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:30)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":62:29)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:18)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:26)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":64:27)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":65:18)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":65:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":65:10)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":65:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":65:14)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":66:26)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":66:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":67:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":77:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":68:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":68:31)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":69:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":76:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":70:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":70:29)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:21)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:40)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:46)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:57)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":72:58)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":73:26)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":73:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":73:21)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":73:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":74:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":74:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":75:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_34.c":75:18)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc15, #loc16])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc18, #loc20])
#loc141 = loc(fused[#loc17, #loc21])
#loc142 = loc(fused[#loc22, #loc21])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc24])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc38, #loc37])
#loc148 = loc(fused[#loc44, #loc42])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc50, #loc51])
#loc152 = loc(fused[#loc52, #loc53])
#loc153 = loc(fused[#loc58, #loc59])
#loc154 = loc(fused[#loc56, #loc59])
#loc155 = loc(fused[#loc60, #loc61])
#loc156 = loc(fused[#loc65, #loc62])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc72, #loc73])
#loc159 = loc(fused[#loc74, #loc75])
#loc160 = loc(fused[#loc76, #loc77])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc81, #loc83])
#loc164 = loc(fused[#loc80, #loc84])
#loc165 = loc(fused[#loc85, #loc84])
#loc166 = loc(fused[#loc86, #loc87])
#loc167 = loc(fused[#loc88, #loc89])
#loc168 = loc(fused[#loc90, #loc87])
#loc169 = loc(fused[#loc98, #loc99])
#loc170 = loc(fused[#loc101, #loc100])
#loc171 = loc(fused[#loc106, #loc105])
#loc172 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc109, #loc110])
#loc174 = loc(fused[#loc111, #loc112])
#loc175 = loc(fused[#loc113, #loc114])
#loc176 = loc(fused[#loc119, #loc120])
#loc177 = loc(fused[#loc117, #loc120])
#loc178 = loc(fused[#loc121, #loc122])
#loc179 = loc(fused[#loc126, #loc123])
