!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__counter_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"important_file.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE511_Logic_Time_Bomb__counter_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc57)
    cir.goto "sink" loc(#loc58)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc10)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc7)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.scope {
      cir.do {
        cir.scope {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
            %5 = cir.const #cir.int<20000> : !s32i loc(#loc18)
            %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc62)
            cir.if %6 {
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
              %9 = cir.call @unlink(%8) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
            } loc(#loc63)
          } loc(#loc61)
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc22)
          cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
        } loc(#loc60)
        cir.yield loc(#loc12)
      } while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc65)
        cir.condition(%4) loc(#loc25)
      } loc(#loc59)
    } loc(#loc59)
    cir.return loc(#loc5)
  } loc(#loc56)
  cir.func no_proto @CWE511_Logic_Time_Bomb__counter_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc66)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Happy New Year!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc70)
    cir.goto "sink" loc(#loc71)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc39)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc36)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.scope {
      cir.do {
        cir.scope {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
            %5 = cir.const #cir.int<20000> : !s32i loc(#loc47)
            %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc75)
            cir.if %6 {
              %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
              cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc49)
            } loc(#loc76)
          } loc(#loc74)
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc51)
          cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
        } loc(#loc73)
        cir.yield loc(#loc41)
      } while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc78)
        cir.condition(%4) loc(#loc54)
      } loc(#loc72)
    } loc(#loc72)
    cir.return loc(#loc34)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__counter_18.c":0:0)
#loc1 = loc("/usr/include/unistd.h":858:1)
#loc2 = loc("/usr/include/unistd.h":858:48)
#loc3 = loc("CWE511_Logic_Time_Bomb__counter_18.c":40:24)
#loc4 = loc("CWE511_Logic_Time_Bomb__counter_18.c":29:1)
#loc5 = loc("CWE511_Logic_Time_Bomb__counter_18.c":46:1)
#loc6 = loc("CWE511_Logic_Time_Bomb__counter_18.c":34:9)
#loc7 = loc("CWE511_Logic_Time_Bomb__counter_18.c":34:21)
#loc8 = loc("CWE511_Logic_Time_Bomb__counter_18.c":31:5)
#loc9 = loc("CWE511_Logic_Time_Bomb__counter_18.c":31:10)
#loc10 = loc("CWE511_Logic_Time_Bomb__counter_18.c":32:1)
#loc11 = loc("CWE511_Logic_Time_Bomb__counter_18.c":35:9)
#loc12 = loc("CWE511_Logic_Time_Bomb__counter_18.c":44:21)
#loc13 = loc("CWE511_Logic_Time_Bomb__counter_18.c":36:9)
#loc14 = loc("CWE511_Logic_Time_Bomb__counter_18.c":43:9)
#loc15 = loc("CWE511_Logic_Time_Bomb__counter_18.c":38:13)
#loc16 = loc("CWE511_Logic_Time_Bomb__counter_18.c":41:13)
#loc17 = loc("CWE511_Logic_Time_Bomb__counter_18.c":38:17)
#loc18 = loc("CWE511_Logic_Time_Bomb__counter_18.c":38:26)
#loc19 = loc("CWE511_Logic_Time_Bomb__counter_18.c":39:13)
#loc20 = loc("CWE511_Logic_Time_Bomb__counter_18.c":40:17)
#loc21 = loc("CWE511_Logic_Time_Bomb__counter_18.c":42:18)
#loc22 = loc("CWE511_Logic_Time_Bomb__counter_18.c":42:13)
#loc23 = loc("CWE511_Logic_Time_Bomb__counter_18.c":44:15)
#loc24 = loc("CWE511_Logic_Time_Bomb__counter_18.c":44:20)
#loc25 = loc("CWE511_Logic_Time_Bomb__counter_18.c":44:17)
#loc26 = loc("CWE511_Logic_Time_Bomb__counter_18.c":72:1)
#loc27 = loc("CWE511_Logic_Time_Bomb__counter_18.c":75:1)
#loc28 = loc("CWE511_Logic_Time_Bomb__counter_18.c":74:5)
#loc29 = loc("CWE511_Logic_Time_Bomb__counter_18.c":74:11)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE511_Logic_Time_Bomb__counter_18.c":64:27)
#loc33 = loc("CWE511_Logic_Time_Bomb__counter_18.c":53:1)
#loc34 = loc("CWE511_Logic_Time_Bomb__counter_18.c":70:1)
#loc35 = loc("CWE511_Logic_Time_Bomb__counter_18.c":58:9)
#loc36 = loc("CWE511_Logic_Time_Bomb__counter_18.c":58:21)
#loc37 = loc("CWE511_Logic_Time_Bomb__counter_18.c":55:5)
#loc38 = loc("CWE511_Logic_Time_Bomb__counter_18.c":55:10)
#loc39 = loc("CWE511_Logic_Time_Bomb__counter_18.c":56:1)
#loc40 = loc("CWE511_Logic_Time_Bomb__counter_18.c":59:9)
#loc41 = loc("CWE511_Logic_Time_Bomb__counter_18.c":68:21)
#loc42 = loc("CWE511_Logic_Time_Bomb__counter_18.c":60:9)
#loc43 = loc("CWE511_Logic_Time_Bomb__counter_18.c":67:9)
#loc44 = loc("CWE511_Logic_Time_Bomb__counter_18.c":62:13)
#loc45 = loc("CWE511_Logic_Time_Bomb__counter_18.c":65:13)
#loc46 = loc("CWE511_Logic_Time_Bomb__counter_18.c":62:17)
#loc47 = loc("CWE511_Logic_Time_Bomb__counter_18.c":62:26)
#loc48 = loc("CWE511_Logic_Time_Bomb__counter_18.c":63:13)
#loc49 = loc("CWE511_Logic_Time_Bomb__counter_18.c":64:17)
#loc50 = loc("CWE511_Logic_Time_Bomb__counter_18.c":66:18)
#loc51 = loc("CWE511_Logic_Time_Bomb__counter_18.c":66:13)
#loc52 = loc("CWE511_Logic_Time_Bomb__counter_18.c":68:15)
#loc53 = loc("CWE511_Logic_Time_Bomb__counter_18.c":68:20)
#loc54 = loc("CWE511_Logic_Time_Bomb__counter_18.c":68:17)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc4, #loc5])
#loc57 = loc(fused[#loc6, #loc7])
#loc58 = loc(fused[#loc8, #loc9])
#loc59 = loc(fused[#loc11, #loc12])
#loc60 = loc(fused[#loc13, #loc14])
#loc61 = loc(fused[#loc15, #loc16])
#loc62 = loc(fused[#loc17, #loc18])
#loc63 = loc(fused[#loc19, #loc16])
#loc64 = loc(fused[#loc22, #loc21])
#loc65 = loc(fused[#loc23, #loc24])
#loc66 = loc(fused[#loc26, #loc27])
#loc67 = loc(fused[#loc28, #loc29])
#loc68 = loc(fused[#loc30, #loc31])
#loc69 = loc(fused[#loc33, #loc34])
#loc70 = loc(fused[#loc35, #loc36])
#loc71 = loc(fused[#loc37, #loc38])
#loc72 = loc(fused[#loc40, #loc41])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc45])
#loc75 = loc(fused[#loc46, #loc47])
#loc76 = loc(fused[#loc48, #loc45])
#loc77 = loc(fused[#loc51, #loc50])
#loc78 = loc(fused[#loc52, #loc53])
