!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_619badSourceEP12TwoIntsClass(!cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
  cir.func linkonce_odr @_ZN12TwoIntsClassaSERKS_(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7), %arg1: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["", init, const] {alignment = 8 : i64} loc(#loc3)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    cir.store %arg1, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc3)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc3)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return %10 : !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc130)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_613badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc17)
    cir.store %4, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc136)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
    %6 = cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_619badSourceEP12TwoIntsClass(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
    cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %12 ^bb5, ^bb9 loc(#loc142)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!ty_TwoIntsClass>, %14 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!ty_TwoIntsClass>, %19 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc42)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb4 loc(#loc140)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc147)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc148)
  ^bb13:  // pred: ^bb12
    %25 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc47)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.br ^bb14 loc(#loc148)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc50)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %30 ^bb15, ^bb19 loc(#loc150)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc151)
  ^bb16:  // pred: ^bb15
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty_TwoIntsClass>, %31 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty_TwoIntsClass>, %35 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
    %37 = cir.call @_ZN12TwoIntsClassaSERKS_(%36, %33) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr2) loc(#loc57)
    cir.br ^bb17 loc(#loc46)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc46)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc59)
    cir.store %39, %2 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb14 loc(#loc148)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc46)
  ^bb20:  // pred: ^bb19
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!ty_TwoIntsClass>, %41 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
    %43 = cir.get_member %42[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc64)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
    cir.delete.array %45 : <!ty_TwoIntsClass> loc(#loc65)
    cir.br ^bb21 loc(#loc44)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc24)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc8)
  } loc(#loc131)
  cir.func private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_6113goodG2BSourceEP12TwoIntsClass(!cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
  cir.func internal private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
    %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
    cir.store %4, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc159)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    %6 = cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_6113goodG2BSourceEP12TwoIntsClass(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc162)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc90)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc93)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc165)
    cir.brcond %12 ^bb5, ^bb9 loc(#loc165)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!ty_TwoIntsClass>, %14 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!ty_TwoIntsClass>, %19 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
    %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc102)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    cir.br ^bb4 loc(#loc163)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc89)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc87)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc170)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // pred: ^bb12
    %25 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc107)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb14 loc(#loc171)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %27 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc110)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc173)
    cir.brcond %30 ^bb15, ^bb19 loc(#loc173)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc174)
  ^bb16:  // pred: ^bb15
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty_TwoIntsClass>, %31 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc114)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty_TwoIntsClass>, %35 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
    %37 = cir.call @_ZN12TwoIntsClassaSERKS_(%36, %33) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr2) loc(#loc117)
    cir.br ^bb17 loc(#loc106)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc106)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc119)
    cir.store %39, %2 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb14 loc(#loc171)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc106)
  ^bb20:  // pred: ^bb19
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc120)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!ty_TwoIntsClass>, %41 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc122)
    %43 = cir.get_member %42[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc124)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
    cir.delete.array %45 : <!ty_TwoIntsClass> loc(#loc125)
    cir.br ^bb21 loc(#loc104)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc85)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc69)
  } loc(#loc154)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_614goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61L7goodG2BEv() : () -> () loc(#loc128)
    cir.return loc(#loc127)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":25:45)
#loc4 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":54:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":33:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":33:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":35:13)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":35:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":44:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":44:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":29:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":30:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":30:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":31:22)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":31:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":31:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":31:26)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":32:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":53:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":34:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":42:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":41:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:22)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:18)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:25)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":38:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":39:36)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":39:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":39:17)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":40:36)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":40:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":40:17)
#loc40 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:35)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":37:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":43:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":52:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":49:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:22)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:25)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:29)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":47:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:34)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:27)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:17)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:22)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:23)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":48:25)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":46:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":50:26)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":50:31)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":50:32)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":50:34)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":50:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":51:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":61:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":61:49)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":63:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":90:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":69:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":69:32)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":71:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":71:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":80:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":80:20)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":65:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":65:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":66:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":66:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":67:26)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":67:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":67:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":67:30)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":68:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":89:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":70:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":78:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":77:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:22)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:18)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:25)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:29)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":74:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":75:36)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":75:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":75:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":76:36)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":76:24)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":76:17)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:35)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":73:34)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":79:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":88:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":85:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:22)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:18)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:25)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:29)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":83:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:34)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:27)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:22)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:23)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":84:25)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:35)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":82:34)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":86:26)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":86:31)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":86:32)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":86:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":86:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":87:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":92:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":95:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_loop_61a.cpp":94:5)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc18, #loc17])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc26])
#loc140 = loc(fused[#loc27, #loc28])
#loc141 = loc(fused[#loc30, #loc29])
#loc142 = loc(fused[#loc31, #loc32])
#loc143 = loc(fused[#loc33, #loc28])
#loc144 = loc(fused[#loc36, #loc34])
#loc145 = loc(fused[#loc39, #loc37])
#loc146 = loc(fused[#loc42, #loc41])
#loc147 = loc(fused[#loc43, #loc44])
#loc148 = loc(fused[#loc45, #loc46])
#loc149 = loc(fused[#loc48, #loc47])
#loc150 = loc(fused[#loc49, #loc50])
#loc151 = loc(fused[#loc51, #loc46])
#loc152 = loc(fused[#loc59, #loc58])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc79, #loc78])
#loc160 = loc(fused[#loc82, #loc83])
#loc161 = loc(fused[#loc84, #loc85])
#loc162 = loc(fused[#loc86, #loc87])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc91, #loc90])
#loc165 = loc(fused[#loc92, #loc93])
#loc166 = loc(fused[#loc94, #loc89])
#loc167 = loc(fused[#loc97, #loc95])
#loc168 = loc(fused[#loc100, #loc98])
#loc169 = loc(fused[#loc102, #loc101])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc109, #loc110])
#loc174 = loc(fused[#loc111, #loc106])
#loc175 = loc(fused[#loc119, #loc118])
#loc176 = loc(fused[#loc126, #loc127])
