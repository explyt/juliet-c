!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc164)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%4) loc(#loc22)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc172)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc172)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc172)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc30)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc30)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc30)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc30)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc30)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc30)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc174)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc34)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc42)
            } loc(#loc175)
          } loc(#loc173)
        } loc(#loc171)
        cir.break loc(#loc43)
      } loc(#loc170)
    } loc(#loc170)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
        cir.condition(%4) loc(#loc46)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc179)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc179)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc179)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc54)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !s32i loc(#loc181)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc55)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc60)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc60)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc61)
            } else {
              %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
            } loc(#loc182)
          } loc(#loc180)
        } loc(#loc178)
        cir.break loc(#loc63)
      } loc(#loc177)
    } loc(#loc177)
    cir.return loc(#loc14)
  } loc(#loc167)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc65)
  } loc(#loc183)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc76)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc80)
        cir.condition(%4) loc(#loc80)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc191)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc191)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc191)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc88)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc88)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc88)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc88)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc88)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc88)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc88)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc88)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc90)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc193)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc92)
            cir.if %20 {
              %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
              %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
              cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
            } else {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc101)
            } loc(#loc194)
          } loc(#loc192)
        } loc(#loc190)
        cir.break loc(#loc102)
      } loc(#loc189)
    } loc(#loc189)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc105)
        cir.condition(%4) loc(#loc105)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc198)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc198)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc198)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc113)
            %7 = cir.cmp(ge, %5, %6) : !s32i, !s32i loc(#loc200)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc114)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc117)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc201)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc119)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc115)
                cir.yield %15 : !cir.bool loc(#loc115)
              }, false {
                %15 = cir.const #false loc(#loc115)
                cir.yield %15 : !cir.bool loc(#loc115)
              }) : (!cir.bool) -> !cir.bool loc(#loc115)
              cir.yield %14 : !cir.bool loc(#loc115)
            }, false {
              %10 = cir.const #false loc(#loc115)
              cir.yield %10 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc124)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc124)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc125)
            } else {
              %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc70)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc70)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
            } loc(#loc202)
          } loc(#loc199)
        } loc(#loc197)
        cir.break loc(#loc127)
      } loc(#loc196)
    } loc(#loc196)
    cir.return loc(#loc72)
  } loc(#loc186)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc137)
        cir.condition(%4) loc(#loc137)
      } do {
        %3 = cir.const #cir.int<7> : !s32i loc(#loc138)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
        cir.break loc(#loc140)
      } loc(#loc206)
    } loc(#loc206)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc143)
        cir.condition(%4) loc(#loc143)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc210)
          %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc210)
          cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc210)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %6 = cir.const #cir.int<10> : !s32i loc(#loc151)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !s32i loc(#loc212)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc152)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc157)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc157)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc158)
            } else {
              %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc159)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            } loc(#loc213)
          } loc(#loc211)
        } loc(#loc209)
        cir.break loc(#loc161)
      } loc(#loc208)
    } loc(#loc208)
    cir.return loc(#loc129)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":58:27)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":24:1)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":63:1)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":26:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":26:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":28:13)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":28:12)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":28:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":29:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":45:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":29:11)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":31:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":43:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":32:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":32:49)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":42:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:23)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:36)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:53)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:17)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:63)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":34:60)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":35:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":38:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":40:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":37:29)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":37:24)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":37:17)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":37:40)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":41:17)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":44:9)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":46:5)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":62:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":46:11)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":48:9)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":60:9)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":49:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":49:34)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":52:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":59:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":52:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":52:24)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":52:22)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":53:13)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":55:13)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":57:13)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":54:37)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":54:30)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":54:17)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":58:17)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":61:9)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":142:1)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":146:1)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":144:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":144:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":145:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":145:13)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":103:27)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":70:1)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":108:1)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":72:5)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":72:9)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":74:13)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":74:12)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":74:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":75:5)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":91:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":75:11)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":77:9)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":89:9)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":78:13)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":78:49)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":88:13)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:23)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:36)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:53)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:17)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:63)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":80:60)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":81:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":84:13)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":86:13)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":83:29)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":83:24)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":83:17)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":83:40)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":87:27)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":87:17)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":90:9)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":92:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":107:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":92:11)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":94:9)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":105:9)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":95:13)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":95:34)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:13)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":104:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:17)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:25)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:22)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:27)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:30)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:38)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:40)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":97:35)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":98:13)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":100:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":102:13)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":99:37)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":99:30)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":99:17)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":103:17)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":106:9)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":111:1)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":140:1)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":113:5)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":113:9)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":115:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":115:12)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":115:5)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":116:5)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":122:5)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":116:11)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":120:16)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":120:9)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":121:9)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":123:5)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":139:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":123:11)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":125:9)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":137:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":126:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":126:34)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":129:13)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":136:13)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":129:17)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":129:24)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":129:22)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":130:13)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":132:13)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":134:13)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":131:37)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":131:30)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":131:17)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":135:27)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":135:17)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fgets_16.c":138:9)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc10, #loc11])
#loc167 = loc(fused[#loc13, #loc14])
#loc168 = loc(fused[#loc15, #loc16])
#loc169 = loc(fused[#loc19, #loc17])
#loc170 = loc(fused[#loc20, #loc21])
#loc171 = loc(fused[#loc23, #loc24])
#loc172 = loc(fused[#loc25, #loc26])
#loc173 = loc(fused[#loc27, #loc28])
#loc174 = loc(fused[#loc32, #loc33])
#loc175 = loc(fused[#loc35, #loc36, #loc37, #loc28])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc51, #loc52])
#loc181 = loc(fused[#loc53, #loc54])
#loc182 = loc(fused[#loc56, #loc57, #loc58, #loc52])
#loc183 = loc(fused[#loc64, #loc65])
#loc184 = loc(fused[#loc66, #loc67])
#loc185 = loc(fused[#loc68, #loc69])
#loc186 = loc(fused[#loc71, #loc72])
#loc187 = loc(fused[#loc73, #loc74])
#loc188 = loc(fused[#loc77, #loc75])
#loc189 = loc(fused[#loc78, #loc79])
#loc190 = loc(fused[#loc81, #loc82])
#loc191 = loc(fused[#loc83, #loc84])
#loc192 = loc(fused[#loc85, #loc86])
#loc193 = loc(fused[#loc90, #loc91])
#loc194 = loc(fused[#loc93, #loc94, #loc95, #loc86])
#loc195 = loc(fused[#loc98, #loc99])
#loc196 = loc(fused[#loc103, #loc104])
#loc197 = loc(fused[#loc106, #loc107])
#loc198 = loc(fused[#loc108, #loc109])
#loc199 = loc(fused[#loc110, #loc111])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc116, #loc118])
#loc202 = loc(fused[#loc120, #loc121, #loc122, #loc111])
#loc203 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc134, #loc132])
#loc206 = loc(fused[#loc135, #loc136])
#loc207 = loc(fused[#loc139, #loc138])
#loc208 = loc(fused[#loc141, #loc142])
#loc209 = loc(fused[#loc144, #loc145])
#loc210 = loc(fused[#loc146, #loc147])
#loc211 = loc(fused[#loc148, #loc149])
#loc212 = loc(fused[#loc150, #loc151])
#loc213 = loc(fused[#loc153, #loc154, #loc155, #loc149])
