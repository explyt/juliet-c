!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_229badGlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc344)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc347)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc348)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc349)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc350)
  cir.func private @close(!s32i) -> !s32i loc(#loc351)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_227badSinkEi(!s32i) loc(#loc352)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_223badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc357)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc358)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc359)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc360)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc34)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc359)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc41)
            %13 = cir.const #cir.int<1> : !u32i loc(#loc42)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc42)
            %15 = cir.const #cir.int<6> : !u32i loc(#loc43)
            %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc43)
            %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
            cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc363)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc49)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc50)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc365)
              cir.if %58 {
                cir.break loc(#loc52)
              } loc(#loc366)
            } loc(#loc364)
            %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc367)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc368)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc369)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc60)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc60)
            %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc370)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc63)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc371)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc68)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc68)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc69)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc372)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %56 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc374)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc375)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc375)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc80)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc81)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc81)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc376)
              cir.if %62 {
                cir.break loc(#loc83)
              } loc(#loc377)
            } loc(#loc373)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
            %36 = cir.const #cir.int<3> : !s32i loc(#loc86)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc86)
            %38 = cir.const #cir.int<4> : !u64i loc(#loc86)
            %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc86)
            %40 = cir.const #cir.int<2> : !s32i loc(#loc86)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc86)
            %42 = cir.binop(add, %39, %41) : !u64i loc(#loc86)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc87)
            %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc378)
            %46 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc89)
            %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc89)
            cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc379)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc95)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc381)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc96)
                cir.yield %60 : !cir.bool loc(#loc96)
              }, false {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc382)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc96)
                  cir.yield %64 : !cir.bool loc(#loc96)
                }, false {
                  %64 = cir.const #false loc(#loc96)
                  cir.yield %64 : !cir.bool loc(#loc96)
                }) : (!cir.bool) -> !cir.bool loc(#loc96)
                cir.yield %63 : !cir.bool loc(#loc96)
              }) : (!cir.bool) -> !cir.bool loc(#loc96)
              cir.if %59 {
                cir.break loc(#loc100)
              } loc(#loc383)
            } loc(#loc380)
            %49 = cir.const #cir.int<0> : !s8i loc(#loc101)
            %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc103)
            cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc384)
            %53 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
            %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc105)
            cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
          } loc(#loc362)
          cir.yield loc(#loc38)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc108)
          cir.condition(%13) loc(#loc108)
        } loc(#loc361)
      } loc(#loc361)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc112)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc387)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc115)
        } loc(#loc388)
      } loc(#loc386)
    } loc(#loc356)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %4 = cir.get_global @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_229badGlobalE : !cir.ptr<!s32i> loc(#loc344)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_227badSinkEi(%5) : (!s32i) -> () loc(#loc119)
    cir.return loc(#loc21)
  } loc(#loc353)
  cir.global external dsolocal @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodB2G1GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc390)
  cir.global external dsolocal @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodB2G2GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc391)
  cir.global external dsolocal @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodG2B1GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc392)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodB2G1SinkEi(!s32i) loc(#loc393)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc395)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc398)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc399)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc400)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc401)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc142)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc142)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc400)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc149)
            %13 = cir.const #cir.int<1> : !u32i loc(#loc150)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc150)
            %15 = cir.const #cir.int<6> : !u32i loc(#loc151)
            %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc151)
            %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc152)
            cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc404)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc158)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc158)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc406)
              cir.if %58 {
                cir.break loc(#loc160)
              } loc(#loc407)
            } loc(#loc405)
            %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc408)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc163)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc409)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc410)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc168)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc168)
            %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc411)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc170)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc170)
            %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc171)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc412)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc174)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc174)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc175)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc413)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %56 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc415)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc416)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc416)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc185)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc186)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc186)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc417)
              cir.if %62 {
                cir.break loc(#loc188)
              } loc(#loc418)
            } loc(#loc414)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc190)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
            %36 = cir.const #cir.int<3> : !s32i loc(#loc191)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc191)
            %38 = cir.const #cir.int<4> : !u64i loc(#loc191)
            %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc191)
            %40 = cir.const #cir.int<2> : !s32i loc(#loc191)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc191)
            %42 = cir.binop(add, %39, %41) : !u64i loc(#loc191)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc192)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc192)
            %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc419)
            %46 = cir.const #cir.int<0> : !s32i loc(#loc193)
            %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc194)
            %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc194)
            cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc420)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc200)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc422)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc201)
                cir.yield %60 : !cir.bool loc(#loc201)
              }, false {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc203)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc423)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc201)
                  cir.yield %64 : !cir.bool loc(#loc201)
                }, false {
                  %64 = cir.const #false loc(#loc201)
                  cir.yield %64 : !cir.bool loc(#loc201)
                }) : (!cir.bool) -> !cir.bool loc(#loc201)
                cir.yield %63 : !cir.bool loc(#loc201)
              }) : (!cir.bool) -> !cir.bool loc(#loc201)
              cir.if %59 {
                cir.break loc(#loc205)
              } loc(#loc424)
            } loc(#loc421)
            %49 = cir.const #cir.int<0> : !s8i loc(#loc206)
            %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc208)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc208)
            cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc425)
            %53 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
            %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc210)
            cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc426)
          } loc(#loc403)
          cir.yield loc(#loc146)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc213)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc213)
          cir.condition(%13) loc(#loc213)
        } loc(#loc402)
      } loc(#loc402)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc217)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc217)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc428)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc219)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc220)
        } loc(#loc429)
      } loc(#loc427)
    } loc(#loc397)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %4 = cir.get_global @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodB2G1GlobalE : !cir.ptr<!s32i> loc(#loc390)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodB2G1SinkEi(%5) : (!s32i) -> () loc(#loc224)
    cir.return loc(#loc129)
  } loc(#loc394)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodB2G2SinkEi(!s32i) loc(#loc431)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc232)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc436)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc437)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc438)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc439)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc241)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc241)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc438)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc248)
            %13 = cir.const #cir.int<1> : !u32i loc(#loc249)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc249)
            %15 = cir.const #cir.int<6> : !u32i loc(#loc250)
            %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc250)
            %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
            cir.store %17, %8 : !s32i, !cir.ptr<!s32i> loc(#loc442)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc257)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc257)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc444)
              cir.if %58 {
                cir.break loc(#loc259)
              } loc(#loc445)
            } loc(#loc443)
            %18 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc446)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc262)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc447)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc448)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc267)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc267)
            %23 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc449)
            %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc269)
            %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc269)
            %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc270)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc450)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc273)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc273)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc274)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc451)
            cir.scope {
              %55 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %56 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc453)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc454)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc454)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc284)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc285)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc285)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc455)
              cir.if %62 {
                cir.break loc(#loc287)
              } loc(#loc456)
            } loc(#loc452)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc288)
            %34 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
            %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc289)
            %36 = cir.const #cir.int<3> : !s32i loc(#loc290)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc290)
            %38 = cir.const #cir.int<4> : !u64i loc(#loc290)
            %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc290)
            %40 = cir.const #cir.int<2> : !s32i loc(#loc290)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc290)
            %42 = cir.binop(add, %39, %41) : !u64i loc(#loc290)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc291)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc291)
            %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc457)
            %46 = cir.const #cir.int<0> : !s32i loc(#loc292)
            %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc293)
            %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc293)
            cir.store %48, %6 : !s32i, !cir.ptr<!s32i> loc(#loc458)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc298)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc299)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc299)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc460)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc300)
                cir.yield %60 : !cir.bool loc(#loc300)
              }, false {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc301)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc302)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc461)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc300)
                  cir.yield %64 : !cir.bool loc(#loc300)
                }, false {
                  %64 = cir.const #false loc(#loc300)
                  cir.yield %64 : !cir.bool loc(#loc300)
                }) : (!cir.bool) -> !cir.bool loc(#loc300)
                cir.yield %63 : !cir.bool loc(#loc300)
              }) : (!cir.bool) -> !cir.bool loc(#loc300)
              cir.if %59 {
                cir.break loc(#loc304)
              } loc(#loc462)
            } loc(#loc459)
            %49 = cir.const #cir.int<0> : !s8i loc(#loc305)
            %50 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc306)
            %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc307)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc307)
            cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc463)
            %53 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc308)
            %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc309)
            cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
          } loc(#loc441)
          cir.yield loc(#loc245)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc312)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc312)
          cir.condition(%13) loc(#loc312)
        } loc(#loc440)
      } loc(#loc440)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc315)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc316)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc316)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc466)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc318)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc319)
        } loc(#loc467)
      } loc(#loc465)
    } loc(#loc435)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %4 = cir.get_global @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodB2G2GlobalE : !cir.ptr<!s32i> loc(#loc391)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodB2G2SinkEi(%5) : (!s32i) -> () loc(#loc323)
    cir.return loc(#loc228)
  } loc(#loc432)
  cir.func private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodG2B1SinkEi(!s32i) loc(#loc469)
  cir.func internal private @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc330)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc331)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc333)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %5 = cir.get_global @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc392)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_2212goodG2B1SinkEi(%6) : (!s32i) -> () loc(#loc338)
    cir.return loc(#loc327)
  } loc(#loc470)
  cir.func @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_224goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodB2G1Ev() : () -> () loc(#loc341)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodB2G2Ev() : () -> () loc(#loc342)
    cir.call @_ZN63CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22L8goodG2B1Ev() : () -> () loc(#loc343)
    cir.return loc(#loc340)
  } loc(#loc475)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":49:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":49:17)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":84:49)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":51:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":51:22)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":53:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":116:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":55:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":55:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":57:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":57:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":57:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":58:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":113:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":63:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":63:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":64:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":64:28)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":65:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":65:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":66:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":66:41)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":67:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":102:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":68:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":101:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:45)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:58)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:29)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":77:69)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":78:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":81:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":78:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":78:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":79:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":80:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:47)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":82:48)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":83:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":83:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":84:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":84:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":84:59)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":85:38)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":85:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":85:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":85:46)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":89:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:58)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:59)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:68)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:82)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":86:88)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":87:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":88:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:31)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:46)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:59)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:77)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:80)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:26)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":92:81)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":96:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:31)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:44)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:47)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":93:61)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":94:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":95:17)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":98:39)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":98:25)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":98:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":100:25)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":100:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":100:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":100:36)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":102:16)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":103:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":106:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":103:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":103:30)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":104:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":105:26)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":105:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":114:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":114:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":115:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":115:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":124:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":124:22)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":125:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":125:22)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":126:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":126:22)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":129:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":129:27)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":131:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":194:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":133:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":133:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":135:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":135:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":135:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":136:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":191:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":141:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":141:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":142:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":142:28)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":143:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":143:32)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":144:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":144:41)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":145:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":180:17)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":146:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":179:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:36)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:45)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:58)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:29)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":155:69)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":156:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":159:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":156:17)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":156:34)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":157:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":158:17)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:21)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:30)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:33)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:47)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":160:48)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":161:34)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":161:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":162:49)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":162:39)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":162:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":162:59)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":163:38)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":163:32)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":163:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":163:46)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":167:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:58)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:59)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:68)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:82)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:17)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":164:88)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":165:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":166:17)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:31)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:46)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:59)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:77)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:80)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:26)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":170:81)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":174:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:17)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:31)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:44)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:47)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":171:61)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":172:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":173:17)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":176:39)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":176:25)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":176:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":178:25)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":178:20)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":178:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":178:36)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":180:16)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":181:9)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":184:9)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":181:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":181:30)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":182:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":183:26)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":183:13)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":192:22)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":192:5)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":193:18)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":193:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":197:1)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":197:27)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":199:1)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":262:1)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":201:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":201:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":203:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":203:12)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":203:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":204:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":259:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":209:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":209:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":210:9)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":210:28)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":211:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":211:32)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":212:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":212:41)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":213:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":248:17)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":214:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":247:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:36)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:45)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:58)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:29)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":223:69)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":224:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":227:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":224:17)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":224:34)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":225:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":226:17)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:20)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:21)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:30)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:33)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:47)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":228:48)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":229:34)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":229:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":230:49)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":230:39)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":230:13)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":230:59)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":231:38)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":231:32)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":231:13)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":231:46)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:13)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":235:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:25)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:58)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:59)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:68)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:82)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":232:88)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":233:13)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":234:17)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:31)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:46)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:59)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:77)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:80)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:26)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:13)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":238:81)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:13)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":242:13)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:17)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:31)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:44)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:47)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":239:61)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":240:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":241:17)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":244:39)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":244:25)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":244:13)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":246:25)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":246:20)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":246:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":246:36)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":248:16)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":249:9)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":252:9)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":249:13)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":249:30)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":250:9)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":251:26)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":251:13)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":260:22)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":260:5)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":261:18)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":261:5)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":265:1)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":265:27)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":267:1)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":277:1)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":269:5)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":269:9)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":271:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":271:12)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":271:5)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":274:12)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":274:5)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":275:22)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":275:5)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":276:18)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":276:5)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":279:1)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":284:1)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":281:5)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":282:5)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_connect_socket_22a.cpp":283:5)
#loc344 = loc(fused[#loc1, #loc2])
#loc345 = loc(fused[#loc3, #loc4])
#loc346 = loc(fused[#loc5, #loc6])
#loc347 = loc(fused[#loc8, #loc9])
#loc348 = loc(fused[#loc10, #loc11])
#loc349 = loc(fused[#loc12, #loc13])
#loc350 = loc(fused[#loc14, #loc15])
#loc351 = loc(fused[#loc16, #loc17])
#loc352 = loc(fused[#loc18, #loc19])
#loc353 = loc(fused[#loc20, #loc21])
#loc354 = loc(fused[#loc22, #loc23])
#loc355 = loc(fused[#loc26, #loc24])
#loc356 = loc(fused[#loc27, #loc28])
#loc357 = loc(fused[#loc29, #loc30])
#loc358 = loc(fused[#loc31, #loc32])
#loc359 = loc(fused[#loc33, #loc34])
#loc360 = loc(fused[#loc35, #loc36])
#loc361 = loc(fused[#loc37, #loc38])
#loc362 = loc(fused[#loc39, #loc40])
#loc363 = loc(fused[#loc45, #loc46])
#loc364 = loc(fused[#loc47, #loc48])
#loc365 = loc(fused[#loc49, #loc50])
#loc366 = loc(fused[#loc51, #loc48])
#loc367 = loc(fused[#loc53, #loc54])
#loc368 = loc(fused[#loc56, #loc57])
#loc369 = loc(fused[#loc58, #loc59])
#loc370 = loc(fused[#loc62, #loc60])
#loc371 = loc(fused[#loc66, #loc67])
#loc372 = loc(fused[#loc71, #loc72])
#loc373 = loc(fused[#loc73, #loc74])
#loc374 = loc(fused[#loc76, #loc77])
#loc375 = loc(fused[#loc78, #loc79])
#loc376 = loc(fused[#loc80, #loc81])
#loc377 = loc(fused[#loc82, #loc74])
#loc378 = loc(fused[#loc86, #loc87])
#loc379 = loc(fused[#loc90, #loc91])
#loc380 = loc(fused[#loc92, #loc93])
#loc381 = loc(fused[#loc94, #loc95])
#loc382 = loc(fused[#loc97, #loc98])
#loc383 = loc(fused[#loc99, #loc93])
#loc384 = loc(fused[#loc103, #loc101])
#loc385 = loc(fused[#loc106, #loc107])
#loc386 = loc(fused[#loc109, #loc110])
#loc387 = loc(fused[#loc111, #loc112])
#loc388 = loc(fused[#loc113, #loc110])
#loc389 = loc(fused[#loc117, #loc116])
#loc390 = loc(fused[#loc120, #loc121])
#loc391 = loc(fused[#loc122, #loc123])
#loc392 = loc(fused[#loc124, #loc125])
#loc393 = loc(fused[#loc126, #loc127])
#loc394 = loc(fused[#loc128, #loc129])
#loc395 = loc(fused[#loc130, #loc131])
#loc396 = loc(fused[#loc134, #loc132])
#loc397 = loc(fused[#loc135, #loc136])
#loc398 = loc(fused[#loc137, #loc138])
#loc399 = loc(fused[#loc139, #loc140])
#loc400 = loc(fused[#loc141, #loc142])
#loc401 = loc(fused[#loc143, #loc144])
#loc402 = loc(fused[#loc145, #loc146])
#loc403 = loc(fused[#loc147, #loc148])
#loc404 = loc(fused[#loc153, #loc154])
#loc405 = loc(fused[#loc155, #loc156])
#loc406 = loc(fused[#loc157, #loc158])
#loc407 = loc(fused[#loc159, #loc156])
#loc408 = loc(fused[#loc161, #loc162])
#loc409 = loc(fused[#loc164, #loc165])
#loc410 = loc(fused[#loc166, #loc167])
#loc411 = loc(fused[#loc169, #loc168])
#loc412 = loc(fused[#loc172, #loc173])
#loc413 = loc(fused[#loc176, #loc177])
#loc414 = loc(fused[#loc178, #loc179])
#loc415 = loc(fused[#loc181, #loc182])
#loc416 = loc(fused[#loc183, #loc184])
#loc417 = loc(fused[#loc185, #loc186])
#loc418 = loc(fused[#loc187, #loc179])
#loc419 = loc(fused[#loc191, #loc192])
#loc420 = loc(fused[#loc195, #loc196])
#loc421 = loc(fused[#loc197, #loc198])
#loc422 = loc(fused[#loc199, #loc200])
#loc423 = loc(fused[#loc202, #loc203])
#loc424 = loc(fused[#loc204, #loc198])
#loc425 = loc(fused[#loc208, #loc206])
#loc426 = loc(fused[#loc211, #loc212])
#loc427 = loc(fused[#loc214, #loc215])
#loc428 = loc(fused[#loc216, #loc217])
#loc429 = loc(fused[#loc218, #loc215])
#loc430 = loc(fused[#loc222, #loc221])
#loc431 = loc(fused[#loc225, #loc226])
#loc432 = loc(fused[#loc227, #loc228])
#loc433 = loc(fused[#loc229, #loc230])
#loc434 = loc(fused[#loc233, #loc231])
#loc435 = loc(fused[#loc234, #loc235])
#loc436 = loc(fused[#loc236, #loc237])
#loc437 = loc(fused[#loc238, #loc239])
#loc438 = loc(fused[#loc240, #loc241])
#loc439 = loc(fused[#loc242, #loc243])
#loc440 = loc(fused[#loc244, #loc245])
#loc441 = loc(fused[#loc246, #loc247])
#loc442 = loc(fused[#loc252, #loc253])
#loc443 = loc(fused[#loc254, #loc255])
#loc444 = loc(fused[#loc256, #loc257])
#loc445 = loc(fused[#loc258, #loc255])
#loc446 = loc(fused[#loc260, #loc261])
#loc447 = loc(fused[#loc263, #loc264])
#loc448 = loc(fused[#loc265, #loc266])
#loc449 = loc(fused[#loc268, #loc267])
#loc450 = loc(fused[#loc271, #loc272])
#loc451 = loc(fused[#loc275, #loc276])
#loc452 = loc(fused[#loc277, #loc278])
#loc453 = loc(fused[#loc280, #loc281])
#loc454 = loc(fused[#loc282, #loc283])
#loc455 = loc(fused[#loc284, #loc285])
#loc456 = loc(fused[#loc286, #loc278])
#loc457 = loc(fused[#loc290, #loc291])
#loc458 = loc(fused[#loc294, #loc295])
#loc459 = loc(fused[#loc296, #loc297])
#loc460 = loc(fused[#loc298, #loc299])
#loc461 = loc(fused[#loc301, #loc302])
#loc462 = loc(fused[#loc303, #loc297])
#loc463 = loc(fused[#loc307, #loc305])
#loc464 = loc(fused[#loc310, #loc311])
#loc465 = loc(fused[#loc313, #loc314])
#loc466 = loc(fused[#loc315, #loc316])
#loc467 = loc(fused[#loc317, #loc314])
#loc468 = loc(fused[#loc321, #loc320])
#loc469 = loc(fused[#loc324, #loc325])
#loc470 = loc(fused[#loc326, #loc327])
#loc471 = loc(fused[#loc328, #loc329])
#loc472 = loc(fused[#loc332, #loc330])
#loc473 = loc(fused[#loc334, #loc333])
#loc474 = loc(fused[#loc336, #loc335])
#loc475 = loc(fused[#loc339, #loc340])
