!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc140)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc23)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc30)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc31)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc31)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc35)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc36)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %27 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc39)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc41)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %34 = cir.call @snprintf(%28, %30, %32, %33) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc137)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc156)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc64)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb4 loc(#loc67)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc72)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %17 = cir.const #cir.int<67> : !s32i loc(#loc79)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc80)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc80)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc84)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc85)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc87)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %29 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc88)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc90)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc91)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc91)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %36 = cir.call @snprintf(%30, %32, %34, %35) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc88)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb7 loc(#loc77)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc53)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc169)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc112)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc176)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc119)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc120)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc120)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc124)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc125)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %27 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc128)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc130)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc131)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc131)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %34 = cir.call @snprintf(%28, %30, %32, %33) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc96)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":50:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":33:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":53:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":46:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":46:24)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":35:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":35:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":36:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":36:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":37:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":37:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":44:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":38:8)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":38:27)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":39:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":42:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":42:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":43:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":43:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":43:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":43:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":45:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":52:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":47:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":48:25)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":48:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":48:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":48:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":50:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":50:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":50:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":50:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":51:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":51:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":108:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":112:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":110:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":110:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":111:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":111:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":68:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":60:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":84:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":77:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":77:24)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":62:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":62:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":63:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":63:26)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":64:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":64:28)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":65:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":75:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":65:8)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":65:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":66:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":69:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":71:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":68:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":73:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":73:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":74:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":74:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":74:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":74:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":76:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":83:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:16)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:29)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":78:34)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":79:25)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":79:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":79:20)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":79:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":81:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":81:18)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":81:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":81:29)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":81:35)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":82:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":82:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":87:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":106:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":99:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":99:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":89:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":89:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":90:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":90:26)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":91:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":91:28)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":92:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":97:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":92:8)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":92:27)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":93:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":95:16)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":95:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":96:19)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":96:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":96:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":96:15)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":98:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":105:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:16)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:24)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:33)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":100:34)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":101:25)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":101:16)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":101:20)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":101:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":103:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":103:18)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":103:24)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":103:29)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":103:35)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":104:19)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_06.c":104:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc4, #loc5])
#loc137 = loc(fused[#loc6, #loc7])
#loc138 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc20, #loc17])
#loc145 = loc(fused[#loc22, #loc21])
#loc146 = loc(fused[#loc24, #loc23])
#loc147 = loc(fused[#loc27, #loc28])
#loc148 = loc(fused[#loc33, #loc34])
#loc149 = loc(fused[#loc38, #loc35])
#loc150 = loc(fused[#loc45, #loc46])
#loc151 = loc(fused[#loc47, #loc48])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc56, #loc57])
#loc156 = loc(fused[#loc58, #loc59])
#loc157 = loc(fused[#loc60, #loc61])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc64, #loc65])
#loc160 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc161 = loc(fused[#loc71, #loc70])
#loc162 = loc(fused[#loc73, #loc72])
#loc163 = loc(fused[#loc76, #loc77])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc87, #loc84])
#loc166 = loc(fused[#loc95, #loc96])
#loc167 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc109, #loc106])
#loc174 = loc(fused[#loc111, #loc110])
#loc175 = loc(fused[#loc113, #loc112])
#loc176 = loc(fused[#loc116, #loc117])
#loc177 = loc(fused[#loc122, #loc123])
#loc178 = loc(fused[#loc127, #loc124])
