!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc63)
  cir.func no_proto @CWE843_Type_Confusion__short_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortBuffer", init] {alignment = 2 : i64} loc(#loc65)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc66)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc11)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc68)
    cir.br ^bb1 loc(#loc69)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc71)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc19)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<8> : !s32i loc(#loc6)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc6)
    cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc65)
    %10 = cir.cast(bitcast, %0 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc74)
    cir.store %10, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc75)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc27)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.br ^bb2 loc(#loc69)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc30)
    cir.return loc(#loc4)
  } loc(#loc64)
  cir.func no_proto @CWE843_Type_Confusion__short_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc77)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc81)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc86)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc51)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<8> : !s32i loc(#loc38)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %9 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc89)
    cir.store %9, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc90)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc59)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb2 loc(#loc84)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc46)
  ^bb10:  // pred: ^bb9
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc60)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc60)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc62)
    cir.return loc(#loc36)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__short_17.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__short_17.c":37:1)
#loc5 = loc("CWE843_Type_Confusion__short_17.c":31:13)
#loc6 = loc("CWE843_Type_Confusion__short_17.c":31:33)
#loc7 = loc("CWE843_Type_Confusion__short_17.c":23:5)
#loc8 = loc("CWE843_Type_Confusion__short_17.c":23:9)
#loc9 = loc("CWE843_Type_Confusion__short_17.c":24:5)
#loc10 = loc("CWE843_Type_Confusion__short_17.c":24:12)
#loc11 = loc("CWE843_Type_Confusion__short_17.c":26:12)
#loc12 = loc("CWE843_Type_Confusion__short_17.c":26:5)
#loc13 = loc("CWE843_Type_Confusion__short_17.c":27:5)
#loc14 = loc("CWE843_Type_Confusion__short_17.c":34:5)
#loc15 = loc("CWE843_Type_Confusion__short_17.c":27:13)
#loc16 = loc("CWE843_Type_Confusion__short_17.c":27:9)
#loc17 = loc("CWE843_Type_Confusion__short_17.c":27:16)
#loc18 = loc("CWE843_Type_Confusion__short_17.c":27:20)
#loc19 = loc("CWE843_Type_Confusion__short_17.c":27:18)
#loc20 = loc("CWE843_Type_Confusion__short_17.c":28:5)
#loc21 = loc("CWE843_Type_Confusion__short_17.c":29:9)
#loc22 = loc("CWE843_Type_Confusion__short_17.c":33:9)
#loc23 = loc("CWE843_Type_Confusion__short_17.c":32:20)
#loc24 = loc("CWE843_Type_Confusion__short_17.c":32:21)
#loc25 = loc("CWE843_Type_Confusion__short_17.c":32:13)
#loc26 = loc("CWE843_Type_Confusion__short_17.c":27:24)
#loc27 = loc("CWE843_Type_Confusion__short_17.c":27:23)
#loc28 = loc("CWE843_Type_Confusion__short_17.c":36:26)
#loc29 = loc("CWE843_Type_Confusion__short_17.c":36:18)
#loc30 = loc("CWE843_Type_Confusion__short_17.c":36:5)
#loc31 = loc("CWE843_Type_Confusion__short_17.c":62:1)
#loc32 = loc("CWE843_Type_Confusion__short_17.c":65:1)
#loc33 = loc("CWE843_Type_Confusion__short_17.c":64:5)
#loc34 = loc("CWE843_Type_Confusion__short_17.c":64:13)
#loc35 = loc("CWE843_Type_Confusion__short_17.c":44:1)
#loc36 = loc("CWE843_Type_Confusion__short_17.c":60:1)
#loc37 = loc("CWE843_Type_Confusion__short_17.c":54:13)
#loc38 = loc("CWE843_Type_Confusion__short_17.c":54:29)
#loc39 = loc("CWE843_Type_Confusion__short_17.c":46:5)
#loc40 = loc("CWE843_Type_Confusion__short_17.c":46:9)
#loc41 = loc("CWE843_Type_Confusion__short_17.c":47:5)
#loc42 = loc("CWE843_Type_Confusion__short_17.c":47:12)
#loc43 = loc("CWE843_Type_Confusion__short_17.c":49:12)
#loc44 = loc("CWE843_Type_Confusion__short_17.c":49:5)
#loc45 = loc("CWE843_Type_Confusion__short_17.c":50:5)
#loc46 = loc("CWE843_Type_Confusion__short_17.c":57:5)
#loc47 = loc("CWE843_Type_Confusion__short_17.c":50:13)
#loc48 = loc("CWE843_Type_Confusion__short_17.c":50:9)
#loc49 = loc("CWE843_Type_Confusion__short_17.c":50:16)
#loc50 = loc("CWE843_Type_Confusion__short_17.c":50:20)
#loc51 = loc("CWE843_Type_Confusion__short_17.c":50:18)
#loc52 = loc("CWE843_Type_Confusion__short_17.c":51:5)
#loc53 = loc("CWE843_Type_Confusion__short_17.c":52:9)
#loc54 = loc("CWE843_Type_Confusion__short_17.c":56:9)
#loc55 = loc("CWE843_Type_Confusion__short_17.c":55:20)
#loc56 = loc("CWE843_Type_Confusion__short_17.c":55:21)
#loc57 = loc("CWE843_Type_Confusion__short_17.c":55:13)
#loc58 = loc("CWE843_Type_Confusion__short_17.c":50:24)
#loc59 = loc("CWE843_Type_Confusion__short_17.c":50:23)
#loc60 = loc("CWE843_Type_Confusion__short_17.c":59:26)
#loc61 = loc("CWE843_Type_Confusion__short_17.c":59:18)
#loc62 = loc("CWE843_Type_Confusion__short_17.c":59:5)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc12, #loc11])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc16, #loc15])
#loc71 = loc(fused[#loc17, #loc18])
#loc72 = loc(fused[#loc20, #loc14])
#loc73 = loc(fused[#loc21, #loc22])
#loc74 = loc(fused[#loc23, #loc24])
#loc75 = loc(fused[#loc25, #loc24])
#loc76 = loc(fused[#loc27, #loc26])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc33, #loc34])
#loc79 = loc(fused[#loc35, #loc36])
#loc80 = loc(fused[#loc37, #loc38])
#loc81 = loc(fused[#loc39, #loc40])
#loc82 = loc(fused[#loc41, #loc42])
#loc83 = loc(fused[#loc44, #loc43])
#loc84 = loc(fused[#loc45, #loc46])
#loc85 = loc(fused[#loc48, #loc47])
#loc86 = loc(fused[#loc49, #loc50])
#loc87 = loc(fused[#loc52, #loc46])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc55, #loc56])
#loc90 = loc(fused[#loc57, #loc56])
#loc91 = loc(fused[#loc59, #loc58])
