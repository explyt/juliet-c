!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc138)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc139)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc140)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc142)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc147)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc147)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc147)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc149)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc31)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc150)
      } loc(#loc148)
    } loc(#loc146)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc153)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc153)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc153)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !s32i loc(#loc155)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc48)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc53)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc53)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc54)
        } else {
          %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        } loc(#loc156)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc14)
  } loc(#loc143)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc157)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc67)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc69)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc165)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc165)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc165)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc78)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc167)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc84)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc84)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc85)
        } else {
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc86)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc164)
    cir.return loc(#loc63)
  } loc(#loc160)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc94)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc173)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc173)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc173)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc103)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc103)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc103)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc103)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc103)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc103)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc103)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc103)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc175)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc107)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc112)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc115)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc115)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc116)
        } loc(#loc176)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc179)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc179)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc179)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc124)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !s32i loc(#loc181)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc125)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc128)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc182)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc130)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc126)
            cir.yield %15 : !cir.bool loc(#loc126)
          }, false {
            %15 = cir.const #false loc(#loc126)
            cir.yield %15 : !cir.bool loc(#loc126)
          }) : (!cir.bool) -> !cir.bool loc(#loc126)
          cir.yield %14 : !cir.bool loc(#loc126)
        }, false {
          %10 = cir.const #false loc(#loc126)
          cir.yield %10 : !cir.bool loc(#loc126)
        }) : (!cir.bool) -> !cir.bool loc(#loc126)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc135)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc135)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc136)
        } else {
          %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc88)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc88)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc137)
        } loc(#loc183)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc90)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":52:23)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":55:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":41:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":30:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":30:45)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":40:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:19)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:32)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:49)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:59)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":32:56)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":33:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":36:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":38:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:25)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:20)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":35:36)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":39:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":42:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":54:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":43:9)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":43:30)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":53:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:21)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":46:18)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":47:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":49:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":51:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:33)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:26)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":48:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":52:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":118:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":122:1)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":120:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":120:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":121:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":121:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":62:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":83:1)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":64:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":64:9)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:12)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":66:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":69:12)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":69:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":70:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":82:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":71:9)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":71:30)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":81:9)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:21)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":74:18)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":75:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":77:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":79:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:33)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:26)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":76:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":80:23)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":80:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":113:23)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":86:1)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":116:1)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":88:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":88:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:12)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":90:5)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":91:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":103:5)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":92:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":92:45)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":102:9)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:19)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:32)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:49)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:59)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":94:56)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":95:9)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":98:9)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":100:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:25)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:20)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":97:36)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":101:23)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":101:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":104:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":115:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":105:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":105:30)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":114:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:21)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:18)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:23)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:26)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:34)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:36)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":107:31)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":108:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":110:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":112:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:33)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:26)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":109:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_01.c":113:13)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc13, #loc14])
#loc144 = loc(fused[#loc15, #loc16])
#loc145 = loc(fused[#loc19, #loc17])
#loc146 = loc(fused[#loc20, #loc21])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc24, #loc25])
#loc149 = loc(fused[#loc29, #loc30])
#loc150 = loc(fused[#loc32, #loc33, #loc34, #loc25])
#loc151 = loc(fused[#loc37, #loc38])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc42, #loc43])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc49, #loc50, #loc51, #loc45])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc68, #loc66])
#loc163 = loc(fused[#loc70, #loc69])
#loc164 = loc(fused[#loc71, #loc72])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc80, #loc81, #loc82, #loc76])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc91, #loc92])
#loc171 = loc(fused[#loc95, #loc93])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc108, #loc109, #loc110, #loc101])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc119, #loc120])
#loc180 = loc(fused[#loc121, #loc122])
#loc181 = loc(fused[#loc123, #loc124])
#loc182 = loc(fused[#loc127, #loc129])
#loc183 = loc(fused[#loc131, #loc132, #loc133, #loc122])
