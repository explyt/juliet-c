!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":187:10)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":187:14)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":187:20)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":187:32)
#true = #cir.bool<true> : !cir.bool
#loc349 = loc(fused[#loc127, #loc128])
#loc350 = loc(fused[#loc129, #loc130])
!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType = !cir.struct<union "CWE606_Unchecked_Loop_Condition__char_console_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc296)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc297)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc298)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc299)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc301)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType, !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc304)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc305)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc305)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc305)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc308)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc308)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc33)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc33)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc34)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc310)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc311)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc41)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc42)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc314)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc314)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc298)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc315)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc317)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc57)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc57)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc319)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc61)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc61)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc320)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc59)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc59)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc63)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc321)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc58)
                    cir.yield %51 : !cir.bool loc(#loc58)
                  }, false {
                    %51 = cir.const #false loc(#loc58)
                    cir.yield %51 : !cir.bool loc(#loc58)
                  }) : (!cir.bool) -> !cir.bool loc(#loc58)
                  cir.yield %50 : !cir.bool loc(#loc58)
                }, false {
                  %40 = cir.const #false loc(#loc58)
                  cir.yield %40 : !cir.bool loc(#loc58)
                }) : (!cir.bool) -> !cir.bool loc(#loc58)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc65)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc68)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc323)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc324)
                } loc(#loc322)
              } loc(#loc318)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc70)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc71)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc74)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc325)
            } loc(#loc316)
          } loc(#loc313)
        } loc(#loc312)
      } loc(#loc309)
    } loc(#loc307)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc328)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.store %9, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc330)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc331)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc332)
        cir.scope {
          %13 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc91)
          %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
          %17 = cir.call @__isoc99_sscanf(%14, %16, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc91)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc93)
          %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc334)
          cir.if %19 {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc95)
            cir.store %20, %12 : !s32i, !cir.ptr<!s32i> loc(#loc336)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc99)
              cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.for : cond {
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc339)
                cir.condition(%25) loc(#loc103)
              } body {
                cir.scope {
                  %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc106)
                  cir.store %24, %12 : !s32i, !cir.ptr<!s32i> loc(#loc341)
                } loc(#loc340)
                cir.yield loc(#loc98)
              } step {
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc108)
                cir.store %24, %10 : !s32i, !cir.ptr<!s32i> loc(#loc342)
                cir.yield loc(#loc337)
              } loc(#loc337)
            } loc(#loc337)
            %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc110)
          } loc(#loc335)
        } loc(#loc333)
      } loc(#loc329)
    } loc(#loc327)
    cir.return loc(#loc16)
  } loc(#loc302)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc115)
    cir.return loc(#loc112)
  } loc(#loc343)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc346)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc124)
  cir.func @main(%arg0: !s32i loc(fused[#loc127, #loc128]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc129, #loc130])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc349)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc350)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc126)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc131)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc132)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc133)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc134)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc121)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_34_good() : () -> () loc(#loc136)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc123)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc352)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_34_bad() : () -> () loc(#loc140)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc124)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc143)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    cir.return %17 : !s32i loc(#loc353)
  } loc(#loc348)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc356)
    %1 = cir.alloca !ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType, !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc357)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc358)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc358)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc358)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc359)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc158)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc147)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc147)
    %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc362)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
      cir.scope {
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc364)
        %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc365)
        %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc366)
        cir.scope {
          %18 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc174)
          %19 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
          %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc176)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc176)
          %22 = cir.call @__isoc99_sscanf(%19, %21, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc174)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc177)
          %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc368)
          cir.if %24 {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc179)
            cir.store %25, %17 : !s32i, !cir.ptr<!s32i> loc(#loc370)
            cir.scope {
              %27 = cir.const #cir.int<0> : !s32i loc(#loc183)
              cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc372)
              cir.for : cond {
                %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                %29 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc373)
                cir.condition(%30) loc(#loc187)
              } body {
                cir.scope {
                  %28 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                  %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc190)
                  cir.store %29, %17 : !s32i, !cir.ptr<!s32i> loc(#loc375)
                } loc(#loc374)
                cir.yield loc(#loc182)
              } step {
                %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc192)
                cir.store %29, %15 : !s32i, !cir.ptr<!s32i> loc(#loc376)
                cir.yield loc(#loc371)
              } loc(#loc371)
            } loc(#loc371)
            %26 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc194)
          } loc(#loc369)
        } loc(#loc367)
      } loc(#loc363)
    } loc(#loc361)
    cir.return loc(#loc149)
  } loc(#loc355)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc378)
    %1 = cir.alloca !ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType, !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc379)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc380)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc380)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc380)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc383)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc209)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc209)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc383)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc213)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc213)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc214)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc385)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc215)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc386)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc220)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc221)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc222)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc222)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc223)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc389)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc389)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc298)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc224)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc226)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc390)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc230)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc230)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc392)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc236)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc237)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc237)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc394)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc240)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc241)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc241)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc395)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc242)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc239)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc239)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc243)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc396)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc238)
                    cir.yield %51 : !cir.bool loc(#loc238)
                  }, false {
                    %51 = cir.const #false loc(#loc238)
                    cir.yield %51 : !cir.bool loc(#loc238)
                  }) : (!cir.bool) -> !cir.bool loc(#loc238)
                  cir.yield %50 : !cir.bool loc(#loc238)
                }, false {
                  %40 = cir.const #false loc(#loc238)
                  cir.yield %40 : !cir.bool loc(#loc238)
                }) : (!cir.bool) -> !cir.bool loc(#loc238)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc245)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc245)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc247)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc248)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc248)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc398)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc249)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc399)
                } loc(#loc397)
              } loc(#loc393)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc250)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc250)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc251)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc252)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc252)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc254)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc255)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc400)
            } loc(#loc391)
          } loc(#loc388)
        } loc(#loc387)
      } loc(#loc384)
    } loc(#loc382)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc401)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc403)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE606_Unchecked_Loop_Condition__char_console_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
      cir.store %9, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc403)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc405)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc406)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc407)
        cir.scope {
          %13 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc270)
          %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc271)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc272)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc272)
          %17 = cir.call @__isoc99_sscanf(%14, %16, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc270)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc273)
          %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc409)
          cir.if %19 {
            cir.scope {
              %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %21 = cir.const #cir.int<10000> : !s32i loc(#loc278)
              %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc412)
              cir.if %22 {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc280)
                cir.store %23, %12 : !s32i, !cir.ptr<!s32i> loc(#loc414)
                cir.scope {
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc284)
                  cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc416)
                  cir.for : cond {
                    %26 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                    %27 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc417)
                    cir.condition(%28) loc(#loc288)
                  } body {
                    cir.scope {
                      %26 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                      %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc291)
                      cir.store %27, %12 : !s32i, !cir.ptr<!s32i> loc(#loc419)
                    } loc(#loc418)
                    cir.yield loc(#loc283)
                  } step {
                    %26 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc293)
                    cir.store %27, %10 : !s32i, !cir.ptr<!s32i> loc(#loc420)
                    cir.yield loc(#loc415)
                  } loc(#loc415)
                } loc(#loc415)
                %24 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc295)
              } loc(#loc413)
            } loc(#loc411)
          } loc(#loc410)
        } loc(#loc408)
      } loc(#loc404)
    } loc(#loc402)
    cir.return loc(#loc196)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_34.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":59:27)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":70:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":34:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":83:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":36:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":36:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":37:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":37:64)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":38:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":38:28)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":39:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":39:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":40:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":64:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":42:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":42:37)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":42:26)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":42:33)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":44:9)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":63:9)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":44:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":44:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":44:27)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":45:9)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":62:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:23)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:28)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:27)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:43)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:47)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:57)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:17)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":47:67)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":48:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":56:13)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":58:13)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":51:27)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":51:34)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":51:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":51:38)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:17)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":55:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:21)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:31)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:33)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:36)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:41)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:49)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:50)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":52:55)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":53:17)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":54:39)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":54:21)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":54:26)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":54:34)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":54:35)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":59:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":61:33)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":61:17)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":61:22)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":61:29)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":65:26)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":28:12)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":65:5)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":66:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":82:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":67:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":67:31)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":29:12)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":68:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":81:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":69:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":69:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":69:20)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":69:23)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":70:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":80:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":70:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":70:24)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":70:43)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":71:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":73:31)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":73:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":78:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:26)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:22)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:29)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:33)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:31)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":75:17)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":77:32)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":77:21)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:37)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":74:36)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":79:30)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":79:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":173:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":177:1)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":175:5)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":175:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":176:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":176:13)
#loc117 = loc("/usr/include/stdlib.h":575:1)
#loc118 = loc("/usr/include/stdlib.h":575:41)
#loc119 = loc("/usr/include/time.h":76:1)
#loc120 = loc("/usr/include/time.h":76:38)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":192:15)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":194:15)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":197:15)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":199:15)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":187:1)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":202:1)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":188:1)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":190:27)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":190:22)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":190:5)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":192:5)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":193:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":193:59)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":194:5)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":197:5)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":198:5)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":198:58)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":199:5)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":201:12)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":201:5)
#loc145 = loc("/usr/include/string.h":141:1)
#loc146 = loc("/usr/include/string.h":142:14)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":97:18)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":90:1)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":116:1)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":92:5)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":92:12)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":93:5)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":93:64)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":94:5)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":94:28)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":95:12)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":95:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":97:5)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":97:12)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":98:26)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":98:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":99:5)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":115:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":100:9)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":100:31)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":101:9)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":114:9)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":102:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":102:17)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":102:20)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":102:23)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":103:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":113:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":103:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":103:24)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":103:30)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":103:43)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":104:13)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":106:31)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":106:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":111:17)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:26)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:22)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:29)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:33)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:31)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":108:17)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":110:32)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":110:21)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:37)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":107:36)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":112:30)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":112:17)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":119:1)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":171:1)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":121:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":121:12)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":122:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":122:64)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":123:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":123:28)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":124:12)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":124:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":125:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":149:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":127:9)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":127:37)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":127:26)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":127:33)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":129:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":148:9)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":129:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":129:17)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":129:27)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":130:9)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":147:13)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:23)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:28)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:27)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:43)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:47)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:57)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:17)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":132:67)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":133:13)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":141:13)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":143:13)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":136:27)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":136:34)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":136:17)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":136:38)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:17)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":140:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:21)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:31)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:33)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:36)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:41)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:49)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:50)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":137:55)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":138:17)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":139:39)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":139:21)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":139:26)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":139:34)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":139:35)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":144:27)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":144:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":146:33)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":146:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":146:22)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":146:29)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":150:26)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":150:5)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":151:5)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":170:5)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":152:9)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":152:31)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":153:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":169:9)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":154:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":154:17)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":154:20)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":154:23)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":155:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":168:13)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":155:17)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":155:24)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":155:30)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":155:43)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":156:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":158:17)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":167:17)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":158:21)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":158:25)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":159:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":160:35)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":160:21)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:21)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":165:21)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:30)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:26)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:33)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:37)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:35)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":162:21)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":164:36)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":164:25)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:41)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":161:40)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":166:34)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_34.c":166:21)
#loc296 = loc(fused[#loc1, #loc2])
#loc297 = loc(fused[#loc3, #loc4])
#loc298 = loc(fused[#loc5, #loc6])
#loc299 = loc(fused[#loc7, #loc8])
#loc300 = loc(fused[#loc10, #loc11])
#loc301 = loc(fused[#loc13, #loc14])
#loc302 = loc(fused[#loc15, #loc16])
#loc303 = loc(fused[#loc17, #loc18])
#loc304 = loc(fused[#loc19, #loc20])
#loc305 = loc(fused[#loc21, #loc22])
#loc306 = loc(fused[#loc24, #loc23])
#loc307 = loc(fused[#loc25, #loc26])
#loc308 = loc(fused[#loc27, #loc28])
#loc309 = loc(fused[#loc31, #loc32])
#loc310 = loc(fused[#loc33, #loc34])
#loc311 = loc(fused[#loc33, #loc35])
#loc312 = loc(fused[#loc36, #loc32])
#loc313 = loc(fused[#loc37, #loc38])
#loc314 = loc(fused[#loc42, #loc43])
#loc315 = loc(fused[#loc45, #loc46])
#loc316 = loc(fused[#loc47, #loc48, #loc49, #loc38])
#loc317 = loc(fused[#loc52, #loc53])
#loc318 = loc(fused[#loc54, #loc55])
#loc319 = loc(fused[#loc56, #loc57])
#loc320 = loc(fused[#loc60, #loc61])
#loc321 = loc(fused[#loc59, #loc63])
#loc322 = loc(fused[#loc64, #loc55])
#loc323 = loc(fused[#loc67, #loc68])
#loc324 = loc(fused[#loc66, #loc65])
#loc325 = loc(fused[#loc72, #loc71])
#loc326 = loc(fused[#loc77, #loc75])
#loc327 = loc(fused[#loc78, #loc79])
#loc328 = loc(fused[#loc80, #loc81])
#loc329 = loc(fused[#loc83, #loc84])
#loc330 = loc(fused[#loc85, #loc86])
#loc331 = loc(fused[#loc85, #loc87])
#loc332 = loc(fused[#loc85, #loc88])
#loc333 = loc(fused[#loc89, #loc90])
#loc334 = loc(fused[#loc91, #loc93])
#loc335 = loc(fused[#loc94, #loc90])
#loc336 = loc(fused[#loc96, #loc95])
#loc337 = loc(fused[#loc97, #loc98])
#loc338 = loc(fused[#loc100, #loc99])
#loc339 = loc(fused[#loc101, #loc102])
#loc340 = loc(fused[#loc104, #loc98])
#loc341 = loc(fused[#loc106, #loc105])
#loc342 = loc(fused[#loc108, #loc107])
#loc343 = loc(fused[#loc111, #loc112])
#loc344 = loc(fused[#loc113, #loc114])
#loc345 = loc(fused[#loc115, #loc116])
#loc346 = loc(fused[#loc117, #loc118])
#loc347 = loc(fused[#loc119, #loc120])
#loc348 = loc(fused[#loc125, #loc126])
#loc351 = loc(fused[#loc136, #loc137])
#loc352 = loc(fused[#loc140, #loc141])
#loc353 = loc(fused[#loc144, #loc143])
#loc354 = loc(fused[#loc145, #loc146])
#loc355 = loc(fused[#loc148, #loc149])
#loc356 = loc(fused[#loc150, #loc151])
#loc357 = loc(fused[#loc152, #loc153])
#loc358 = loc(fused[#loc154, #loc155])
#loc359 = loc(fused[#loc157, #loc156])
#loc360 = loc(fused[#loc161, #loc160])
#loc361 = loc(fused[#loc162, #loc163])
#loc362 = loc(fused[#loc164, #loc165])
#loc363 = loc(fused[#loc166, #loc167])
#loc364 = loc(fused[#loc168, #loc169])
#loc365 = loc(fused[#loc168, #loc170])
#loc366 = loc(fused[#loc168, #loc171])
#loc367 = loc(fused[#loc172, #loc173])
#loc368 = loc(fused[#loc174, #loc177])
#loc369 = loc(fused[#loc178, #loc173])
#loc370 = loc(fused[#loc180, #loc179])
#loc371 = loc(fused[#loc181, #loc182])
#loc372 = loc(fused[#loc184, #loc183])
#loc373 = loc(fused[#loc185, #loc186])
#loc374 = loc(fused[#loc188, #loc182])
#loc375 = loc(fused[#loc190, #loc189])
#loc376 = loc(fused[#loc192, #loc191])
#loc377 = loc(fused[#loc195, #loc196])
#loc378 = loc(fused[#loc197, #loc198])
#loc379 = loc(fused[#loc199, #loc200])
#loc380 = loc(fused[#loc201, #loc202])
#loc381 = loc(fused[#loc204, #loc203])
#loc382 = loc(fused[#loc205, #loc206])
#loc383 = loc(fused[#loc207, #loc208])
#loc384 = loc(fused[#loc211, #loc212])
#loc385 = loc(fused[#loc213, #loc214])
#loc386 = loc(fused[#loc213, #loc215])
#loc387 = loc(fused[#loc216, #loc212])
#loc388 = loc(fused[#loc217, #loc218])
#loc389 = loc(fused[#loc222, #loc223])
#loc390 = loc(fused[#loc225, #loc226])
#loc391 = loc(fused[#loc227, #loc228, #loc229, #loc218])
#loc392 = loc(fused[#loc232, #loc233])
#loc393 = loc(fused[#loc234, #loc235])
#loc394 = loc(fused[#loc236, #loc237])
#loc395 = loc(fused[#loc240, #loc241])
#loc396 = loc(fused[#loc239, #loc243])
#loc397 = loc(fused[#loc244, #loc235])
#loc398 = loc(fused[#loc247, #loc248])
#loc399 = loc(fused[#loc246, #loc245])
#loc400 = loc(fused[#loc253, #loc252])
#loc401 = loc(fused[#loc257, #loc256])
#loc402 = loc(fused[#loc258, #loc259])
#loc403 = loc(fused[#loc260, #loc261])
#loc404 = loc(fused[#loc262, #loc263])
#loc405 = loc(fused[#loc264, #loc265])
#loc406 = loc(fused[#loc264, #loc266])
#loc407 = loc(fused[#loc264, #loc267])
#loc408 = loc(fused[#loc268, #loc269])
#loc409 = loc(fused[#loc270, #loc273])
#loc410 = loc(fused[#loc274, #loc269])
#loc411 = loc(fused[#loc275, #loc276])
#loc412 = loc(fused[#loc277, #loc278])
#loc413 = loc(fused[#loc279, #loc276])
#loc414 = loc(fused[#loc281, #loc280])
#loc415 = loc(fused[#loc282, #loc283])
#loc416 = loc(fused[#loc285, #loc284])
#loc417 = loc(fused[#loc286, #loc287])
#loc418 = loc(fused[#loc289, #loc283])
#loc419 = loc(fused[#loc291, #loc290])
#loc420 = loc(fused[#loc293, #loc292])
