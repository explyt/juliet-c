!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":105:10)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":105:14)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":105:20)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":105:32)
#loc127 = loc(fused[#loc43, #loc44])
#loc128 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc12)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc113)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc116)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
          cir.scope {
            %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc22)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
            %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc24)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc119)
            cir.if %13 {
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc6)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc6)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc26)
            } loc(#loc120)
          } loc(#loc118)
        } loc(#loc115)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc8)
  } loc(#loc111)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc121)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc124)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %17 : !s32i loc(#loc131)
  } loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc134)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc71)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc137)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc137)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc137)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
          cir.scope {
            %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc80)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc81)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc81)
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
            %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc80)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc83)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc140)
            cir.if %14 {
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc85)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc86)
            } loc(#loc141)
          } loc(#loc139)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc133)
    cir.return loc(#loc63)
  } loc(#loc132)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc91)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc144)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
          cir.scope {
            %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc102)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc103)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc103)
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
            %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc102)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc105)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc105)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc150)
            cir.if %14 {
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc107)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc108)
            } loc(#loc151)
          } loc(#loc149)
        } loc(#loc146)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc88)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":35:23)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":37:27)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":24:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":41:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":26:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":40:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":26:8)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":26:11)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":27:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":28:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":39:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":31:13)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":31:36)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":32:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":32:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":35:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":38:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":35:17)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":35:33)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":35:42)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":36:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":37:17)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":90:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":94:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":92:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":92:11)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":93:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":93:11)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":110:15)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":112:15)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":115:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":117:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":105:1)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":120:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":106:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":108:27)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":108:22)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":108:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":110:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":111:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":111:73)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":112:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":115:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":116:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":116:72)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":117:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":119:12)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":119:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":53:19)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":48:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":69:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":50:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":68:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":50:8)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":50:11)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":51:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":54:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":56:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":53:9)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":57:9)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":67:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":60:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":60:36)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":61:13)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":61:27)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":63:13)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":66:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":63:17)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":63:23)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":63:33)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":63:42)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":64:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":65:27)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":65:17)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":72:1)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":88:1)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":74:5)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":87:5)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":74:8)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":74:11)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":75:5)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":76:9)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":86:9)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":79:13)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":79:36)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":80:13)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":80:27)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":82:13)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":85:13)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":82:17)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":82:23)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":82:33)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":82:42)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":83:13)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":84:27)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_03.c":84:17)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc4, #loc5])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc13, #loc10])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc22, #loc24])
#loc120 = loc(fused[#loc25, #loc21])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc31, #loc32])
#loc124 = loc(fused[#loc33, #loc34])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc41, #loc42])
#loc129 = loc(fused[#loc52, #loc53])
#loc130 = loc(fused[#loc56, #loc57])
#loc131 = loc(fused[#loc60, #loc59])
#loc132 = loc(fused[#loc62, #loc63])
#loc133 = loc(fused[#loc64, #loc65])
#loc134 = loc(fused[#loc66, #loc67])
#loc135 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc136 = loc(fused[#loc72, #loc73])
#loc137 = loc(fused[#loc74, #loc75])
#loc138 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc78, #loc79])
#loc140 = loc(fused[#loc80, #loc83])
#loc141 = loc(fused[#loc84, #loc79])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc91, #loc92])
#loc145 = loc(fused[#loc93, #loc90])
#loc146 = loc(fused[#loc94, #loc95])
#loc147 = loc(fused[#loc96, #loc97])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc100, #loc101])
#loc150 = loc(fused[#loc102, #loc105])
#loc151 = loc(fused[#loc106, #loc101])
