!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":26:14)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":26:23)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":50:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":50:27)
#loc99 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc52, #loc53])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_637badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc102)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc103)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
      %8 = cir.const #cir.int<67> : !s8i loc(#loc18)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc18)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc19)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc19)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc104)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc23)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc24)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc26)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc105)
      cir.scope {
        %28 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc29)
        cir.store %29, %4 : !u64i, !cir.ptr<!u64i> loc(#loc107)
        cir.for : cond {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc32)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc32)
          %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc108)
          cir.condition(%33) loc(#loc108)
        } body {
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %31 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
            %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc35)
            %33 = cir.load %32 : !cir.ptr<!s8i>, !s8i loc(#loc35)
            %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %35 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc38)
            cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc110)
          } loc(#loc109)
          cir.yield loc(#loc28)
        } step {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc41)
          cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc111)
          cir.yield loc(#loc106)
        } loc(#loc106)
      } loc(#loc106)
      %20 = cir.const #cir.int<0> : !s8i loc(#loc42)
      %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc44)
      %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc46)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc112)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.delete.array %27 : <!s8i> loc(#loc49)
    } loc(#loc101)
    cir.return loc(#loc4)
  } loc(#loc98)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_6311goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc117)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
      %8 = cir.const #cir.int<67> : !s8i loc(#loc65)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc65)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc66)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc66)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc70)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc72)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc71)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc73)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc120)
      cir.scope {
        %28 = cir.const #cir.int<0> : !s32i loc(#loc76)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc76)
        cir.store %29, %4 : !u64i, !cir.ptr<!u64i> loc(#loc122)
        cir.for : cond {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc79)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc79)
          %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc123)
          cir.condition(%33) loc(#loc123)
        } body {
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc81)
            %31 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
            %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc82)
            %33 = cir.load %32 : !cir.ptr<!s8i>, !s8i loc(#loc82)
            %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %35 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc85)
            cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc125)
          } loc(#loc124)
          cir.yield loc(#loc75)
        } step {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc87)
          %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc88)
          cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc126)
          cir.yield loc(#loc121)
        } loc(#loc121)
      } loc(#loc121)
      %20 = cir.const #cir.int<0> : !s8i loc(#loc89)
      %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc92)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc91)
      %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc93)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc127)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      cir.delete.array %27 : <!s8i> loc(#loc96)
    } loc(#loc116)
    cir.return loc(#loc51)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":26:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":43:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":28:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":28:20)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":28:19)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":42:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":30:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":30:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":31:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":31:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:29)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":32:34)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":33:25)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":33:16)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":33:20)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":33:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":38:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:18)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:14)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:21)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:25)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":36:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":37:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":35:30)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":39:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":39:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":39:14)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":39:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":39:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":40:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":40:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":41:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":50:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":67:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":52:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":52:20)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":51:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":52:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":53:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":66:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":54:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":54:16)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":55:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":55:24)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:16)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:24)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:29)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":56:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":57:25)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":57:16)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":57:20)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":57:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":62:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:21)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:25)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":60:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:30)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:23)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:18)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":61:31)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":59:30)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":63:23)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":63:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":63:14)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":63:18)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":63:19)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":64:19)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":64:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_loop_63b.cpp":65:19)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc13, #loc14])
#loc103 = loc(fused[#loc15, #loc16])
#loc104 = loc(fused[#loc21, #loc22])
#loc105 = loc(fused[#loc26, #loc23])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc30, #loc29])
#loc108 = loc(fused[#loc31, #loc32])
#loc109 = loc(fused[#loc33, #loc28])
#loc110 = loc(fused[#loc36, #loc39])
#loc111 = loc(fused[#loc41, #loc40])
#loc112 = loc(fused[#loc43, #loc42])
#loc113 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc60, #loc61])
#loc118 = loc(fused[#loc62, #loc63])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc73, #loc70])
#loc121 = loc(fused[#loc74, #loc75])
#loc122 = loc(fused[#loc77, #loc76])
#loc123 = loc(fused[#loc78, #loc79])
#loc124 = loc(fused[#loc80, #loc75])
#loc125 = loc(fused[#loc83, #loc86])
#loc126 = loc(fused[#loc88, #loc87])
#loc127 = loc(fused[#loc90, #loc89])
