!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":159:10)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":159:14)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":159:20)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":159:32)
#loc214 = loc(fused[#loc74, #loc75])
#loc215 = loc(fused[#loc76, #loc77])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc186)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc187)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc189)
  cir.func private @printLongLongLine(!s64i) loc(#loc190)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc194)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc196)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc189)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc189)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc27)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc29)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc198)
      } loc(#loc197)
    } loc(#loc195)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc200)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc203)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc41)
          %10 = cir.binop(add, %7, %9) nsw : !s64i loc(#loc42)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc203)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc43)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc44)
        } loc(#loc202)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc47)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc48)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !cir.bool loc(#loc205)
          cir.if %8 {
            %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc207)
            %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc54)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc53)
            %13 = cir.binop(add, %10, %12) nsw : !s64i loc(#loc54)
            cir.store %13, %9 : !s64i, !cir.ptr<!s64i> loc(#loc207)
            %14 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc55)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc56)
          } else {
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc13)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc201)
    } loc(#loc199)
    cir.return loc(#loc15)
  } loc(#loc192)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc208)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc211)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc81)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_add_12_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_add_12_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.return %17 : !s32i loc(#loc218)
  } loc(#loc213)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc96)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc223)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc223)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc100)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc100)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc105)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc106)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc225)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc225)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc105)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc109)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc110)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc226)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc226)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc109)
      } loc(#loc224)
    } loc(#loc222)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc228)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc228)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc115)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc115)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc122)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc123)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !cir.bool loc(#loc231)
          cir.if %8 {
            %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc233)
            %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc129)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc128)
            %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc128)
            %13 = cir.binop(add, %10, %12) nsw : !s64i loc(#loc129)
            cir.store %13, %9 : !s64i, !cir.ptr<!s64i> loc(#loc233)
            %14 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc130)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc131)
          } else {
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc132)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc132)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc133)
          } loc(#loc232)
        } loc(#loc230)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc136)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc137)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !cir.bool loc(#loc235)
          cir.if %8 {
            %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc237)
            %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc143)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc142)
            %13 = cir.binop(add, %10, %12) nsw : !s64i loc(#loc143)
            cir.store %13, %9 : !s64i, !cir.ptr<!s64i> loc(#loc237)
            %14 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc144)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc145)
          } else {
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc146)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc147)
          } loc(#loc236)
        } loc(#loc234)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc93)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc152)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc240)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc242)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc156)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc156)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc161)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc161)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc244)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc163)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc163)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc245)
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc247)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc247)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc167)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc167)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc250)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc176)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc175)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc175)
          %10 = cir.binop(add, %7, %9) nsw : !s64i loc(#loc176)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc250)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc177)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc178)
        } loc(#loc249)
      } else {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc252)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc183)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc182)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc182)
          %10 = cir.binop(add, %7, %9) nsw : !s64i loc(#loc183)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc252)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc184)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc185)
        } loc(#loc251)
      } loc(#loc248)
    } loc(#loc246)
    cir.return loc(#loc149)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":30:24)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":55:23)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":23:1)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":58:1)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":25:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":25:13)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":26:12)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":26:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":27:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":27:8)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":27:33)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":28:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":31:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":33:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":30:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":30:17)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":35:16)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":35:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":37:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":57:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":37:8)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":37:33)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":38:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":44:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":46:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":39:9)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":43:9)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":41:13)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":41:37)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":41:30)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":42:31)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":42:13)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":48:9)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":56:9)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":48:13)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":48:20)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":49:9)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":52:9)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":54:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":50:13)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":50:37)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":50:30)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":51:31)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":51:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":55:13)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":144:1)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":148:1)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":146:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":146:13)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":147:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":147:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":164:15)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":166:15)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":169:15)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":171:15)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":159:1)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":174:1)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":160:1)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":162:27)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":162:22)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":162:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":164:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":165:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":165:57)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":166:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":169:5)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":170:5)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":170:56)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":171:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":173:12)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":173:5)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":67:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":107:1)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":69:5)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":69:13)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":70:12)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":70:5)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":71:5)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":80:5)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":71:8)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":71:33)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":72:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":75:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":77:5)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":74:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":74:17)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":74:24)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":74:28)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":79:9)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":79:17)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":79:24)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":79:28)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":81:5)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":106:5)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":81:8)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":81:33)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":82:5)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":93:5)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":95:5)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":84:9)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":92:9)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":84:13)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":84:20)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":85:9)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":88:9)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":90:9)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":86:13)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":86:37)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":86:30)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":87:31)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":87:13)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":91:23)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":91:13)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":97:9)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":105:9)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":97:13)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":97:20)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":98:9)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":101:9)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":103:9)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":99:13)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":99:37)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":99:30)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":100:31)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":100:13)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":104:23)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":104:13)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":112:1)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":142:1)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":114:5)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":114:13)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":115:12)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":115:5)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":116:5)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":125:5)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":116:8)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":116:33)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":117:5)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":120:5)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":122:5)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":119:16)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":119:9)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":124:16)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":124:9)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":126:5)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":141:5)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":126:8)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":126:33)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":127:5)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":133:5)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":135:5)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":128:9)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":132:9)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":130:13)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":130:37)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":130:30)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":131:31)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":131:13)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":136:9)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":140:9)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":138:13)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":138:37)
#loc183 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":138:30)
#loc184 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":139:31)
#loc185 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_12.c":139:13)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc9, #loc10])
#loc191 = loc(fused[#loc11, #loc12])
#loc192 = loc(fused[#loc14, #loc15])
#loc193 = loc(fused[#loc16, #loc17])
#loc194 = loc(fused[#loc19, #loc18])
#loc195 = loc(fused[#loc20, #loc21])
#loc196 = loc(fused[#loc22, #loc23])
#loc197 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc198 = loc(fused[#loc30, #loc29])
#loc199 = loc(fused[#loc31, #loc32])
#loc200 = loc(fused[#loc33, #loc34])
#loc201 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc202 = loc(fused[#loc38, #loc39])
#loc203 = loc(fused[#loc40, #loc41])
#loc204 = loc(fused[#loc45, #loc46])
#loc205 = loc(fused[#loc47, #loc48])
#loc206 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc207 = loc(fused[#loc52, #loc53])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61])
#loc210 = loc(fused[#loc62, #loc63])
#loc211 = loc(fused[#loc64, #loc65])
#loc212 = loc(fused[#loc66, #loc67])
#loc213 = loc(fused[#loc72, #loc73])
#loc216 = loc(fused[#loc83, #loc84])
#loc217 = loc(fused[#loc87, #loc88])
#loc218 = loc(fused[#loc91, #loc90])
#loc219 = loc(fused[#loc92, #loc93])
#loc220 = loc(fused[#loc94, #loc95])
#loc221 = loc(fused[#loc97, #loc96])
#loc222 = loc(fused[#loc98, #loc99])
#loc223 = loc(fused[#loc100, #loc101])
#loc224 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc225 = loc(fused[#loc107, #loc108])
#loc226 = loc(fused[#loc111, #loc112])
#loc227 = loc(fused[#loc113, #loc114])
#loc228 = loc(fused[#loc115, #loc116])
#loc229 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc230 = loc(fused[#loc120, #loc121])
#loc231 = loc(fused[#loc122, #loc123])
#loc232 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc233 = loc(fused[#loc127, #loc128])
#loc234 = loc(fused[#loc134, #loc135])
#loc235 = loc(fused[#loc136, #loc137])
#loc236 = loc(fused[#loc138, #loc139, #loc140, #loc135])
#loc237 = loc(fused[#loc141, #loc142])
#loc238 = loc(fused[#loc148, #loc149])
#loc239 = loc(fused[#loc150, #loc151])
#loc240 = loc(fused[#loc153, #loc152])
#loc241 = loc(fused[#loc154, #loc155])
#loc242 = loc(fused[#loc156, #loc157])
#loc243 = loc(fused[#loc158, #loc159, #loc160, #loc155])
#loc244 = loc(fused[#loc162, #loc161])
#loc245 = loc(fused[#loc164, #loc163])
#loc246 = loc(fused[#loc165, #loc166])
#loc247 = loc(fused[#loc167, #loc168])
#loc248 = loc(fused[#loc169, #loc170, #loc171, #loc166])
#loc249 = loc(fused[#loc172, #loc173])
#loc250 = loc(fused[#loc174, #loc175])
#loc251 = loc(fused[#loc179, #loc180])
#loc252 = loc(fused[#loc181, #loc182])
