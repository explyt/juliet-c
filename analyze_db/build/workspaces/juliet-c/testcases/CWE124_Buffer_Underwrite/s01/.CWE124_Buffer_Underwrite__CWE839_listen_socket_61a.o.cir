!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_badSource(!s32i) -> !s32i loc(#loc147)
  cir.func private @printIntLine(!s32i) loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_badSource(%3) : (!s32i) -> !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc156)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc156)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc156)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc28)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc158)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc34)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc34)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc160)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc37)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc162)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc40)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc163)
              cir.condition(%18) loc(#loc41)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc43)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc44)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc45)
              } loc(#loc164)
              cir.yield loc(#loc36)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc47)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc165)
              cir.yield loc(#loc161)
            } loc(#loc161)
          } loc(#loc161)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        } loc(#loc159)
      } loc(#loc157)
    } loc(#loc154)
    cir.return loc(#loc9)
  } loc(#loc150)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc168)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc166)
  cir.func private @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_goodG2BSource(!s32i) -> !s32i loc(#loc169)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc62)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %4 = cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc65)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc175)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc176)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc176)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc176)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
        %9 = cir.const #cir.int<10> : !s32i loc(#loc77)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc178)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc81)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc83)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc83)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc86)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc182)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc89)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc183)
              cir.condition(%18) loc(#loc90)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc93)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc93)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc94)
              } loc(#loc184)
              cir.yield loc(#loc85)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc96)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc185)
              cir.yield loc(#loc181)
            } loc(#loc181)
          } loc(#loc181)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc97)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
        } loc(#loc179)
      } loc(#loc177)
    } loc(#loc174)
    cir.return loc(#loc58)
  } loc(#loc170)
  cir.func private @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_goodB2GSource(!s32i) -> !s32i loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc107)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %4 = cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_61b_goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc110)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc192)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc193)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc193)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc193)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc122)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc195)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc125)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc196)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc123)
            cir.yield %16 : !cir.bool loc(#loc123)
          }, false {
            %16 = cir.const #false loc(#loc123)
            cir.yield %16 : !cir.bool loc(#loc123)
          }) : (!cir.bool) -> !cir.bool loc(#loc123)
          cir.yield %15 : !cir.bool loc(#loc123)
        }, false {
          %12 = cir.const #false loc(#loc123)
          cir.yield %12 : !cir.bool loc(#loc123)
        }) : (!cir.bool) -> !cir.bool loc(#loc123)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc130)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc132)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc198)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc200)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc138)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc201)
              cir.condition(%19) loc(#loc139)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc142)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc143)
              } loc(#loc202)
              cir.yield loc(#loc134)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc145)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc203)
              cir.yield loc(#loc199)
            } loc(#loc199)
          } loc(#loc199)
        } else {
          %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc101)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc146)
        } loc(#loc197)
      } loc(#loc194)
    } loc(#loc191)
    cir.return loc(#loc103)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":45:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":45:74)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":69:23)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":47:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":72:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":49:5)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":49:9)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":51:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":51:12)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":51:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":52:73)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":52:12)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":52:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":52:77)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":53:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":71:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":54:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":54:13)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":55:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":55:30)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":58:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":70:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":58:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":58:20)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":59:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":66:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":68:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":60:28)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":60:20)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":60:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":65:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:21)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:24)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:28)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:26)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":63:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":64:37)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":64:30)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":64:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:33)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":62:32)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":69:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":137:1)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":141:1)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":139:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":139:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":140:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":140:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":79:1)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":79:78)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":81:1)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":106:1)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":83:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":83:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":85:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":85:12)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":85:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":86:77)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":86:12)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":86:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":86:81)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":87:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":105:5)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":88:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":88:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":89:9)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":89:30)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":92:9)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":104:9)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":92:13)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":92:20)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":93:9)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":100:9)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":102:9)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":94:28)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":94:20)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":94:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:13)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":99:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:21)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:24)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:28)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:26)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":97:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":98:37)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":98:30)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":98:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:33)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":96:32)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":103:23)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":103:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":109:1)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":109:78)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":132:23)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":111:1)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":135:1)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":113:5)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":113:9)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":115:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":115:12)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":115:5)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":116:77)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":116:12)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":116:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":116:81)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":117:5)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":134:5)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":118:9)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":118:13)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":119:9)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":119:30)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":133:9)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:21)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:23)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:26)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:34)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":121:36)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":122:9)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":129:9)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":131:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":123:28)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":123:20)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":123:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":128:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:21)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:24)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:28)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:26)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":126:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":127:37)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":127:30)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":127:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:33)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":125:32)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_61a.c":132:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc8, #loc9])
#loc151 = loc(fused[#loc10, #loc11])
#loc152 = loc(fused[#loc14, #loc12])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc23, #loc24])
#loc157 = loc(fused[#loc25, #loc26])
#loc158 = loc(fused[#loc27, #loc28])
#loc159 = loc(fused[#loc29, #loc30, #loc31, #loc26])
#loc160 = loc(fused[#loc34, #loc32])
#loc161 = loc(fused[#loc35, #loc36])
#loc162 = loc(fused[#loc38, #loc37])
#loc163 = loc(fused[#loc39, #loc40])
#loc164 = loc(fused[#loc42, #loc36])
#loc165 = loc(fused[#loc47, #loc46])
#loc166 = loc(fused[#loc49, #loc50])
#loc167 = loc(fused[#loc51, #loc52])
#loc168 = loc(fused[#loc53, #loc54])
#loc169 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc57, #loc58])
#loc171 = loc(fused[#loc59, #loc60])
#loc172 = loc(fused[#loc63, #loc61])
#loc173 = loc(fused[#loc66, #loc67])
#loc174 = loc(fused[#loc68, #loc69])
#loc175 = loc(fused[#loc70, #loc71])
#loc176 = loc(fused[#loc72, #loc73])
#loc177 = loc(fused[#loc74, #loc75])
#loc178 = loc(fused[#loc76, #loc77])
#loc179 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc180 = loc(fused[#loc83, #loc81])
#loc181 = loc(fused[#loc84, #loc85])
#loc182 = loc(fused[#loc87, #loc86])
#loc183 = loc(fused[#loc88, #loc89])
#loc184 = loc(fused[#loc91, #loc85])
#loc185 = loc(fused[#loc96, #loc95])
#loc186 = loc(fused[#loc99, #loc100])
#loc187 = loc(fused[#loc102, #loc103])
#loc188 = loc(fused[#loc104, #loc105])
#loc189 = loc(fused[#loc108, #loc106])
#loc190 = loc(fused[#loc111, #loc112])
#loc191 = loc(fused[#loc113, #loc114])
#loc192 = loc(fused[#loc115, #loc116])
#loc193 = loc(fused[#loc117, #loc118])
#loc194 = loc(fused[#loc119, #loc120])
#loc195 = loc(fused[#loc121, #loc122])
#loc196 = loc(fused[#loc124, #loc126])
#loc197 = loc(fused[#loc127, #loc128, #loc129, #loc120])
#loc198 = loc(fused[#loc132, #loc130])
#loc199 = loc(fused[#loc133, #loc134])
#loc200 = loc(fused[#loc136, #loc135])
#loc201 = loc(fused[#loc137, #loc138])
#loc202 = loc(fused[#loc140, #loc134])
#loc203 = loc(fused[#loc145, #loc144])
