!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":150:10)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":150:14)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":150:20)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":150:32)
#loc291 = loc(fused[#loc97, #loc98])
#loc292 = loc(fused[#loc99, #loc100])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc259)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc260)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc267)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc23)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc23)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc268)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc269)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
            cir.scope {
              %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc272)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc32)
                %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc33)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
              } loc(#loc273)
            } loc(#loc271)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc35)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc36)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc36)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc274)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc40)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc42)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc44)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc275)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.const #cir.int<8> : !s32i loc(#loc46)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc46)
            %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc47)
            cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
          } loc(#loc266)
          cir.break loc(#loc49)
        } loc(#loc17)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          cir.break loc(#loc52)
        } loc(#loc50)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc265)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc278)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc58)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc59)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc63)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc64)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc280)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc69)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc69)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc281)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc282)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc283)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc74)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc74)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc76)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc78)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc284)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    } loc(#loc277)
    cir.return loc(#loc9)
  } loc(#loc262)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc287)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    cir.return loc(#loc82)
  } loc(#loc285)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc288)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc94)
  cir.func @main(%arg0: !s32i loc(fused[#loc97, #loc98]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc99, #loc100])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc101)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc102)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc103)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc103)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc104)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc91)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good() : () -> () loc(#loc106)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc92)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc93)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc294)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad() : () -> () loc(#loc110)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc94)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    cir.return %17 : !s32i loc(#loc295)
  } loc(#loc290)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc297)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc123)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          cir.break loc(#loc127)
        } loc(#loc124)
        cir.case(default, []) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc301)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc133)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc134)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc134)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc302)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc303)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc304)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
            cir.scope {
              %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc306)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc143)
                %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc144)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
              } loc(#loc307)
            } loc(#loc305)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc146)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc147)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc148)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc147)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc147)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc308)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc151)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc151)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc153)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc154)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc153)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc155)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc309)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
            cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
          } loc(#loc300)
          cir.break loc(#loc158)
        } loc(#loc128)
        cir.yield loc(#loc121)
      } loc(#loc121)
    } loc(#loc299)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc312)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc164)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc165)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc166)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc165)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc165)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc169)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc169)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc170)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc171)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc170)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc172)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc314)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc175)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc175)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc315)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc316)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc317)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc180)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc180)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc182)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc183)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc182)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc184)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc318)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    } loc(#loc311)
    cir.return loc(#loc116)
  } loc(#loc296)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc191)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc195)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc324)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc201)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc202)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc202)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc325)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc326)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc327)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
            cir.scope {
              %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc210)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc211)
                %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc212)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
              } loc(#loc330)
            } loc(#loc328)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc213)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc214)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc215)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc216)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc215)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc215)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc331)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc219)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc219)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc221)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc222)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc221)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc223)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc332)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
            cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
          } loc(#loc323)
          cir.break loc(#loc226)
        } loc(#loc196)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc228)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc228)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc229)
          cir.break loc(#loc230)
        } loc(#loc227)
        cir.yield loc(#loc193)
      } loc(#loc193)
    } loc(#loc322)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc335)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc236)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc237)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc238)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc237)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc237)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc336)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc241)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc241)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc242)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc243)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc242)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc244)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc337)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc246)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc247)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc247)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc338)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc339)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc340)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc252)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc252)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc254)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc254)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc256)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc341)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc258)
    } loc(#loc334)
    cir.return loc(#loc188)
  } loc(#loc319)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":41:19)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":23:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":56:1)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":25:5)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":25:12)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":26:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":26:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":27:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":43:5)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":27:12)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":29:5)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":30:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":37:5)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:9)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:60)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:37)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:44)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:48)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:59)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:9)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:43)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:13)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:27)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:33)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:34)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:40)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:39)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:16)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:28)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:33)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:37)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:9)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:38)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:29)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:9)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:20)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:24)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:25)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:16)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:29)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:27)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":38:5)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":39:5)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":41:9)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":42:9)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":44:5)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":55:5)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":45:9)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":45:24)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:16)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:24)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:29)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:33)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:9)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:34)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:25)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:16)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:20)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:9)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:16)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:22)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:30)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:34)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:45)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:9)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:46)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:23)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:9)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:14)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:18)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:19)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":52:19)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":52:9)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":134:1)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":138:1)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":136:5)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":136:14)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":137:5)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":137:14)
#loc87 = loc("/usr/include/stdlib.h":575:1)
#loc88 = loc("/usr/include/stdlib.h":575:41)
#loc89 = loc("/usr/include/time.h":76:1)
#loc90 = loc("/usr/include/time.h":76:38)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":155:15)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":157:15)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":160:15)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":162:15)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":150:1)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":165:1)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":151:1)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":153:27)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":153:22)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":153:5)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":155:5)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":156:5)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":156:58)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":157:5)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":160:5)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":161:5)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":161:57)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":162:5)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":164:12)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":164:5)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":63:1)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":96:1)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":65:5)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":65:12)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":66:12)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":66:5)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":67:5)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":83:5)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":67:12)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":69:5)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":71:19)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":71:9)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":72:9)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":73:5)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":74:5)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":81:5)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:9)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:60)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:37)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:44)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:48)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:59)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:9)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:43)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:13)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:27)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:33)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:34)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:40)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:39)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:16)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:28)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:33)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:37)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:9)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:38)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:29)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:9)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:20)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:24)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:25)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":80:16)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":80:9)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":82:5)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":84:5)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":95:5)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":85:9)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":85:24)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:16)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:24)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:29)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:33)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:9)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:34)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:25)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:16)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:20)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:9)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:16)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:22)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:30)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:34)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:45)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:9)
#loc179 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:46)
#loc180 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:23)
#loc181 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:9)
#loc182 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:14)
#loc183 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:18)
#loc184 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:19)
#loc185 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":92:19)
#loc186 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":92:9)
#loc187 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":99:1)
#loc188 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":132:1)
#loc189 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":101:5)
#loc190 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":101:12)
#loc191 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":102:12)
#loc192 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":102:5)
#loc193 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":103:5)
#loc194 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":119:5)
#loc195 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":103:12)
#loc196 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":105:5)
#loc197 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":106:5)
#loc198 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":113:5)
#loc199 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:9)
#loc200 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:60)
#loc201 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:37)
#loc202 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:44)
#loc203 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:48)
#loc204 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:59)
#loc205 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:9)
#loc206 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:43)
#loc207 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:13)
#loc208 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:27)
#loc209 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:33)
#loc210 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:34)
#loc211 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:40)
#loc212 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:39)
#loc213 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:16)
#loc214 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:28)
#loc215 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:33)
#loc216 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:37)
#loc217 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:9)
#loc218 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:38)
#loc219 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:29)
#loc220 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:9)
#loc221 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:20)
#loc222 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:24)
#loc223 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:25)
#loc224 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":112:16)
#loc225 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":112:9)
#loc226 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":114:5)
#loc227 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":115:5)
#loc228 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":117:19)
#loc229 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":117:9)
#loc230 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":118:9)
#loc231 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":120:5)
#loc232 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":131:5)
#loc233 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":121:9)
#loc234 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":121:24)
#loc235 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:16)
#loc236 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:24)
#loc237 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:29)
#loc238 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:33)
#loc239 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:9)
#loc240 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:34)
#loc241 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:25)
#loc242 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:16)
#loc243 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:20)
#loc244 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:9)
#loc245 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:16)
#loc246 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:22)
#loc247 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:30)
#loc248 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:34)
#loc249 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:45)
#loc250 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:9)
#loc251 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:46)
#loc252 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:23)
#loc253 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:9)
#loc254 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:14)
#loc255 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:18)
#loc256 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:19)
#loc257 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":128:19)
#loc258 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":128:9)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc8, #loc9])
#loc263 = loc(fused[#loc10, #loc11])
#loc264 = loc(fused[#loc13, #loc12])
#loc265 = loc(fused[#loc14, #loc15])
#loc266 = loc(fused[#loc18, #loc19])
#loc267 = loc(fused[#loc20, #loc21])
#loc268 = loc(fused[#loc24, #loc25])
#loc269 = loc(fused[#loc23, #loc25])
#loc270 = loc(fused[#loc22, #loc21])
#loc271 = loc(fused[#loc26, #loc27])
#loc272 = loc(fused[#loc28, #loc29])
#loc273 = loc(fused[#loc30, #loc27])
#loc274 = loc(fused[#loc38, #loc39])
#loc275 = loc(fused[#loc41, #loc40])
#loc276 = loc(fused[#loc48, #loc46])
#loc277 = loc(fused[#loc53, #loc54])
#loc278 = loc(fused[#loc55, #loc56])
#loc279 = loc(fused[#loc61, #loc62])
#loc280 = loc(fused[#loc66, #loc63])
#loc281 = loc(fused[#loc70, #loc71])
#loc282 = loc(fused[#loc69, #loc71])
#loc283 = loc(fused[#loc72, #loc73])
#loc284 = loc(fused[#loc75, #loc74])
#loc285 = loc(fused[#loc81, #loc82])
#loc286 = loc(fused[#loc83, #loc84])
#loc287 = loc(fused[#loc85, #loc86])
#loc288 = loc(fused[#loc87, #loc88])
#loc289 = loc(fused[#loc89, #loc90])
#loc290 = loc(fused[#loc95, #loc96])
#loc293 = loc(fused[#loc106, #loc107])
#loc294 = loc(fused[#loc110, #loc111])
#loc295 = loc(fused[#loc114, #loc113])
#loc296 = loc(fused[#loc115, #loc116])
#loc297 = loc(fused[#loc117, #loc118])
#loc298 = loc(fused[#loc120, #loc119])
#loc299 = loc(fused[#loc121, #loc122])
#loc300 = loc(fused[#loc129, #loc130])
#loc301 = loc(fused[#loc131, #loc132])
#loc302 = loc(fused[#loc135, #loc136])
#loc303 = loc(fused[#loc134, #loc136])
#loc304 = loc(fused[#loc133, #loc132])
#loc305 = loc(fused[#loc137, #loc138])
#loc306 = loc(fused[#loc139, #loc140])
#loc307 = loc(fused[#loc141, #loc138])
#loc308 = loc(fused[#loc149, #loc150])
#loc309 = loc(fused[#loc152, #loc151])
#loc310 = loc(fused[#loc157, #loc156])
#loc311 = loc(fused[#loc159, #loc160])
#loc312 = loc(fused[#loc161, #loc162])
#loc313 = loc(fused[#loc167, #loc168])
#loc314 = loc(fused[#loc172, #loc169])
#loc315 = loc(fused[#loc176, #loc177])
#loc316 = loc(fused[#loc175, #loc177])
#loc317 = loc(fused[#loc178, #loc179])
#loc318 = loc(fused[#loc181, #loc180])
#loc319 = loc(fused[#loc187, #loc188])
#loc320 = loc(fused[#loc189, #loc190])
#loc321 = loc(fused[#loc192, #loc191])
#loc322 = loc(fused[#loc193, #loc194])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc199, #loc200])
#loc325 = loc(fused[#loc203, #loc204])
#loc326 = loc(fused[#loc202, #loc204])
#loc327 = loc(fused[#loc201, #loc200])
#loc328 = loc(fused[#loc205, #loc206])
#loc329 = loc(fused[#loc207, #loc208])
#loc330 = loc(fused[#loc209, #loc206])
#loc331 = loc(fused[#loc217, #loc218])
#loc332 = loc(fused[#loc220, #loc219])
#loc333 = loc(fused[#loc225, #loc224])
#loc334 = loc(fused[#loc231, #loc232])
#loc335 = loc(fused[#loc233, #loc234])
#loc336 = loc(fused[#loc239, #loc240])
#loc337 = loc(fused[#loc244, #loc241])
#loc338 = loc(fused[#loc248, #loc249])
#loc339 = loc(fused[#loc247, #loc249])
#loc340 = loc(fused[#loc250, #loc251])
#loc341 = loc(fused[#loc253, #loc252])
