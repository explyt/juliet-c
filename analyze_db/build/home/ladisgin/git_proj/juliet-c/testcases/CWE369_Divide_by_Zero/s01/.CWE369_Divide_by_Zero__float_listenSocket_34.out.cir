!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__float_listenSocket_34_unionType" {!cir.float, !cir.float}>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":268:10)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":268:14)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":268:20)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":268:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc427 = loc(fused[#loc176, #loc177])
#loc428 = loc(fused[#loc178, #loc179])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc359)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc360)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc361)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc362)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc363)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc364)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc365)
  cir.func private @close(!s32i) -> !s32i loc(#loc366)
  cir.func private @printIntLine(!s32i) loc(#loc367)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc370)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc25)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc371)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc373)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc374)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc375)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc376)
      %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc377)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc34)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc375)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc36)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc376)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc43)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc379)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc49)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc50)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc381)
            cir.if %57 {
              cir.break loc(#loc52)
            } loc(#loc382)
          } loc(#loc380)
          %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc383)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc55)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc384)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc385)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc60)
          %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc386)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc63)
          %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc387)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc67)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc67)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
          %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc388)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %55 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc390)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc391)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc391)
            %58 = cir.call @bind(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc79)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc80)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc392)
            cir.if %61 {
              cir.break loc(#loc82)
            } loc(#loc393)
          } loc(#loc389)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %55 = cir.const #cir.int<5> : !s32i loc(#loc86)
            %56 = cir.call @listen(%54, %55) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc88)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc395)
            cir.if %59 {
              cir.break loc(#loc90)
            } loc(#loc396)
          } loc(#loc394)
          %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc92)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc93)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
          cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc100)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc399)
            cir.if %57 {
              cir.break loc(#loc102)
            } loc(#loc400)
          } loc(#loc398)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc104)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %39 = cir.const #cir.int<20> : !s32i loc(#loc105)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc105)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc105)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %44 = cir.call @recv(%36, %38, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc108)
          cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc401)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc114)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc403)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc115)
              cir.yield %59 : !cir.bool loc(#loc115)
            }, false {
              %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc404)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc115)
                cir.yield %63 : !cir.bool loc(#loc115)
              }, false {
                %63 = cir.const #false loc(#loc115)
                cir.yield %63 : !cir.bool loc(#loc115)
              }) : (!cir.bool) -> !cir.bool loc(#loc115)
              cir.yield %62 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.if %58 {
              cir.break loc(#loc119)
            } loc(#loc405)
          } loc(#loc402)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc120)
          %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %49 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc122)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc122)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc406)
          %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc123)
          %52 = cir.call @atof(%51) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc124)
          %53 = cir.cast(floating, %52 : !cir.double), !cir.float loc(#loc124)
          cir.store %53, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc407)
          cir.yield loc(#loc40)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc127)
          cir.condition(%15) loc(#loc127)
        } loc(#loc378)
      } loc(#loc378)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc131)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc409)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc134)
        } loc(#loc410)
      } loc(#loc408)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc138)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc412)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc141)
        } loc(#loc413)
      } loc(#loc411)
    } loc(#loc372)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc142)
    %4 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc143)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc414)
    cir.scope {
      %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc416)
      %6 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc149)
      %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc148)
      cir.store %7, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc416)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc418)
        %9 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc154)
        %10 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
        %11 = cir.cast(floating, %10 : !cir.float), !cir.double loc(#loc155)
        %12 = cir.binop(div, %9, %11) : !cir.double loc(#loc419)
        %13 = cir.cast(float_to_int, %12 : !cir.double), !s32i loc(#loc419)
        cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc418)
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc157)
      } loc(#loc417)
    } loc(#loc415)
    cir.return loc(#loc20)
  } loc(#loc368)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc421)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc422)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    cir.return loc(#loc159)
  } loc(#loc420)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc423)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc424)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc173)
  cir.func @main(%arg0: !s32i loc(fused[#loc176, #loc177]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc178, #loc179])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc427)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc428)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc181)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc182)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc183)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_34_good() : () -> () loc(#loc185)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc172)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc430)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_34_bad() : () -> () loc(#loc189)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc173)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.return %17 : !s32i loc(#loc431)
  } loc(#loc426)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc434)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc200)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc435)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc202)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc436)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc204)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc143)
    cir.store %4, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc437)
    cir.scope {
      %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc439)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc149)
      %8 = cir.load %7 : !cir.ptr<!cir.float>, !cir.float loc(#loc209)
      cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc439)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc441)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc214)
        %11 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc215)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc215)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc442)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc442)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc441)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc217)
      } loc(#loc440)
    } loc(#loc438)
    cir.return loc(#loc195)
  } loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc218)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc444)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc445)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc225)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc446)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc448)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc449)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc450)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc451)
      %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc452)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc234)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc234)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc450)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc236)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc236)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc451)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc241)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc242)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc243)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc244)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc454)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc250)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc456)
            cir.if %57 {
              cir.break loc(#loc252)
            } loc(#loc457)
          } loc(#loc455)
          %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc458)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc459)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc460)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc260)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc260)
          %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc461)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc262)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc262)
          %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc462)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc264)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc264)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc265)
          %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc463)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            %55 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc465)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc466)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc466)
            %58 = cir.call @bind(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc275)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc276)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc276)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc467)
            cir.if %61 {
              cir.break loc(#loc278)
            } loc(#loc468)
          } loc(#loc464)
          cir.scope {
            %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc281)
            %55 = cir.const #cir.int<5> : !s32i loc(#loc282)
            %56 = cir.call @listen(%54, %55) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc283)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc284)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc284)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc470)
            cir.if %59 {
              cir.break loc(#loc286)
            } loc(#loc471)
          } loc(#loc469)
          %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc287)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc288)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc289)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc290)
          cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc472)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc295)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc296)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc296)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc474)
            cir.if %57 {
              cir.break loc(#loc298)
            } loc(#loc475)
          } loc(#loc473)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
          %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc300)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc300)
          %39 = cir.const #cir.int<20> : !s32i loc(#loc301)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc302)
          %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc301)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc301)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc303)
          %44 = cir.call @recv(%36, %38, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc304)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc304)
          cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc476)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc309)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc310)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc310)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc478)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc311)
              cir.yield %59 : !cir.bool loc(#loc311)
            }, false {
              %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc313)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc479)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc311)
                cir.yield %63 : !cir.bool loc(#loc311)
              }, false {
                %63 = cir.const #false loc(#loc311)
                cir.yield %63 : !cir.bool loc(#loc311)
              }) : (!cir.bool) -> !cir.bool loc(#loc311)
              cir.yield %62 : !cir.bool loc(#loc311)
            }) : (!cir.bool) -> !cir.bool loc(#loc311)
            cir.if %58 {
              cir.break loc(#loc315)
            } loc(#loc480)
          } loc(#loc477)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc316)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc316)
          %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc317)
          %49 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc318)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc318)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc481)
          %51 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc319)
          %52 = cir.call @atof(%51) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc320)
          %53 = cir.cast(floating, %52 : !cir.double), !cir.float loc(#loc320)
          cir.store %53, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc482)
          cir.yield loc(#loc240)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc323)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc323)
          cir.condition(%15) loc(#loc323)
        } loc(#loc453)
      } loc(#loc453)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc326)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc327)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc327)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc484)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc330)
        } loc(#loc485)
      } loc(#loc483)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc333)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc334)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc334)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc487)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc336)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc337)
        } loc(#loc488)
      } loc(#loc486)
    } loc(#loc447)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc338)
    %4 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc143)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc489)
    cir.scope {
      %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc491)
      %6 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__float_listenSocket_34_unionType> -> !cir.ptr<!cir.float> loc(#loc149)
      %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc343)
      cir.store %7, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc491)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc346)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc346)
        %10 = cir.fabs %9 : !cir.double loc(#loc346)
        %11 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc347)
        %12 = cir.cmp(gt, %10, %11) : !cir.double, !cir.bool loc(#loc493)
        cir.if %12 {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc495)
          %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc354)
          %15 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc355)
          %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc355)
          %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc496)
          %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc496)
          cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc495)
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc356)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc357)
        } else {
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc218)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc218)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc358)
        } loc(#loc494)
      } loc(#loc492)
    } loc(#loc490)
    cir.return loc(#loc220)
  } loc(#loc443)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":52:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":136:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":54:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":54:11)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":55:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":55:60)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":57:12)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":57:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":58:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":126:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":63:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":63:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":64:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":64:28)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":65:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":65:31)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":66:9)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":66:31)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":67:9)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":67:41)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":68:9)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":111:17)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:35)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:44)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:57)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:28)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":77:68)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":78:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":81:13)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":78:17)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":78:33)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":79:13)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":80:17)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:20)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:21)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:30)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:33)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:47)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":82:48)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":83:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":83:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":84:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":84:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":85:38)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":85:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":85:13)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":85:46)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:13)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":89:13)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:22)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:54)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:55)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:64)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:78)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:17)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":86:84)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":87:13)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":88:17)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":90:13)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":93:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":90:24)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":90:38)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":90:17)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":90:57)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":91:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":92:17)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:35)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:49)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:55)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:28)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":94:59)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":95:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":98:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":95:17)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":95:33)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":96:13)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":97:17)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:31)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:45)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:58)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:76)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:79)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:26)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":101:80)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:13)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":105:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:17)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:31)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:44)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:47)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":102:61)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":103:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":104:17)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":107:39)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":107:25)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":107:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":109:32)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":109:27)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":109:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":109:43)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":111:16)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":112:9)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":115:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":112:13)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":112:29)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":113:9)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":114:26)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":114:13)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":116:9)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":119:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":116:13)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":116:29)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":117:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":118:26)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":118:13)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":127:26)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":46:11)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":127:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":128:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":135:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":129:9)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":129:30)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":47:11)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":130:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":134:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":132:13)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":132:44)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":132:32)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":132:40)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":133:26)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":133:13)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":254:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":258:1)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":256:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":256:13)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":257:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":257:13)
#loc164 = loc("/usr/include/stdlib.h":575:1)
#loc165 = loc("/usr/include/stdlib.h":575:41)
#loc166 = loc("/usr/include/time.h":76:1)
#loc167 = loc("/usr/include/time.h":76:38)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":273:15)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":275:15)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":278:15)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":280:15)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":268:1)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":283:1)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":269:1)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":271:27)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":271:22)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":271:5)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":273:5)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":274:5)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":274:55)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":275:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":278:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":279:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":279:54)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":280:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":282:12)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":282:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":143:1)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":160:1)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":145:5)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":145:11)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":146:5)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":146:60)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":148:12)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":148:5)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":150:12)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":150:5)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":151:26)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":151:5)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":152:5)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":159:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":153:9)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":153:30)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":154:9)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":158:9)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":156:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":156:44)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":156:32)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":156:40)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":157:26)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":157:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":249:23)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":163:1)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":252:1)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":165:5)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":165:11)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":166:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":166:60)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":168:12)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":168:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":169:5)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":237:5)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":174:9)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":174:13)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":175:9)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":175:28)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":176:9)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":176:31)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":177:9)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":177:31)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":178:9)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":178:41)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":179:9)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":222:17)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:35)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:44)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:57)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:28)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":188:68)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":189:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":192:13)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":189:17)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":189:33)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":190:13)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":191:17)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:20)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:21)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:30)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:33)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:47)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:13)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":193:48)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":194:34)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":194:13)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":195:39)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":195:13)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":196:38)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":196:32)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":196:13)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":196:46)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:13)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":200:13)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:22)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:54)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:55)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:64)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:78)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:17)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":197:84)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":198:13)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":199:17)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":201:13)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":204:13)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":201:24)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":201:38)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":201:17)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":201:57)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":202:13)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":203:17)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:35)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:49)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:55)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:28)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:13)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":205:59)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":206:13)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":209:13)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":206:17)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":206:33)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":207:13)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":208:17)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:31)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:45)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:58)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:76)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:79)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:26)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:13)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":212:80)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:13)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":216:13)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:17)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:31)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:44)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:47)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":213:61)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":214:13)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":215:17)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":218:39)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":218:25)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":218:13)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":220:32)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":220:27)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":220:13)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":220:43)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":222:16)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":223:9)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":226:9)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":223:13)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":223:29)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":224:9)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":225:26)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":225:13)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":227:9)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":230:9)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":227:13)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":227:29)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":228:9)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":229:26)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":229:13)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":238:26)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":238:5)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":239:5)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":251:5)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":240:9)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":240:30)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":242:9)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":250:9)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":242:17)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":242:25)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":242:12)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":243:9)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":246:9)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":248:9)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":244:13)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":244:44)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":244:32)
#loc355 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":244:40)
#loc356 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":245:26)
#loc357 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":245:13)
#loc358 = loc("CWE369_Divide_by_Zero__float_listenSocket_34.c":249:13)
#loc359 = loc(fused[#loc1, #loc2])
#loc360 = loc(fused[#loc3, #loc4])
#loc361 = loc(fused[#loc5, #loc6])
#loc362 = loc(fused[#loc7, #loc8])
#loc363 = loc(fused[#loc9, #loc10])
#loc364 = loc(fused[#loc11, #loc12])
#loc365 = loc(fused[#loc13, #loc14])
#loc366 = loc(fused[#loc15, #loc16])
#loc367 = loc(fused[#loc17, #loc18])
#loc368 = loc(fused[#loc19, #loc20])
#loc369 = loc(fused[#loc21, #loc22])
#loc370 = loc(fused[#loc23, #loc24])
#loc371 = loc(fused[#loc26, #loc25])
#loc372 = loc(fused[#loc27, #loc28])
#loc373 = loc(fused[#loc29, #loc30])
#loc374 = loc(fused[#loc31, #loc32])
#loc375 = loc(fused[#loc33, #loc34])
#loc376 = loc(fused[#loc35, #loc36])
#loc377 = loc(fused[#loc37, #loc38])
#loc378 = loc(fused[#loc39, #loc40])
#loc379 = loc(fused[#loc45, #loc46])
#loc380 = loc(fused[#loc47, #loc48])
#loc381 = loc(fused[#loc49, #loc50])
#loc382 = loc(fused[#loc51, #loc48])
#loc383 = loc(fused[#loc53, #loc54])
#loc384 = loc(fused[#loc56, #loc57])
#loc385 = loc(fused[#loc58, #loc59])
#loc386 = loc(fused[#loc62, #loc60])
#loc387 = loc(fused[#loc66, #loc63])
#loc388 = loc(fused[#loc70, #loc71])
#loc389 = loc(fused[#loc72, #loc73])
#loc390 = loc(fused[#loc75, #loc76])
#loc391 = loc(fused[#loc77, #loc78])
#loc392 = loc(fused[#loc79, #loc80])
#loc393 = loc(fused[#loc81, #loc73])
#loc394 = loc(fused[#loc83, #loc84])
#loc395 = loc(fused[#loc87, #loc88])
#loc396 = loc(fused[#loc89, #loc84])
#loc397 = loc(fused[#loc95, #loc96])
#loc398 = loc(fused[#loc97, #loc98])
#loc399 = loc(fused[#loc99, #loc100])
#loc400 = loc(fused[#loc101, #loc98])
#loc401 = loc(fused[#loc109, #loc110])
#loc402 = loc(fused[#loc111, #loc112])
#loc403 = loc(fused[#loc113, #loc114])
#loc404 = loc(fused[#loc116, #loc117])
#loc405 = loc(fused[#loc118, #loc112])
#loc406 = loc(fused[#loc122, #loc120])
#loc407 = loc(fused[#loc125, #loc126])
#loc408 = loc(fused[#loc128, #loc129])
#loc409 = loc(fused[#loc130, #loc131])
#loc410 = loc(fused[#loc132, #loc129])
#loc411 = loc(fused[#loc135, #loc136])
#loc412 = loc(fused[#loc137, #loc138])
#loc413 = loc(fused[#loc139, #loc136])
#loc414 = loc(fused[#loc144, #loc142])
#loc415 = loc(fused[#loc145, #loc146])
#loc416 = loc(fused[#loc147, #loc148])
#loc417 = loc(fused[#loc150, #loc151])
#loc418 = loc(fused[#loc152, #loc153])
#loc419 = loc(fused[#loc154, #loc155])
#loc420 = loc(fused[#loc158, #loc159])
#loc421 = loc(fused[#loc160, #loc161])
#loc422 = loc(fused[#loc162, #loc163])
#loc423 = loc(fused[#loc164, #loc165])
#loc424 = loc(fused[#loc166, #loc167])
#loc425 = loc(fused[#loc168, #loc169])
#loc426 = loc(fused[#loc174, #loc175])
#loc429 = loc(fused[#loc185, #loc186])
#loc430 = loc(fused[#loc189, #loc190])
#loc431 = loc(fused[#loc193, #loc192])
#loc432 = loc(fused[#loc194, #loc195])
#loc433 = loc(fused[#loc196, #loc197])
#loc434 = loc(fused[#loc198, #loc199])
#loc435 = loc(fused[#loc201, #loc200])
#loc436 = loc(fused[#loc203, #loc202])
#loc437 = loc(fused[#loc205, #loc204])
#loc438 = loc(fused[#loc206, #loc207])
#loc439 = loc(fused[#loc208, #loc209])
#loc440 = loc(fused[#loc210, #loc211])
#loc441 = loc(fused[#loc212, #loc213])
#loc442 = loc(fused[#loc214, #loc215])
#loc443 = loc(fused[#loc219, #loc220])
#loc444 = loc(fused[#loc221, #loc222])
#loc445 = loc(fused[#loc223, #loc224])
#loc446 = loc(fused[#loc226, #loc225])
#loc447 = loc(fused[#loc227, #loc228])
#loc448 = loc(fused[#loc229, #loc230])
#loc449 = loc(fused[#loc231, #loc232])
#loc450 = loc(fused[#loc233, #loc234])
#loc451 = loc(fused[#loc235, #loc236])
#loc452 = loc(fused[#loc237, #loc238])
#loc453 = loc(fused[#loc239, #loc240])
#loc454 = loc(fused[#loc245, #loc246])
#loc455 = loc(fused[#loc247, #loc248])
#loc456 = loc(fused[#loc249, #loc250])
#loc457 = loc(fused[#loc251, #loc248])
#loc458 = loc(fused[#loc253, #loc254])
#loc459 = loc(fused[#loc256, #loc257])
#loc460 = loc(fused[#loc258, #loc259])
#loc461 = loc(fused[#loc261, #loc260])
#loc462 = loc(fused[#loc263, #loc262])
#loc463 = loc(fused[#loc266, #loc267])
#loc464 = loc(fused[#loc268, #loc269])
#loc465 = loc(fused[#loc271, #loc272])
#loc466 = loc(fused[#loc273, #loc274])
#loc467 = loc(fused[#loc275, #loc276])
#loc468 = loc(fused[#loc277, #loc269])
#loc469 = loc(fused[#loc279, #loc280])
#loc470 = loc(fused[#loc283, #loc284])
#loc471 = loc(fused[#loc285, #loc280])
#loc472 = loc(fused[#loc291, #loc292])
#loc473 = loc(fused[#loc293, #loc294])
#loc474 = loc(fused[#loc295, #loc296])
#loc475 = loc(fused[#loc297, #loc294])
#loc476 = loc(fused[#loc305, #loc306])
#loc477 = loc(fused[#loc307, #loc308])
#loc478 = loc(fused[#loc309, #loc310])
#loc479 = loc(fused[#loc312, #loc313])
#loc480 = loc(fused[#loc314, #loc308])
#loc481 = loc(fused[#loc318, #loc316])
#loc482 = loc(fused[#loc321, #loc322])
#loc483 = loc(fused[#loc324, #loc325])
#loc484 = loc(fused[#loc326, #loc327])
#loc485 = loc(fused[#loc328, #loc325])
#loc486 = loc(fused[#loc331, #loc332])
#loc487 = loc(fused[#loc333, #loc334])
#loc488 = loc(fused[#loc335, #loc332])
#loc489 = loc(fused[#loc339, #loc338])
#loc490 = loc(fused[#loc340, #loc341])
#loc491 = loc(fused[#loc342, #loc343])
#loc492 = loc(fused[#loc344, #loc345])
#loc493 = loc(fused[#loc348, #loc347])
#loc494 = loc(fused[#loc349, #loc350, #loc351, #loc345])
#loc495 = loc(fused[#loc352, #loc353])
#loc496 = loc(fused[#loc354, #loc355])
