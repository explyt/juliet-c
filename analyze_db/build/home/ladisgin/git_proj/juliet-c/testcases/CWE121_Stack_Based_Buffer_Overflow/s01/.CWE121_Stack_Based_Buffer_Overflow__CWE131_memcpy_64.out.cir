!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":21:68)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":21:75)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":40:72)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":40:79)
#loc57 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc31, #loc32])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc55)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc58)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc58)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc59)
    cir.scope {
      %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc61)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc61)
      cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc61)
      %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc18)
      %11 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc19)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
      %13 = cir.const #cir.int<10> : !s32i loc(#loc20)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc20)
      %15 = cir.const #cir.int<4> : !u64i loc(#loc62)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc63)
      cir.libc.memcpy %16 bytes from %12 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc64)
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc27)
      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc28)
    } loc(#loc60)
    cir.return loc(#loc4)
  } loc(#loc56)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc31, #loc32])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc67)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc37)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc34)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc34)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc67)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    cir.store %6, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc68)
    cir.scope {
      %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc70)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc70)
      cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc70)
      %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
      %11 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
      %13 = cir.const #cir.int<10> : !s32i loc(#loc46)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc46)
      %15 = cir.const #cir.int<4> : !u64i loc(#loc71)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc72)
      cir.libc.memcpy %16 bytes from %12 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc73)
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc53)
      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc54)
    } loc(#loc69)
    cir.return loc(#loc30)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":33:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":24:32)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":26:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":26:20)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":26:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":28:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":28:28)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:30)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:43)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":30:44)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":31:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":31:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":31:28)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":31:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":40:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":52:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":43:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":43:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":45:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":45:27)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":41:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":45:20)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":45:19)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":46:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":51:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":47:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":47:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:33)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:43)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":49:44)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":50:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":50:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":50:28)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_64b.c":50:9)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc7, #loc8])
#loc59 = loc(fused[#loc9, #loc10])
#loc60 = loc(fused[#loc14, #loc15])
#loc61 = loc(fused[#loc16, #loc17])
#loc62 = loc(fused[#loc21, #loc22])
#loc63 = loc(fused[#loc20, #loc22])
#loc64 = loc(fused[#loc23, #loc24])
#loc65 = loc(fused[#loc29, #loc30])
#loc67 = loc(fused[#loc33, #loc34])
#loc68 = loc(fused[#loc35, #loc36])
#loc69 = loc(fused[#loc40, #loc41])
#loc70 = loc(fused[#loc42, #loc43])
#loc71 = loc(fused[#loc47, #loc48])
#loc72 = loc(fused[#loc46, #loc48])
#loc73 = loc(fused[#loc49, #loc50])
