!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":95:10)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":95:14)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":95:20)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":95:32)
#loc207 = loc(fused[#loc91, #loc92])
#loc208 = loc(fused[#loc93, #loc94])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc170)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func private @printIntLine(!s32i) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc21)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc182)
        cir.condition(%7) loc(#loc29)
      } body {
        cir.scope {
          %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc31)
          %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %10 = cir.call @__isoc99_fscanf(%7, %9, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc31)
        } loc(#loc183)
        cir.yield loc(#loc24)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc34)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        cir.yield loc(#loc180)
      } loc(#loc180)
    } loc(#loc180)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc186)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc187)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc41)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc42)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc188)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc189)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc41)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc190)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc50)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc193)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc52)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc54)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc52)
        } loc(#loc194)
      } loc(#loc192)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc57)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc57)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc196)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc60)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc197)
          cir.condition(%25) loc(#loc61)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc66)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc199)
          } loc(#loc198)
          cir.yield loc(#loc56)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc68)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc200)
          cir.yield loc(#loc195)
        } loc(#loc195)
      } loc(#loc195)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc70)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc71)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc69)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc72)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc74)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    } loc(#loc185)
    cir.return loc(#loc15)
  } loc(#loc176)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc201)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc203)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc204)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc98)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_good() : () -> () loc(#loc100)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17_bad() : () -> () loc(#loc104)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.return %17 : !s32i loc(#loc211)
  } loc(#loc206)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc116)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc120)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc218)
        cir.condition(%7) loc(#loc124)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<20> : !s32i loc(#loc126)
          cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
        } loc(#loc219)
        cir.yield loc(#loc119)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc129)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
        cir.yield loc(#loc216)
      } loc(#loc216)
    } loc(#loc216)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc224)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc137)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc225)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc226)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc228)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc145)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc230)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc148)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc149)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
        } loc(#loc231)
      } loc(#loc229)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc152)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc152)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc233)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc155)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc234)
          cir.condition(%25) loc(#loc156)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc158)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc160)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc161)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc236)
          } loc(#loc235)
          cir.yield loc(#loc151)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc162)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc163)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc237)
          cir.yield loc(#loc232)
        } loc(#loc232)
      } loc(#loc232)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc165)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc166)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc164)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc167)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc168)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc169)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc168)
    } loc(#loc222)
    cir.return loc(#loc110)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":30:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":21:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":46:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":23:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":23:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":24:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":24:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":26:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":26:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":26:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":31:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:16)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:20)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:18)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":28:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":30:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":30:16)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:24)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":27:23)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":32:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":45:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":33:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":33:16)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":34:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":34:14)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:28)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:35)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:42)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:52)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:53)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":37:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:43)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:27)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:34)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:40)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":38:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":42:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:18)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:14)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:21)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:23)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":40:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":41:29)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":41:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":41:24)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":41:25)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:40)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":39:39)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":43:22)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":43:33)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":43:34)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":43:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":44:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":44:14)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":80:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":83:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":82:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":82:13)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":100:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":102:15)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":105:15)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":107:15)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":95:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":110:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":96:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":98:27)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":98:22)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":98:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":100:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":101:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":101:71)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":102:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":105:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":106:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":106:70)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":107:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":109:12)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":109:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":53:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":78:1)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":55:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":55:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":56:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":56:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":58:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":58:12)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":58:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":63:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:16)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:20)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:18)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":60:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":62:16)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":62:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:24)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":59:23)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":64:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":77:5)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":65:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":65:16)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":66:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":66:14)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:28)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:35)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:42)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:52)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:53)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":69:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:43)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:27)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:34)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:40)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":70:39)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":74:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:18)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:14)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:21)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:33)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:23)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":72:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":73:29)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":73:13)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":73:24)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":73:25)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:40)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":71:39)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":75:22)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":75:33)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":75:34)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":75:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":76:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_17.c":76:14)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc6, #loc7])
#loc173 = loc(fused[#loc8, #loc9])
#loc174 = loc(fused[#loc10, #loc11])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc14, #loc15])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc22, #loc20])
#loc180 = loc(fused[#loc23, #loc24])
#loc181 = loc(fused[#loc26, #loc25])
#loc182 = loc(fused[#loc27, #loc28])
#loc183 = loc(fused[#loc30, #loc24])
#loc184 = loc(fused[#loc34, #loc33])
#loc185 = loc(fused[#loc35, #loc36])
#loc186 = loc(fused[#loc37, #loc38])
#loc187 = loc(fused[#loc39, #loc40])
#loc188 = loc(fused[#loc43, #loc44])
#loc189 = loc(fused[#loc42, #loc44])
#loc190 = loc(fused[#loc41, #loc45])
#loc191 = loc(fused[#loc46, #loc45])
#loc192 = loc(fused[#loc47, #loc48])
#loc193 = loc(fused[#loc49, #loc50])
#loc194 = loc(fused[#loc51, #loc48])
#loc195 = loc(fused[#loc55, #loc56])
#loc196 = loc(fused[#loc58, #loc57])
#loc197 = loc(fused[#loc59, #loc60])
#loc198 = loc(fused[#loc62, #loc56])
#loc199 = loc(fused[#loc64, #loc63])
#loc200 = loc(fused[#loc68, #loc67])
#loc201 = loc(fused[#loc75, #loc76])
#loc202 = loc(fused[#loc77, #loc78])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc81, #loc82])
#loc205 = loc(fused[#loc83, #loc84])
#loc206 = loc(fused[#loc89, #loc90])
#loc209 = loc(fused[#loc100, #loc101])
#loc210 = loc(fused[#loc104, #loc105])
#loc211 = loc(fused[#loc108, #loc107])
#loc212 = loc(fused[#loc109, #loc110])
#loc213 = loc(fused[#loc111, #loc112])
#loc214 = loc(fused[#loc113, #loc114])
#loc215 = loc(fused[#loc117, #loc115])
#loc216 = loc(fused[#loc118, #loc119])
#loc217 = loc(fused[#loc121, #loc120])
#loc218 = loc(fused[#loc122, #loc123])
#loc219 = loc(fused[#loc125, #loc119])
#loc220 = loc(fused[#loc127, #loc126])
#loc221 = loc(fused[#loc129, #loc128])
#loc222 = loc(fused[#loc130, #loc131])
#loc223 = loc(fused[#loc132, #loc133])
#loc224 = loc(fused[#loc134, #loc135])
#loc225 = loc(fused[#loc138, #loc139])
#loc226 = loc(fused[#loc137, #loc139])
#loc227 = loc(fused[#loc136, #loc140])
#loc228 = loc(fused[#loc141, #loc140])
#loc229 = loc(fused[#loc142, #loc143])
#loc230 = loc(fused[#loc144, #loc145])
#loc231 = loc(fused[#loc146, #loc143])
#loc232 = loc(fused[#loc150, #loc151])
#loc233 = loc(fused[#loc153, #loc152])
#loc234 = loc(fused[#loc154, #loc155])
#loc235 = loc(fused[#loc157, #loc151])
#loc236 = loc(fused[#loc159, #loc158])
#loc237 = loc(fused[#loc163, #loc162])
