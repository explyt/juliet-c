!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThread = !cir.struct<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:23)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:29)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":142:10)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":142:14)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":142:20)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":142:32)
#loc125 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:24)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:30)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)
#true = #cir.bool<true> : !cir.bool
#loc209 = loc(fused[#loc7, #loc8])
#loc242 = loc(fused[#loc97, #loc98])
#loc243 = loc(fused[#loc99, #loc100])
#loc252 = loc(fused[#loc125, #loc126])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @gBadInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc206)
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc207)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb2 loc(#loc211)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %5 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc206)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc20)
    %10 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc206)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc24)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb2 loc(#loc211)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc208)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc217)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc218)
  cir.func private @printIntLine(!s32i) loc(#loc219)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb3, ^bb38 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc224)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc34)
    cir.store %4, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc221)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %5, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc222)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %7 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc206)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb5 loc(#loc226)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %10 = cir.call @stdThreadCreate(%8, %9, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc48)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc48)
    %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc48)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc227)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc50)
    cir.store %13, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc228)
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %14 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc54)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %16 = cir.call @stdThreadCreate(%14, %15, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc56)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc56)
    %18 = cir.unary(not, %17) : !cir.bool, !cir.bool loc(#loc56)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc230)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc58)
    cir.store %19, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc231)
    cir.br ^bb11 loc(#loc53)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc53)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc232)
  ^bb13:  // pred: ^bb12
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc62)
    %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc62)
    cir.brcond %21 ^bb14, ^bb19 loc(#loc63)
  ^bb14:  // pred: ^bb13
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc64)
    %23 = cir.call @stdThreadJoin(%22) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc65)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %24 ^bb15, ^bb16 loc(#loc63)
  ^bb15:  // pred: ^bb14
    %25 = cir.const #true loc(#loc63)
    cir.br ^bb17(%25 : !cir.bool) loc(#loc63)
  ^bb16:  // pred: ^bb14
    %26 = cir.const #false loc(#loc63)
    cir.br ^bb17(%26 : !cir.bool) loc(#loc63)
  ^bb17(%27: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc63)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%27 : !cir.bool) loc(#loc63)
  ^bb19:  // pred: ^bb13
    %28 = cir.const #false loc(#loc63)
    cir.br ^bb20(%28 : !cir.bool) loc(#loc63)
  ^bb20(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:25)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc63)
  ^bb21:  // pred: ^bb20
    cir.brcond %29 ^bb22, ^bb23 loc(#loc233)
  ^bb22:  // pred: ^bb21
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc67)
    %31 = cir.call @stdThreadDestroy(%30) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc68)
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc61)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc234)
  ^bb25:  // pred: ^bb24
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc71)
    %33 = cir.cast(ptr_to_bool, %32 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc71)
    cir.brcond %33 ^bb26, ^bb31 loc(#loc72)
  ^bb26:  // pred: ^bb25
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc73)
    %35 = cir.call @stdThreadJoin(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc74)
    %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %36 ^bb27, ^bb28 loc(#loc72)
  ^bb27:  // pred: ^bb26
    %37 = cir.const #true loc(#loc72)
    cir.br ^bb29(%37 : !cir.bool) loc(#loc72)
  ^bb28:  // pred: ^bb26
    %38 = cir.const #false loc(#loc72)
    cir.br ^bb29(%38 : !cir.bool) loc(#loc72)
  ^bb29(%39: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc72)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32(%39 : !cir.bool) loc(#loc72)
  ^bb31:  // pred: ^bb25
    %40 = cir.const #false loc(#loc72)
    cir.br ^bb32(%40 : !cir.bool) loc(#loc72)
  ^bb32(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:25)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc72)
  ^bb33:  // pred: ^bb32
    cir.brcond %41 ^bb34, ^bb35 loc(#loc235)
  ^bb34:  // pred: ^bb33
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc76)
    %43 = cir.call @stdThreadDestroy(%42) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc77)
    cir.br ^bb35 loc(#loc70)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc70)
  ^bb36:  // pred: ^bb35
    %44 = cir.get_global @gBadInt : !cir.ptr<!s32i> loc(#loc206)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc79)
    cir.br ^bb37 loc(#loc41)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc80)
  ^bb38:  // 2 preds: ^bb2, ^bb37
    cir.br ^bb39 loc(#loc38)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc32)
  } loc(#loc220)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__global_int_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc82)
  } loc(#loc236)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc238)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc239)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc94)
  cir.func @main(%arg0: !s32i loc(fused[#loc97, #loc98]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc99, #loc100])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc101)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc102)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc103)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc103)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc104)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc91)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %8 = cir.get_global @CWE366_Race_Condition_Within_Thread__global_int_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call @CWE366_Race_Condition_Within_Thread__global_int_16_good() : () -> () loc(#loc106)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc92)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc93)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %13 = cir.get_global @CWE366_Race_Condition_Within_Thread__global_int_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call @CWE366_Race_Condition_Within_Thread__global_int_16_bad() : () -> () loc(#loc110)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc94)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    cir.return %17 : !s32i loc(#loc246)
  } loc(#loc241)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc247)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc248)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc249)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc250)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc125, #loc126])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc253)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc129)
    %2 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc248)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc130)
    cir.call @stdThreadLockAcquire(%3) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc131)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb2 loc(#loc254)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %6 = cir.const #cir.int<1000000> : !s32i loc(#loc137)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc138)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc258)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc142)
    %12 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc258)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc146)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb2 loc(#loc254)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc248)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc147)
    cir.call @stdThreadLockRelease(%16) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc148)
    cir.return loc(#loc124)
  } loc(#loc251)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc261)
  cir.global "private" internal dsolocal @gGoodInt = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc258)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc264)
    cir.br ^bb1 loc(#loc265)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %3 ^bb3, ^bb42 loc(#loc159)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc266)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc154)
    cir.store %4, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc263)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc156)
    cir.store %5, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc264)
    cir.br ^bb5 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc248)
    %7 = cir.call @stdThreadLockCreate(%6) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc164)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc164)
    %9 = cir.unary(not, %8) : !cir.bool, !cir.bool loc(#loc164)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc268)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc166)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc163)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc269)
  ^bb9:  // pred: ^bb8
    %10 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc169)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
    %12 = cir.call @stdThreadCreate(%10, %11, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc171)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc171)
    %14 = cir.unary(not, %13) : !cir.bool, !cir.bool loc(#loc171)
    cir.brcond %14 ^bb10, ^bb11 loc(#loc270)
  ^bb10:  // pred: ^bb9
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc173)
    cir.store %15, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc271)
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc168)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc272)
  ^bb13:  // pred: ^bb12
    %16 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc177)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
    %18 = cir.call @stdThreadCreate(%16, %17, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc179)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc179)
    %20 = cir.unary(not, %19) : !cir.bool, !cir.bool loc(#loc179)
    cir.brcond %20 ^bb14, ^bb15 loc(#loc273)
  ^bb14:  // pred: ^bb13
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc181)
    cir.store %21, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc274)
    cir.br ^bb15 loc(#loc176)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc176)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc275)
  ^bb17:  // pred: ^bb16
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc185)
    %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc185)
    cir.brcond %23 ^bb18, ^bb23 loc(#loc186)
  ^bb18:  // pred: ^bb17
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc187)
    %25 = cir.call @stdThreadJoin(%24) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc188)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc188)
    cir.brcond %26 ^bb19, ^bb20 loc(#loc186)
  ^bb19:  // pred: ^bb18
    %27 = cir.const #true loc(#loc186)
    cir.br ^bb21(%27 : !cir.bool) loc(#loc186)
  ^bb20:  // pred: ^bb18
    %28 = cir.const #false loc(#loc186)
    cir.br ^bb21(%28 : !cir.bool) loc(#loc186)
  ^bb21(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc186)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%29 : !cir.bool) loc(#loc186)
  ^bb23:  // pred: ^bb17
    %30 = cir.const #false loc(#loc186)
    cir.br ^bb24(%30 : !cir.bool) loc(#loc186)
  ^bb24(%31: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:25)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc186)
  ^bb25:  // pred: ^bb24
    cir.brcond %31 ^bb26, ^bb27 loc(#loc276)
  ^bb26:  // pred: ^bb25
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc190)
    %33 = cir.call @stdThreadDestroy(%32) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc191)
    cir.br ^bb27 loc(#loc184)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc184)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc277)
  ^bb29:  // pred: ^bb28
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc194)
    %35 = cir.cast(ptr_to_bool, %34 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc194)
    cir.brcond %35 ^bb30, ^bb35 loc(#loc195)
  ^bb30:  // pred: ^bb29
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc196)
    %37 = cir.call @stdThreadJoin(%36) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc197)
    %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %38 ^bb31, ^bb32 loc(#loc195)
  ^bb31:  // pred: ^bb30
    %39 = cir.const #true loc(#loc195)
    cir.br ^bb33(%39 : !cir.bool) loc(#loc195)
  ^bb32:  // pred: ^bb30
    %40 = cir.const #false loc(#loc195)
    cir.br ^bb33(%40 : !cir.bool) loc(#loc195)
  ^bb33(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc195)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36(%41 : !cir.bool) loc(#loc195)
  ^bb35:  // pred: ^bb29
    %42 = cir.const #false loc(#loc195)
    cir.br ^bb36(%42 : !cir.bool) loc(#loc195)
  ^bb36(%43: !cir.bool loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:25)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc195)
  ^bb37:  // pred: ^bb36
    cir.brcond %43 ^bb38, ^bb39 loc(#loc278)
  ^bb38:  // pred: ^bb37
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc199)
    %45 = cir.call @stdThreadDestroy(%44) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc200)
    cir.br ^bb39 loc(#loc193)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc193)
  ^bb40:  // pred: ^bb39
    %46 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc248)
    %47 = cir.load %46 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc201)
    cir.call @stdThreadLockDestroy(%47) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc202)
    %48 = cir.get_global @gGoodInt : !cir.ptr<!s32i> loc(#loc258)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc204)
    cir.br ^bb41 loc(#loc161)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc205)
  ^bb42:  // 2 preds: ^bb2, ^bb41
    cir.br ^bb43 loc(#loc158)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc152)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__global_int_16.c":0:0)
#loc1 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":22:1)
#loc2 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":22:22)
#loc3 = loc("../../testcasesupport/std_thread.h":14:1)
#loc4 = loc("../../testcasesupport/std_thread.h":14:74)
#loc5 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":26:1)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":42:1)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":28:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":28:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":27:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":41:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":39:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:19)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:29)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":40:9)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:31)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":38:30)
#loc25 = loc("../../testcasesupport/std_thread.h":15:1)
#loc26 = loc("../../testcasesupport/std_thread.h":15:35)
#loc27 = loc("../../testcasesupport/std_thread.h":16:1)
#loc28 = loc("../../testcasesupport/std_thread.h":16:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc31 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":59:1)
#loc32 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":87:1)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":64:13)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":64:33)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":65:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":65:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":61:5)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":86:5)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":61:11)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":63:9)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":84:9)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":66:23)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":66:13)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:13)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":70:13)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:34)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:45)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":67:18)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":68:13)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":69:27)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":69:17)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:13)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":74:13)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:34)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:45)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":71:18)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":72:13)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":73:27)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":73:17)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:13)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":78:13)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:17)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:42)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":75:28)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":76:13)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":77:34)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":77:17)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:13)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":82:13)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:17)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:42)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":79:28)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":80:13)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":81:34)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":81:17)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":83:26)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":83:13)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":85:9)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":128:1)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":131:1)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":130:5)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":130:11)
#loc85 = loc("/usr/include/stdlib.h":575:1)
#loc86 = loc("/usr/include/stdlib.h":575:41)
#loc87 = loc("/usr/include/time.h":76:1)
#loc88 = loc("/usr/include/time.h":76:38)
#loc89 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc90 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc91 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":147:15)
#loc92 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":149:15)
#loc93 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":152:15)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":154:15)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":142:1)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":157:1)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":143:1)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":145:27)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":145:22)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":145:5)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":147:5)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":148:5)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":148:61)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":149:5)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":152:5)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":153:5)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":153:60)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":154:5)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":156:12)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":156:5)
#loc115 = loc("../../testcasesupport/std_thread.h":18:1)
#loc116 = loc("../../testcasesupport/std_thread.h":18:44)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":24:1)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":24:34)
#loc119 = loc("../../testcasesupport/std_thread.h":19:1)
#loc120 = loc("../../testcasesupport/std_thread.h":19:45)
#loc121 = loc("../../testcasesupport/std_thread.h":20:1)
#loc122 = loc("../../testcasesupport/std_thread.h":20:45)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":44:1)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":55:1)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":46:5)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":46:9)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":45:1)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":49:26)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":49:5)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:5)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":53:5)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:14)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:10)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:17)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:21)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:19)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":51:5)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":23:1)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":23:23)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:20)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:31)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":52:9)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:31)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":50:30)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":54:26)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":54:5)
#loc149 = loc("../../testcasesupport/std_thread.h":21:1)
#loc150 = loc("../../testcasesupport/std_thread.h":21:45)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":94:1)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":126:1)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":99:13)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":99:33)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":100:13)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":100:33)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":96:5)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":125:5)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":96:11)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":98:9)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":123:9)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":101:13)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":104:13)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":101:18)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":102:13)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":103:17)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:13)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":108:13)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:34)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:46)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":105:18)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":106:13)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":107:27)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":107:17)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:13)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":112:13)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:34)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:46)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":109:18)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":110:13)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":111:27)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":111:17)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:13)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":116:13)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:17)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:42)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":113:28)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":114:13)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":115:34)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":115:17)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:13)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":120:13)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:17)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:42)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":117:28)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":118:13)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":119:34)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":119:17)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":121:34)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":121:13)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":122:26)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":122:13)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__global_int_16.c":124:9)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc12, #loc13])
#loc212 = loc(fused[#loc15, #loc14])
#loc213 = loc(fused[#loc16, #loc17])
#loc214 = loc(fused[#loc19, #loc13])
#loc215 = loc(fused[#loc22, #loc21])
#loc216 = loc(fused[#loc24, #loc23])
#loc217 = loc(fused[#loc25, #loc26])
#loc218 = loc(fused[#loc27, #loc28])
#loc219 = loc(fused[#loc29, #loc30])
#loc220 = loc(fused[#loc31, #loc32])
#loc221 = loc(fused[#loc33, #loc34])
#loc222 = loc(fused[#loc35, #loc36])
#loc223 = loc(fused[#loc37, #loc38])
#loc224 = loc(fused[#loc40, #loc41])
#loc225 = loc(fused[#loc43, #loc42])
#loc226 = loc(fused[#loc44, #loc45])
#loc227 = loc(fused[#loc49, #loc45])
#loc228 = loc(fused[#loc51, #loc50])
#loc229 = loc(fused[#loc52, #loc53])
#loc230 = loc(fused[#loc57, #loc53])
#loc231 = loc(fused[#loc59, #loc58])
#loc232 = loc(fused[#loc60, #loc61])
#loc233 = loc(fused[#loc66, #loc61])
#loc234 = loc(fused[#loc69, #loc70])
#loc235 = loc(fused[#loc75, #loc70])
#loc236 = loc(fused[#loc81, #loc82])
#loc237 = loc(fused[#loc83, #loc84])
#loc238 = loc(fused[#loc85, #loc86])
#loc239 = loc(fused[#loc87, #loc88])
#loc240 = loc(fused[#loc89, #loc90])
#loc241 = loc(fused[#loc95, #loc96])
#loc244 = loc(fused[#loc106, #loc107])
#loc245 = loc(fused[#loc110, #loc111])
#loc246 = loc(fused[#loc114, #loc113])
#loc247 = loc(fused[#loc115, #loc116])
#loc248 = loc(fused[#loc117, #loc118])
#loc249 = loc(fused[#loc119, #loc120])
#loc250 = loc(fused[#loc121, #loc122])
#loc251 = loc(fused[#loc123, #loc124])
#loc253 = loc(fused[#loc127, #loc128])
#loc254 = loc(fused[#loc132, #loc133])
#loc255 = loc(fused[#loc135, #loc134])
#loc256 = loc(fused[#loc136, #loc137])
#loc257 = loc(fused[#loc139, #loc133])
#loc258 = loc(fused[#loc140, #loc141])
#loc259 = loc(fused[#loc144, #loc143])
#loc260 = loc(fused[#loc146, #loc145])
#loc261 = loc(fused[#loc149, #loc150])
#loc262 = loc(fused[#loc151, #loc152])
#loc263 = loc(fused[#loc153, #loc154])
#loc264 = loc(fused[#loc155, #loc156])
#loc265 = loc(fused[#loc157, #loc158])
#loc266 = loc(fused[#loc160, #loc161])
#loc267 = loc(fused[#loc162, #loc163])
#loc268 = loc(fused[#loc165, #loc163])
#loc269 = loc(fused[#loc167, #loc168])
#loc270 = loc(fused[#loc172, #loc168])
#loc271 = loc(fused[#loc174, #loc173])
#loc272 = loc(fused[#loc175, #loc176])
#loc273 = loc(fused[#loc180, #loc176])
#loc274 = loc(fused[#loc182, #loc181])
#loc275 = loc(fused[#loc183, #loc184])
#loc276 = loc(fused[#loc189, #loc184])
#loc277 = loc(fused[#loc192, #loc193])
#loc278 = loc(fused[#loc198, #loc193])
