!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":141:10)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":141:14)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":141:20)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":141:32)
#true = #cir.bool<true> : !cir.bool
#loc304 = loc(fused[#loc128, #loc129])
#loc305 = loc(fused[#loc130, #loc131])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc253)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc254)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc255)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc256)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc257)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc259)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc22)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc262)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc263)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc264)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc267)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc34)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc268)
    } loc(#loc266)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc35)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc271)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      cir.store %16, %13 : !u64i, !cir.ptr<!u64i> loc(#loc271)
      cir.scope {
        %17 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc47)
        %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc48)
        %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc273)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
        %23 = cir.cmp(gt, %20, %22) : !u64i, !cir.bool loc(#loc274)
        cir.if %23 {
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
            %25 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc55)
            %27 = cir.const #cir.int<100> : !s32i loc(#loc56)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc56)
            %29 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %30 = cir.binop(sub, %28, %29) : !u64i loc(#loc277)
            %31 = cir.cast(integral, %30 : !u64i), !s32i loc(#loc277)
            %32 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
            %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
            %34 = cir.call @fgets(%26, %31, %33) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc59)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
            %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
            cir.if %37 {
              %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
              %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
              cir.store %40, %13 : !u64i, !cir.ptr<!u64i> loc(#loc280)
              cir.scope {
                %41 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc71)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc71)
                %44 = cir.cmp(gt, %41, %43) : !u64i, !cir.bool loc(#loc282)
                %45 = cir.ternary(%44, true {
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                  %47 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                  %48 = cir.const #cir.int<1> : !s32i loc(#loc75)
                  %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc75)
                  %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc283)
                  %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                  %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc73)
                  %53 = cir.cast(integral, %52 : !s8i), !s32i loc(#loc73)
                  %54 = cir.const #cir.int<10> : !s32i loc(#loc77)
                  %55 = cir.cmp(eq, %53, %54) : !s32i, !cir.bool loc(#loc284)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc72)
                    cir.yield %57 : !cir.bool loc(#loc72)
                  }, false {
                    %57 = cir.const #false loc(#loc72)
                    cir.yield %57 : !cir.bool loc(#loc72)
                  }) : (!cir.bool) -> !cir.bool loc(#loc72)
                  cir.yield %56 : !cir.bool loc(#loc72)
                }, false {
                  %46 = cir.const #false loc(#loc72)
                  cir.yield %46 : !cir.bool loc(#loc72)
                }) : (!cir.bool) -> !cir.bool loc(#loc72)
                cir.if %45 {
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc79)
                  %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc79)
                  %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                  %49 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                  %50 = cir.const #cir.int<1> : !s32i loc(#loc82)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc82)
                  %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc286)
                  %53 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc83)
                  cir.store %47, %53 : !s8i, !cir.ptr<!s8i> loc(#loc287)
                } loc(#loc285)
              } loc(#loc281)
            } else {
              %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc84)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc85)
              %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc85)
              %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
              %43 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc87)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc88)
              cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc288)
            } loc(#loc279)
          } loc(#loc276)
        } loc(#loc275)
      } loc(#loc272)
    } loc(#loc270)
    cir.scope {
      %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc290)
      %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc291)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      cir.store %15, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
      %16 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
      cir.scope {
        cir.for : cond {
          %20 = cir.load deref %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc98)
          %22 = cir.cast(integral, %21 : !s8i), !s32i loc(#loc98)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc99)
          %24 = cir.cmp(ne, %22, %23) : !s32i, !cir.bool loc(#loc293)
          cir.condition(%24) loc(#loc100)
        } body {
          cir.scope {
            cir.scope {
              %20 = cir.load deref %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc105)
              %22 = cir.cast(integral, %21 : !s8i), !s32i loc(#loc105)
              %23 = cir.const #cir.int<83> : !s32i loc(#loc106)
              %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc296)
              cir.if %24 {
                %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc14)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc14)
                cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc108)
                cir.break loc(#loc109)
              } loc(#loc297)
            } loc(#loc295)
          } loc(#loc294)
          cir.yield loc(#loc96)
        } step {
          %20 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc298)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc298)
          cir.store %22, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
          cir.yield loc(#loc292)
        } loc(#loc292)
      } loc(#loc292)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc112)
      %18 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    } loc(#loc289)
    cir.return loc(#loc18)
  } loc(#loc260)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc116)
    cir.return loc(#loc115)
  } loc(#loc299)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc301)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc125)
  cir.func @main(%arg0: !s32i loc(fused[#loc128, #loc129]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc130, #loc131])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc305)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc134)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc135)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc306)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_good() : () -> () loc(#loc137)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31_bad() : () -> () loc(#loc141)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc125)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    cir.return %17 : !s32i loc(#loc308)
  } loc(#loc303)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc151)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc151)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc311)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc312)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc313)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc316)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc162)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc163)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
      } loc(#loc317)
    } loc(#loc315)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc164)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc167)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc318)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc320)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc172)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
      cir.store %16, %13 : !u64i, !cir.ptr<!u64i> loc(#loc320)
      cir.scope {
        %17 = cir.const #cir.int<100> : !s32i loc(#loc176)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc176)
        %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc177)
        %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc322)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc178)
        %23 = cir.cmp(gt, %20, %22) : !u64i, !cir.bool loc(#loc323)
        cir.if %23 {
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
            %25 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc183)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc184)
            %27 = cir.const #cir.int<100> : !s32i loc(#loc185)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc185)
            %29 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc186)
            %30 = cir.binop(sub, %28, %29) : !u64i loc(#loc326)
            %31 = cir.cast(integral, %30 : !u64i), !s32i loc(#loc326)
            %32 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
            %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
            %34 = cir.call @fgets(%26, %31, %33) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc189)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
            %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!s8i>, !cir.bool loc(#loc327)
            cir.if %37 {
              %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc193)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
              %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc193)
              cir.store %40, %13 : !u64i, !cir.ptr<!u64i> loc(#loc329)
              cir.scope {
                %41 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc199)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc200)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc200)
                %44 = cir.cmp(gt, %41, %43) : !u64i, !cir.bool loc(#loc331)
                %45 = cir.ternary(%44, true {
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
                  %47 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc203)
                  %48 = cir.const #cir.int<1> : !s32i loc(#loc204)
                  %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc204)
                  %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc332)
                  %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc205)
                  %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc202)
                  %53 = cir.cast(integral, %52 : !s8i), !s32i loc(#loc202)
                  %54 = cir.const #cir.int<10> : !s32i loc(#loc206)
                  %55 = cir.cmp(eq, %53, %54) : !s32i, !cir.bool loc(#loc333)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc201)
                    cir.yield %57 : !cir.bool loc(#loc201)
                  }, false {
                    %57 = cir.const #false loc(#loc201)
                    cir.yield %57 : !cir.bool loc(#loc201)
                  }) : (!cir.bool) -> !cir.bool loc(#loc201)
                  cir.yield %56 : !cir.bool loc(#loc201)
                }, false {
                  %46 = cir.const #false loc(#loc201)
                  cir.yield %46 : !cir.bool loc(#loc201)
                }) : (!cir.bool) -> !cir.bool loc(#loc201)
                cir.if %45 {
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc208)
                  %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc208)
                  %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
                  %49 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc210)
                  %50 = cir.const #cir.int<1> : !s32i loc(#loc211)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc211)
                  %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc335)
                  %53 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc212)
                  cir.store %47, %53 : !s8i, !cir.ptr<!s8i> loc(#loc336)
                } loc(#loc334)
              } loc(#loc330)
            } else {
              %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc213)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc213)
              cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc214)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc215)
              %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc215)
              %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
              %43 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc217)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc218)
              cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc337)
            } loc(#loc328)
          } loc(#loc325)
        } loc(#loc324)
      } loc(#loc321)
    } loc(#loc319)
    cir.scope {
      %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc339)
      %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc340)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
      cir.store %15, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
      %16 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
      cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
      cir.scope {
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc342)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc231)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc231)
          cir.store %22, %17 : !u64i, !cir.ptr<!u64i> loc(#loc344)
          cir.for : cond {
            %23 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc233)
            %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc234)
            %25 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
            %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
            %27 = cir.cmp(lt, %23, %26) : !u64i, !cir.bool loc(#loc345)
            cir.condition(%27) loc(#loc237)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
                %24 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc242)
                %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc243)
                %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc241)
                %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc241)
                %28 = cir.const #cir.int<83> : !s32i loc(#loc244)
                %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc348)
                cir.if %29 {
                  %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc246)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc246)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc247)
                  cir.break loc(#loc248)
                } loc(#loc349)
              } loc(#loc347)
            } loc(#loc346)
            cir.yield loc(#loc230)
          } step {
            %23 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc249)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc250)
            cir.store %24, %17 : !u64i, !cir.ptr<!u64i> loc(#loc350)
            cir.yield loc(#loc343)
          } loc(#loc343)
        } loc(#loc343)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc251)
        %19 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc252)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc251)
      } loc(#loc341)
    } loc(#loc338)
    cir.return loc(#loc147)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":50:27)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":65:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":25:1)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":71:1)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":27:5)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":27:12)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:20)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:27)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:31)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:42)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:43)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":28:5)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:5)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:33)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:9)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:17)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:23)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:24)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:30)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":29:29)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":30:15)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":30:5)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":30:10)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":30:11)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":31:5)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":55:5)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":33:9)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":33:37)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":33:26)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":33:33)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":35:9)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":54:9)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":35:13)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":35:17)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":35:27)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":36:9)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:13)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":53:13)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:23)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:28)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:27)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:43)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:47)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:57)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:17)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":38:67)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":39:13)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":47:13)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":49:13)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":42:27)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":42:34)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":42:17)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":42:38)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:17)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":46:17)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:21)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:31)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:33)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:36)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:41)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:49)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:50)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":43:55)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":44:17)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":45:39)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":45:21)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":45:26)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":45:34)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":45:35)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":50:17)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":52:33)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":52:17)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":52:22)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":52:29)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":56:5)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":70:5)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":57:9)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":57:27)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":58:9)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":58:23)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:9)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":68:9)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:17)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:16)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:25)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:22)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":62:9)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":63:13)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":67:13)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":63:18)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":63:17)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":63:26)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":64:13)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":65:17)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":66:17)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:35)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":61:31)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":69:9)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":69:14)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":128:1)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":131:1)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":130:5)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":130:13)
#loc118 = loc("/usr/include/stdlib.h":575:1)
#loc119 = loc("/usr/include/stdlib.h":575:41)
#loc120 = loc("/usr/include/time.h":76:1)
#loc121 = loc("/usr/include/time.h":76:38)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":146:15)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":148:15)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":151:15)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":153:15)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":141:1)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":156:1)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":142:1)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":144:27)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":144:22)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":144:5)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":146:5)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":147:5)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":147:70)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":148:5)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":151:5)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":152:5)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":152:69)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":153:5)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":155:12)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":155:5)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":78:1)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":126:1)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":80:5)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":80:12)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:20)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:27)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:31)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:42)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:43)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":81:5)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:5)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:33)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:9)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:17)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:23)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:24)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:30)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":82:29)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":83:15)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":83:5)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":83:10)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":83:11)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":84:5)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":108:5)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":86:9)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":86:37)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":86:26)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":86:33)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":88:9)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":107:9)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":88:13)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":88:17)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":88:27)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":89:9)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:13)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":106:13)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:23)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:28)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:27)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:43)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:47)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:57)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:17)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":91:67)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":92:13)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":100:13)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":102:13)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":95:27)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":95:34)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":95:17)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":95:38)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:17)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":99:17)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:21)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:31)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:33)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:36)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:41)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:49)
#loc205 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:50)
#loc206 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":96:55)
#loc207 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":97:17)
#loc208 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":98:39)
#loc209 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":98:21)
#loc210 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":98:26)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":98:34)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":98:35)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":103:27)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":103:17)
#loc215 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":105:33)
#loc216 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":105:17)
#loc217 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":105:22)
#loc218 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":105:29)
#loc219 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":109:5)
#loc220 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":125:5)
#loc221 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":110:9)
#loc222 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":110:27)
#loc223 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":111:9)
#loc224 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":111:23)
#loc225 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":112:9)
#loc226 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":124:9)
#loc227 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":113:13)
#loc228 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":113:20)
#loc229 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:13)
#loc230 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":122:13)
#loc231 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:20)
#loc232 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:18)
#loc233 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:23)
#loc234 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:27)
#loc235 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:34)
#loc236 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:38)
#loc237 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:25)
#loc238 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":116:13)
#loc239 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":117:17)
#loc240 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":121:17)
#loc241 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":117:21)
#loc242 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":117:26)
#loc243 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":117:27)
#loc244 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":117:32)
#loc245 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":118:17)
#loc246 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":119:31)
#loc247 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":119:21)
#loc248 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":120:21)
#loc249 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:42)
#loc250 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":115:41)
#loc251 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":123:13)
#loc252 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_31.c":123:18)
#loc253 = loc(fused[#loc1, #loc2])
#loc254 = loc(fused[#loc3, #loc4])
#loc255 = loc(fused[#loc5, #loc6])
#loc256 = loc(fused[#loc7, #loc8])
#loc257 = loc(fused[#loc9, #loc10])
#loc258 = loc(fused[#loc11, #loc12])
#loc259 = loc(fused[#loc15, #loc16])
#loc260 = loc(fused[#loc17, #loc18])
#loc261 = loc(fused[#loc19, #loc20])
#loc262 = loc(fused[#loc23, #loc24])
#loc263 = loc(fused[#loc22, #loc24])
#loc264 = loc(fused[#loc21, #loc25])
#loc265 = loc(fused[#loc26, #loc25])
#loc266 = loc(fused[#loc27, #loc28])
#loc267 = loc(fused[#loc29, #loc30])
#loc268 = loc(fused[#loc31, #loc28])
#loc269 = loc(fused[#loc36, #loc35])
#loc270 = loc(fused[#loc39, #loc40])
#loc271 = loc(fused[#loc41, #loc42])
#loc272 = loc(fused[#loc45, #loc46])
#loc273 = loc(fused[#loc47, #loc48])
#loc274 = loc(fused[#loc47, #loc49])
#loc275 = loc(fused[#loc50, #loc46])
#loc276 = loc(fused[#loc51, #loc52])
#loc277 = loc(fused[#loc56, #loc57])
#loc278 = loc(fused[#loc59, #loc60])
#loc279 = loc(fused[#loc61, #loc62, #loc63, #loc52])
#loc280 = loc(fused[#loc66, #loc67])
#loc281 = loc(fused[#loc68, #loc69])
#loc282 = loc(fused[#loc70, #loc71])
#loc283 = loc(fused[#loc74, #loc75])
#loc284 = loc(fused[#loc73, #loc77])
#loc285 = loc(fused[#loc78, #loc69])
#loc286 = loc(fused[#loc81, #loc82])
#loc287 = loc(fused[#loc80, #loc79])
#loc288 = loc(fused[#loc86, #loc85])
#loc289 = loc(fused[#loc89, #loc90])
#loc290 = loc(fused[#loc91, #loc92])
#loc291 = loc(fused[#loc93, #loc94])
#loc292 = loc(fused[#loc95, #loc96])
#loc293 = loc(fused[#loc98, #loc99])
#loc294 = loc(fused[#loc101, #loc96])
#loc295 = loc(fused[#loc102, #loc103])
#loc296 = loc(fused[#loc105, #loc106])
#loc297 = loc(fused[#loc107, #loc103])
#loc298 = loc(fused[#loc111, #loc110])
#loc299 = loc(fused[#loc114, #loc115])
#loc300 = loc(fused[#loc116, #loc117])
#loc301 = loc(fused[#loc118, #loc119])
#loc302 = loc(fused[#loc120, #loc121])
#loc303 = loc(fused[#loc126, #loc127])
#loc306 = loc(fused[#loc137, #loc138])
#loc307 = loc(fused[#loc141, #loc142])
#loc308 = loc(fused[#loc145, #loc144])
#loc309 = loc(fused[#loc146, #loc147])
#loc310 = loc(fused[#loc148, #loc149])
#loc311 = loc(fused[#loc152, #loc153])
#loc312 = loc(fused[#loc151, #loc153])
#loc313 = loc(fused[#loc150, #loc154])
#loc314 = loc(fused[#loc155, #loc154])
#loc315 = loc(fused[#loc156, #loc157])
#loc316 = loc(fused[#loc158, #loc159])
#loc317 = loc(fused[#loc160, #loc157])
#loc318 = loc(fused[#loc165, #loc164])
#loc319 = loc(fused[#loc168, #loc169])
#loc320 = loc(fused[#loc170, #loc171])
#loc321 = loc(fused[#loc174, #loc175])
#loc322 = loc(fused[#loc176, #loc177])
#loc323 = loc(fused[#loc176, #loc178])
#loc324 = loc(fused[#loc179, #loc175])
#loc325 = loc(fused[#loc180, #loc181])
#loc326 = loc(fused[#loc185, #loc186])
#loc327 = loc(fused[#loc188, #loc189])
#loc328 = loc(fused[#loc190, #loc191, #loc192, #loc181])
#loc329 = loc(fused[#loc195, #loc196])
#loc330 = loc(fused[#loc197, #loc198])
#loc331 = loc(fused[#loc199, #loc200])
#loc332 = loc(fused[#loc203, #loc204])
#loc333 = loc(fused[#loc202, #loc206])
#loc334 = loc(fused[#loc207, #loc198])
#loc335 = loc(fused[#loc210, #loc211])
#loc336 = loc(fused[#loc209, #loc208])
#loc337 = loc(fused[#loc216, #loc215])
#loc338 = loc(fused[#loc219, #loc220])
#loc339 = loc(fused[#loc221, #loc222])
#loc340 = loc(fused[#loc223, #loc224])
#loc341 = loc(fused[#loc225, #loc226])
#loc342 = loc(fused[#loc227, #loc228])
#loc343 = loc(fused[#loc229, #loc230])
#loc344 = loc(fused[#loc232, #loc231])
#loc345 = loc(fused[#loc233, #loc236])
#loc346 = loc(fused[#loc238, #loc230])
#loc347 = loc(fused[#loc239, #loc240])
#loc348 = loc(fused[#loc241, #loc244])
#loc349 = loc(fused[#loc245, #loc240])
#loc350 = loc(fused[#loc250, #loc249])
