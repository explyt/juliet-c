!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc128)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc19)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc21)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %26 = cir.const #cir.int<8> : !s32i loc(#loc25)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc25)
    %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %28, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %31 = cir.const #cir.int<67> : !s32i loc(#loc31)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc32)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc36)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc37)
    %41 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %43 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc42)
    cir.store %44, %0 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %45 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc45)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %48 ^bb4, ^bb8 loc(#loc46)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %49 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %50 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %52 = cir.load %51 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    %53 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %54 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc55)
    cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.br ^bb3 loc(#loc137)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc41)
  ^bb9:  // pred: ^bb8
    %58 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc56)
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc58)
    %64 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc150)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc76)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc76)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc76)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc76)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc76)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc78)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc79)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc79)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc83)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc85)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc87)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %28 = cir.const #cir.int<67> : !s32i loc(#loc93)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc94)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc94)
    cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc98)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc99)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %40 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc104)
    cir.store %41, %0 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc107)
    %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %45 ^bb4, ^bb8 loc(#loc108)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc160)
  ^bb5:  // pred: ^bb4
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %47 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc111)
    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc111)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %51 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    %53 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc117)
    cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb3 loc(#loc157)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    %55 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc118)
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc120)
    %61 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc68)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":23:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":45:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":32:9)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":32:16)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":33:9)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":33:24)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":25:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":25:12)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":26:5)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":26:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:12)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:24)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:29)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:33)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:5)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":27:34)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":28:25)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":28:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":28:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":28:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":28:21)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":30:12)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":30:25)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":30:23)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":30:5)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":31:5)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":44:5)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:16)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:24)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:29)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:33)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:9)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":34:34)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":35:25)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":35:16)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":35:20)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":35:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:9)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":40:9)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:18)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:14)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:21)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:25)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:23)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":38:9)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:30)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:23)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:13)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:18)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:19)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":39:31)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:31)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":37:30)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":42:23)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":42:9)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":42:14)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":42:18)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":42:19)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":43:19)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":43:9)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":76:1)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":79:1)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":78:5)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":78:13)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":52:1)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":74:1)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":61:9)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":61:16)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":62:9)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":62:24)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":54:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":54:12)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":55:5)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":55:33)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:12)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:24)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:29)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:33)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":56:34)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":57:25)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":57:5)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":57:16)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":57:20)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":57:21)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":59:12)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":59:5)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":60:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":73:5)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:16)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:24)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:29)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:33)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:9)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":63:34)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":64:25)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":64:16)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":64:20)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":64:9)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:9)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":69:9)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:18)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:14)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:21)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:25)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:23)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":67:9)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:30)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:23)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:13)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:18)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:19)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":68:31)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:31)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":66:30)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":71:23)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":71:9)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":71:14)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":71:18)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":71:19)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":72:19)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_01.c":72:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc17, #loc18])
#loc132 = loc(fused[#loc20, #loc19])
#loc133 = loc(fused[#loc27, #loc25])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc34, #loc35])
#loc136 = loc(fused[#loc39, #loc36])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc43, #loc42])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc47, #loc41])
#loc141 = loc(fused[#loc50, #loc53])
#loc142 = loc(fused[#loc55, #loc54])
#loc143 = loc(fused[#loc57, #loc56])
#loc144 = loc(fused[#loc63, #loc64])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc76])
#loc151 = loc(fused[#loc81, #loc82])
#loc152 = loc(fused[#loc84, #loc83])
#loc153 = loc(fused[#loc89, #loc88])
#loc154 = loc(fused[#loc90, #loc91])
#loc155 = loc(fused[#loc96, #loc97])
#loc156 = loc(fused[#loc101, #loc98])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc105, #loc104])
#loc159 = loc(fused[#loc106, #loc107])
#loc160 = loc(fused[#loc109, #loc103])
#loc161 = loc(fused[#loc112, #loc115])
#loc162 = loc(fused[#loc117, #loc116])
#loc163 = loc(fused[#loc119, #loc118])
