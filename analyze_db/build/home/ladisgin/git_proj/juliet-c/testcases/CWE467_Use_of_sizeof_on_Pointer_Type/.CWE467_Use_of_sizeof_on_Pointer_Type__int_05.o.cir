!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc118)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["badInt", init] {alignment = 8 : i64} loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc118)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc126)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc127)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc14)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc128)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc129)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc132)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc133)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc39)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc40)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc123)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc135)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc138)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb10 loc(#loc61)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc56)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc66)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc145)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc146)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc74)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc149)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc78)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<6> : !s32i loc(#loc79)
    %19 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %20 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc84)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc85)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc86)
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc58)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc54)
  } loc(#loc140)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc118)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc155)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc156)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc90)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc157)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc105)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc161)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc162)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc109)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<6> : !s32i loc(#loc110)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc115)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc92)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc88)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":0:0)
#loc1 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":21:1)
#loc2 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":21:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":26:1)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":40:1)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":31:13)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":31:28)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":28:5)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":39:5)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":28:8)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":29:5)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":30:9)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":38:9)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":33:29)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":33:36)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":33:49)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":33:50)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":33:13)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:13)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:43)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:17)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:27)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:33)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:34)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:40)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":34:39)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":35:23)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":35:14)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":35:13)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":36:27)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":36:26)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":36:13)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":37:18)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":37:13)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":85:1)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":89:1)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":87:5)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":87:11)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":88:5)
#loc47 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":88:11)
#loc48 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":22:1)
#loc49 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":22:26)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":52:19)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":47:1)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":66:1)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":57:13)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":57:29)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":49:5)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":65:5)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":49:8)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":50:5)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":53:5)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":55:5)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":52:9)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":56:9)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":64:9)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":59:30)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":59:37)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":59:52)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":59:53)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":59:13)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:13)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:44)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:17)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:28)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:34)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:35)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:41)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":60:40)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":61:24)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":61:14)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":61:13)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":62:27)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":62:26)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":62:13)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":63:18)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":63:13)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":69:1)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":83:1)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":74:13)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":74:29)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":71:5)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":82:5)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":71:8)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":72:5)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":73:9)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":81:9)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":76:30)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":76:37)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":76:52)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":76:53)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":76:13)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:13)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:44)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:17)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:28)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:34)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:35)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:41)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":77:40)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":78:24)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":78:14)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":78:13)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":79:27)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":79:26)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":79:13)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":80:18)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_05.c":80:13)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc7, #loc8])
#loc122 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc11, #loc12])
#loc124 = loc(fused[#loc13, #loc14])
#loc125 = loc(fused[#loc15, #loc16])
#loc126 = loc(fused[#loc18, #loc16])
#loc127 = loc(fused[#loc19, #loc20])
#loc128 = loc(fused[#loc22, #loc23])
#loc129 = loc(fused[#loc21, #loc24])
#loc130 = loc(fused[#loc25, #loc24])
#loc131 = loc(fused[#loc26, #loc27])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc30, #loc27])
#loc134 = loc(fused[#loc36, #loc34])
#loc135 = loc(fused[#loc42, #loc43])
#loc136 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc49])
#loc139 = loc(fused[#loc50, #loc51])
#loc140 = loc(fused[#loc53, #loc54])
#loc141 = loc(fused[#loc55, #loc56])
#loc142 = loc(fused[#loc57, #loc58])
#loc143 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc67, #loc68])
#loc146 = loc(fused[#loc66, #loc69])
#loc147 = loc(fused[#loc70, #loc69])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc72])
#loc151 = loc(fused[#loc81, #loc79])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc94, #loc92])
#loc156 = loc(fused[#loc95, #loc96])
#loc157 = loc(fused[#loc98, #loc99])
#loc158 = loc(fused[#loc97, #loc100])
#loc159 = loc(fused[#loc101, #loc100])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc103])
#loc163 = loc(fused[#loc112, #loc110])
