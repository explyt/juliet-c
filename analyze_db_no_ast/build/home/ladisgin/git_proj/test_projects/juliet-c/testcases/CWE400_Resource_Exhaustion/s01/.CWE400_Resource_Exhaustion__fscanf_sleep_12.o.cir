!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc161)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc162)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc164)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc13)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc170)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc170)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc31)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      } loc(#loc171)
    } loc(#loc169)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc174)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc174)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc35)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc35)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc40)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc41)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc177)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc47)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc50)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc178)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc51)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc48)
              cir.yield %17 : !cir.bool loc(#loc48)
            }, false {
              %17 = cir.const #false loc(#loc48)
              cir.yield %17 : !cir.bool loc(#loc48)
            }) : (!cir.bool) -> !cir.bool loc(#loc48)
            cir.yield %16 : !cir.bool loc(#loc48)
          }, false {
            %12 = cir.const #false loc(#loc48)
            cir.yield %12 : !cir.bool loc(#loc48)
          }) : (!cir.bool) -> !cir.bool loc(#loc48)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc55)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc56)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc13)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc14)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc14)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc58)
          } loc(#loc179)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc16)
  } loc(#loc166)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc180)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc70)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc187)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc187)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc79)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc79)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc82)
      } loc(#loc188)
    } loc(#loc186)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc190)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc190)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc87)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc87)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc95)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc193)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc96)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc99)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc194)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc100)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc97)
              cir.yield %17 : !cir.bool loc(#loc97)
            }, false {
              %17 = cir.const #false loc(#loc97)
              cir.yield %17 : !cir.bool loc(#loc97)
            }) : (!cir.bool) -> !cir.bool loc(#loc97)
            cir.yield %16 : !cir.bool loc(#loc97)
          }, false {
            %12 = cir.const #false loc(#loc97)
            cir.yield %12 : !cir.bool loc(#loc97)
          }) : (!cir.bool) -> !cir.bool loc(#loc97)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc104)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc105)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc106)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc108)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc108)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc109)
          } loc(#loc195)
        } loc(#loc192)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !s32i loc(#loc197)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc114)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %13 = cir.const #cir.int<2000> : !s32i loc(#loc117)
            %14 = cir.cmp(le, %12, %13) : !s32i, !s32i loc(#loc198)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc118)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc115)
              cir.yield %17 : !cir.bool loc(#loc115)
            }, false {
              %17 = cir.const #false loc(#loc115)
              cir.yield %17 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.yield %16 : !cir.bool loc(#loc115)
          }, false {
            %12 = cir.const #false loc(#loc115)
            cir.yield %12 : !cir.bool loc(#loc115)
          }) : (!cir.bool) -> !cir.bool loc(#loc115)
          cir.if %11 {
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc122)
            %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc123)
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc124)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          } else {
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc126)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc126)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc127)
          } loc(#loc199)
        } loc(#loc196)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc66)
  } loc(#loc183)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc137)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc142)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc144)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
      } loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc148)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc148)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc153)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc154)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc155)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc156)
      } else {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc157)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc158)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc159)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc159)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc160)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc129)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:23)
#loc8 = loc("/usr/include/unistd.h":480:1)
#loc9 = loc("/usr/include/unistd.h":480:43)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":49:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":57:23)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":61:23)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":30:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":64:1)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":32:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":32:9)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:14)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:13)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:8)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:33)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":39:5)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":41:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:9)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:16)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":43:17)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":43:9)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":63:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:8)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:33)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":46:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":50:5)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":52:5)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":48:15)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":48:9)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":49:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:9)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":62:9)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:13)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:21)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:19)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:23)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:26)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:35)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:32)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":55:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":58:9)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":60:9)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":56:19)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":56:13)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":57:13)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":61:13)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":148:1)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":152:1)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":150:5)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":150:13)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":151:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":151:13)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":73:1)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":114:1)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":75:5)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":75:9)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:14)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:13)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:5)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":87:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:8)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:33)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":79:5)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":82:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":84:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:9)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:16)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:23)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:9)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:16)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:23)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:5)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":113:5)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:8)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:33)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":89:5)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":100:5)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":102:5)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":99:9)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:13)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:21)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:19)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:23)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:26)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:35)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:32)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":92:9)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":95:9)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":97:9)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":93:19)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":93:13)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":94:23)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":94:13)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":98:23)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":98:13)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:9)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":112:9)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:13)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:21)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:19)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:23)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:26)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:35)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:32)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":105:9)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":108:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":110:9)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":106:19)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":106:13)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":107:23)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":107:13)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":111:23)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":111:13)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":119:1)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":146:1)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":121:5)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":121:9)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:14)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:13)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:5)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:5)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":133:5)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:8)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:33)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":125:5)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":128:5)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":130:5)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":127:17)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":127:9)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":132:17)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":132:9)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:5)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":145:5)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:8)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:33)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":135:5)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":139:5)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":141:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":137:15)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":137:9)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":138:19)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":138:9)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":143:15)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":143:9)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":144:19)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":144:9)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc8, #loc9])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc21, #loc19])
#loc169 = loc(fused[#loc22, #loc23])
#loc170 = loc(fused[#loc24, #loc25])
#loc171 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc172 = loc(fused[#loc32, #loc31])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc49, #loc50])
#loc179 = loc(fused[#loc52, #loc53, #loc54, #loc44])
#loc180 = loc(fused[#loc59, #loc60])
#loc181 = loc(fused[#loc61, #loc62])
#loc182 = loc(fused[#loc63, #loc64])
#loc183 = loc(fused[#loc65, #loc66])
#loc184 = loc(fused[#loc67, #loc68])
#loc185 = loc(fused[#loc71, #loc69])
#loc186 = loc(fused[#loc72, #loc73])
#loc187 = loc(fused[#loc74, #loc75])
#loc188 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc101, #loc102, #loc103, #loc93])
#loc196 = loc(fused[#loc110, #loc111])
#loc197 = loc(fused[#loc112, #loc113])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc119, #loc120, #loc121, #loc111])
#loc200 = loc(fused[#loc128, #loc129])
#loc201 = loc(fused[#loc130, #loc131])
#loc202 = loc(fused[#loc134, #loc132])
#loc203 = loc(fused[#loc135, #loc136])
#loc204 = loc(fused[#loc137, #loc138])
#loc205 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc206 = loc(fused[#loc143, #loc142])
#loc207 = loc(fused[#loc145, #loc144])
#loc208 = loc(fused[#loc146, #loc147])
#loc209 = loc(fused[#loc148, #loc149])
#loc210 = loc(fused[#loc150, #loc151, #loc152, #loc147])
