!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":97:10)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":97:14)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":97:20)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":97:32)
#loc124 = loc(fused[#loc47, #loc48])
#loc125 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc105)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc106)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_04_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc107)
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_04_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc107)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc113)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc114)
          %5 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_04_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc107)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc107)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc18)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc115)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc116)
          %12 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc25)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          cir.store %13, %4 : !s32i, !cir.ptr<!s32i> loc(#loc114)
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
        } loc(#loc112)
      } loc(#loc111)
    } loc(#loc110)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc117)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__int_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE468_Incorrect_Pointer_Scaling__int_04_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__int_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE468_Incorrect_Pointer_Scaling__int_04_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc70)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc70)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc106)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc133)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc134)
          %5 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc106)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc106)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc78)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc83)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc86)
        } loc(#loc132)
      } loc(#loc131)
    } loc(#loc130)
    cir.return loc(#loc67)
  } loc(#loc129)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc91)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc91)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc105)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc139)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc140)
          %5 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc105)
          cir.copy %5 to %2 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc105)
          %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc96)
          cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc100)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc101)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc140)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc104)
        } loc(#loc138)
      } loc(#loc137)
    } loc(#loc136)
    cir.return loc(#loc88)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_04.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":72:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":72:64)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":56:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":56:64)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":31:13)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":31:64)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":26:1)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":39:1)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":28:5)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":38:5)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":28:8)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":29:5)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":30:9)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":37:9)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":32:13)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":32:31)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:13)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:55)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:29)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:41)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:43)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:53)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:39)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":35:27)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":36:26)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":36:13)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":82:1)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":86:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":84:5)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":84:11)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":85:5)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":85:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":102:15)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":104:15)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":107:15)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":109:15)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":97:1)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":112:1)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":98:1)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":100:27)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":100:22)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":100:5)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":102:5)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":103:5)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":103:51)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":104:5)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":107:5)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":108:5)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":108:50)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":109:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":111:12)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":111:5)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":51:19)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":46:1)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":64:1)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":48:5)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":63:5)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":48:8)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":49:5)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":52:5)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":54:5)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":51:9)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":55:9)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":62:9)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":57:13)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":57:31)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:13)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:41)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:29)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:40)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:39)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":60:27)
#loc85 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":61:26)
#loc86 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":61:13)
#loc87 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":67:1)
#loc88 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":80:1)
#loc89 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":69:5)
#loc90 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":79:5)
#loc91 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":69:8)
#loc92 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":70:5)
#loc93 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":71:9)
#loc94 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":78:9)
#loc95 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":73:13)
#loc96 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":73:31)
#loc97 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:13)
#loc98 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:41)
#loc99 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:29)
#loc100 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:40)
#loc101 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:39)
#loc102 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":76:27)
#loc103 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":77:26)
#loc104 = loc("CWE468_Incorrect_Pointer_Scaling__int_04.c":77:13)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc14, #loc12])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc17, #loc18])
#loc114 = loc(fused[#loc19, #loc20])
#loc115 = loc(fused[#loc23, #loc24])
#loc116 = loc(fused[#loc22, #loc24])
#loc117 = loc(fused[#loc29, #loc30])
#loc118 = loc(fused[#loc31, #loc32])
#loc119 = loc(fused[#loc33, #loc34])
#loc120 = loc(fused[#loc35, #loc36])
#loc121 = loc(fused[#loc37, #loc38])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc45, #loc46])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc60, #loc61])
#loc128 = loc(fused[#loc64, #loc63])
#loc129 = loc(fused[#loc66, #loc67])
#loc130 = loc(fused[#loc68, #loc69])
#loc131 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc90])
#loc137 = loc(fused[#loc92, #loc90])
#loc138 = loc(fused[#loc93, #loc94])
#loc139 = loc(fused[#loc95, #loc96])
#loc140 = loc(fused[#loc97, #loc98])
