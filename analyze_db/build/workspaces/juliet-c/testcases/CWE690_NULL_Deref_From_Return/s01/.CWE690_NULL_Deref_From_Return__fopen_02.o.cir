!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc79)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc82)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc13)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc83)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc18)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %11 = cir.call @fclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc21)
      } loc(#loc85)
    } loc(#loc84)
    cir.return loc(#loc8)
  } loc(#loc80)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_02_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc88)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc86)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc37)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc38)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc38)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc39)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc39)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc37)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc93)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc44)
      cir.if %9 {
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc52)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc97)
          cir.if %13 {
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
            %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc55)
          } loc(#loc98)
        } loc(#loc96)
      } loc(#loc95)
    } loc(#loc94)
    cir.return loc(#loc32)
  } loc(#loc90)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc62)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc63)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc63)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc62)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc102)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc69)
      cir.if %9 {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc74)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc106)
          cir.if %13 {
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
            %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc77)
          } loc(#loc107)
        } loc(#loc105)
      } loc(#loc104)
    } loc(#loc103)
    cir.return loc(#loc57)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":27:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":27:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":21:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":33:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":23:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":23:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":25:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":27:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":27:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":27:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":28:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":32:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":28:8)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":31:16)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":31:9)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":80:1)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":84:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":82:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":82:14)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":83:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":83:14)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":50:19)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":40:1)
#loc32 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":60:1)
#loc33 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":42:5)
#loc34 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":42:12)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":44:12)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":44:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":46:12)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":46:18)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":46:30)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":46:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":46:34)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":47:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":59:5)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":47:8)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":48:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":51:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":53:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":50:9)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":55:9)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":58:9)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":55:13)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":55:21)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":56:9)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":57:20)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":57:13)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":63:1)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":78:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":65:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":65:12)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":67:12)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":67:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":69:12)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":69:18)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":69:30)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":69:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":69:34)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":70:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":77:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":70:8)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":71:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":73:9)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":76:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":73:13)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":73:21)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":74:9)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":75:20)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_02.c":75:13)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc14, #loc15])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc19, #loc17])
#loc86 = loc(fused[#loc22, #loc23])
#loc87 = loc(fused[#loc24, #loc25])
#loc88 = loc(fused[#loc26, #loc27])
#loc89 = loc(fused[#loc28, #loc29])
#loc90 = loc(fused[#loc31, #loc32])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc36, #loc35])
#loc93 = loc(fused[#loc40, #loc41])
#loc94 = loc(fused[#loc42, #loc43])
#loc95 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc96 = loc(fused[#loc49, #loc50])
#loc97 = loc(fused[#loc51, #loc52])
#loc98 = loc(fused[#loc53, #loc50])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc58, #loc59])
#loc101 = loc(fused[#loc61, #loc60])
#loc102 = loc(fused[#loc65, #loc66])
#loc103 = loc(fused[#loc67, #loc68])
#loc104 = loc(fused[#loc70, #loc68])
#loc105 = loc(fused[#loc71, #loc72])
#loc106 = loc(fused[#loc73, #loc74])
#loc107 = loc(fused[#loc75, #loc72])
