!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":110:10)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":110:14)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":110:20)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":110:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc145)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc146)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc147)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
      cir.if %7 {
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc153)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
        cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc157)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc30)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc31)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
          } loc(#loc158)
        } loc(#loc156)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc159)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc35)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc160)
      } loc(#loc152)
    } loc(#loc151)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc39)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc40)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    cir.return loc(#loc10)
  } loc(#loc148)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func @main(%arg0: !s32i loc(fused[#loc60, #loc61]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc62, #loc63])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc64)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc65)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc66)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc66)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_good() : () -> () loc(#loc69)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc56)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04_bad() : () -> () loc(#loc73)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %17 : !s32i loc(#loc172)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc87)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc87)
      cir.if %7 {
        %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc178)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc179)
        cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc182)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc104)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
          } loc(#loc183)
        } loc(#loc181)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc107)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc185)
      } loc(#loc177)
    } loc(#loc176)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    cir.return loc(#loc80)
  } loc(#loc173)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc121)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc121)
      cir.if %7 {
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc123)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc191)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
        cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc193)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc195)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc135)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
          } loc(#loc196)
        } loc(#loc194)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc197)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc138)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc198)
      } loc(#loc190)
    } loc(#loc189)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc141)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
    cir.return loc(#loc114)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":28:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":45:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":30:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":30:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":32:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":33:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":41:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":33:8)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":34:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":37:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":37:40)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":37:51)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":37:52)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":37:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:37)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:21)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:27)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:28)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:34)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":38:33)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":39:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":39:9)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":40:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":40:9)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":43:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":44:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":44:10)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":94:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":98:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":96:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":96:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":97:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":97:14)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":115:15)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":117:15)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":120:15)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":122:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":110:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":125:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":111:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":113:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":113:22)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":113:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":115:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":116:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":116:62)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":117:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":120:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":121:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":121:61)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":122:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":124:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":124:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":60:19)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":52:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":73:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":54:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":54:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":56:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":56:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":57:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":69:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":57:8)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":58:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":61:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":63:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":60:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":65:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":65:40)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":65:52)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":65:53)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":65:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:37)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:21)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:27)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:28)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:34)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":66:33)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":67:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":67:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":68:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":68:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":71:21)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":71:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":72:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":72:10)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":76:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":92:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":78:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":78:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":80:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":80:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":81:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":88:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":81:8)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":82:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":84:33)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":84:40)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":84:52)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":84:53)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":84:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:37)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:27)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:28)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:34)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":85:33)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":86:24)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":86:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":87:24)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":87:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":90:21)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":90:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":91:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_04.c":91:10)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc14, #loc13])
#loc151 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc18, #loc16])
#loc153 = loc(fused[#loc20, #loc21])
#loc154 = loc(fused[#loc19, #loc22])
#loc155 = loc(fused[#loc23, #loc22])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc28, #loc25])
#loc159 = loc(fused[#loc33, #loc32])
#loc160 = loc(fused[#loc36, #loc35])
#loc161 = loc(fused[#loc42, #loc43])
#loc162 = loc(fused[#loc44, #loc45])
#loc163 = loc(fused[#loc46, #loc47])
#loc164 = loc(fused[#loc48, #loc49])
#loc165 = loc(fused[#loc50, #loc51])
#loc166 = loc(fused[#loc52, #loc53])
#loc167 = loc(fused[#loc58, #loc59])
#loc170 = loc(fused[#loc69, #loc70])
#loc171 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc77, #loc76])
#loc173 = loc(fused[#loc79, #loc80])
#loc174 = loc(fused[#loc81, #loc82])
#loc175 = loc(fused[#loc84, #loc83])
#loc176 = loc(fused[#loc85, #loc86])
#loc177 = loc(fused[#loc88, #loc89, #loc90, #loc86])
#loc178 = loc(fused[#loc93, #loc94])
#loc179 = loc(fused[#loc92, #loc95])
#loc180 = loc(fused[#loc96, #loc95])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc101, #loc98])
#loc184 = loc(fused[#loc106, #loc105])
#loc185 = loc(fused[#loc108, #loc107])
#loc186 = loc(fused[#loc113, #loc114])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc118, #loc117])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc122, #loc120])
#loc191 = loc(fused[#loc124, #loc125])
#loc192 = loc(fused[#loc123, #loc126])
#loc193 = loc(fused[#loc127, #loc126])
#loc194 = loc(fused[#loc128, #loc129])
#loc195 = loc(fused[#loc130, #loc131])
#loc196 = loc(fused[#loc132, #loc129])
#loc197 = loc(fused[#loc137, #loc136])
#loc198 = loc(fused[#loc139, #loc138])
