!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":112:10)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":112:14)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":112:20)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":112:32)
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc124)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc126)
  cir.func private @printLongLongLine(!s64i) loc(#loc127)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc130)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
        %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc125)
        %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc126)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc126)
        %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc18)
        cir.break loc(#loc20)
      } loc(#loc131)
    } loc(#loc131)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%3) loc(#loc23)
      } do {
        cir.scope {
          %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc134)
          %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc28)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc27)
          %6 = cir.binop(sub, %3, %5) nsw : !s64i loc(#loc28)
          cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc134)
          %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc29)
          cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc30)
        } loc(#loc133)
        cir.break loc(#loc31)
      } loc(#loc132)
    } loc(#loc132)
    cir.return loc(#loc10)
  } loc(#loc128)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_sub_16_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %17 : !s32i loc(#loc146)
  } loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc73)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc149)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc77)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc77)
        cir.condition(%3) loc(#loc77)
      } do {
        %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc78)
        %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc125)
        %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc151)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc151)
        %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc78)
        cir.break loc(#loc82)
      } loc(#loc150)
    } loc(#loc150)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc85)
        cir.condition(%3) loc(#loc85)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc88)
          %3 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc89)
          %4 = cir.unary(minus, %3) : !s64i, !s64i loc(#loc89)
          %5 = cir.const #cir.int<1> : !s64i loc(#loc89)
          %6 = cir.binop(sub, %4, %5) nsw : !s64i loc(#loc89)
          %7 = cir.cmp(gt, %2, %6) : !s64i, !cir.bool loc(#loc154)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc156)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc95)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc94)
            %12 = cir.binop(sub, %9, %11) nsw : !s64i loc(#loc95)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc156)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc96)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc97)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc68)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc68)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          } loc(#loc155)
        } loc(#loc153)
        cir.break loc(#loc99)
      } loc(#loc152)
    } loc(#loc152)
    cir.return loc(#loc70)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc104)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc159)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc108)
        cir.condition(%3) loc(#loc108)
      } do {
        %2 = cir.const #cir.int<2> : !s32i loc(#loc109)
        %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc110)
        %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc110)
        cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc161)
        cir.break loc(#loc112)
      } loc(#loc160)
    } loc(#loc160)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc115)
        cir.condition(%3) loc(#loc115)
      } do {
        cir.scope {
          %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc164)
          %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc120)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc119)
          %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc119)
          %6 = cir.binop(sub, %3, %5) nsw : !s64i loc(#loc120)
          cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc164)
          %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc121)
          cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc122)
        } loc(#loc163)
        cir.break loc(#loc123)
      } loc(#loc162)
    } loc(#loc162)
    cir.return loc(#loc101)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":30:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":30:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":23:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":42:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":25:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":25:13)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":26:12)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":27:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":32:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":27:11)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":30:9)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":30:17)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":31:9)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":33:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":41:5)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":33:11)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":35:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":39:9)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":37:13)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":37:37)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":37:30)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":38:31)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":38:13)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":40:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":97:1)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":101:1)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":99:5)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":99:13)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":100:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":100:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":117:15)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":119:15)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":122:15)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":124:15)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":112:1)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":127:1)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":113:1)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":115:27)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":115:22)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":115:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":117:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":118:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":118:58)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":119:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":122:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":123:5)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":123:57)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":124:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":126:12)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":126:5)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":69:23)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":49:1)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":73:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":51:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":51:13)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":52:12)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":52:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":53:5)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":58:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":53:11)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":56:9)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":56:17)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":56:24)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":56:28)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":57:9)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":59:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":72:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":59:11)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":62:9)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":70:9)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":62:13)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":62:20)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":63:9)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":66:9)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":68:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":64:13)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":64:37)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":64:30)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":65:31)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":65:13)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":69:13)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":71:9)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":76:1)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":95:1)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":78:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":78:13)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":79:12)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":79:5)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":80:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":85:5)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":80:11)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":83:17)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":83:16)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":83:9)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":84:9)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":86:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":94:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":86:11)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":88:9)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":92:9)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":90:13)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":90:37)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":90:30)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":91:31)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":91:13)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_16.c":93:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc14, #loc13])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc21, #loc22])
#loc133 = loc(fused[#loc24, #loc25])
#loc134 = loc(fused[#loc26, #loc27])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc48, #loc49])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc67, #loc66])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc74, #loc73])
#loc150 = loc(fused[#loc75, #loc76])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc86, #loc87])
#loc154 = loc(fused[#loc88, #loc89])
#loc155 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc100, #loc101])
#loc158 = loc(fused[#loc102, #loc103])
#loc159 = loc(fused[#loc105, #loc104])
#loc160 = loc(fused[#loc106, #loc107])
#loc161 = loc(fused[#loc111, #loc109])
#loc162 = loc(fused[#loc113, #loc114])
#loc163 = loc(fused[#loc116, #loc117])
#loc164 = loc(fused[#loc118, #loc119])
