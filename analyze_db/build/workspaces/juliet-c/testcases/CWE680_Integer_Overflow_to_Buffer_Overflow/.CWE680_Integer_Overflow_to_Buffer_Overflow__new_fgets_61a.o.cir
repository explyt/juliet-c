!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_619badSourceEi(!s32i) -> !s32i loc(#loc102)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc103)
  cir.func private @printIntLine(!s32i) loc(#loc104)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_613badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc12)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_619badSourceEi(%3) : (!s32i) -> !s32i loc(#loc15)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc110)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc111)
      %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc112)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc113)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc114)
      cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc115)
      %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
      %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc30)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc116)
      cir.store %15, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc36)
        cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc119)
        cir.for : cond {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc39)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc120)
          cir.condition(%26) loc(#loc120)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc41)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
            %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc44)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc122)
          } loc(#loc121)
          cir.yield loc(#loc35)
        } step {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc46)
          cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc123)
          cir.yield loc(#loc118)
        } loc(#loc118)
      } loc(#loc118)
      %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc49)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc50)
      %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
      cir.delete.array %20 : <!s32i> loc(#loc51)
    } loc(#loc109)
    cir.return loc(#loc8)
  } loc(#loc105)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_6113goodG2BSourceEi(!s32i) -> !s32i loc(#loc124)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %4 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_6113goodG2BSourceEi(%3) : (!s32i) -> !s32i loc(#loc62)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc130)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc131)
      %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc132)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc72)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc133)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc134)
      cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc135)
      %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
      %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc136)
      cir.store %15, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc83)
        cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc139)
        cir.for : cond {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc86)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc140)
          cir.condition(%26) loc(#loc140)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
            %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc91)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc142)
          } loc(#loc141)
          cir.yield loc(#loc82)
        } step {
          %23 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc93)
          cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc143)
          cir.yield loc(#loc138)
        } loc(#loc138)
      } loc(#loc138)
      %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc95)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc96)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc97)
      %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
      cir.delete.array %20 : <!s32i> loc(#loc98)
    } loc(#loc129)
    cir.return loc(#loc55)
  } loc(#loc125)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_614goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61L7goodG2BEv() : () -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":27:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":27:23)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":29:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":48:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":31:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":31:9)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":33:13)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":33:12)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":33:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":34:22)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":34:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":34:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":34:26)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":35:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":47:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":36:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":36:16)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":36:26)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":37:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":37:14)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":39:21)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":39:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":39:38)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":39:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":40:37)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":29:6)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":40:28)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":40:46)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":40:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":44:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":42:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":43:29)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":43:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":43:24)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":43:25)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:40)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":41:39)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":45:22)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":45:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":45:34)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":45:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":46:19)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":55:1)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":55:27)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":57:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":76:1)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":59:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":59:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":61:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":61:12)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":61:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":62:26)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":62:12)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":62:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":62:30)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":63:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":75:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":64:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":64:16)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":64:26)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":65:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":65:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":67:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":67:28)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":67:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":67:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":68:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":57:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":68:28)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":68:46)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":68:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":72:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:18)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:21)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:33)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":70:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":71:29)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":71:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":71:24)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":71:25)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:40)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":69:39)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":73:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":73:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":73:34)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":73:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":74:19)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":78:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":81:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_61a.cpp":80:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc13, #loc11])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc20, #loc21])
#loc111 = loc(fused[#loc20, #loc22])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc26, #loc27])
#loc114 = loc(fused[#loc25, #loc27])
#loc115 = loc(fused[#loc28, #loc27])
#loc116 = loc(fused[#loc31, #loc32])
#loc117 = loc(fused[#loc33, #loc32])
#loc118 = loc(fused[#loc34, #loc35])
#loc119 = loc(fused[#loc37, #loc36])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc35])
#loc122 = loc(fused[#loc42, #loc41])
#loc123 = loc(fused[#loc46, #loc45])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc60, #loc58])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc65, #loc66])
#loc130 = loc(fused[#loc67, #loc68])
#loc131 = loc(fused[#loc67, #loc69])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc73, #loc74])
#loc134 = loc(fused[#loc72, #loc74])
#loc135 = loc(fused[#loc75, #loc74])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc80, #loc79])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc84, #loc83])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc87, #loc82])
#loc142 = loc(fused[#loc89, #loc88])
#loc143 = loc(fused[#loc93, #loc92])
#loc144 = loc(fused[#loc99, #loc100])
