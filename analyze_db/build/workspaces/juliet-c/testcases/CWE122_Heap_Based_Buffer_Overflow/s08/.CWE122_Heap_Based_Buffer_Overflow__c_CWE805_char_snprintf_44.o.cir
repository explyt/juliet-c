!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":29:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":29:28)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":61:25)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":61:32)
#loc131 = loc(fused[#loc10, #loc11])
#loc153 = loc(fused[#loc73, #loc74])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc18)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc23)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc24)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    %16 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc27)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc29)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %23 = cir.call @snprintf(%17, %19, %21, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc27)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc9)
  } loc(#loc130)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc137)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc44)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc140)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc47)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc48)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc48)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc142)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc143)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc60)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb3 loc(#loc54)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc61)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc65)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.call %23(%24) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc65)
    cir.return loc(#loc40)
  } loc(#loc138)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc150)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc81)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc82)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc86)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc87)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %16 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc90)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc92)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc93)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc93)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %23 = cir.call @snprintf(%17, %19, %21, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc90)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    cir.br ^bb2 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc72)
  } loc(#loc152)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc104)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc160)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc107)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc108)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc163)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc118)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc120)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc121)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc125)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    cir.call %23(%24) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc125)
    cir.return loc(#loc100)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":36:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":40:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":32:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":32:24)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":30:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":31:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":39:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:29)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":33:34)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":34:25)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":34:16)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":34:20)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":34:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":36:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":36:18)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":36:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":36:35)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":37:19)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":37:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":38:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":38:14)
#loc35 = loc("/usr/include/stdlib.h":672:1)
#loc36 = loc("/usr/include/stdlib.h":672:45)
#loc37 = loc("/usr/include/stdlib.h":756:1)
#loc38 = loc("/usr/include/stdlib.h":756:70)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":42:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":54:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":44:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":44:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":46:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":46:32)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":47:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":47:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:20)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:27)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:30)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:41)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:42)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":49:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:33)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:17)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:24)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:30)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":50:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":51:15)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":51:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":51:10)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":51:11)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":53:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":53:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":86:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":89:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":88:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":88:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":61:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":72:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":64:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":64:24)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":62:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":63:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":71:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:16)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:24)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:29)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:33)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":65:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":66:25)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":66:16)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":66:20)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":66:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":68:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":68:18)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":68:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":68:29)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":68:35)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":69:19)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":69:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":70:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":70:14)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":74:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":84:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":76:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":76:12)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":77:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":77:32)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":78:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":78:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:31)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:42)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:43)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":80:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:33)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:24)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":81:29)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":82:15)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":82:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":82:10)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":82:11)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":83:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_44.c":83:13)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc4, #loc5])
#loc129 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc8, #loc9])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc26, #loc23])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc39, #loc40])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc46, #loc45])
#loc142 = loc(fused[#loc49, #loc50])
#loc143 = loc(fused[#loc48, #loc50])
#loc144 = loc(fused[#loc47, #loc51])
#loc145 = loc(fused[#loc52, #loc51])
#loc146 = loc(fused[#loc53, #loc54])
#loc147 = loc(fused[#loc55, #loc56])
#loc148 = loc(fused[#loc57, #loc54])
#loc149 = loc(fused[#loc62, #loc61])
#loc150 = loc(fused[#loc67, #loc68])
#loc151 = loc(fused[#loc69, #loc70])
#loc152 = loc(fused[#loc71, #loc72])
#loc154 = loc(fused[#loc75, #loc76])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc89, #loc86])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc106, #loc105])
#loc162 = loc(fused[#loc109, #loc110])
#loc163 = loc(fused[#loc108, #loc110])
#loc164 = loc(fused[#loc107, #loc111])
#loc165 = loc(fused[#loc112, #loc111])
#loc166 = loc(fused[#loc113, #loc114])
#loc167 = loc(fused[#loc115, #loc116])
#loc168 = loc(fused[#loc117, #loc114])
#loc169 = loc(fused[#loc122, #loc121])
