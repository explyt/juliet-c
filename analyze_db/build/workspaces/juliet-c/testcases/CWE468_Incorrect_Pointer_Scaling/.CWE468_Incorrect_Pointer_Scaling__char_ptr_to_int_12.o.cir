!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc89)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc90)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc91)
  cir.func private @printIntLine(!s32i) loc(#loc92)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc95)
    %3 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc96)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc97)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc100)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc100)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc23)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %9 ^bb2, ^bb5 loc(#loc101)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc90)
    cir.copy %10 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc90)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc12)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc33)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc35)
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc26)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc90)
    cir.copy %19 to %3 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc96)
    %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc18)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %21, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc39)
    %25 = cir.const #cir.int<4> : !u64i loc(#loc104)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc105)
    %27 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc42)
    %28 = cir.load %27 : !cir.ptr<!s8i>, !s8i loc(#loc43)
    %29 = cir.cast(integral, %28 : !s8i), !s32i loc(#loc43)
    cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc45)
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc10)
  } loc(#loc93)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc106)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc89)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc110)
    %3 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc111)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc112)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc115)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc115)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc64)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %9 ^bb2, ^bb5 loc(#loc116)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc89)
    cir.copy %10 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc89)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc53)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc53)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc72)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc119)
    %18 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc75)
    %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc76)
    %20 = cir.cast(integral, %19 : !s8i), !s32i loc(#loc76)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc78)
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc67)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc89)
    cir.copy %22 to %3 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc111)
    %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc59)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %24, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc82)
    %28 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc122)
    %30 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc85)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc86)
    %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc86)
    cir.store %32, %5 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %33 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc88)
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc63)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc51)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":56:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":56:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":25:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":25:47)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":20:1)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":44:1)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":26:13)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":26:41)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:13)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:50)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":36:13)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":36:47)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":37:13)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":37:41)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:13)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:64)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":22:5)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":43:5)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":22:8)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":22:33)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":23:5)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":32:5)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":34:5)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":24:9)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":31:9)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:36)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:48)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:47)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":29:34)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":30:26)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":30:13)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":35:9)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":42:9)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:36)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:49)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:51)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:61)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:47)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":40:34)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":41:26)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":41:13)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":77:1)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":80:1)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":79:5)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":79:11)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":51:1)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":75:1)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":57:13)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":57:41)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:13)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:64)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":67:13)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":67:47)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":68:13)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":68:41)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:13)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:64)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":53:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":74:5)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":53:8)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":53:33)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":54:5)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":63:5)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":65:5)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":55:9)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":62:9)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:36)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:49)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:51)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:61)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:47)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":60:34)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":61:26)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":61:13)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":66:9)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":73:9)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:36)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:49)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:51)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:61)
#loc85 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:47)
#loc86 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":71:34)
#loc87 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":72:26)
#loc88 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_12.c":72:13)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc15, #loc16])
#loc97 = loc(fused[#loc17, #loc18])
#loc98 = loc(fused[#loc19, #loc20])
#loc99 = loc(fused[#loc21, #loc22])
#loc100 = loc(fused[#loc23, #loc24])
#loc101 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc102 = loc(fused[#loc28, #loc29])
#loc103 = loc(fused[#loc36, #loc37])
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc39, #loc41])
#loc106 = loc(fused[#loc46, #loc47])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc50, #loc51])
#loc109 = loc(fused[#loc52, #loc53])
#loc110 = loc(fused[#loc54, #loc55])
#loc111 = loc(fused[#loc56, #loc57])
#loc112 = loc(fused[#loc58, #loc59])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc64, #loc65])
#loc116 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc117 = loc(fused[#loc69, #loc70])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc72, #loc74])
#loc120 = loc(fused[#loc79, #loc80])
#loc121 = loc(fused[#loc83, #loc84])
#loc122 = loc(fused[#loc82, #loc84])
