!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc139)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc140)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc141)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc146)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc19)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc150)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%9) loc(#loc27)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
        } loc(#loc151)
        cir.yield loc(#loc22)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc32)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc154)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc155)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%9) loc(#loc39)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc41)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc42)
          %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        } loc(#loc156)
        cir.yield loc(#loc34)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc45)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc157)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc153)
    cir.return loc(#loc12)
  } loc(#loc143)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc158)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc52)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc164)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc62)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc66)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc168)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc70)
        cir.condition(%9) loc(#loc70)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc72)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc74)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc74)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc72)
        } loc(#loc169)
        cir.yield loc(#loc65)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc76)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        cir.yield loc(#loc166)
      } loc(#loc166)
    } loc(#loc166)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc79)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc173)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%9) loc(#loc83)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc176)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc89)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %12 = cir.const #cir.int<2000> : !s32i loc(#loc92)
              %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc177)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc93)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc90)
                cir.yield %16 : !cir.bool loc(#loc90)
              }, false {
                %16 = cir.const #false loc(#loc90)
                cir.yield %16 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.yield %15 : !cir.bool loc(#loc90)
            }, false {
              %11 = cir.const #false loc(#loc90)
              cir.yield %11 : !cir.bool loc(#loc90)
            }) : (!cir.bool) -> !cir.bool loc(#loc90)
            cir.if %10 {
              %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc97)
              %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc98)
              %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc52)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc52)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
            } else {
              %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc53)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc53)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc100)
            } loc(#loc178)
          } loc(#loc175)
        } loc(#loc174)
        cir.yield loc(#loc78)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc102)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        cir.yield loc(#loc171)
      } loc(#loc171)
    } loc(#loc171)
    cir.return loc(#loc55)
  } loc(#loc161)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc183)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc111)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc115)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc118)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc187)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc119)
        cir.condition(%9) loc(#loc119)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc121)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
        } loc(#loc188)
        cir.yield loc(#loc114)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc124)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        cir.yield loc(#loc185)
      } loc(#loc185)
    } loc(#loc185)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc127)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc193)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc131)
        cir.condition(%9) loc(#loc131)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc133)
          %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc134)
          %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc135)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc135)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc136)
        } loc(#loc194)
        cir.yield loc(#loc126)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc138)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
        cir.yield loc(#loc191)
      } loc(#loc191)
    } loc(#loc191)
    cir.return loc(#loc104)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:23)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":45:19)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":30:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":47:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":32:11)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":33:5)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":33:9)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:14)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:13)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":35:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":40:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:13)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:16)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:20)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:18)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":37:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:9)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":39:16)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:24)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":36:23)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":46:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:13)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:9)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:16)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:20)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:18)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":42:5)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":44:15)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":44:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":45:9)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:24)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":41:23)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":100:1)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":104:1)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":102:5)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":102:13)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":103:5)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":103:13)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":71:23)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":75:23)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":54:1)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":78:1)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:9)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":56:11)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":57:5)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":57:9)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:14)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:13)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":59:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:5)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":64:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:13)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:9)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:16)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:20)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:18)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":61:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:16)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":63:23)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:24)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":60:23)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":77:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:13)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:9)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:16)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:20)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:18)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":66:5)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:9)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":76:9)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:13)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:21)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:19)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:23)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:26)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:35)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":68:32)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":69:9)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":72:9)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":74:9)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":70:19)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":70:13)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":71:13)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":75:13)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:24)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":65:23)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":81:1)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":98:1)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:9)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":83:11)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":84:5)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":84:9)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:14)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:13)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":86:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:5)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":91:5)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:13)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:16)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:20)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:18)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":88:5)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":90:17)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":90:9)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:24)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":87:23)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:5)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":97:5)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:13)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:9)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:16)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:20)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:18)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":93:5)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":95:15)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":95:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":96:19)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":96:9)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:24)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_17.c":92:23)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc6, #loc7])
#loc142 = loc(fused[#loc8, #loc9])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc13, #loc15])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc20, #loc18])
#loc148 = loc(fused[#loc21, #loc22])
#loc149 = loc(fused[#loc24, #loc23])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc28, #loc22])
#loc152 = loc(fused[#loc32, #loc31])
#loc153 = loc(fused[#loc33, #loc34])
#loc154 = loc(fused[#loc36, #loc35])
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc40, #loc34])
#loc157 = loc(fused[#loc45, #loc44])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc56, #loc58])
#loc164 = loc(fused[#loc59, #loc60])
#loc165 = loc(fused[#loc63, #loc61])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc67, #loc66])
#loc168 = loc(fused[#loc68, #loc69])
#loc169 = loc(fused[#loc71, #loc65])
#loc170 = loc(fused[#loc76, #loc75])
#loc171 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc80, #loc79])
#loc173 = loc(fused[#loc81, #loc82])
#loc174 = loc(fused[#loc84, #loc78])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc91, #loc92])
#loc178 = loc(fused[#loc94, #loc95, #loc96, #loc86])
#loc179 = loc(fused[#loc102, #loc101])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc105, #loc107])
#loc183 = loc(fused[#loc108, #loc109])
#loc184 = loc(fused[#loc112, #loc110])
#loc185 = loc(fused[#loc113, #loc114])
#loc186 = loc(fused[#loc116, #loc115])
#loc187 = loc(fused[#loc117, #loc118])
#loc188 = loc(fused[#loc120, #loc114])
#loc189 = loc(fused[#loc122, #loc121])
#loc190 = loc(fused[#loc124, #loc123])
#loc191 = loc(fused[#loc125, #loc126])
#loc192 = loc(fused[#loc128, #loc127])
#loc193 = loc(fused[#loc129, #loc130])
#loc194 = loc(fused[#loc132, #loc126])
#loc195 = loc(fused[#loc138, #loc137])
