!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc412)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc413)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc414)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc415)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc416)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc417)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc418)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc420)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc421)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc422)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc425)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc426)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc427)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc428)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc429)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc430)
    cir.br ^bb1 loc(#loc431)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc432)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc44)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %9 ^bb2, ^bb57 loc(#loc433)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc434)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<16> : !u64i loc(#loc435)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc435)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc35)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc37)
    cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc428)
    cir.br ^bb4 loc(#loc436)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc436)
  ^bb5:  // pred: ^bb45
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %17 ^bb6, ^bb46 loc(#loc52)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc437)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb8 loc(#loc439)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc64)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc441)
  ^bb9:  // pred: ^bb8
    cir.br ^bb46 loc(#loc66)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc62)
  ^bb11:  // pred: ^bb10
    %26 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc442)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc443)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc444)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
    %31 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc445)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc77)
    %34 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc446)
    %36 = cir.const #cir.int<20000> : !s32i loc(#loc81)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc81)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
    %39 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc447)
    cir.br ^bb12 loc(#loc448)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %41 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc449)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc450)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc450)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc94)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %47 ^bb13, ^bb14 loc(#loc452)
  ^bb13:  // pred: ^bb12
    cir.br ^bb46 loc(#loc96)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc87)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc453)
  ^bb16:  // pred: ^bb15
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc102)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc454)
    cir.brcond %53 ^bb17, ^bb18 loc(#loc455)
  ^bb17:  // pred: ^bb16
    cir.br ^bb46 loc(#loc104)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc98)
  ^bb19:  // pred: ^bb18
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc456)
    cir.br ^bb20 loc(#loc457)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc114)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc458)
    cir.brcond %61 ^bb21, ^bb22 loc(#loc459)
  ^bb21:  // pred: ^bb20
    cir.br ^bb46 loc(#loc116)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc112)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc460)
  ^bb24:  // pred: ^bb23
    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %63 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc461)
    %64 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc462)
    %65 = cir.call @getsockname(%62, %63, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc124)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc126)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc463)
    cir.brcond %68 ^bb25, ^bb26 loc(#loc464)
  ^bb25:  // pred: ^bb24
    cir.br ^bb46 loc(#loc128)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc118)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc465)
  ^bb28:  // pred: ^bb27
    %69 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc466)
    %70 = cir.const #cir.int<16> : !u64i loc(#loc467)
    %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc467)
    %72 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc135)
    %73 = cir.const #cir.int<1025> : !s32i loc(#loc136)
    %74 = cir.cast(integral, %73 : !s32i), !u32i loc(#loc136)
    %75 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc137)
    %76 = cir.const #cir.int<32> : !s32i loc(#loc138)
    %77 = cir.cast(integral, %76 : !s32i), !u32i loc(#loc138)
    %78 = cir.const #cir.int<2> : !s32i loc(#loc139)
    %79 = cir.call @getnameinfo(%69, %71, %72, %74, %75, %77, %78) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc140)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %81 = cir.cmp(ne, %79, %80) : !s32i, !cir.bool loc(#loc468)
    cir.brcond %81 ^bb29, ^bb30 loc(#loc469)
  ^bb29:  // pred: ^bb28
    cir.br ^bb46 loc(#loc143)
  ^bb30:  // pred: ^bb28
    cir.br ^bb31 loc(#loc130)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc470)
  ^bb32:  // pred: ^bb31
    %82 = cir.get_global @strcmp : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i>> loc(#loc146)
    %83 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %84 = cir.cast(array_to_ptrdecay, %83 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %85 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc147)
    %86 = cir.call @strcmp(%84, %85) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc146)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc471)
    cir.brcond %88 ^bb33, ^bb38 loc(#loc472)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc473)
  ^bb34:  // pred: ^bb33
    %89 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %90 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %91 = cir.cast(array_to_ptrdecay, %90 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %92 = cir.cast(bitcast, %91 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %93 = cir.const #cir.int<15> : !u64i loc(#loc474)
    %94 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %95 = cir.call @send(%89, %92, %93, %94) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc158)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %97 = cir.unary(minus, %96) nsw : !s32i, !s32i loc(#loc159)
    %98 = cir.cast(integral, %97 : !s32i), !s64i loc(#loc159)
    %99 = cir.cmp(eq, %95, %98) : !s64i, !cir.bool loc(#loc475)
    cir.brcond %99 ^bb35, ^bb36 loc(#loc476)
  ^bb35:  // pred: ^bb34
    cir.br ^bb46 loc(#loc161)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc153)
  ^bb37:  // pred: ^bb36
    cir.br ^bb43 loc(#loc150)
  ^bb38:  // pred: ^bb32
    cir.br ^bb39 loc(#loc477)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %101 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %102 = cir.cast(array_to_ptrdecay, %101 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %103 = cir.cast(bitcast, %102 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %104 = cir.const #cir.int<8> : !u64i loc(#loc478)
    %105 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %106 = cir.call @send(%100, %103, %104, %105) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc168)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc169)
    %109 = cir.cast(integral, %108 : !s32i), !s64i loc(#loc169)
    %110 = cir.cmp(eq, %106, %109) : !s64i, !cir.bool loc(#loc479)
    cir.brcond %110 ^bb40, ^bb41 loc(#loc480)
  ^bb40:  // pred: ^bb39
    %111 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    cir.br ^bb41 loc(#loc163)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc163)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc145)
  ^bb43:  // 2 preds: ^bb37, ^bb42
    cir.br ^bb44 loc(#loc145)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc54)
  ^bb45:  // pred: ^bb44
    cir.br ^bb5 loc(#loc51)
  ^bb46:  // 8 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb25, ^bb29, ^bb35
    cir.br ^bb47 loc(#loc51)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc481)
  ^bb48:  // pred: ^bb47
    %113 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %114 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %115 = cir.unary(minus, %114) nsw : !s32i, !s32i loc(#loc175)
    %116 = cir.cmp(ne, %113, %115) : !s32i, !cir.bool loc(#loc482)
    cir.brcond %116 ^bb49, ^bb50 loc(#loc483)
  ^bb49:  // pred: ^bb48
    %117 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %118 = cir.call @close(%117) : (!s32i) -> !s32i loc(#loc178)
    cir.br ^bb50 loc(#loc173)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc173)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc484)
  ^bb52:  // pred: ^bb51
    %119 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %120 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %121 = cir.unary(minus, %120) nsw : !s32i, !s32i loc(#loc182)
    %122 = cir.cmp(ne, %119, %121) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %122 ^bb53, ^bb54 loc(#loc486)
  ^bb53:  // pred: ^bb52
    %123 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %124 = cir.call @close(%123) : (!s32i) -> !s32i loc(#loc185)
    cir.br ^bb54 loc(#loc180)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc180)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc48)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc43)
  ^bb57:  // 2 preds: ^bb1, ^bb56
    cir.br ^bb58 loc(#loc43)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc28)
  } loc(#loc423)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc488)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc188)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc489)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc190)
    cir.return loc(#loc187)
  } loc(#loc487)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc194)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc491)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc491)
    cir.return %2 : !s32i loc(#loc491)
  } loc(#loc490)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc196)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc493)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc494)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc495)
    cir.br ^bb1 loc(#loc496)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc497)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc207)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc207)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc498)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb41 loc(#loc210)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc499)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc202)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc494)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc204)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc495)
    cir.br ^bb5 loc(#loc500)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc500)
  ^bb6:  // pred: ^bb29
    %12 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc217)
    cir.brcond %13 ^bb7, ^bb30 loc(#loc217)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc501)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc222)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc223)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    cir.br ^bb9 loc(#loc503)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc229)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc505)
  ^bb10:  // pred: ^bb9
    cir.br ^bb30 loc(#loc231)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc227)
  ^bb12:  // pred: ^bb11
    %22 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc506)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc507)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc508)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc239)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc239)
    %27 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc509)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc241)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc241)
    %30 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc510)
    %32 = cir.const #cir.int<20000> : !s32i loc(#loc243)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc243)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc244)
    %35 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc511)
    cir.br ^bb13 loc(#loc512)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %37 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc513)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc514)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc514)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc254)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc255)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %43 ^bb14, ^bb15 loc(#loc516)
  ^bb14:  // pred: ^bb13
    cir.br ^bb30 loc(#loc257)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc248)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc517)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc261)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc263)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc518)
    cir.brcond %49 ^bb18, ^bb19 loc(#loc519)
  ^bb18:  // pred: ^bb17
    cir.br ^bb30 loc(#loc265)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc259)
  ^bb20:  // pred: ^bb19
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc267)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc268)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc269)
    cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc520)
    cir.br ^bb21 loc(#loc521)
  ^bb21:  // pred: ^bb20
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc275)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc522)
    cir.brcond %57 ^bb22, ^bb23 loc(#loc523)
  ^bb22:  // pred: ^bb21
    cir.br ^bb30 loc(#loc277)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc273)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc524)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc281)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc281)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc281)
    %62 = cir.const #cir.int<8> : !u64i loc(#loc525)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc284)
    %64 = cir.call @send(%58, %61, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc285)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc286)
    %67 = cir.cast(integral, %66 : !s32i), !s64i loc(#loc286)
    %68 = cir.cmp(eq, %64, %67) : !s64i, !cir.bool loc(#loc526)
    cir.brcond %68 ^bb26, ^bb27 loc(#loc527)
  ^bb26:  // pred: ^bb25
    %69 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc288)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc288)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc289)
    cir.br ^bb27 loc(#loc279)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc279)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc219)
  ^bb29:  // pred: ^bb28
    cir.br ^bb6 loc(#loc216)
  ^bb30:  // 5 preds: ^bb6, ^bb10, ^bb14, ^bb18, ^bb22
    cir.br ^bb31 loc(#loc216)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc528)
  ^bb32:  // pred: ^bb31
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc293)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc529)
    cir.brcond %74 ^bb33, ^bb34 loc(#loc530)
  ^bb33:  // pred: ^bb32
    %75 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc296)
    cir.br ^bb34 loc(#loc291)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc291)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc531)
  ^bb36:  // pred: ^bb35
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc300)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc300)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc532)
    cir.brcond %80 ^bb37, ^bb38 loc(#loc533)
  ^bb37:  // pred: ^bb36
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc303)
    cir.br ^bb38 loc(#loc298)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc298)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc214)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc206)
  ^bb41:  // 2 preds: ^bb2, ^bb40
    cir.br ^bb42 loc(#loc206)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc198)
  } loc(#loc492)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc306)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc535)
    cir.return %2 : !s32i loc(#loc535)
  } loc(#loc534)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc537)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc538)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc539)
    cir.br ^bb1 loc(#loc540)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc541)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc318)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc318)
    cir.brcond %5 ^bb2, ^bb40 loc(#loc542)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc543)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<1> : !s32i loc(#loc313)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc313)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc315)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    cir.br ^bb4 loc(#loc544)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc544)
  ^bb5:  // pred: ^bb28
    %10 = cir.const #cir.int<0> : !s32i loc(#loc325)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc325)
    cir.brcond %11 ^bb6, ^bb29 loc(#loc325)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc545)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.int<2> : !s32i loc(#loc328)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc329)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc330)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc331)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    cir.br ^bb8 loc(#loc547)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc337)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc337)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc548)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc549)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc339)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc335)
  ^bb11:  // pred: ^bb10
    %20 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc550)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc342)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc551)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc552)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc347)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc347)
    %25 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc553)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc349)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc349)
    %28 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc554)
    %30 = cir.const #cir.int<20000> : !s32i loc(#loc351)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc351)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc352)
    %33 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc555)
    cir.br ^bb12 loc(#loc556)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %35 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc557)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc558)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc558)
    %38 = cir.call @bind(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc362)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc363)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc363)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc559)
    cir.brcond %41 ^bb13, ^bb14 loc(#loc560)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc365)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc356)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc561)
  ^bb16:  // pred: ^bb15
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc369)
    %44 = cir.call @listen(%42, %43) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc370)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc371)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc371)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc562)
    cir.brcond %47 ^bb17, ^bb18 loc(#loc563)
  ^bb17:  // pred: ^bb16
    cir.br ^bb29 loc(#loc373)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc367)
  ^bb19:  // pred: ^bb18
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc374)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc375)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc376)
    %51 = cir.call @accept(%48, %49, %50) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc377)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb20 loc(#loc565)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc383)
    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc383)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %55 ^bb21, ^bb22 loc(#loc567)
  ^bb21:  // pred: ^bb20
    cir.br ^bb29 loc(#loc385)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc381)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc568)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %57 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc389)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc389)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc389)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc569)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc392)
    %62 = cir.call @send(%56, %59, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc393)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc394)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc394)
    %65 = cir.cast(integral, %64 : !s32i), !s64i loc(#loc394)
    %66 = cir.cmp(eq, %62, %65) : !s64i, !cir.bool loc(#loc570)
    cir.brcond %66 ^bb25, ^bb26 loc(#loc571)
  ^bb25:  // pred: ^bb24
    %67 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc396)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc396)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc397)
    cir.br ^bb26 loc(#loc387)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc387)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc327)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc324)
  ^bb29:  // 5 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21
    cir.br ^bb30 loc(#loc324)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc572)
  ^bb31:  // pred: ^bb30
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc401)
    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc401)
    %72 = cir.cmp(ne, %69, %71) : !s32i, !cir.bool loc(#loc573)
    cir.brcond %72 ^bb32, ^bb33 loc(#loc574)
  ^bb32:  // pred: ^bb31
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc403)
    %74 = cir.call @close(%73) : (!s32i) -> !s32i loc(#loc404)
    cir.br ^bb33 loc(#loc399)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc399)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc575)
  ^bb35:  // pred: ^bb34
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc408)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc408)
    %78 = cir.cmp(ne, %75, %77) : !s32i, !cir.bool loc(#loc576)
    cir.brcond %78 ^bb36, ^bb37 loc(#loc577)
  ^bb36:  // pred: ^bb35
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %80 = cir.call @close(%79) : (!s32i) -> !s32i loc(#loc411)
    cir.br ^bb37 loc(#loc406)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc406)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc322)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc317)
  ^bb40:  // 2 preds: ^bb1, ^bb39
    cir.br ^bb41 loc(#loc317)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc309)
  } loc(#loc536)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":116:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":118:28)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:44)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:44)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":130:35)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":60:1)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":151:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":69:13)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":69:32)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":69:41)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":70:13)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":70:56)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":71:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":71:35)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":72:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":72:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":73:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":73:37)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":74:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":74:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":62:5)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":150:5)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":62:8)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":62:26)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":63:5)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":64:9)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":149:9)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":70:36)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":75:13)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":134:21)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":134:20)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":76:13)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":133:13)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:39)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:48)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:61)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:32)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:17)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":84:72)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":85:17)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":88:17)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":85:21)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":85:37)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":86:17)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":87:21)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:24)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:25)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:34)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:37)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:51)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:17)
#loc73 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":89:52)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":90:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":90:17)
#loc77 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":91:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":91:17)
#loc81 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":92:42)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":92:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":92:17)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":92:47)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:17)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":96:17)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:26)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:58)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:59)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:68)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:82)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:21)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":93:88)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":94:17)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":95:21)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":97:17)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":100:17)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":97:28)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":97:42)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":97:21)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":97:48)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":98:17)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":99:21)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:39)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:53)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:59)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:32)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:17)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":101:63)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":102:17)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":105:17)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":102:21)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":102:37)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":103:17)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":104:21)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:17)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":109:17)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:33)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:66)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:67)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:82)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:83)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:21)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:105)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":106:104)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":107:17)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":108:21)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":110:17)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":116:17)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":110:52)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":110:53)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":111:33)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":111:55)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":112:33)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":113:33)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":113:45)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":113:55)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":113:67)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":110:21)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":113:86)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":114:17)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":115:21)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":118:17)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":132:17)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":118:21)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":118:48)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":118:61)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":119:17)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":125:17)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":127:17)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:21)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":124:21)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:30)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:59)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:79)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:82)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:25)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":120:89)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":121:21)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":123:25)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:21)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":131:21)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:30)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:61)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:83)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:86)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:25)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":128:92)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":129:21)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":130:25)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":135:13)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":138:13)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":135:17)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":135:33)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":136:13)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":137:30)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":137:17)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":139:13)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":142:13)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":139:17)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":139:33)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":140:13)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":141:30)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":141:17)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":300:1)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":304:1)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":302:5)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":302:11)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":303:5)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":303:11)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":48:1)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":51:1)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":50:12)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":50:5)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":163:19)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":158:1)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":229:1)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":172:13)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":172:32)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":173:13)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":173:35)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":174:13)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":174:35)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":160:5)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":228:5)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":160:8)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":160:27)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":161:5)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":164:5)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":166:5)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":163:9)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":167:9)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":227:9)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":175:13)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":212:21)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":212:20)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":176:13)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":211:13)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:39)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:48)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:61)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:32)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:17)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":184:72)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":185:17)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":188:17)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":185:21)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":185:37)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":186:17)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":187:21)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:24)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:25)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:34)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:37)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:51)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:17)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":189:52)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":190:38)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":190:17)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":191:43)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":191:17)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":192:42)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":192:36)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":192:17)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":192:47)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:17)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":196:17)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:26)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:58)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:59)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:68)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:82)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:21)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":193:88)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":194:17)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":195:21)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":197:17)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":200:17)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":197:28)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":197:42)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":197:21)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":197:48)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":198:17)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":199:21)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:39)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:53)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:59)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:32)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:17)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":201:63)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":202:17)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":205:17)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":202:21)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":202:37)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":203:17)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":204:21)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:17)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":210:17)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:26)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:40)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:57)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:79)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:82)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:21)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":207:88)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":208:17)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":209:31)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":209:21)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":213:13)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":216:13)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":213:17)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":213:33)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":214:13)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":215:30)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":215:17)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":217:13)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":220:13)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":217:17)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":217:33)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":218:13)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":219:30)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":219:17)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":53:1)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":56:1)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":55:12)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":55:5)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":232:1)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":298:1)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":241:13)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":241:32)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":242:13)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":242:35)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":243:13)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":243:35)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":234:5)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":297:5)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":234:8)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":234:26)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":235:5)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":236:9)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":296:9)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":244:13)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":281:21)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":281:20)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":245:13)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":280:13)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:39)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:48)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:61)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:32)
#loc332 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:17)
#loc333 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":253:72)
#loc334 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":254:17)
#loc335 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":257:17)
#loc336 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":254:21)
#loc337 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":254:37)
#loc338 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":255:17)
#loc339 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":256:21)
#loc340 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:24)
#loc341 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:25)
#loc342 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:34)
#loc343 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:37)
#loc344 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:51)
#loc345 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:17)
#loc346 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":258:52)
#loc347 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":259:38)
#loc348 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":259:17)
#loc349 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":260:43)
#loc350 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":260:17)
#loc351 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":261:42)
#loc352 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":261:36)
#loc353 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":261:17)
#loc354 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":261:47)
#loc355 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:17)
#loc356 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":265:17)
#loc357 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:26)
#loc358 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:58)
#loc359 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:59)
#loc360 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:68)
#loc361 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:82)
#loc362 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:21)
#loc363 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":262:88)
#loc364 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":263:17)
#loc365 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":264:21)
#loc366 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":266:17)
#loc367 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":269:17)
#loc368 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":266:28)
#loc369 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":266:42)
#loc370 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":266:21)
#loc371 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":266:48)
#loc372 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":267:17)
#loc373 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":268:21)
#loc374 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:39)
#loc375 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:53)
#loc376 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:59)
#loc377 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:32)
#loc378 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:17)
#loc379 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":270:63)
#loc380 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":271:17)
#loc381 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":274:17)
#loc382 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":271:21)
#loc383 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":271:37)
#loc384 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":272:17)
#loc385 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":273:21)
#loc386 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:17)
#loc387 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":279:17)
#loc388 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:26)
#loc389 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:40)
#loc390 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:57)
#loc391 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:79)
#loc392 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:82)
#loc393 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:21)
#loc394 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":276:88)
#loc395 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":277:17)
#loc396 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":278:31)
#loc397 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":278:21)
#loc398 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":282:13)
#loc399 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":285:13)
#loc400 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":282:17)
#loc401 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":282:33)
#loc402 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":283:13)
#loc403 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":284:30)
#loc404 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":284:17)
#loc405 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":286:13)
#loc406 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":289:13)
#loc407 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":286:17)
#loc408 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":286:33)
#loc409 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":287:13)
#loc410 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":288:30)
#loc411 = loc("CWE510_Trapdoor__hostname_based_logic_08.c":288:17)
#loc412 = loc(fused[#loc1, #loc2])
#loc413 = loc(fused[#loc3, #loc4])
#loc414 = loc(fused[#loc5, #loc6])
#loc415 = loc(fused[#loc7, #loc8])
#loc416 = loc(fused[#loc9, #loc10])
#loc417 = loc(fused[#loc11, #loc12])
#loc418 = loc(fused[#loc13, #loc14])
#loc419 = loc(fused[#loc15, #loc16])
#loc420 = loc(fused[#loc18, #loc19])
#loc421 = loc(fused[#loc22, #loc23])
#loc422 = loc(fused[#loc25, #loc26])
#loc423 = loc(fused[#loc27, #loc28])
#loc424 = loc(fused[#loc29, #loc30])
#loc425 = loc(fused[#loc29, #loc31])
#loc426 = loc(fused[#loc32, #loc33])
#loc427 = loc(fused[#loc34, #loc35])
#loc428 = loc(fused[#loc36, #loc37])
#loc429 = loc(fused[#loc38, #loc39])
#loc430 = loc(fused[#loc40, #loc41])
#loc431 = loc(fused[#loc42, #loc43])
#loc432 = loc(fused[#loc44, #loc45])
#loc433 = loc(fused[#loc46, #loc43])
#loc434 = loc(fused[#loc47, #loc48])
#loc435 = loc(fused[#loc49, #loc33])
#loc436 = loc(fused[#loc50, #loc51])
#loc437 = loc(fused[#loc53, #loc54])
#loc438 = loc(fused[#loc59, #loc60])
#loc439 = loc(fused[#loc61, #loc62])
#loc440 = loc(fused[#loc63, #loc64])
#loc441 = loc(fused[#loc65, #loc62])
#loc442 = loc(fused[#loc67, #loc68])
#loc443 = loc(fused[#loc70, #loc71])
#loc444 = loc(fused[#loc72, #loc73])
#loc445 = loc(fused[#loc76, #loc74])
#loc446 = loc(fused[#loc80, #loc77])
#loc447 = loc(fused[#loc84, #loc85])
#loc448 = loc(fused[#loc86, #loc87])
#loc449 = loc(fused[#loc89, #loc90])
#loc450 = loc(fused[#loc91, #loc92])
#loc451 = loc(fused[#loc93, #loc94])
#loc452 = loc(fused[#loc95, #loc87])
#loc453 = loc(fused[#loc97, #loc98])
#loc454 = loc(fused[#loc101, #loc102])
#loc455 = loc(fused[#loc103, #loc98])
#loc456 = loc(fused[#loc109, #loc110])
#loc457 = loc(fused[#loc111, #loc112])
#loc458 = loc(fused[#loc113, #loc114])
#loc459 = loc(fused[#loc115, #loc112])
#loc460 = loc(fused[#loc117, #loc118])
#loc461 = loc(fused[#loc120, #loc121])
#loc462 = loc(fused[#loc122, #loc123])
#loc463 = loc(fused[#loc124, #loc125])
#loc464 = loc(fused[#loc127, #loc118])
#loc465 = loc(fused[#loc129, #loc130])
#loc466 = loc(fused[#loc131, #loc132])
#loc467 = loc(fused[#loc133, #loc134])
#loc468 = loc(fused[#loc140, #loc141])
#loc469 = loc(fused[#loc142, #loc130])
#loc470 = loc(fused[#loc144, #loc145])
#loc471 = loc(fused[#loc146, #loc148])
#loc472 = loc(fused[#loc149, #loc150, #loc151, #loc145])
#loc473 = loc(fused[#loc152, #loc153])
#loc474 = loc(fused[#loc155, #loc156])
#loc475 = loc(fused[#loc158, #loc159])
#loc476 = loc(fused[#loc160, #loc153])
#loc477 = loc(fused[#loc162, #loc163])
#loc478 = loc(fused[#loc165, #loc166])
#loc479 = loc(fused[#loc168, #loc169])
#loc480 = loc(fused[#loc170, #loc163])
#loc481 = loc(fused[#loc172, #loc173])
#loc482 = loc(fused[#loc174, #loc175])
#loc483 = loc(fused[#loc176, #loc173])
#loc484 = loc(fused[#loc179, #loc180])
#loc485 = loc(fused[#loc181, #loc182])
#loc486 = loc(fused[#loc183, #loc180])
#loc487 = loc(fused[#loc186, #loc187])
#loc488 = loc(fused[#loc188, #loc189])
#loc489 = loc(fused[#loc190, #loc191])
#loc490 = loc(fused[#loc192, #loc193])
#loc491 = loc(fused[#loc195, #loc194])
#loc492 = loc(fused[#loc197, #loc198])
#loc493 = loc(fused[#loc199, #loc200])
#loc494 = loc(fused[#loc201, #loc202])
#loc495 = loc(fused[#loc203, #loc204])
#loc496 = loc(fused[#loc205, #loc206])
#loc497 = loc(fused[#loc207, #loc208])
#loc498 = loc(fused[#loc209, #loc210, #loc211, #loc206])
#loc499 = loc(fused[#loc213, #loc214])
#loc500 = loc(fused[#loc215, #loc216])
#loc501 = loc(fused[#loc218, #loc219])
#loc502 = loc(fused[#loc224, #loc225])
#loc503 = loc(fused[#loc226, #loc227])
#loc504 = loc(fused[#loc228, #loc229])
#loc505 = loc(fused[#loc230, #loc227])
#loc506 = loc(fused[#loc232, #loc233])
#loc507 = loc(fused[#loc235, #loc236])
#loc508 = loc(fused[#loc237, #loc238])
#loc509 = loc(fused[#loc240, #loc239])
#loc510 = loc(fused[#loc242, #loc241])
#loc511 = loc(fused[#loc245, #loc246])
#loc512 = loc(fused[#loc247, #loc248])
#loc513 = loc(fused[#loc250, #loc251])
#loc514 = loc(fused[#loc252, #loc253])
#loc515 = loc(fused[#loc254, #loc255])
#loc516 = loc(fused[#loc256, #loc248])
#loc517 = loc(fused[#loc258, #loc259])
#loc518 = loc(fused[#loc262, #loc263])
#loc519 = loc(fused[#loc264, #loc259])
#loc520 = loc(fused[#loc270, #loc271])
#loc521 = loc(fused[#loc272, #loc273])
#loc522 = loc(fused[#loc274, #loc275])
#loc523 = loc(fused[#loc276, #loc273])
#loc524 = loc(fused[#loc278, #loc279])
#loc525 = loc(fused[#loc282, #loc283])
#loc526 = loc(fused[#loc285, #loc286])
#loc527 = loc(fused[#loc287, #loc279])
#loc528 = loc(fused[#loc290, #loc291])
#loc529 = loc(fused[#loc292, #loc293])
#loc530 = loc(fused[#loc294, #loc291])
#loc531 = loc(fused[#loc297, #loc298])
#loc532 = loc(fused[#loc299, #loc300])
#loc533 = loc(fused[#loc301, #loc298])
#loc534 = loc(fused[#loc304, #loc305])
#loc535 = loc(fused[#loc307, #loc306])
#loc536 = loc(fused[#loc308, #loc309])
#loc537 = loc(fused[#loc310, #loc311])
#loc538 = loc(fused[#loc312, #loc313])
#loc539 = loc(fused[#loc314, #loc315])
#loc540 = loc(fused[#loc316, #loc317])
#loc541 = loc(fused[#loc318, #loc319])
#loc542 = loc(fused[#loc320, #loc317])
#loc543 = loc(fused[#loc321, #loc322])
#loc544 = loc(fused[#loc323, #loc324])
#loc545 = loc(fused[#loc326, #loc327])
#loc546 = loc(fused[#loc332, #loc333])
#loc547 = loc(fused[#loc334, #loc335])
#loc548 = loc(fused[#loc336, #loc337])
#loc549 = loc(fused[#loc338, #loc335])
#loc550 = loc(fused[#loc340, #loc341])
#loc551 = loc(fused[#loc343, #loc344])
#loc552 = loc(fused[#loc345, #loc346])
#loc553 = loc(fused[#loc348, #loc347])
#loc554 = loc(fused[#loc350, #loc349])
#loc555 = loc(fused[#loc353, #loc354])
#loc556 = loc(fused[#loc355, #loc356])
#loc557 = loc(fused[#loc358, #loc359])
#loc558 = loc(fused[#loc360, #loc361])
#loc559 = loc(fused[#loc362, #loc363])
#loc560 = loc(fused[#loc364, #loc356])
#loc561 = loc(fused[#loc366, #loc367])
#loc562 = loc(fused[#loc370, #loc371])
#loc563 = loc(fused[#loc372, #loc367])
#loc564 = loc(fused[#loc378, #loc379])
#loc565 = loc(fused[#loc380, #loc381])
#loc566 = loc(fused[#loc382, #loc383])
#loc567 = loc(fused[#loc384, #loc381])
#loc568 = loc(fused[#loc386, #loc387])
#loc569 = loc(fused[#loc390, #loc391])
#loc570 = loc(fused[#loc393, #loc394])
#loc571 = loc(fused[#loc395, #loc387])
#loc572 = loc(fused[#loc398, #loc399])
#loc573 = loc(fused[#loc400, #loc401])
#loc574 = loc(fused[#loc402, #loc399])
#loc575 = loc(fused[#loc405, #loc406])
#loc576 = loc(fused[#loc407, #loc408])
#loc577 = loc(fused[#loc409, #loc406])
