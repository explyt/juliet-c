!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc449)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc450)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc451)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc452)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc453)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc454)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc455)
  cir.func private @close(!s32i) -> !s32i loc(#loc456)
  cir.func private @printIntLine(!s32i) loc(#loc457)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc459)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc28)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc464)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc465)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc466)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc467)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc37)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc466)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc44)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc46)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc470)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc53)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc472)
                  cir.if %56 {
                    cir.break loc(#loc55)
                  } loc(#loc473)
                } loc(#loc471)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc474)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc475)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc476)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc63)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc63)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc477)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc478)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc71)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc71)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc479)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc481)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc482)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc482)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc84)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc483)
                  cir.if %60 {
                    cir.break loc(#loc86)
                  } loc(#loc484)
                } loc(#loc480)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc89)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc89)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc89)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc89)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc89)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc89)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc89)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc90)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc90)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc485)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc91)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc92)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc98)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc488)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc99)
                    cir.yield %58 : !cir.bool loc(#loc99)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc101)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc489)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc99)
                      cir.yield %62 : !cir.bool loc(#loc99)
                    }, false {
                      %62 = cir.const #false loc(#loc99)
                      cir.yield %62 : !cir.bool loc(#loc99)
                    }) : (!cir.bool) -> !cir.bool loc(#loc99)
                    cir.yield %61 : !cir.bool loc(#loc99)
                  }) : (!cir.bool) -> !cir.bool loc(#loc99)
                  cir.if %57 {
                    cir.break loc(#loc103)
                  } loc(#loc490)
                } loc(#loc487)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc104)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc104)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc106)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc491)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc492)
              } loc(#loc469)
              cir.yield loc(#loc41)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc111)
              cir.condition(%12) loc(#loc111)
            } loc(#loc468)
          } loc(#loc468)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc115)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc494)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc118)
            } loc(#loc495)
          } loc(#loc493)
        } loc(#loc463)
      } loc(#loc462)
    } loc(#loc461)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc121)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc499)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc501)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc129)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc130)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc501)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc132)
          } loc(#loc500)
        } loc(#loc498)
      } loc(#loc497)
    } loc(#loc496)
    cir.return loc(#loc21)
  } loc(#loc458)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_multiply_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc503)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc135)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc504)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc137)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc505)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc139)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc506)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    cir.return loc(#loc134)
  } loc(#loc502)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc507)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc508)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc148)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc510)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc157)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc515)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc516)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc517)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc518)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc166)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc166)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc517)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc173)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc174)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc175)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc176)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc521)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc182)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc182)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc523)
                  cir.if %56 {
                    cir.break loc(#loc184)
                  } loc(#loc524)
                } loc(#loc522)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc525)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc187)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc526)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc527)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc192)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc192)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc528)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc194)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc194)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc195)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc529)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc198)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc198)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc199)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc530)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc532)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc533)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc533)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc209)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc210)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc210)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc534)
                  cir.if %60 {
                    cir.break loc(#loc212)
                  } loc(#loc535)
                } loc(#loc531)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc214)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc214)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc215)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc215)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc215)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc215)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc215)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc215)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc215)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc216)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc216)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc536)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc217)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc218)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc218)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc537)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc224)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc224)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc539)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc225)
                    cir.yield %58 : !cir.bool loc(#loc225)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc227)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc540)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc225)
                      cir.yield %62 : !cir.bool loc(#loc225)
                    }, false {
                      %62 = cir.const #false loc(#loc225)
                      cir.yield %62 : !cir.bool loc(#loc225)
                    }) : (!cir.bool) -> !cir.bool loc(#loc225)
                    cir.yield %61 : !cir.bool loc(#loc225)
                  }) : (!cir.bool) -> !cir.bool loc(#loc225)
                  cir.if %57 {
                    cir.break loc(#loc229)
                  } loc(#loc541)
                } loc(#loc538)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc230)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc230)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc232)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc232)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc542)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc233)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc234)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc543)
              } loc(#loc520)
              cir.yield loc(#loc170)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc237)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc237)
              cir.condition(%12) loc(#loc237)
            } loc(#loc519)
          } loc(#loc519)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc240)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc241)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc545)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc244)
            } loc(#loc546)
          } loc(#loc544)
        } loc(#loc514)
      } loc(#loc513)
    } loc(#loc512)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc507)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc247)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc251)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc254)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc550)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc260)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc261)
              %11 = cir.binop(div, %9, %10) : !s32i loc(#loc553)
              %12 = cir.cmp(lt, %8, %11) : !s32i, !cir.bool loc(#loc554)
              cir.if %12 {
                %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc556)
                %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %15 = cir.const #cir.int<2> : !s32i loc(#loc267)
                %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc268)
                cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc556)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc270)
              } else {
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc148)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc148)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc271)
              } loc(#loc555)
            } loc(#loc552)
          } loc(#loc551)
        } loc(#loc549)
      } loc(#loc548)
    } loc(#loc547)
    cir.return loc(#loc150)
  } loc(#loc509)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc558)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc276)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc559)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc280)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc563)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc564)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc565)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc566)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc289)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc289)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc565)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc296)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc297)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc298)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc299)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc569)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc305)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc305)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc571)
                  cir.if %56 {
                    cir.break loc(#loc307)
                  } loc(#loc572)
                } loc(#loc570)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc573)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc310)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc574)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc575)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc315)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc315)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc576)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc317)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc317)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc318)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc577)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc321)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc321)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc322)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc578)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc580)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc581)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc581)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc332)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc333)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc333)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc582)
                  cir.if %60 {
                    cir.break loc(#loc335)
                  } loc(#loc583)
                } loc(#loc579)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc337)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc337)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc338)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc338)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc338)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc338)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc338)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc338)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc338)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc339)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc339)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc584)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc340)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc341)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc341)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc585)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc347)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc347)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc587)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc348)
                    cir.yield %58 : !cir.bool loc(#loc348)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc349)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc350)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc588)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc348)
                      cir.yield %62 : !cir.bool loc(#loc348)
                    }, false {
                      %62 = cir.const #false loc(#loc348)
                      cir.yield %62 : !cir.bool loc(#loc348)
                    }) : (!cir.bool) -> !cir.bool loc(#loc348)
                    cir.yield %61 : !cir.bool loc(#loc348)
                  }) : (!cir.bool) -> !cir.bool loc(#loc348)
                  cir.if %57 {
                    cir.break loc(#loc352)
                  } loc(#loc589)
                } loc(#loc586)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc353)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc353)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc355)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc355)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc590)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc356)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc357)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc591)
              } loc(#loc568)
              cir.yield loc(#loc293)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc360)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc360)
              cir.condition(%12) loc(#loc360)
            } loc(#loc567)
          } loc(#loc567)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc363)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc364)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc364)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc593)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc366)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc367)
            } loc(#loc594)
          } loc(#loc592)
        } loc(#loc562)
      } loc(#loc561)
    } loc(#loc560)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc370)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc370)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc374)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc375)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc598)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc380)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc381)
              %11 = cir.binop(div, %9, %10) : !s32i loc(#loc601)
              %12 = cir.cmp(lt, %8, %11) : !s32i, !cir.bool loc(#loc602)
              cir.if %12 {
                %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc604)
                %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %15 = cir.const #cir.int<2> : !s32i loc(#loc387)
                %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc388)
                cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc604)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc390)
              } else {
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc391)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc391)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc392)
              } loc(#loc603)
            } loc(#loc600)
          } loc(#loc599)
        } loc(#loc597)
      } loc(#loc596)
    } loc(#loc595)
    cir.return loc(#loc273)
  } loc(#loc557)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc606)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc397)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc607)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc507)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc401)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc401)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc405)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc405)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc406)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc407)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc610)
      } loc(#loc609)
    } loc(#loc608)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc411)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc411)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc415)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc416)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc614)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc616)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc419)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc420)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc616)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc421)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc422)
          } loc(#loc615)
        } loc(#loc613)
      } loc(#loc612)
    } loc(#loc611)
    cir.return loc(#loc394)
  } loc(#loc605)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc618)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc427)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc619)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc431)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc433)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
      } loc(#loc621)
    } loc(#loc620)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc449)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc437)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc437)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc441)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc442)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc626)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc628)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc446)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc445)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc446)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc628)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc447)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc448)
          } loc(#loc627)
        } loc(#loc625)
      } loc(#loc624)
    } loc(#loc623)
    cir.return loc(#loc424)
  } loc(#loc617)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":45:1)
#loc2 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":45:25)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":50:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":123:1)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":52:5)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":52:9)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":54:12)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":54:5)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":55:5)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":113:5)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":55:8)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":56:5)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":57:9)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":112:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":62:13)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":62:17)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":63:13)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":63:32)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":64:13)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":64:36)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":65:13)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":65:45)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":66:13)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":101:21)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":67:13)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":100:13)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:40)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:49)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:62)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:33)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:17)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":76:73)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":77:17)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":80:17)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":77:21)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":77:38)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":78:17)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":79:21)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:24)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:25)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:34)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:37)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:51)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:17)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":81:52)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":82:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":82:17)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":83:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":83:17)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":83:63)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":84:42)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":84:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":84:17)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":84:50)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:17)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":88:17)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:29)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:62)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:63)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:72)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:86)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:21)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":85:92)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":86:17)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":87:21)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:35)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:50)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:63)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:81)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:84)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:30)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":91:85)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:17)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":95:17)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:21)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:35)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:48)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:51)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":92:65)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":93:17)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":94:21)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":97:43)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":97:29)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":97:17)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":99:29)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":99:24)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":99:17)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":99:40)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":101:20)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":102:13)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":105:13)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":102:17)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":102:34)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":103:13)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":104:30)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":104:17)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":114:5)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":122:5)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":114:8)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":115:5)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":116:9)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":121:9)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":116:12)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":116:19)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":117:9)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":119:13)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":119:33)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":119:26)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":120:26)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":120:13)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":349:1)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":355:1)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":351:5)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":351:14)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":352:5)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":352:14)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":353:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":353:14)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":354:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":354:14)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":46:1)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":46:26)
#loc145 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":197:19)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":211:27)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":130:1)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":215:1)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":132:5)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":132:9)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":134:12)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":134:5)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":135:5)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":193:5)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":135:8)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":136:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":137:9)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":192:9)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":142:13)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":142:17)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":143:13)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":143:32)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":144:13)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":144:36)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":145:13)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":145:45)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":146:13)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":181:21)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":147:13)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":180:13)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:40)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:49)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:62)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:33)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:17)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":156:73)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":157:17)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":160:17)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":157:21)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":157:38)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":158:17)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":159:21)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:24)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:25)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:34)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:37)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:51)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:17)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":161:52)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":162:38)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":162:17)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":163:53)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":163:43)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":163:17)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":163:63)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":164:42)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":164:36)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":164:17)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":164:50)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:17)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":168:17)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:29)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:62)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:63)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:72)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:86)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:21)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":165:92)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":166:17)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":167:21)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:35)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:50)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:63)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:81)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:84)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:30)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:17)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":171:85)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:17)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":175:17)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:21)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:35)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:48)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:51)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":172:65)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":173:17)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":174:21)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":177:43)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":177:29)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":177:17)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":179:29)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":179:24)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":179:17)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":179:40)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":181:20)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":182:13)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":185:13)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":182:17)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":182:34)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":183:13)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":184:30)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":184:17)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":194:5)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":214:5)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":194:8)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":195:5)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":198:5)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":200:5)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":197:9)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":201:9)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":213:9)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":201:12)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":201:19)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":202:9)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":204:13)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":212:13)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":204:17)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":204:25)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":204:33)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":204:34)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":205:13)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":208:13)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":210:13)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":206:17)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":206:37)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":206:30)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":207:30)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":207:17)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":211:17)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":218:1)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":298:1)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":220:5)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":220:9)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":222:12)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":222:5)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":223:5)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":281:5)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":223:8)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":224:5)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":225:9)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":280:9)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":230:13)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":230:17)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":231:13)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":231:32)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":232:13)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":232:36)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":233:13)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":233:45)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":234:13)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":269:21)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":235:13)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":268:13)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:40)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:49)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:62)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:33)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:17)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":244:73)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":245:17)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":248:17)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":245:21)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":245:38)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":246:17)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":247:21)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:24)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:25)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:34)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:37)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:51)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:17)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":249:52)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":250:38)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":250:17)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":251:53)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":251:43)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":251:17)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":251:63)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":252:42)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":252:36)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":252:17)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":252:50)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:17)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":256:17)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:29)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:62)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:63)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:72)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:86)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:21)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":253:92)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":254:17)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":255:21)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:35)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:50)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:63)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:81)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:84)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:30)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:17)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":259:85)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:17)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":263:17)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:21)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:35)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:48)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:51)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":260:65)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":261:17)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":262:21)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":265:43)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":265:29)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":265:17)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":267:29)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":267:24)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":267:17)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":267:40)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":269:20)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":270:13)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":273:13)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":270:17)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":270:34)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":271:13)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":272:30)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":272:17)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":282:5)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":297:5)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":282:8)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":283:5)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":284:9)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":296:9)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":284:12)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":284:19)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":285:9)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":287:13)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":295:13)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":287:17)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":287:25)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":287:33)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":287:34)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":288:13)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":291:13)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":293:13)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":289:17)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":289:37)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":289:30)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":290:30)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":290:17)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":294:27)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":294:17)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":301:1)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":325:1)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":303:5)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":303:9)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":305:12)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":305:5)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":306:5)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":315:5)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":306:8)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":307:5)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":310:5)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":312:5)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":309:19)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":309:9)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":314:16)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":314:9)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":316:5)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":324:5)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":316:8)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":317:5)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":318:9)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":323:9)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":318:12)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":318:19)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":319:9)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":321:13)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":321:33)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":321:26)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":322:26)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":322:13)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":328:1)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":347:1)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":330:5)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":330:9)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":332:12)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":332:5)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":333:5)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":337:5)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":333:8)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":334:5)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":336:16)
#loc434 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":336:9)
#loc435 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":338:5)
#loc436 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":346:5)
#loc437 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":338:8)
#loc438 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":339:5)
#loc439 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":340:9)
#loc440 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":345:9)
#loc441 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":340:12)
#loc442 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":340:19)
#loc443 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":341:9)
#loc444 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":343:13)
#loc445 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":343:33)
#loc446 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":343:26)
#loc447 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":344:26)
#loc448 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_05.c":344:13)
#loc449 = loc(fused[#loc1, #loc2])
#loc450 = loc(fused[#loc3, #loc4])
#loc451 = loc(fused[#loc5, #loc6])
#loc452 = loc(fused[#loc8, #loc9])
#loc453 = loc(fused[#loc10, #loc11])
#loc454 = loc(fused[#loc12, #loc13])
#loc455 = loc(fused[#loc14, #loc15])
#loc456 = loc(fused[#loc16, #loc17])
#loc457 = loc(fused[#loc18, #loc19])
#loc458 = loc(fused[#loc20, #loc21])
#loc459 = loc(fused[#loc22, #loc23])
#loc460 = loc(fused[#loc25, #loc24])
#loc461 = loc(fused[#loc26, #loc27])
#loc462 = loc(fused[#loc29, #loc27])
#loc463 = loc(fused[#loc30, #loc31])
#loc464 = loc(fused[#loc32, #loc33])
#loc465 = loc(fused[#loc34, #loc35])
#loc466 = loc(fused[#loc36, #loc37])
#loc467 = loc(fused[#loc38, #loc39])
#loc468 = loc(fused[#loc40, #loc41])
#loc469 = loc(fused[#loc42, #loc43])
#loc470 = loc(fused[#loc48, #loc49])
#loc471 = loc(fused[#loc50, #loc51])
#loc472 = loc(fused[#loc52, #loc53])
#loc473 = loc(fused[#loc54, #loc51])
#loc474 = loc(fused[#loc56, #loc57])
#loc475 = loc(fused[#loc59, #loc60])
#loc476 = loc(fused[#loc61, #loc62])
#loc477 = loc(fused[#loc65, #loc63])
#loc478 = loc(fused[#loc69, #loc70])
#loc479 = loc(fused[#loc74, #loc75])
#loc480 = loc(fused[#loc76, #loc77])
#loc481 = loc(fused[#loc79, #loc80])
#loc482 = loc(fused[#loc81, #loc82])
#loc483 = loc(fused[#loc83, #loc84])
#loc484 = loc(fused[#loc85, #loc77])
#loc485 = loc(fused[#loc89, #loc90])
#loc486 = loc(fused[#loc93, #loc94])
#loc487 = loc(fused[#loc95, #loc96])
#loc488 = loc(fused[#loc97, #loc98])
#loc489 = loc(fused[#loc100, #loc101])
#loc490 = loc(fused[#loc102, #loc96])
#loc491 = loc(fused[#loc106, #loc104])
#loc492 = loc(fused[#loc109, #loc110])
#loc493 = loc(fused[#loc112, #loc113])
#loc494 = loc(fused[#loc114, #loc115])
#loc495 = loc(fused[#loc116, #loc113])
#loc496 = loc(fused[#loc119, #loc120])
#loc497 = loc(fused[#loc122, #loc120])
#loc498 = loc(fused[#loc123, #loc124])
#loc499 = loc(fused[#loc125, #loc126])
#loc500 = loc(fused[#loc127, #loc124])
#loc501 = loc(fused[#loc128, #loc129])
#loc502 = loc(fused[#loc133, #loc134])
#loc503 = loc(fused[#loc135, #loc136])
#loc504 = loc(fused[#loc137, #loc138])
#loc505 = loc(fused[#loc139, #loc140])
#loc506 = loc(fused[#loc141, #loc142])
#loc507 = loc(fused[#loc143, #loc144])
#loc508 = loc(fused[#loc145, #loc146])
#loc509 = loc(fused[#loc149, #loc150])
#loc510 = loc(fused[#loc151, #loc152])
#loc511 = loc(fused[#loc154, #loc153])
#loc512 = loc(fused[#loc155, #loc156])
#loc513 = loc(fused[#loc158, #loc156])
#loc514 = loc(fused[#loc159, #loc160])
#loc515 = loc(fused[#loc161, #loc162])
#loc516 = loc(fused[#loc163, #loc164])
#loc517 = loc(fused[#loc165, #loc166])
#loc518 = loc(fused[#loc167, #loc168])
#loc519 = loc(fused[#loc169, #loc170])
#loc520 = loc(fused[#loc171, #loc172])
#loc521 = loc(fused[#loc177, #loc178])
#loc522 = loc(fused[#loc179, #loc180])
#loc523 = loc(fused[#loc181, #loc182])
#loc524 = loc(fused[#loc183, #loc180])
#loc525 = loc(fused[#loc185, #loc186])
#loc526 = loc(fused[#loc188, #loc189])
#loc527 = loc(fused[#loc190, #loc191])
#loc528 = loc(fused[#loc193, #loc192])
#loc529 = loc(fused[#loc196, #loc197])
#loc530 = loc(fused[#loc200, #loc201])
#loc531 = loc(fused[#loc202, #loc203])
#loc532 = loc(fused[#loc205, #loc206])
#loc533 = loc(fused[#loc207, #loc208])
#loc534 = loc(fused[#loc209, #loc210])
#loc535 = loc(fused[#loc211, #loc203])
#loc536 = loc(fused[#loc215, #loc216])
#loc537 = loc(fused[#loc219, #loc220])
#loc538 = loc(fused[#loc221, #loc222])
#loc539 = loc(fused[#loc223, #loc224])
#loc540 = loc(fused[#loc226, #loc227])
#loc541 = loc(fused[#loc228, #loc222])
#loc542 = loc(fused[#loc232, #loc230])
#loc543 = loc(fused[#loc235, #loc236])
#loc544 = loc(fused[#loc238, #loc239])
#loc545 = loc(fused[#loc240, #loc241])
#loc546 = loc(fused[#loc242, #loc239])
#loc547 = loc(fused[#loc245, #loc246])
#loc548 = loc(fused[#loc248, #loc249, #loc250, #loc246])
#loc549 = loc(fused[#loc252, #loc253])
#loc550 = loc(fused[#loc254, #loc255])
#loc551 = loc(fused[#loc256, #loc253])
#loc552 = loc(fused[#loc257, #loc258])
#loc553 = loc(fused[#loc260, #loc261])
#loc554 = loc(fused[#loc259, #loc262])
#loc555 = loc(fused[#loc263, #loc264, #loc265, #loc258])
#loc556 = loc(fused[#loc266, #loc267])
#loc557 = loc(fused[#loc272, #loc273])
#loc558 = loc(fused[#loc274, #loc275])
#loc559 = loc(fused[#loc277, #loc276])
#loc560 = loc(fused[#loc278, #loc279])
#loc561 = loc(fused[#loc281, #loc279])
#loc562 = loc(fused[#loc282, #loc283])
#loc563 = loc(fused[#loc284, #loc285])
#loc564 = loc(fused[#loc286, #loc287])
#loc565 = loc(fused[#loc288, #loc289])
#loc566 = loc(fused[#loc290, #loc291])
#loc567 = loc(fused[#loc292, #loc293])
#loc568 = loc(fused[#loc294, #loc295])
#loc569 = loc(fused[#loc300, #loc301])
#loc570 = loc(fused[#loc302, #loc303])
#loc571 = loc(fused[#loc304, #loc305])
#loc572 = loc(fused[#loc306, #loc303])
#loc573 = loc(fused[#loc308, #loc309])
#loc574 = loc(fused[#loc311, #loc312])
#loc575 = loc(fused[#loc313, #loc314])
#loc576 = loc(fused[#loc316, #loc315])
#loc577 = loc(fused[#loc319, #loc320])
#loc578 = loc(fused[#loc323, #loc324])
#loc579 = loc(fused[#loc325, #loc326])
#loc580 = loc(fused[#loc328, #loc329])
#loc581 = loc(fused[#loc330, #loc331])
#loc582 = loc(fused[#loc332, #loc333])
#loc583 = loc(fused[#loc334, #loc326])
#loc584 = loc(fused[#loc338, #loc339])
#loc585 = loc(fused[#loc342, #loc343])
#loc586 = loc(fused[#loc344, #loc345])
#loc587 = loc(fused[#loc346, #loc347])
#loc588 = loc(fused[#loc349, #loc350])
#loc589 = loc(fused[#loc351, #loc345])
#loc590 = loc(fused[#loc355, #loc353])
#loc591 = loc(fused[#loc358, #loc359])
#loc592 = loc(fused[#loc361, #loc362])
#loc593 = loc(fused[#loc363, #loc364])
#loc594 = loc(fused[#loc365, #loc362])
#loc595 = loc(fused[#loc368, #loc369])
#loc596 = loc(fused[#loc371, #loc369])
#loc597 = loc(fused[#loc372, #loc373])
#loc598 = loc(fused[#loc374, #loc375])
#loc599 = loc(fused[#loc376, #loc373])
#loc600 = loc(fused[#loc377, #loc378])
#loc601 = loc(fused[#loc380, #loc381])
#loc602 = loc(fused[#loc379, #loc382])
#loc603 = loc(fused[#loc383, #loc384, #loc385, #loc378])
#loc604 = loc(fused[#loc386, #loc387])
#loc605 = loc(fused[#loc393, #loc394])
#loc606 = loc(fused[#loc395, #loc396])
#loc607 = loc(fused[#loc398, #loc397])
#loc608 = loc(fused[#loc399, #loc400])
#loc609 = loc(fused[#loc402, #loc403, #loc404, #loc400])
#loc610 = loc(fused[#loc408, #loc407])
#loc611 = loc(fused[#loc409, #loc410])
#loc612 = loc(fused[#loc412, #loc410])
#loc613 = loc(fused[#loc413, #loc414])
#loc614 = loc(fused[#loc415, #loc416])
#loc615 = loc(fused[#loc417, #loc414])
#loc616 = loc(fused[#loc418, #loc419])
#loc617 = loc(fused[#loc423, #loc424])
#loc618 = loc(fused[#loc425, #loc426])
#loc619 = loc(fused[#loc428, #loc427])
#loc620 = loc(fused[#loc429, #loc430])
#loc621 = loc(fused[#loc432, #loc430])
#loc622 = loc(fused[#loc434, #loc433])
#loc623 = loc(fused[#loc435, #loc436])
#loc624 = loc(fused[#loc438, #loc436])
#loc625 = loc(fused[#loc439, #loc440])
#loc626 = loc(fused[#loc441, #loc442])
#loc627 = loc(fused[#loc443, #loc440])
#loc628 = loc(fused[#loc444, #loc445])
