!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":23:77)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":23:84)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":49:81)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":49:88)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":87:10)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":87:14)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":87:20)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":87:32)
#loc125 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc50, #loc51])
#loc145 = loc(fused[#loc82, #loc83])
#loc146 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc127)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc127)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc127)
      %3 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc16)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc17)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
      %9 = cir.call @strncat(%4, %5, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc21)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc21)
      %12 = cir.const #cir.int<50> : !s32i loc(#loc22)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc22)
      %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc24)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc128)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    } loc(#loc126)
    cir.return loc(#loc8)
  } loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc32)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc32)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc32)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc32)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc36)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc37)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc41)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc43)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_badSink(%24) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.return loc(#loc28)
  } loc(#loc129)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc50, #loc51])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc138)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc138)
      cir.store %2, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc138)
      %3 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc57)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
      %9 = cir.call @strncat(%4, %5, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc62)
      %12 = cir.const #cir.int<50> : !s32i loc(#loc63)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc63)
      %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc65)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc65)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc139)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    } loc(#loc137)
    cir.return loc(#loc49)
  } loc(#loc135)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc140)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc142)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %17 : !s32i loc(#loc149)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc105)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc105)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc105)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc109)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc110)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc114)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc116)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41_goodG2BSink(%24) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.return loc(#loc101)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":32:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":26:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":26:25)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":28:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":28:17)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":28:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":28:29)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":28:36)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":29:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":29:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":29:17)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":29:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":30:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":30:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":34:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":43:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":36:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":36:12)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":37:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":37:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":38:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":38:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:12)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":40:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":41:19)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":41:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":41:10)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":41:14)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":41:15)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":42:76)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":42:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":49:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":58:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":50:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":51:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":57:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":52:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":52:25)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":54:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":54:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":54:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":54:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":54:36)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":55:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":55:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":55:17)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":55:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":56:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":56:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":72:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":75:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":74:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":74:13)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":92:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":94:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":97:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":99:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":87:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":102:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":88:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":90:27)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":90:22)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":90:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":92:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":93:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":93:73)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":94:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":97:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":98:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":98:72)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":99:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":101:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":101:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":61:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":70:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":63:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":63:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":64:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":64:33)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":65:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":65:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:23)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:26)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":67:27)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":68:18)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":68:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":68:10)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":68:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":68:14)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":69:80)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_41.c":69:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc14, #loc15])
#loc128 = loc(fused[#loc24, #loc21])
#loc129 = loc(fused[#loc27, #loc28])
#loc130 = loc(fused[#loc29, #loc30])
#loc131 = loc(fused[#loc31, #loc32])
#loc132 = loc(fused[#loc34, #loc33])
#loc133 = loc(fused[#loc39, #loc40])
#loc134 = loc(fused[#loc42, #loc41])
#loc135 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc53, #loc54])
#loc138 = loc(fused[#loc55, #loc56])
#loc139 = loc(fused[#loc65, #loc62])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc80, #loc81])
#loc147 = loc(fused[#loc91, #loc92])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc99, #loc98])
#loc150 = loc(fused[#loc100, #loc101])
#loc151 = loc(fused[#loc102, #loc103])
#loc152 = loc(fused[#loc104, #loc105])
#loc153 = loc(fused[#loc107, #loc106])
#loc154 = loc(fused[#loc112, #loc113])
#loc155 = loc(fused[#loc115, #loc114])
