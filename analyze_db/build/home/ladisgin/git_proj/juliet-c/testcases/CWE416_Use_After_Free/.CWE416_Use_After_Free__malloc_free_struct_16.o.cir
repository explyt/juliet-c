!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc179)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc180)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc181)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc182)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc18)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc19)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc187)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc188)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc190)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc192)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc31)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
          } loc(#loc193)
        } loc(#loc191)
        cir.scope {
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc38)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
            cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc197)
            cir.for : cond {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc40)
              %16 = cir.const #cir.int<100> : !s32i loc(#loc41)
              %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc41)
              %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc198)
              cir.condition(%18) loc(#loc42)
            } body {
              cir.scope {
                %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
                %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
                %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc48)
                cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc200)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
                %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc51)
                %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
                %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
                cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc201)
              } loc(#loc199)
              cir.yield loc(#loc37)
            } step {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc55)
              cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc202)
              cir.yield loc(#loc196)
            } loc(#loc196)
          } loc(#loc196)
        } loc(#loc194)
        %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
        cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
        cir.break loc(#loc58)
      } loc(#loc186)
    } loc(#loc186)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc61)
        cir.condition(%3) loc(#loc61)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
        %3 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
        cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc65)
        cir.break loc(#loc66)
      } loc(#loc203)
    } loc(#loc203)
    cir.return loc(#loc10)
  } loc(#loc183)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc209)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc81)
        cir.condition(%3) loc(#loc81)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc83)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc83)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc211)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc212)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc216)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc95)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
          } loc(#loc217)
        } loc(#loc215)
        cir.scope {
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc219)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc102)
            cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc221)
            cir.for : cond {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %16 = cir.const #cir.int<100> : !s32i loc(#loc105)
              %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc105)
              %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc222)
              cir.condition(%18) loc(#loc106)
            } body {
              cir.scope {
                %15 = cir.const #cir.int<1> : !s32i loc(#loc108)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
                %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc110)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
                %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc48)
                cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc224)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc112)
                %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
                %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc114)
                %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
                %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
                cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc225)
              } loc(#loc223)
              cir.yield loc(#loc101)
            } step {
              %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc116)
              %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc117)
              cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc226)
              cir.yield loc(#loc220)
            } loc(#loc220)
          } loc(#loc220)
        } loc(#loc218)
        %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc118)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc119)
        cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
        cir.break loc(#loc120)
      } loc(#loc210)
    } loc(#loc210)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
        cir.condition(%3) loc(#loc123)
      } do {
        cir.break loc(#loc124)
      } loc(#loc227)
    } loc(#loc227)
    cir.return loc(#loc74)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc230)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
        cir.condition(%3) loc(#loc133)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc134)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc135)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc135)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc232)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc233)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc234)
        cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc235)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
          %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc237)
          cir.if %12 {
            %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc145)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc147)
            cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
          } loc(#loc238)
        } loc(#loc236)
        cir.scope {
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc240)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc154)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc154)
            cir.store %11, %9 : !u64i, !cir.ptr<!u64i> loc(#loc242)
            cir.for : cond {
              %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc156)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc157)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc157)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc243)
              cir.condition(%15) loc(#loc158)
            } body {
              cir.scope {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc160)
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
                %14 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc162)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
                %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc48)
                cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc245)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc164)
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
                %19 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc166)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
                %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
                cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc246)
              } loc(#loc244)
              cir.yield loc(#loc153)
            } step {
              %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc168)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc169)
              cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc247)
              cir.yield loc(#loc241)
            } loc(#loc241)
          } loc(#loc241)
        } loc(#loc239)
        cir.break loc(#loc170)
      } loc(#loc231)
    } loc(#loc231)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc173)
        cir.condition(%3) loc(#loc173)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc174)
        %3 = cir.const #cir.int<0> : !s32i loc(#loc175)
        %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
        cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc177)
        cir.break loc(#loc178)
      } loc(#loc248)
    } loc(#loc248)
    cir.return loc(#loc126)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":24:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":52:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":26:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":26:21)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":28:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":28:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":29:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":44:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":29:11)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:33)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:40)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:44)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:64)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:65)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":31:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:9)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:37)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:13)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:21)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:27)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:28)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:34)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":32:33)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":33:9)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":40:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":34:13)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":34:20)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":39:13)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:21)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:17)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:24)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:28)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:26)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":36:13)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":37:34)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":37:17)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":37:22)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":37:23)
#loc48 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":38:34)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":38:17)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":38:22)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":38:23)
#loc53 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:34)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":35:33)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":42:9)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":42:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":43:9)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":45:5)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":51:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":45:11)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":48:26)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":48:31)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":48:32)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":48:9)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":50:9)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":120:1)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":124:1)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":122:5)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":122:13)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":123:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":123:13)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":59:1)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":88:1)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":61:5)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":61:21)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":63:12)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":63:5)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":64:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":79:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":64:11)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:33)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:40)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:44)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:64)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:65)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":66:9)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:9)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:37)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:13)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:21)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:27)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:28)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:34)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":67:33)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":68:9)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":75:9)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":69:13)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":69:20)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:13)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":74:13)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:21)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:17)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:24)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:28)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:26)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":71:13)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":72:34)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":72:17)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":72:22)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":72:23)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":73:34)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":73:17)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":73:22)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":73:23)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:34)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":70:33)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":77:9)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":77:14)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":78:9)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":80:5)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":87:5)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":80:11)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":86:9)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":91:1)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":118:1)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":93:5)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":93:21)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":95:12)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":95:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":96:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":110:5)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":96:11)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:33)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:40)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:44)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:64)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:65)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":98:9)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:9)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:37)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:13)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:21)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:27)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:28)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:34)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":99:33)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":100:9)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":107:9)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":101:13)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":101:20)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:13)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":106:13)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:21)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:17)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:24)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:28)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:26)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":103:13)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":104:34)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":104:17)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":104:22)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":104:23)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":105:34)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":105:17)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":105:22)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":105:23)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:34)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":102:33)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":109:9)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":111:5)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":117:5)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":111:11)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":114:26)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":114:31)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":114:32)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":114:9)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_struct_16.c":116:9)
#loc179 = loc(fused[#loc1, #loc2])
#loc180 = loc(fused[#loc3, #loc4])
#loc181 = loc(fused[#loc5, #loc6])
#loc182 = loc(fused[#loc7, #loc8])
#loc183 = loc(fused[#loc9, #loc10])
#loc184 = loc(fused[#loc11, #loc12])
#loc185 = loc(fused[#loc14, #loc13])
#loc186 = loc(fused[#loc15, #loc16])
#loc187 = loc(fused[#loc20, #loc21])
#loc188 = loc(fused[#loc19, #loc21])
#loc189 = loc(fused[#loc18, #loc22])
#loc190 = loc(fused[#loc23, #loc22])
#loc191 = loc(fused[#loc24, #loc25])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc25])
#loc194 = loc(fused[#loc32, #loc33])
#loc195 = loc(fused[#loc34, #loc35])
#loc196 = loc(fused[#loc36, #loc37])
#loc197 = loc(fused[#loc39, #loc38])
#loc198 = loc(fused[#loc40, #loc41])
#loc199 = loc(fused[#loc43, #loc37])
#loc200 = loc(fused[#loc45, #loc44])
#loc201 = loc(fused[#loc50, #loc49])
#loc202 = loc(fused[#loc55, #loc54])
#loc203 = loc(fused[#loc59, #loc60])
#loc204 = loc(fused[#loc67, #loc68])
#loc205 = loc(fused[#loc69, #loc70])
#loc206 = loc(fused[#loc71, #loc72])
#loc207 = loc(fused[#loc73, #loc74])
#loc208 = loc(fused[#loc75, #loc76])
#loc209 = loc(fused[#loc78, #loc77])
#loc210 = loc(fused[#loc79, #loc80])
#loc211 = loc(fused[#loc84, #loc85])
#loc212 = loc(fused[#loc83, #loc85])
#loc213 = loc(fused[#loc82, #loc86])
#loc214 = loc(fused[#loc87, #loc86])
#loc215 = loc(fused[#loc88, #loc89])
#loc216 = loc(fused[#loc90, #loc91])
#loc217 = loc(fused[#loc92, #loc89])
#loc218 = loc(fused[#loc96, #loc97])
#loc219 = loc(fused[#loc98, #loc99])
#loc220 = loc(fused[#loc100, #loc101])
#loc221 = loc(fused[#loc103, #loc102])
#loc222 = loc(fused[#loc104, #loc105])
#loc223 = loc(fused[#loc107, #loc101])
#loc224 = loc(fused[#loc109, #loc108])
#loc225 = loc(fused[#loc113, #loc112])
#loc226 = loc(fused[#loc117, #loc116])
#loc227 = loc(fused[#loc121, #loc122])
#loc228 = loc(fused[#loc125, #loc126])
#loc229 = loc(fused[#loc127, #loc128])
#loc230 = loc(fused[#loc130, #loc129])
#loc231 = loc(fused[#loc131, #loc132])
#loc232 = loc(fused[#loc136, #loc137])
#loc233 = loc(fused[#loc135, #loc137])
#loc234 = loc(fused[#loc134, #loc138])
#loc235 = loc(fused[#loc139, #loc138])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc144, #loc141])
#loc239 = loc(fused[#loc148, #loc149])
#loc240 = loc(fused[#loc150, #loc151])
#loc241 = loc(fused[#loc152, #loc153])
#loc242 = loc(fused[#loc155, #loc154])
#loc243 = loc(fused[#loc156, #loc157])
#loc244 = loc(fused[#loc159, #loc153])
#loc245 = loc(fused[#loc161, #loc160])
#loc246 = loc(fused[#loc165, #loc164])
#loc247 = loc(fused[#loc169, #loc168])
#loc248 = loc(fused[#loc171, #loc172])
