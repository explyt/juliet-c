!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":110:10)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":110:14)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":110:20)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":110:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc122)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc127)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc11)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc128)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<8> : !u64i loc(#loc6)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc6)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc6)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.copy %9 to %1 : !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    %10 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc18)
    %12 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc21)
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc10)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc123)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc130)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc37)
  cir.func @main(%arg0: !s32i loc(fused[#loc40, #loc41]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc46)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc46)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc47)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_08_good() : () -> () loc(#loc49)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc36)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_08_bad() : () -> () loc(#loc53)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc37)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc60)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %2 : !s32i loc(#loc143)
  } loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc149)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc73)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc73)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc76)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<8> : !u64i loc(#loc68)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc68)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc68)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.store %11, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %13 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %15 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %16 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.copy %0 to %16 : !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %17 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.copy %17 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %18 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc89)
    %20 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc91)
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc64)
  } loc(#loc144)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %2 : !s32i loc(#loc156)
  } loc(#loc155)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc162)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc106)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc163)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<8> : !u64i loc(#loc101)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc101)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %11 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %13 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.copy %0 to %14 : !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // pred: ^bb3
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    cir.copy %15 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    %16 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc119)
    %18 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc121)
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc105)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc97)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":33:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":44:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":38:13)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":38:56)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":39:13)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":39:35)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":35:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":43:5)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":35:8)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":35:26)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":36:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":37:9)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":42:9)
#loc16 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":40:31)
#loc18 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":40:13)
#loc19 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":41:31)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":41:13)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":95:1)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":99:1)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":97:5)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":97:11)
#loc26 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":98:5)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":98:11)
#loc28 = loc("/usr/include/stdlib.h":575:1)
#loc29 = loc("/usr/include/stdlib.h":575:41)
#loc30 = loc("/usr/include/time.h":76:1)
#loc31 = loc("/usr/include/time.h":76:38)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":115:15)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":117:15)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":120:15)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":122:15)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":110:1)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":125:1)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":111:1)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":113:27)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":113:22)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":113:5)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":115:5)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":116:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":116:58)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":117:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":120:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":121:5)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":121:57)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":122:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":124:12)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":124:5)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":21:1)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":24:1)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":23:12)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":23:5)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":56:19)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":51:1)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":73:1)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":61:13)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":61:27)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":62:13)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":62:56)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":67:17)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":67:39)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":53:5)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":72:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":53:8)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":53:27)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":54:5)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":57:5)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":59:5)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":56:9)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":60:9)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":71:9)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":63:27)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":63:13)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":64:27)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":64:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":65:14)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":66:13)
#loc87 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":70:13)
#loc88 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":68:35)
#loc89 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":68:17)
#loc90 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":69:35)
#loc91 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":69:17)
#loc92 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":26:1)
#loc93 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":29:1)
#loc94 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":28:12)
#loc95 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":28:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":76:1)
#loc97 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":93:1)
#loc98 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":81:13)
#loc99 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":81:27)
#loc100 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":82:13)
#loc101 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":82:56)
#loc102 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":87:17)
#loc103 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":87:39)
#loc104 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":78:5)
#loc105 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":92:5)
#loc106 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":78:8)
#loc107 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":78:26)
#loc108 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":79:5)
#loc109 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":80:9)
#loc110 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":91:9)
#loc111 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":83:27)
#loc112 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":83:13)
#loc113 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":84:27)
#loc114 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":84:13)
#loc115 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":85:14)
#loc116 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":86:13)
#loc117 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":90:13)
#loc118 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":88:35)
#loc119 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":88:17)
#loc120 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":89:35)
#loc121 = loc("CWE758_Undefined_Behavior__struct_alloca_use_08.c":89:17)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc9, #loc10])
#loc127 = loc(fused[#loc11, #loc12])
#loc128 = loc(fused[#loc13, #loc10])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc30, #loc31])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc49, #loc50])
#loc140 = loc(fused[#loc53, #loc54])
#loc141 = loc(fused[#loc57, #loc56])
#loc142 = loc(fused[#loc58, #loc59])
#loc143 = loc(fused[#loc61, #loc60])
#loc144 = loc(fused[#loc63, #loc64])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc151 = loc(fused[#loc79, #loc80])
#loc152 = loc(fused[#loc82, #loc81])
#loc153 = loc(fused[#loc84, #loc83])
#loc154 = loc(fused[#loc86, #loc87])
#loc155 = loc(fused[#loc92, #loc93])
#loc156 = loc(fused[#loc95, #loc94])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc98, #loc99])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc108, #loc105])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc112, #loc111])
#loc166 = loc(fused[#loc114, #loc113])
#loc167 = loc(fused[#loc116, #loc117])
