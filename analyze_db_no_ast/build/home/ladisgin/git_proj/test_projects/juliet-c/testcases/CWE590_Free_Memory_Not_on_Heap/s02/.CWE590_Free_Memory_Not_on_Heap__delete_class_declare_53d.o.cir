!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":28:16)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":28:31)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":40:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":40:35)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc29 = loc(fused[#loc7, #loc8])
#loc31 = loc(fused[#loc18, #loc19])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc26)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc27)
  cir.func  @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_class_declare_539badSink_dEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc11)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc13)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc14)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc15)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc28)
  cir.func  @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_class_declare_5313goodG2BSink_dEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc31)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc20)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
    %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc11)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc23)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc24)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc25)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc17)
  } loc(#loc30)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":28:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":33:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":29:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":30:18)
#loc11 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":30:24)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":30:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":32:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":28:6)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":40:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":45:1)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":41:1)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":42:18)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":42:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":42:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":44:12)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_declare_53d.cpp":40:6)
#loc26 = loc(fused[#loc1, #loc2])
#loc27 = loc(fused[#loc3, #loc4])
#loc28 = loc(fused[#loc5, #loc6])
#loc30 = loc(fused[#loc16, #loc17])
