!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func internal private  @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.return %2 : !s32i loc(#loc113)
  } loc(#loc112)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc114)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr2) loc(#loc115)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc118)
    cir.scope {
      %8 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc18)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc120)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc123)
          %11 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc124)
          %12 = cir.const #cir.int<8> : !u64i loc(#loc125)
          %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc28)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc26)
          cir.store %15, %11 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc29)
          %17 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc32)
          %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc127)
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
          cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
        } loc(#loc122)
      } loc(#loc121)
    } loc(#loc119)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc39)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc40)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc41)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr2) loc(#loc41)
    cir.return loc(#loc11)
  } loc(#loc116)
  cir.func internal private  @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %2 : !s32i loc(#loc130)
  } loc(#loc129)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc132)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc135)
    cir.scope {
      %8 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc59)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc137)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc140)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc141)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc140)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc141)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc68)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc140)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc142)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc72)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc143)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc144)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc136)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc78)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc79)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc80)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr2) loc(#loc80)
    cir.return loc(#loc52)
  } loc(#loc133)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc147)
    cir.scope {
      %8 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc89)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc149)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc153)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc152)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc95)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc152)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc97)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc99)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc156)
        } loc(#loc151)
      } loc(#loc150)
    } loc(#loc148)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc103)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc105)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc106)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc107)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr2) loc(#loc107)
    cir.return loc(#loc82)
  } loc(#loc145)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_084goodEv() extra(#fn_attr) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B1Ev() : () -> () loc(#loc110)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08L8goodG2B2Ev() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":27:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":26:12)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":26:5)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":39:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":57:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":41:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":41:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":42:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":42:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":53:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:8)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":43:26)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":44:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":45:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":52:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":47:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":47:45)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:53)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:41)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":48:45)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":49:34)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":49:13)
#loc31 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":50:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":50:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":51:20)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":51:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:18)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:24)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":54:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":56:12)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":39:6)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":29:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":32:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":31:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":31:5)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":71:19)
#loc49 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc50 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":64:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":86:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":66:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":66:20)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":67:12)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":67:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":82:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:8)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":68:27)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":69:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":72:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":74:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":71:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":75:9)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":81:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:45)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":77:41)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":78:34)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":78:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":79:34)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":79:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":80:20)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":80:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:18)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:24)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":83:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":85:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":64:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":89:1)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":106:1)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":91:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":91:20)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":92:12)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":92:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":102:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:8)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":93:26)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":94:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":95:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":101:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:45)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":97:41)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":98:34)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":98:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":99:34)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":99:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":100:20)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":100:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:18)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:24)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":103:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":105:12)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":89:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":108:1)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":112:1)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":110:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_08.cpp":111:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc4, #loc3])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc10, #loc11])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc15, #loc14])
#loc119 = loc(fused[#loc16, #loc17])
#loc120 = loc(fused[#loc18, #loc19])
#loc121 = loc(fused[#loc20, #loc17])
#loc122 = loc(fused[#loc21, #loc22])
#loc123 = loc(fused[#loc23, #loc24])
#loc124 = loc(fused[#loc25, #loc26])
#loc125 = loc(fused[#loc27, #loc26])
#loc126 = loc(fused[#loc30, #loc29])
#loc127 = loc(fused[#loc33, #loc32])
#loc128 = loc(fused[#loc36, #loc35])
#loc129 = loc(fused[#loc42, #loc43])
#loc130 = loc(fused[#loc45, #loc44])
#loc131 = loc(fused[#loc46, #loc47])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc53, #loc54])
#loc135 = loc(fused[#loc56, #loc55])
#loc136 = loc(fused[#loc57, #loc58])
#loc137 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc139 = loc(fused[#loc65, #loc66])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc69, #loc68])
#loc142 = loc(fused[#loc71, #loc70])
#loc143 = loc(fused[#loc73, #loc72])
#loc144 = loc(fused[#loc75, #loc74])
#loc145 = loc(fused[#loc81, #loc82])
#loc146 = loc(fused[#loc83, #loc84])
#loc147 = loc(fused[#loc86, #loc85])
#loc148 = loc(fused[#loc87, #loc88])
#loc149 = loc(fused[#loc89, #loc90])
#loc150 = loc(fused[#loc91, #loc88])
#loc151 = loc(fused[#loc92, #loc93])
#loc152 = loc(fused[#loc94, #loc95])
#loc153 = loc(fused[#loc96, #loc95])
#loc154 = loc(fused[#loc98, #loc97])
#loc155 = loc(fused[#loc100, #loc99])
#loc156 = loc(fused[#loc102, #loc101])
#loc157 = loc(fused[#loc108, #loc109])
