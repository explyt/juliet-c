!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":92:10)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":92:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":92:20)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":92:32)
#loc182 = loc(fused[#loc79, #loc80])
#loc183 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc149)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc150)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc152)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc153)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc155)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc22)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc159)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc160)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc164)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc34)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc165)
    } loc(#loc163)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc150)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc168)
      %12 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc150)
      cir.copy %12 to %9 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc150)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
      %14 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc41)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
      cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc169)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc46)
        cir.store %21, %10 : !u64i, !cir.ptr<!u64i> loc(#loc171)
        cir.for : cond {
          %22 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc50)
          %26 = cir.binop(add, %23, %25) : !u64i loc(#loc172)
          %27 = cir.cmp(lt, %22, %26) : !u64i, !cir.bool loc(#loc173)
          cir.condition(%27) loc(#loc51)
        } body {
          cir.scope {
            %22 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc53)
            %23 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc54)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc54)
            %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc54)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc57)
            cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc175)
          } loc(#loc174)
          cir.yield loc(#loc45)
        } step {
          %22 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc59)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc60)
          cir.store %23, %10 : !u64i, !cir.ptr<!u64i> loc(#loc176)
          cir.yield loc(#loc170)
        } loc(#loc170)
      } loc(#loc170)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    } loc(#loc166)
    cir.return loc(#loc16)
  } loc(#loc156)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc179)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %17 : !s32i loc(#loc186)
  } loc(#loc181)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc104)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc104)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc104)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc191)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc118)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
      } loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %11 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc149)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc199)
      %14 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc149)
      cir.copy %14 to %11 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc149)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc124)
      %16 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc125)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc124)
      cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc200)
      cir.scope {
        %22 = cir.const #cir.int<0> : !s32i loc(#loc130)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc130)
        cir.store %23, %12 : !u64i, !cir.ptr<!u64i> loc(#loc202)
        cir.for : cond {
          %24 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc132)
          %25 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc134)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc134)
          %28 = cir.binop(add, %25, %27) : !u64i loc(#loc203)
          %29 = cir.cmp(lt, %24, %28) : !u64i, !cir.bool loc(#loc204)
          cir.condition(%29) loc(#loc135)
        } body {
          cir.scope {
            %24 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %25 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc138)
            %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc138)
            %27 = cir.load %26 : !cir.ptr<!s8i>, !s8i loc(#loc138)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %29 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc206)
          } loc(#loc205)
          cir.yield loc(#loc129)
        } step {
          %24 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc143)
          %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc144)
          cir.store %25, %12 : !u64i, !cir.ptr<!u64i> loc(#loc207)
          cir.yield loc(#loc201)
        } loc(#loc201)
      } loc(#loc201)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc146)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc147)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc147)
    } loc(#loc197)
    cir.return loc(#loc98)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":63:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":63:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":36:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":36:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":48:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":30:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":31:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:41)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:42)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":33:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":34:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":35:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":47:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":37:16)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":37:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":38:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":38:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":38:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":38:34)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":44:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:21)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:25)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:37)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:23)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":42:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:30)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:23)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:19)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":43:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:41)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":41:40)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":45:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":45:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":46:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":46:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":77:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":80:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":79:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":79:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":97:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":99:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":102:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":104:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":92:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":107:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":93:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":95:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":95:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":95:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":97:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":98:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":98:67)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":99:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":102:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":103:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":103:66)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":104:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":106:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":106:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":55:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":75:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":57:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":57:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":58:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":58:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:34)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:45)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:46)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":60:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:23)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:30)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":61:29)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":62:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":74:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":64:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":64:16)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":64:19)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":65:21)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":65:28)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":65:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":65:34)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":71:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:18)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:14)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:21)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:25)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:37)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:23)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":69:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:30)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:23)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:18)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":70:31)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:41)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":68:40)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":72:19)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":72:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":73:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_01.c":73:14)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc20, #loc19])
#loc159 = loc(fused[#loc23, #loc24])
#loc160 = loc(fused[#loc22, #loc24])
#loc161 = loc(fused[#loc21, #loc25])
#loc162 = loc(fused[#loc26, #loc25])
#loc163 = loc(fused[#loc27, #loc28])
#loc164 = loc(fused[#loc29, #loc30])
#loc165 = loc(fused[#loc31, #loc28])
#loc166 = loc(fused[#loc35, #loc36])
#loc167 = loc(fused[#loc37, #loc38])
#loc168 = loc(fused[#loc37, #loc39])
#loc169 = loc(fused[#loc42, #loc43])
#loc170 = loc(fused[#loc44, #loc45])
#loc171 = loc(fused[#loc47, #loc46])
#loc172 = loc(fused[#loc49, #loc50])
#loc173 = loc(fused[#loc48, #loc50])
#loc174 = loc(fused[#loc52, #loc45])
#loc175 = loc(fused[#loc55, #loc58])
#loc176 = loc(fused[#loc60, #loc59])
#loc177 = loc(fused[#loc65, #loc66])
#loc178 = loc(fused[#loc67, #loc68])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc71, #loc72])
#loc181 = loc(fused[#loc77, #loc78])
#loc184 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc92, #loc93])
#loc186 = loc(fused[#loc96, #loc95])
#loc187 = loc(fused[#loc97, #loc98])
#loc188 = loc(fused[#loc99, #loc100])
#loc189 = loc(fused[#loc102, #loc101])
#loc190 = loc(fused[#loc106, #loc107])
#loc191 = loc(fused[#loc108, #loc107])
#loc192 = loc(fused[#loc103, #loc109])
#loc193 = loc(fused[#loc110, #loc109])
#loc194 = loc(fused[#loc111, #loc112])
#loc195 = loc(fused[#loc113, #loc114])
#loc196 = loc(fused[#loc115, #loc112])
#loc197 = loc(fused[#loc119, #loc120])
#loc198 = loc(fused[#loc121, #loc122])
#loc199 = loc(fused[#loc121, #loc123])
#loc200 = loc(fused[#loc126, #loc127])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc131, #loc130])
#loc203 = loc(fused[#loc133, #loc134])
#loc204 = loc(fused[#loc132, #loc134])
#loc205 = loc(fused[#loc136, #loc129])
#loc206 = loc(fused[#loc139, #loc142])
#loc207 = loc(fused[#loc144, #loc143])
