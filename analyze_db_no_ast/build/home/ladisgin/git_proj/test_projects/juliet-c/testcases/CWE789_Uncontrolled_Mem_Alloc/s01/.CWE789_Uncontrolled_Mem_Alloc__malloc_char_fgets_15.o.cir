!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc393)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc394)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc395)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc396)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc397)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc398)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc399)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc17)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc400)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc402)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc25)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc403)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc406)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc406)
          cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc406)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc36)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc37)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc37)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc37)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc37)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc37)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc37)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc394)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc408)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc41)
            cir.if %21 {
              %22 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc45)
              %23 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc46)
              %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc48)
              %26 = cir.call @strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc45)
              cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc410)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc51)
            } loc(#loc409)
          } loc(#loc407)
        } loc(#loc405)
        cir.break loc(#loc52)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        cir.break loc(#loc54)
      }
      ] loc(#loc27)
    } loc(#loc404)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc57)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc413)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc415)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc416)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc67)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc71)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc418)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc419)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc420)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc421)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc423)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc81)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc83)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc85)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
                } loc(#loc424)
              } loc(#loc422)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc86)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc17)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc17)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc89)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc90)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc20)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
            } loc(#loc417)
          } loc(#loc414)
        } loc(#loc412)
        cir.break loc(#loc93)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc95)
        cir.break loc(#loc96)
      }
      ] loc(#loc55)
    } loc(#loc411)
    cir.return loc(#loc22)
  } loc(#loc401)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc426)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc427)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    cir.return loc(#loc98)
  } loc(#loc425)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc431)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc112)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc432)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc116)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc435)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc435)
          cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc435)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc123)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc124)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc124)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc124)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc124)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc124)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc124)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc124)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc124)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc394)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc437)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc128)
            cir.if %21 {
              %22 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc132)
              %23 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc133)
              %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %26 = cir.call @strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc132)
              cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc439)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc438)
          } loc(#loc436)
        } loc(#loc434)
        cir.break loc(#loc140)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc141)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc141)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc142)
        cir.break loc(#loc143)
      }
      ] loc(#loc114)
    } loc(#loc433)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc146)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc148)
        cir.break loc(#loc149)
      },
      case (default) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc442)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc444)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc445)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc159)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc161)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc162)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc162)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc446)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc163)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc160)
                cir.yield %16 : !cir.bool loc(#loc160)
              }, false {
                %16 = cir.const #false loc(#loc160)
                cir.yield %16 : !cir.bool loc(#loc160)
              }) : (!cir.bool) -> !cir.bool loc(#loc160)
              cir.yield %15 : !cir.bool loc(#loc160)
            }, false {
              %10 = cir.const #false loc(#loc160)
              cir.yield %10 : !cir.bool loc(#loc160)
            }) : (!cir.bool) -> !cir.bool loc(#loc160)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc167)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc168)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc448)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc449)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc167)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc450)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc451)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc453)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc177)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc179)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc180)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc181)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
                } loc(#loc454)
              } loc(#loc452)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc182)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc184)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc184)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc186)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc187)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc188)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc107)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc107)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc189)
            } loc(#loc447)
          } loc(#loc443)
        } loc(#loc441)
        cir.break loc(#loc190)
      }
      ] loc(#loc144)
    } loc(#loc440)
    cir.return loc(#loc109)
  } loc(#loc430)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc456)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc195)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc457)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc199)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc460)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc460)
          cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc460)
          cir.scope {
            %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc206)
            %7 = cir.const #cir.int<3> : !s32i loc(#loc207)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc207)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc207)
            %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc207)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc207)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc207)
            %13 = cir.binop(add, %10, %12) : !u64i loc(#loc207)
            %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc207)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc394)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
            %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc209)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
            %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc462)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc211)
            cir.if %21 {
              %22 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc215)
              %23 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc216)
              %24 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc218)
              %26 = cir.call @strtoul(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc215)
              cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc464)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc221)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc221)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc222)
            } loc(#loc463)
          } loc(#loc461)
        } loc(#loc459)
        cir.break loc(#loc223)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc224)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc224)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc225)
        cir.break loc(#loc226)
      }
      ] loc(#loc197)
    } loc(#loc458)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc229)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc467)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc236)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc469)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc470)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc239)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc241)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc242)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc242)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc471)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc243)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc240)
                cir.yield %16 : !cir.bool loc(#loc240)
              }, false {
                %16 = cir.const #false loc(#loc240)
                cir.yield %16 : !cir.bool loc(#loc240)
              }) : (!cir.bool) -> !cir.bool loc(#loc240)
              cir.yield %15 : !cir.bool loc(#loc240)
            }, false {
              %10 = cir.const #false loc(#loc240)
              cir.yield %10 : !cir.bool loc(#loc240)
            }) : (!cir.bool) -> !cir.bool loc(#loc240)
            cir.if %9 {
              %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc247)
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc248)
              %12 = cir.const #cir.int<1> : !u64i loc(#loc473)
              %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc474)
              %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc247)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc475)
              cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc476)
              cir.scope {
                %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc255)
                %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc256)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
                %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc478)
                %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc257)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc260)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc261)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
                } loc(#loc479)
              } loc(#loc477)
              %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc262)
              %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc264)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc264)
              %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc262)
              %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc266)
              %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc267)
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc268)
              cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc267)
            } else {
              %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc269)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc269)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc270)
            } loc(#loc472)
          } loc(#loc468)
        } loc(#loc466)
        cir.break loc(#loc271)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc272)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc272)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc273)
        cir.break loc(#loc274)
      }
      ] loc(#loc227)
    } loc(#loc465)
    cir.return loc(#loc192)
  } loc(#loc455)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc481)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc279)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc279)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc482)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc283)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc284)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc284)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc285)
        cir.break loc(#loc286)
      },
      case (default) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc287)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc287)
        cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc484)
        cir.break loc(#loc289)
      }
      ] loc(#loc281)
    } loc(#loc483)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc292)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc487)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc299)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc489)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc490)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc302)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc306)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc307)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc492)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc493)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc306)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc494)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc495)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc314)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc315)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc315)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc497)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc316)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc318)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc319)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc320)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc318)
                } loc(#loc498)
              } loc(#loc496)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc321)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc322)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc323)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc323)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc321)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc325)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc326)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc327)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc327)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc326)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc328)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc328)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc329)
            } loc(#loc491)
          } loc(#loc488)
        } loc(#loc486)
        cir.break loc(#loc330)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc331)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc331)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc332)
        cir.break loc(#loc333)
      }
      ] loc(#loc290)
    } loc(#loc485)
    cir.return loc(#loc276)
  } loc(#loc480)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc500)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc338)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc338)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc501)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc342)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.const #cir.int<20> : !s32i loc(#loc343)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc343)
        cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc503)
        cir.break loc(#loc345)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc346)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc346)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc347)
        cir.break loc(#loc348)
      }
      ] loc(#loc340)
    } loc(#loc502)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc351)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc506)
          cir.scope {
            %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc358)
            %6 = cir.const #cir.int<5> : !u64i loc(#loc508)
            %7 = cir.cmp(gt, %5, %6) : !u64i, !s32i loc(#loc509)
            %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc361)
            cir.if %8 {
              %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc365)
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc366)
              %11 = cir.const #cir.int<1> : !u64i loc(#loc511)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc512)
              %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc365)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc513)
              cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc514)
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc373)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc374)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc374)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc516)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc375)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc377)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc378)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc379)
                  cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc377)
                } loc(#loc517)
              } loc(#loc515)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc380)
              %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc381)
              %17 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc382)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc382)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc380)
              %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc383)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc384)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc385)
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc386)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc386)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc385)
            } else {
              %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc387)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc387)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc388)
            } loc(#loc510)
          } loc(#loc507)
        } loc(#loc505)
        cir.break loc(#loc389)
      },
      case (default) {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc390)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc390)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc391)
        cir.break loc(#loc392)
      }
      ] loc(#loc349)
    } loc(#loc504)
    cir.return loc(#loc335)
  } loc(#loc499)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":48:23)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":54:19)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("/usr/include/string.h":141:1)
#loc16 = loc("/usr/include/string.h":142:14)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:30)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":76:23)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":30:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":85:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":32:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":32:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":34:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":34:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":35:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":56:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":35:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":38:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":50:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":39:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":39:45)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":49:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:19)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:32)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:49)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:59)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:56)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":42:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":45:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":47:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:20)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:28)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:47)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:48)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":48:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":51:5)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":54:9)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":55:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":57:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":84:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":57:12)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":60:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":78:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":61:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":61:16)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":77:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:39)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:18)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":66:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":73:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":75:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:32)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:39)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:44)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:55)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:56)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:45)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:29)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:26)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:35)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:36)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:42)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:41)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:20)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":71:23)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":71:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":72:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":72:18)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":76:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":79:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":82:19)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":82:9)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":83:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":301:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":307:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":303:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":303:14)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":304:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":304:14)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":305:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":305:14)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":306:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":306:14)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":142:23)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":92:1)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":147:1)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":94:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":94:12)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":96:12)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":96:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":97:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":118:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":97:12)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":100:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":112:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":101:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":101:45)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":111:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:19)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:32)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:49)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:59)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:56)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":104:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":107:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":109:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:20)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:28)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:41)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:47)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:48)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":110:23)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":110:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":113:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":116:19)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":116:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":117:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":119:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":146:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":119:12)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":123:19)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":123:9)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":124:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":126:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":144:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":127:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":127:16)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:9)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":143:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:20)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:39)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:18)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:41)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:44)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:51)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:49)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":132:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":139:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":141:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:32)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:39)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:44)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:55)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:56)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:45)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:17)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:29)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:26)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:35)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:36)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:42)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:41)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:20)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:30)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":137:23)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":137:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":138:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":138:18)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":142:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":145:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":150:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":205:1)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":152:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":152:12)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":154:12)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":154:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":155:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":176:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":155:12)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":158:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":170:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":159:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":159:45)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:9)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":169:9)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:19)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:32)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:49)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:59)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:56)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":162:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":165:9)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":167:9)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:20)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:28)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:41)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:47)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:13)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:48)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":168:23)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":168:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":171:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":174:19)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":174:9)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":175:9)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":177:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":204:5)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":177:12)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":180:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":198:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":181:9)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":181:16)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":197:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:20)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:39)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:18)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:41)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:44)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:51)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:49)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":186:9)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":193:9)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":195:9)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:32)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:39)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:44)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:55)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:56)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:13)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:45)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:29)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:26)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:35)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:36)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:42)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:41)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:20)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:30)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":191:23)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":191:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":192:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":192:18)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":196:23)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":196:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":199:5)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":202:19)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":202:9)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":203:9)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":208:1)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":252:1)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":210:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":210:12)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":212:12)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":212:5)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":213:5)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":223:5)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":213:12)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":217:19)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":217:9)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":218:9)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":221:16)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":221:9)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":222:9)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":224:5)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":251:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":224:12)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":227:5)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":245:5)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":228:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":228:16)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:9)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":244:9)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:13)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:20)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:39)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:18)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":233:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":240:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":242:9)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:32)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:39)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:44)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:55)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:56)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:13)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:45)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:29)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:26)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:35)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:36)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:42)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:41)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:13)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:20)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:30)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":238:23)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":238:13)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":239:13)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":239:18)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":243:23)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":243:13)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":246:5)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":249:19)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":249:9)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":250:9)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":255:1)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":299:1)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":257:5)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":257:12)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":259:12)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":259:5)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":260:5)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":270:5)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":260:12)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":264:16)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":264:9)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":265:9)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":268:19)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":268:9)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":269:9)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":271:5)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":298:5)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":271:12)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":274:5)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":292:5)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":275:9)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":275:16)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:9)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":291:9)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:13)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:20)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:39)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:18)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":280:9)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":287:9)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":289:9)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:32)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:39)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:44)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:55)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:56)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:13)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:13)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:45)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:17)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:29)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:26)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:35)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:36)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:42)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:41)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:13)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:20)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:30)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":285:23)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":285:13)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":286:13)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":286:18)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":290:23)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":290:13)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":293:5)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":296:19)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":296:9)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":297:9)
#loc393 = loc(fused[#loc1, #loc2])
#loc394 = loc(fused[#loc3, #loc4])
#loc395 = loc(fused[#loc5, #loc6])
#loc396 = loc(fused[#loc7, #loc8])
#loc397 = loc(fused[#loc11, #loc12])
#loc398 = loc(fused[#loc13, #loc14])
#loc399 = loc(fused[#loc15, #loc16])
#loc400 = loc(fused[#loc18, #loc19])
#loc401 = loc(fused[#loc21, #loc22])
#loc402 = loc(fused[#loc23, #loc24])
#loc403 = loc(fused[#loc26, #loc25])
#loc404 = loc(fused[#loc27, #loc28])
#loc405 = loc(fused[#loc30, #loc31])
#loc406 = loc(fused[#loc32, #loc33])
#loc407 = loc(fused[#loc34, #loc35])
#loc408 = loc(fused[#loc39, #loc40])
#loc409 = loc(fused[#loc42, #loc43, #loc44, #loc35])
#loc410 = loc(fused[#loc49, #loc50])
#loc411 = loc(fused[#loc55, #loc56])
#loc412 = loc(fused[#loc58, #loc59])
#loc413 = loc(fused[#loc60, #loc61])
#loc414 = loc(fused[#loc62, #loc63])
#loc415 = loc(fused[#loc65, #loc66])
#loc416 = loc(fused[#loc64, #loc66])
#loc417 = loc(fused[#loc68, #loc69, #loc70, #loc63])
#loc418 = loc(fused[#loc73, #loc74])
#loc419 = loc(fused[#loc72, #loc74])
#loc420 = loc(fused[#loc71, #loc75])
#loc421 = loc(fused[#loc76, #loc75])
#loc422 = loc(fused[#loc77, #loc78])
#loc423 = loc(fused[#loc79, #loc80])
#loc424 = loc(fused[#loc82, #loc78])
#loc425 = loc(fused[#loc97, #loc98])
#loc426 = loc(fused[#loc99, #loc100])
#loc427 = loc(fused[#loc101, #loc102])
#loc428 = loc(fused[#loc103, #loc104])
#loc429 = loc(fused[#loc105, #loc106])
#loc430 = loc(fused[#loc108, #loc109])
#loc431 = loc(fused[#loc110, #loc111])
#loc432 = loc(fused[#loc113, #loc112])
#loc433 = loc(fused[#loc114, #loc115])
#loc434 = loc(fused[#loc117, #loc118])
#loc435 = loc(fused[#loc119, #loc120])
#loc436 = loc(fused[#loc121, #loc122])
#loc437 = loc(fused[#loc126, #loc127])
#loc438 = loc(fused[#loc129, #loc130, #loc131, #loc122])
#loc439 = loc(fused[#loc136, #loc137])
#loc440 = loc(fused[#loc144, #loc145])
#loc441 = loc(fused[#loc150, #loc151])
#loc442 = loc(fused[#loc152, #loc153])
#loc443 = loc(fused[#loc154, #loc155])
#loc444 = loc(fused[#loc157, #loc158])
#loc445 = loc(fused[#loc156, #loc158])
#loc446 = loc(fused[#loc161, #loc162])
#loc447 = loc(fused[#loc164, #loc165, #loc166, #loc155])
#loc448 = loc(fused[#loc169, #loc170])
#loc449 = loc(fused[#loc168, #loc170])
#loc450 = loc(fused[#loc167, #loc171])
#loc451 = loc(fused[#loc172, #loc171])
#loc452 = loc(fused[#loc173, #loc174])
#loc453 = loc(fused[#loc175, #loc176])
#loc454 = loc(fused[#loc178, #loc174])
#loc455 = loc(fused[#loc191, #loc192])
#loc456 = loc(fused[#loc193, #loc194])
#loc457 = loc(fused[#loc196, #loc195])
#loc458 = loc(fused[#loc197, #loc198])
#loc459 = loc(fused[#loc200, #loc201])
#loc460 = loc(fused[#loc202, #loc203])
#loc461 = loc(fused[#loc204, #loc205])
#loc462 = loc(fused[#loc209, #loc210])
#loc463 = loc(fused[#loc212, #loc213, #loc214, #loc205])
#loc464 = loc(fused[#loc219, #loc220])
#loc465 = loc(fused[#loc227, #loc228])
#loc466 = loc(fused[#loc230, #loc231])
#loc467 = loc(fused[#loc232, #loc233])
#loc468 = loc(fused[#loc234, #loc235])
#loc469 = loc(fused[#loc237, #loc238])
#loc470 = loc(fused[#loc236, #loc238])
#loc471 = loc(fused[#loc241, #loc242])
#loc472 = loc(fused[#loc244, #loc245, #loc246, #loc235])
#loc473 = loc(fused[#loc249, #loc250])
#loc474 = loc(fused[#loc248, #loc250])
#loc475 = loc(fused[#loc247, #loc251])
#loc476 = loc(fused[#loc252, #loc251])
#loc477 = loc(fused[#loc253, #loc254])
#loc478 = loc(fused[#loc255, #loc256])
#loc479 = loc(fused[#loc258, #loc254])
#loc480 = loc(fused[#loc275, #loc276])
#loc481 = loc(fused[#loc277, #loc278])
#loc482 = loc(fused[#loc280, #loc279])
#loc483 = loc(fused[#loc281, #loc282])
#loc484 = loc(fused[#loc288, #loc287])
#loc485 = loc(fused[#loc290, #loc291])
#loc486 = loc(fused[#loc293, #loc294])
#loc487 = loc(fused[#loc295, #loc296])
#loc488 = loc(fused[#loc297, #loc298])
#loc489 = loc(fused[#loc300, #loc301])
#loc490 = loc(fused[#loc299, #loc301])
#loc491 = loc(fused[#loc303, #loc304, #loc305, #loc298])
#loc492 = loc(fused[#loc308, #loc309])
#loc493 = loc(fused[#loc307, #loc309])
#loc494 = loc(fused[#loc306, #loc310])
#loc495 = loc(fused[#loc311, #loc310])
#loc496 = loc(fused[#loc312, #loc313])
#loc497 = loc(fused[#loc314, #loc315])
#loc498 = loc(fused[#loc317, #loc313])
#loc499 = loc(fused[#loc334, #loc335])
#loc500 = loc(fused[#loc336, #loc337])
#loc501 = loc(fused[#loc339, #loc338])
#loc502 = loc(fused[#loc340, #loc341])
#loc503 = loc(fused[#loc344, #loc343])
#loc504 = loc(fused[#loc349, #loc350])
#loc505 = loc(fused[#loc352, #loc353])
#loc506 = loc(fused[#loc354, #loc355])
#loc507 = loc(fused[#loc356, #loc357])
#loc508 = loc(fused[#loc359, #loc360])
#loc509 = loc(fused[#loc358, #loc360])
#loc510 = loc(fused[#loc362, #loc363, #loc364, #loc357])
#loc511 = loc(fused[#loc367, #loc368])
#loc512 = loc(fused[#loc366, #loc368])
#loc513 = loc(fused[#loc365, #loc369])
#loc514 = loc(fused[#loc370, #loc369])
#loc515 = loc(fused[#loc371, #loc372])
#loc516 = loc(fused[#loc373, #loc374])
#loc517 = loc(fused[#loc376, #loc372])
