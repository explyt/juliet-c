!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":24:16)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":24:21)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":37:20)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":37:25)
#loc18 = loc(fused[#loc3, #loc4])
#loc22 = loc(fused[#loc12, #loc13])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_629badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc18)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<2147483647> : !s32i loc(#loc6)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc7)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc19)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc19)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.return loc(#loc2)
  } loc(#loc17)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_6213goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc22)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc15)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc23)
    cir.return loc(#loc11)
  } loc(#loc21)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":24:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":30:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":25:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":27:12)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":27:22)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":27:26)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":27:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":37:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":41:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":38:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":40:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_62b.cpp":40:5)
#loc17 = loc(fused[#loc1, #loc2])
#loc19 = loc(fused[#loc6, #loc7])
#loc20 = loc(fused[#loc9, #loc8])
#loc21 = loc(fused[#loc10, #loc11])
#loc23 = loc(fused[#loc16, #loc15])
