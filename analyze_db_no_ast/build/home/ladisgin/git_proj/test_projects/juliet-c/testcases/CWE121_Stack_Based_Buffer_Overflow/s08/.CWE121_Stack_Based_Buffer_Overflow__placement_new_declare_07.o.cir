!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc44 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @printIntLine(!s32i) loc(#loc188)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc191)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc192)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc194)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc19)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc198)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc201)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc202)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc202)
          cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc29)
          cir.store %11, %7 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc201)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc32)
          %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc203)
          %15 = cir.const #cir.int<10> : !s32i loc(#loc35)
          %16 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc204)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
          %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc40)
        } loc(#loc200)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc7)
  } loc(#loc189)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc44)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc44)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc44)
    cir.return loc(#loc44)
  } loc(#loc44)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc208)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc209)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc211)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc58)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc215)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc218)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc219)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc219)
          cir.call @_ZN11OneIntClassC2Ev(%11) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc71)
          cir.store %11, %7 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc218)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc74)
          %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc75)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc76)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc77)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc76)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc78)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc79)
        } loc(#loc217)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc46)
  } loc(#loc206)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc223)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc224)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc91)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc226)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc93)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc98)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc230)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc233)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc234)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc234)
          cir.call @_ZN11OneIntClassC2Ev(%11) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc103)
          cir.store %11, %7 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc233)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc106)
          %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc107)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc76)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc235)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc108)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc76)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc110)
        } loc(#loc232)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc81)
  } loc(#loc221)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc238)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc239)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc241)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc126)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc126)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc127)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc128)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc133)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc245)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc248)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc249)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc249)
          cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc138)
          cir.store %11, %7 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc248)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc141)
          %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc142)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc250)
          %15 = cir.const #cir.int<10> : !s32i loc(#loc143)
          %16 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc251)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
          %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc147)
        } loc(#loc247)
      } loc(#loc246)
    } loc(#loc244)
    cir.return loc(#loc112)
  } loc(#loc236)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc254)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc255)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc159)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc257)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc161)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
      } loc(#loc258)
    } loc(#loc256)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc187)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc165)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc166)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc261)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc264)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc265)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc265)
          cir.call @_ZN12TwoIntsClassC2Ev(%11) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc171)
          cir.store %11, %7 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc264)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc174)
          %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc175)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc266)
          %15 = cir.const #cir.int<10> : !s32i loc(#loc176)
          %16 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc177)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc178)
          %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc180)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc149)
  } loc(#loc252)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodB2G1Ev() : () -> () loc(#loc183)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodB2G2Ev() : () -> () loc(#loc184)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodG2B1Ev() : () -> () loc(#loc185)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07L8goodG2B2Ev() : () -> () loc(#loc186)
    cir.return loc(#loc182)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":23:25)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":30:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":56:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":32:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":32:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":33:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":33:43)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":34:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":34:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":35:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":39:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":35:8)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":35:20)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":38:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":38:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":40:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":55:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":40:8)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":40:20)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":42:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":54:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":48:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":48:49)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":48:39)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":48:43)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":50:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":50:13)
#loc34 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":51:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":51:13)
#loc37 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":52:26)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":52:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":52:13)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":76:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":63:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":92:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":65:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":65:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":66:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":66:43)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":67:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":67:45)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":68:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":72:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":68:8)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":68:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":69:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":71:16)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":71:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":73:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":91:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":73:8)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":73:20)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":74:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":77:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":79:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":76:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":80:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":90:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":86:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":86:48)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":86:38)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":86:42)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":88:32)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":88:13)
#loc76 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":89:26)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":89:36)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":89:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":95:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":119:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":97:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":97:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":98:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":98:43)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":99:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":99:45)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":100:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":104:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":100:8)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":100:20)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":101:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":103:16)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":103:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":105:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":118:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":105:8)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":105:20)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":106:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":107:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":117:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":113:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":113:48)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":113:38)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":113:42)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":115:32)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":115:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":116:26)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":116:36)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":116:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":122:1)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":153:1)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":124:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":124:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":125:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":125:43)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":126:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":126:45)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":127:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":136:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":127:8)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":127:20)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":128:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":131:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":133:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":130:19)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":130:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":135:16)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":135:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":137:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":152:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":137:8)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":137:20)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":138:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":139:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":151:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":145:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":145:49)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":145:39)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":145:43)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":147:32)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":147:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":148:32)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":148:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":149:26)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":149:36)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":149:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":156:1)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":182:1)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":158:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":158:12)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":159:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":159:43)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":160:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":160:45)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":161:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":165:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":161:8)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":161:20)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":162:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":164:16)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":164:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":166:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":181:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":166:8)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":166:20)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":167:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":168:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":180:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":174:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":174:49)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":174:39)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":174:43)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":176:32)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":176:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":177:32)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":177:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":178:26)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":178:36)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":178:13)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":184:1)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":190:1)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":186:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":187:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":188:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_07.cpp":189:5)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc4, #loc5])
#loc189 = loc(fused[#loc6, #loc7])
#loc190 = loc(fused[#loc8, #loc9])
#loc191 = loc(fused[#loc10, #loc11])
#loc192 = loc(fused[#loc12, #loc13])
#loc193 = loc(fused[#loc14, #loc15])
#loc194 = loc(fused[#loc16, #loc17])
#loc195 = loc(fused[#loc18, #loc15])
#loc196 = loc(fused[#loc20, #loc19])
#loc197 = loc(fused[#loc21, #loc22])
#loc198 = loc(fused[#loc23, #loc24])
#loc199 = loc(fused[#loc25, #loc22])
#loc200 = loc(fused[#loc26, #loc27])
#loc201 = loc(fused[#loc28, #loc29])
#loc202 = loc(fused[#loc30, #loc29])
#loc203 = loc(fused[#loc33, #loc32])
#loc204 = loc(fused[#loc36, #loc35])
#loc205 = loc(fused[#loc41, #loc42])
#loc206 = loc(fused[#loc45, #loc46])
#loc207 = loc(fused[#loc47, #loc48])
#loc208 = loc(fused[#loc49, #loc50])
#loc209 = loc(fused[#loc51, #loc52])
#loc210 = loc(fused[#loc53, #loc54])
#loc211 = loc(fused[#loc55, #loc56])
#loc212 = loc(fused[#loc57, #loc54])
#loc213 = loc(fused[#loc59, #loc58])
#loc214 = loc(fused[#loc60, #loc61])
#loc215 = loc(fused[#loc62, #loc63])
#loc216 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc217 = loc(fused[#loc68, #loc69])
#loc218 = loc(fused[#loc70, #loc71])
#loc219 = loc(fused[#loc72, #loc71])
#loc220 = loc(fused[#loc75, #loc74])
#loc221 = loc(fused[#loc80, #loc81])
#loc222 = loc(fused[#loc82, #loc83])
#loc223 = loc(fused[#loc84, #loc85])
#loc224 = loc(fused[#loc86, #loc87])
#loc225 = loc(fused[#loc88, #loc89])
#loc226 = loc(fused[#loc90, #loc91])
#loc227 = loc(fused[#loc92, #loc89])
#loc228 = loc(fused[#loc94, #loc93])
#loc229 = loc(fused[#loc95, #loc96])
#loc230 = loc(fused[#loc97, #loc98])
#loc231 = loc(fused[#loc99, #loc96])
#loc232 = loc(fused[#loc100, #loc101])
#loc233 = loc(fused[#loc102, #loc103])
#loc234 = loc(fused[#loc104, #loc103])
#loc235 = loc(fused[#loc107, #loc106])
#loc236 = loc(fused[#loc111, #loc112])
#loc237 = loc(fused[#loc113, #loc114])
#loc238 = loc(fused[#loc115, #loc116])
#loc239 = loc(fused[#loc117, #loc118])
#loc240 = loc(fused[#loc119, #loc120])
#loc241 = loc(fused[#loc121, #loc122])
#loc242 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc243 = loc(fused[#loc129, #loc128])
#loc244 = loc(fused[#loc130, #loc131])
#loc245 = loc(fused[#loc132, #loc133])
#loc246 = loc(fused[#loc134, #loc131])
#loc247 = loc(fused[#loc135, #loc136])
#loc248 = loc(fused[#loc137, #loc138])
#loc249 = loc(fused[#loc139, #loc138])
#loc250 = loc(fused[#loc142, #loc141])
#loc251 = loc(fused[#loc144, #loc143])
#loc252 = loc(fused[#loc148, #loc149])
#loc253 = loc(fused[#loc150, #loc151])
#loc254 = loc(fused[#loc152, #loc153])
#loc255 = loc(fused[#loc154, #loc155])
#loc256 = loc(fused[#loc156, #loc157])
#loc257 = loc(fused[#loc158, #loc159])
#loc258 = loc(fused[#loc160, #loc157])
#loc259 = loc(fused[#loc162, #loc161])
#loc260 = loc(fused[#loc163, #loc164])
#loc261 = loc(fused[#loc165, #loc166])
#loc262 = loc(fused[#loc167, #loc164])
#loc263 = loc(fused[#loc168, #loc169])
#loc264 = loc(fused[#loc170, #loc171])
#loc265 = loc(fused[#loc172, #loc171])
#loc266 = loc(fused[#loc175, #loc174])
#loc267 = loc(fused[#loc177, #loc176])
#loc268 = loc(fused[#loc181, #loc182])
