!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc83)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc83)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc19)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc92)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc93)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc19)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
          %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc94)
          cir.if %14 {
            %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc28)
          } loc(#loc95)
        } loc(#loc90)
      } loc(#loc89)
    } loc(#loc88)
    cir.return loc(#loc12)
  } loc(#loc87)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc98)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc96)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc99)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc42)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } else {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc49)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc50)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc50)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc105)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc106)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc49)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc107)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc108)
          cir.if %13 {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
          } loc(#loc109)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc101)
    cir.return loc(#loc39)
  } loc(#loc100)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc83)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc66)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc70)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc71)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc71)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc115)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc116)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc70)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc117)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc118)
          cir.if %13 {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          } loc(#loc119)
        } loc(#loc113)
      } loc(#loc112)
    } loc(#loc111)
    cir.return loc(#loc63)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":745:1)
#loc4 = loc("/usr/include/stdio.h":746:43)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:28)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":32:23)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":24:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":35:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":26:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":34:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":26:8)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":27:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":33:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:20)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:38)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:49)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:52)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:67)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:70)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":30:80)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":31:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":32:13)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":72:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":76:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":74:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":74:11)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":75:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":75:11)
#loc35 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc36 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":47:19)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":42:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":57:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":44:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":56:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":44:8)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":45:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":48:5)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":50:5)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":47:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:9)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":55:9)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:13)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:28)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:20)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:38)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:49)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:52)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:67)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:70)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:81)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":52:96)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":53:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":54:23)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":54:13)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":60:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":70:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":62:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":69:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":62:8)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":63:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:9)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":68:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:13)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:28)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:20)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:38)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:49)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:52)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:67)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:70)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:81)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":65:96)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":66:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":67:23)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_09.c":67:13)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc8, #loc9])
#loc87 = loc(fused[#loc11, #loc12])
#loc88 = loc(fused[#loc13, #loc14])
#loc89 = loc(fused[#loc16, #loc14])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc20, #loc5])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc23, #loc24])
#loc94 = loc(fused[#loc19, #loc26])
#loc95 = loc(fused[#loc27, #loc18])
#loc96 = loc(fused[#loc29, #loc30])
#loc97 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc33, #loc34])
#loc99 = loc(fused[#loc35, #loc36])
#loc100 = loc(fused[#loc38, #loc39])
#loc101 = loc(fused[#loc40, #loc41])
#loc102 = loc(fused[#loc43, #loc44, #loc45, #loc41])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc51, #loc50])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc57, #loc58])
#loc108 = loc(fused[#loc49, #loc58])
#loc109 = loc(fused[#loc59, #loc48])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc67, #loc65])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc72, #loc71])
#loc115 = loc(fused[#loc73, #loc74])
#loc116 = loc(fused[#loc75, #loc76])
#loc117 = loc(fused[#loc78, #loc79])
#loc118 = loc(fused[#loc70, #loc79])
#loc119 = loc(fused[#loc80, #loc69])
