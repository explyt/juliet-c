!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":25:54)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":25:58)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":55:59)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":55:63)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":80:59)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":80:63)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":100:58)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":100:62)
#true = #cir.bool<true> : !cir.bool
#loc129 = loc(fused[#loc10, #loc11])
#loc139 = loc(fused[#loc38, #loc39])
#loc150 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE127_Buffer_Underread__CWE839_rand_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc125)
  cir.func private @printIntLine(!s32i) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_22_badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc129)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %1 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_22_badGlobal : !cir.ptr<!s32i> loc(#loc125)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc133)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc133)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc133)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
            %7 = cir.const #cir.int<10> : !s32i loc(#loc24)
            %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc135)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc29)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc29)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc30)
            } else {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc31)
            } loc(#loc136)
          } loc(#loc134)
        } loc(#loc132)
      } loc(#loc131)
    } loc(#loc130)
    cir.return loc(#loc9)
  } loc(#loc128)
  cir.global "private" external @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc35)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G1Sink(%arg0: !s32i loc(fused[#loc38, #loc39])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.scope {
      %1 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc137)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc43)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc143)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc143)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc143)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc145)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc58)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc146)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc56)
                cir.yield %14 : !cir.bool loc(#loc56)
              }, false {
                %14 = cir.const #false loc(#loc56)
                cir.yield %14 : !cir.bool loc(#loc56)
              }) : (!cir.bool) -> !cir.bool loc(#loc56)
              cir.yield %13 : !cir.bool loc(#loc56)
            }, false {
              %10 = cir.const #false loc(#loc56)
              cir.yield %10 : !cir.bool loc(#loc56)
            }) : (!cir.bool) -> !cir.bool loc(#loc56)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc64)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc65)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc35)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc35)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc66)
            } loc(#loc147)
          } loc(#loc144)
        } loc(#loc142)
      } loc(#loc141)
    } loc(#loc140)
    cir.return loc(#loc37)
  } loc(#loc138)
  cir.global "private" external @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc148)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G2Sink(%arg0: !s32i loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.scope {
      %1 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc148)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc76)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc154)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc154)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc154)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc156)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc88)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc157)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc86)
                cir.yield %14 : !cir.bool loc(#loc86)
              }, false {
                %14 = cir.const #false loc(#loc86)
                cir.yield %14 : !cir.bool loc(#loc86)
              }) : (!cir.bool) -> !cir.bool loc(#loc86)
              cir.yield %13 : !cir.bool loc(#loc86)
            }, false {
              %10 = cir.const #false loc(#loc86)
              cir.yield %10 : !cir.bool loc(#loc86)
            }) : (!cir.bool) -> !cir.bool loc(#loc86)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc94)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc94)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc95)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc96)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc97)
            } loc(#loc158)
          } loc(#loc155)
        } loc(#loc153)
      } loc(#loc152)
    } loc(#loc151)
    cir.return loc(#loc70)
  } loc(#loc149)
  cir.global "private" external @CWE127_Buffer_Underread__CWE839_rand_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc159)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_22_goodG2BSink(%arg0: !s32i loc(fused[#loc102, #loc103])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.scope {
      %1 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc159)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc107)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc165)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc165)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc165)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %7 = cir.const #cir.int<10> : !s32i loc(#loc116)
            %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc167)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc121)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc121)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc122)
            } else {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc123)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc123)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc124)
            } loc(#loc168)
          } loc(#loc166)
        } loc(#loc164)
      } loc(#loc163)
    } loc(#loc162)
    cir.return loc(#loc101)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_22b.c":0:0)
#loc1 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":23:1)
#loc2 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":23:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":39:27)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":25:1)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":43:1)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":26:1)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":27:5)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":42:5)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":27:8)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":28:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":29:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":41:9)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":30:13)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":30:34)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":33:13)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":40:13)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":33:17)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":33:24)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":34:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":36:13)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":38:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":35:37)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":35:30)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":35:17)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":39:17)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":50:1)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":50:12)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":60:19)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":73:27)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":55:1)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":77:1)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":56:1)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":57:5)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":76:5)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":57:8)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":58:5)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":61:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":63:5)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":60:9)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":64:9)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":75:9)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":65:13)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":65:34)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":74:13)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:17)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:25)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:27)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:30)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:38)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":67:40)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":68:13)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":70:13)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":72:13)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":69:37)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":69:30)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":69:17)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":73:17)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":51:1)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":51:12)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":80:1)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":97:1)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":81:1)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":82:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":96:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":82:8)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":83:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":84:9)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":95:9)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":85:13)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":85:34)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:13)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":94:13)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:17)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:25)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:27)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:30)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:38)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":87:40)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":88:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":90:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":92:13)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":89:37)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":89:30)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":89:17)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":93:27)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":93:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":52:1)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":52:12)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":100:1)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":118:1)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":101:1)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":102:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":117:5)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":102:8)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":103:5)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":104:9)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":116:9)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":105:13)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":105:34)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":108:13)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":115:13)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":108:17)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":108:24)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":109:13)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":111:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":113:13)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":110:37)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":110:30)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":110:17)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":114:27)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_rand_22b.c":114:17)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc8, #loc9])
#loc130 = loc(fused[#loc13, #loc14])
#loc131 = loc(fused[#loc16, #loc14])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc19, #loc20])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc137 = loc(fused[#loc32, #loc33])
#loc138 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc41, #loc42])
#loc141 = loc(fused[#loc44, #loc45, #loc46, #loc42])
#loc142 = loc(fused[#loc48, #loc49])
#loc143 = loc(fused[#loc50, #loc51])
#loc144 = loc(fused[#loc52, #loc53])
#loc145 = loc(fused[#loc54, #loc55])
#loc146 = loc(fused[#loc57, #loc59])
#loc147 = loc(fused[#loc60, #loc61, #loc62, #loc53])
#loc148 = loc(fused[#loc67, #loc68])
#loc149 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc77, #loc75])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc80, #loc81])
#loc155 = loc(fused[#loc82, #loc83])
#loc156 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc87, #loc89])
#loc158 = loc(fused[#loc90, #loc91, #loc92, #loc83])
#loc159 = loc(fused[#loc98, #loc99])
#loc160 = loc(fused[#loc100, #loc101])
#loc162 = loc(fused[#loc105, #loc106])
#loc163 = loc(fused[#loc108, #loc106])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc111, #loc112])
#loc166 = loc(fused[#loc113, #loc114])
#loc167 = loc(fused[#loc115, #loc116])
#loc168 = loc(fused[#loc117, #loc118, #loc119, #loc114])
