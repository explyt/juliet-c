!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":298:10)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":298:14)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":298:20)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":298:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc562 = loc(fused[#loc217, #loc218])
#loc563 = loc(fused[#loc219, #loc220])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc473)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc474)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc475)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc476)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc477)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc478)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc479)
  cir.func private @close(!s32i) -> !s32i loc(#loc480)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc481)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc482)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc484)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc485)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc486)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc487)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc485)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc486)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc487)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc487)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc488)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc490)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc490)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc492)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc493)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc494)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc495)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc496)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc49)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc495)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc496)
        cir.scope {
          cir.do {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc56)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc57)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc58)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
            cir.store %24, %14 : !s32i, !cir.ptr<!s32i> loc(#loc498)
            cir.scope {
              %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc64)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc65)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc500)
              cir.if %78 {
                cir.break loc(#loc67)
              } loc(#loc501)
            } loc(#loc499)
            %25 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc502)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc503)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc504)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc75)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc75)
            %30 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc505)
            %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
            %34 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc506)
            %36 = cir.const #cir.int<27015> : !s32i loc(#loc83)
            %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc83)
            %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
            %39 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc507)
            cir.scope {
              %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %76 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc509)
              %77 = cir.const #cir.int<16> : !u64i loc(#loc510)
              %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc510)
              %79 = cir.call @connect(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc96)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc511)
              cir.if %82 {
                cir.break loc(#loc98)
              } loc(#loc512)
            } loc(#loc508)
            %40 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %41 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            %42 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc102)
            %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc513)
            %45 = cir.const #cir.int<1> : !u64i loc(#loc514)
            %46 = cir.const #cir.int<100> : !s32i loc(#loc107)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc107)
            %48 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc515)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc109)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc516)
            %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc517)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
            %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc112)
            cir.store %56, %11 : !s32i, !cir.ptr<!s32i> loc(#loc518)
            cir.scope {
              %75 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc118)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc520)
              %79 = cir.ternary(%78, true {
                %80 = cir.const #true loc(#loc119)
                cir.yield %80 : !cir.bool loc(#loc119)
              }, false {
                %80 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %81 = cir.const #cir.int<0> : !s32i loc(#loc121)
                %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc521)
                %83 = cir.ternary(%82, true {
                  %84 = cir.const #true loc(#loc119)
                  cir.yield %84 : !cir.bool loc(#loc119)
                }, false {
                  %84 = cir.const #false loc(#loc119)
                  cir.yield %84 : !cir.bool loc(#loc119)
                }) : (!cir.bool) -> !cir.bool loc(#loc119)
                cir.yield %83 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.if %79 {
                cir.break loc(#loc123)
              } loc(#loc522)
            } loc(#loc519)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc124)
            %59 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
            %60 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc126)
            %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc127)
            %63 = cir.const #cir.int<1> : !u64i loc(#loc523)
            %64 = cir.binop(div, %62, %63) : !u64i loc(#loc524)
            %65 = cir.binop(add, %60, %64) : !u64i loc(#loc525)
            %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc130)
            cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc526)
            %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc131)
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
            %69 = cir.const #cir.int<13> : !s32i loc(#loc133)
            %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
            cir.store %70, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc527)
            cir.scope {
              %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc140)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc140)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc530)
              } loc(#loc529)
            } loc(#loc528)
            %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc143)
            %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %73 = cir.const #cir.int<10> : !s32i loc(#loc145)
            %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
            cir.store %74, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc531)
            cir.scope {
              %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc152)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc152)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc534)
              } loc(#loc533)
            } loc(#loc532)
            cir.yield loc(#loc55)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc155)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc155)
            cir.condition(%22) loc(#loc155)
          } loc(#loc497)
        } loc(#loc497)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc159)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc536)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc162)
          } loc(#loc537)
        } loc(#loc535)
      } loc(#loc491)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc538)
    } loc(#loc489)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc540)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc540)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc542)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc543)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc544)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc179)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc179)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc181)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc546)
          cir.if %18 {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc183)
            cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc548)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc187)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc550)
              cir.for : cond {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc551)
                cir.condition(%24) loc(#loc191)
              } body {
                cir.scope {
                  %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                  %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc194)
                  cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                } loc(#loc552)
                cir.yield loc(#loc186)
              } step {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc196)
                cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc554)
                cir.yield loc(#loc549)
              } loc(#loc549)
            } loc(#loc549)
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc197)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc198)
          } loc(#loc547)
        } loc(#loc545)
      } loc(#loc541)
    } loc(#loc539)
    cir.return loc(#loc24)
  } loc(#loc483)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc556)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc201)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc557)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc203)
    cir.return loc(#loc200)
  } loc(#loc555)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc558)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc559)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc560)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc214)
  cir.func @main(%arg0: !s32i loc(fused[#loc217, #loc218]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc219, #loc220])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc562)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc563)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc216)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc221)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc222)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc223)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc223)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc224)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc211)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc564)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_good() : () -> () loc(#loc226)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc212)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc213)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc565)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_32_bad() : () -> () loc(#loc230)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc214)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc214)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc233)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc566)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc566)
    cir.return %17 : !s32i loc(#loc566)
  } loc(#loc561)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc567)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc237)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc569)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc570)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc571)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc572)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc570)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc571)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc572)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc572)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc573)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc575)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc575)
      %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc255)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
      %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc237)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc237)
      %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc255)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc576)
    } loc(#loc574)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc578)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc578)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc580)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc581)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc582)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc273)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc275)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc275)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc273)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc276)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc584)
          cir.if %18 {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc278)
            cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc586)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc282)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc588)
              cir.for : cond {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc284)
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc589)
                cir.condition(%24) loc(#loc286)
              } body {
                cir.scope {
                  %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                  %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc289)
                  cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc591)
                } loc(#loc590)
                cir.yield loc(#loc281)
              } step {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc291)
                cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc592)
                cir.yield loc(#loc587)
              } loc(#loc587)
            } loc(#loc587)
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc293)
          } loc(#loc585)
        } loc(#loc583)
      } loc(#loc579)
    } loc(#loc577)
    cir.return loc(#loc239)
  } loc(#loc568)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc594)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc595)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc596)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc597)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc595)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc596)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc597)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc597)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc304)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc598)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc600)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc600)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc602)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc603)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc604)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc605)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc606)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc320)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc320)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc605)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc323)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc323)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc606)
        cir.scope {
          cir.do {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc327)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc328)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc329)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc330)
            cir.store %24, %14 : !s32i, !cir.ptr<!s32i> loc(#loc608)
            cir.scope {
              %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc335)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc336)
              %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc336)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc610)
              cir.if %78 {
                cir.break loc(#loc338)
              } loc(#loc611)
            } loc(#loc609)
            %25 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc612)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc341)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc613)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc614)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc346)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc346)
            %30 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc615)
            %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc348)
            %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc348)
            %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc349)
            %34 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc616)
            %36 = cir.const #cir.int<27015> : !s32i loc(#loc352)
            %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc352)
            %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc353)
            %39 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc617)
            cir.scope {
              %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc358)
              %76 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc619)
              %77 = cir.const #cir.int<16> : !u64i loc(#loc620)
              %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc620)
              %79 = cir.call @connect(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc363)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc364)
              %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc364)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc621)
              cir.if %82 {
                cir.break loc(#loc366)
              } loc(#loc622)
            } loc(#loc618)
            %40 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc367)
            %41 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc368)
            %42 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc369)
            %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc370)
            %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc623)
            %45 = cir.const #cir.int<1> : !u64i loc(#loc624)
            %46 = cir.const #cir.int<100> : !s32i loc(#loc375)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc375)
            %48 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc376)
            %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc625)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc377)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc377)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc626)
            %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc627)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc379)
            %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc380)
            %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc380)
            cir.store %56, %11 : !s32i, !cir.ptr<!s32i> loc(#loc628)
            cir.scope {
              %75 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %76 = cir.const #cir.int<1> : !s32i loc(#loc386)
              %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc386)
              %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc630)
              %79 = cir.ternary(%78, true {
                %80 = cir.const #true loc(#loc387)
                cir.yield %80 : !cir.bool loc(#loc387)
              }, false {
                %80 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %81 = cir.const #cir.int<0> : !s32i loc(#loc389)
                %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc631)
                %83 = cir.ternary(%82, true {
                  %84 = cir.const #true loc(#loc387)
                  cir.yield %84 : !cir.bool loc(#loc387)
                }, false {
                  %84 = cir.const #false loc(#loc387)
                  cir.yield %84 : !cir.bool loc(#loc387)
                }) : (!cir.bool) -> !cir.bool loc(#loc387)
                cir.yield %83 : !cir.bool loc(#loc387)
              }) : (!cir.bool) -> !cir.bool loc(#loc387)
              cir.if %79 {
                cir.break loc(#loc391)
              } loc(#loc632)
            } loc(#loc629)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc392)
            %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc392)
            %59 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc393)
            %60 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc394)
            %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc395)
            %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc395)
            %63 = cir.const #cir.int<1> : !u64i loc(#loc633)
            %64 = cir.binop(div, %62, %63) : !u64i loc(#loc634)
            %65 = cir.binop(add, %60, %64) : !u64i loc(#loc635)
            %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc398)
            cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc636)
            %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc399)
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc400)
            %69 = cir.const #cir.int<13> : !s32i loc(#loc401)
            %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc399)
            cir.store %70, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc637)
            cir.scope {
              %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc406)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc406)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc408)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc408)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc409)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc640)
              } loc(#loc639)
            } loc(#loc638)
            %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc411)
            %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc412)
            %73 = cir.const #cir.int<10> : !s32i loc(#loc413)
            %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc411)
            cir.store %74, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc641)
            cir.scope {
              %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc418)
              %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc418)
              cir.if %76 {
                %77 = cir.const #cir.int<0> : !s32i loc(#loc420)
                %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc420)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc421)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc644)
              } loc(#loc643)
            } loc(#loc642)
            cir.yield loc(#loc326)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc423)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc423)
            cir.condition(%22) loc(#loc423)
          } loc(#loc607)
        } loc(#loc607)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc426)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc427)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc427)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc646)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc429)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc430)
          } loc(#loc647)
        } loc(#loc645)
      } loc(#loc601)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc431)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc432)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc648)
    } loc(#loc599)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc650)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc438)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc650)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc652)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc653)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc654)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc447)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc448)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc449)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc449)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc447)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc450)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc656)
          cir.if %18 {
            cir.scope {
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc454)
              %20 = cir.const #cir.int<10000> : !s32i loc(#loc455)
              %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc659)
              cir.if %21 {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc457)
                cir.store %22, %11 : !s32i, !cir.ptr<!s32i> loc(#loc661)
                cir.scope {
                  %24 = cir.const #cir.int<0> : !s32i loc(#loc461)
                  cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc663)
                  cir.for : cond {
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc463)
                    %26 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc464)
                    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc664)
                    cir.condition(%27) loc(#loc465)
                  } body {
                    cir.scope {
                      %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc467)
                      %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc468)
                      cir.store %26, %11 : !s32i, !cir.ptr<!s32i> loc(#loc666)
                    } loc(#loc665)
                    cir.yield loc(#loc460)
                  } step {
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc469)
                    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc470)
                    cir.store %26, %9 : !s32i, !cir.ptr<!s32i> loc(#loc667)
                    cir.yield loc(#loc662)
                  } loc(#loc662)
                } loc(#loc662)
                %23 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc471)
                cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc472)
              } loc(#loc660)
            } loc(#loc658)
          } loc(#loc657)
        } loc(#loc655)
      } loc(#loc651)
    } loc(#loc649)
    cir.return loc(#loc295)
  } loc(#loc593)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":85:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":468:1)
#loc19 = loc("/usr/include/stdio.h":468:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":131:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":49:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":144:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":51:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":51:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":52:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":52:25)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":53:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":53:25)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":54:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":54:28)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":55:12)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":55:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":56:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":126:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":57:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":57:24)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":57:23)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":58:9)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":124:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":63:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":63:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":64:13)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":64:32)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":65:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":65:19)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":66:13)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":66:36)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":67:13)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":67:41)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":67:30)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":67:37)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":68:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":113:21)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:40)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:49)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:62)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:33)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":78:73)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":79:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":82:17)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":79:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":79:38)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":80:17)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":81:21)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:24)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:25)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:34)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:37)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:51)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:17)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":83:52)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":84:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":84:17)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":85:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":85:17)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":85:63)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":86:42)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":86:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":86:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":86:50)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":90:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:29)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:62)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:63)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:72)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:86)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:21)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":87:92)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":88:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":89:21)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:35)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:59)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:66)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:64)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:50)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:73)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:76)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:87)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:92)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:98)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:108)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:109)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:112)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:30)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:17)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":94:113)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":98:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:21)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:35)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:48)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:51)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":95:65)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":96:17)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":97:21)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:61)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:17)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:22)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:32)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:45)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:56)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":100:57)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":102:27)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":102:34)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":102:40)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":102:17)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":102:44)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":103:17)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":106:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":103:21)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":104:17)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":105:32)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":105:22)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":105:21)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":107:27)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":107:34)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":107:40)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":107:17)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":107:44)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":108:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":111:17)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":108:21)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":109:17)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":110:32)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":110:22)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":110:21)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":113:20)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":114:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":117:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":114:17)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":114:34)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":115:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":116:30)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":116:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":125:21)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":125:10)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":125:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":127:5)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":143:5)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":128:9)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":128:24)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":128:23)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":129:9)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":142:9)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":130:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":130:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":130:20)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":130:23)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":131:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":141:13)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":131:17)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":131:24)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":131:43)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":132:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":134:31)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":134:17)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":139:17)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:26)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:22)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:29)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:33)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:31)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":136:17)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":138:32)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":138:21)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:37)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":135:36)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":140:30)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":140:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":284:1)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":288:1)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":286:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":286:13)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":287:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":287:13)
#loc205 = loc("/usr/include/stdlib.h":575:1)
#loc206 = loc("/usr/include/stdlib.h":575:41)
#loc207 = loc("/usr/include/time.h":76:1)
#loc208 = loc("/usr/include/time.h":76:38)
#loc209 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc210 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":303:15)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":305:15)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":308:15)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":310:15)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":298:1)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":313:1)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":299:1)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":301:27)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":301:22)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":301:5)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":303:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":304:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":304:66)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":305:5)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":308:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":309:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":309:65)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":310:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":312:12)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":312:5)
#loc235 = loc("/usr/include/string.h":141:1)
#loc236 = loc("/usr/include/string.h":142:14)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":161:22)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":151:1)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":181:1)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":153:5)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":153:12)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":154:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":154:25)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":155:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":155:25)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":156:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":156:28)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":157:12)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":157:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":158:5)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":163:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":159:9)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":159:24)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":159:23)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":161:9)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":161:16)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":162:21)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":162:10)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":162:9)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":164:5)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":180:5)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":165:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":165:24)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":165:23)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":166:9)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":179:9)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":167:13)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":167:17)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":167:20)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":167:23)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":168:13)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":178:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":168:17)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":168:24)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":168:30)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":168:43)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":169:13)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":171:31)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":171:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:17)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":176:17)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:26)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:22)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:29)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:33)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:31)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":173:17)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":175:32)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":175:21)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:37)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":172:36)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":177:30)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":177:17)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":184:1)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":282:1)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":186:5)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":186:12)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":187:5)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":187:25)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":188:5)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":188:25)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":189:5)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":189:28)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":190:12)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":190:5)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":191:5)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":261:5)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":192:9)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":192:24)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":192:23)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":193:9)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":259:9)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":198:13)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":198:17)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":199:13)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":199:32)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":200:13)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":200:19)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":201:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":201:36)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":202:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":202:41)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":202:30)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":202:37)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":203:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":248:21)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:40)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:49)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:62)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:33)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:17)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":213:73)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":214:17)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":217:17)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":214:21)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":214:38)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":215:17)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":216:21)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:24)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:25)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:34)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:37)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:51)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:17)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":218:52)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":219:38)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":219:17)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":220:53)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":220:43)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":220:17)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":220:63)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":221:42)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":221:36)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":221:17)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":221:50)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":225:17)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:29)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:62)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:63)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:72)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:86)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:21)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":222:92)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":223:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":224:21)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:35)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:59)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:66)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:64)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:50)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:73)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:76)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:87)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:92)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:98)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:108)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:109)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:112)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:30)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":229:113)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:17)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":233:17)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:21)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:35)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:48)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:51)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":230:65)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":231:17)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":232:21)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:61)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:17)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:22)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:32)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:45)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:56)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":235:57)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":237:27)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":237:34)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":237:40)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":237:17)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":237:44)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":238:17)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":241:17)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":238:21)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":239:17)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":240:32)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":240:22)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":240:21)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":242:27)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":242:34)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":242:40)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":242:17)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":242:44)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":243:17)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":246:17)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":243:21)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":244:17)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":245:32)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":245:22)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":245:21)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":248:20)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":249:13)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":252:13)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":249:17)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":249:34)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":250:13)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":251:30)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":251:17)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":260:21)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":260:10)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":260:9)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":262:5)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":281:5)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":263:9)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":263:24)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":263:23)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":264:9)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":280:9)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":265:13)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":265:17)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":265:20)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":265:23)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":266:13)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":279:13)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":266:17)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":266:24)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":266:30)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":266:43)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":267:13)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":269:17)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":278:17)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":269:21)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":269:25)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":270:17)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":271:35)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":271:21)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:21)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":276:21)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:30)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:26)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:33)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:37)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:35)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":273:21)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":275:36)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":275:25)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:41)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":272:40)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":277:34)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_32.c":277:21)
#loc473 = loc(fused[#loc1, #loc2])
#loc474 = loc(fused[#loc3, #loc4])
#loc475 = loc(fused[#loc5, #loc6])
#loc476 = loc(fused[#loc8, #loc9])
#loc477 = loc(fused[#loc10, #loc11])
#loc478 = loc(fused[#loc12, #loc13])
#loc479 = loc(fused[#loc14, #loc15])
#loc480 = loc(fused[#loc16, #loc17])
#loc481 = loc(fused[#loc18, #loc19])
#loc482 = loc(fused[#loc21, #loc22])
#loc483 = loc(fused[#loc23, #loc24])
#loc484 = loc(fused[#loc25, #loc26])
#loc485 = loc(fused[#loc27, #loc28])
#loc486 = loc(fused[#loc29, #loc30])
#loc487 = loc(fused[#loc31, #loc32])
#loc488 = loc(fused[#loc34, #loc33])
#loc489 = loc(fused[#loc35, #loc36])
#loc490 = loc(fused[#loc37, #loc38])
#loc491 = loc(fused[#loc40, #loc41])
#loc492 = loc(fused[#loc42, #loc43])
#loc493 = loc(fused[#loc44, #loc45])
#loc494 = loc(fused[#loc46, #loc47])
#loc495 = loc(fused[#loc48, #loc49])
#loc496 = loc(fused[#loc50, #loc51])
#loc497 = loc(fused[#loc54, #loc55])
#loc498 = loc(fused[#loc60, #loc61])
#loc499 = loc(fused[#loc62, #loc63])
#loc500 = loc(fused[#loc64, #loc65])
#loc501 = loc(fused[#loc66, #loc63])
#loc502 = loc(fused[#loc68, #loc69])
#loc503 = loc(fused[#loc71, #loc72])
#loc504 = loc(fused[#loc73, #loc74])
#loc505 = loc(fused[#loc77, #loc75])
#loc506 = loc(fused[#loc81, #loc82])
#loc507 = loc(fused[#loc86, #loc87])
#loc508 = loc(fused[#loc88, #loc89])
#loc509 = loc(fused[#loc91, #loc92])
#loc510 = loc(fused[#loc93, #loc94])
#loc511 = loc(fused[#loc95, #loc96])
#loc512 = loc(fused[#loc97, #loc89])
#loc513 = loc(fused[#loc103, #loc104])
#loc514 = loc(fused[#loc105, #loc106])
#loc515 = loc(fused[#loc107, #loc108])
#loc516 = loc(fused[#loc107, #loc109])
#loc517 = loc(fused[#loc105, #loc110])
#loc518 = loc(fused[#loc113, #loc114])
#loc519 = loc(fused[#loc115, #loc116])
#loc520 = loc(fused[#loc117, #loc118])
#loc521 = loc(fused[#loc120, #loc121])
#loc522 = loc(fused[#loc122, #loc116])
#loc523 = loc(fused[#loc128, #loc129])
#loc524 = loc(fused[#loc127, #loc129])
#loc525 = loc(fused[#loc126, #loc129])
#loc526 = loc(fused[#loc125, #loc124])
#loc527 = loc(fused[#loc134, #loc135])
#loc528 = loc(fused[#loc136, #loc137])
#loc529 = loc(fused[#loc139, #loc137])
#loc530 = loc(fused[#loc142, #loc140])
#loc531 = loc(fused[#loc146, #loc147])
#loc532 = loc(fused[#loc148, #loc149])
#loc533 = loc(fused[#loc151, #loc149])
#loc534 = loc(fused[#loc154, #loc152])
#loc535 = loc(fused[#loc156, #loc157])
#loc536 = loc(fused[#loc158, #loc159])
#loc537 = loc(fused[#loc160, #loc157])
#loc538 = loc(fused[#loc165, #loc163])
#loc539 = loc(fused[#loc166, #loc167])
#loc540 = loc(fused[#loc168, #loc169])
#loc541 = loc(fused[#loc171, #loc172])
#loc542 = loc(fused[#loc173, #loc174])
#loc543 = loc(fused[#loc173, #loc175])
#loc544 = loc(fused[#loc173, #loc176])
#loc545 = loc(fused[#loc177, #loc178])
#loc546 = loc(fused[#loc179, #loc181])
#loc547 = loc(fused[#loc182, #loc178])
#loc548 = loc(fused[#loc184, #loc183])
#loc549 = loc(fused[#loc185, #loc186])
#loc550 = loc(fused[#loc188, #loc187])
#loc551 = loc(fused[#loc189, #loc190])
#loc552 = loc(fused[#loc192, #loc186])
#loc553 = loc(fused[#loc194, #loc193])
#loc554 = loc(fused[#loc196, #loc195])
#loc555 = loc(fused[#loc199, #loc200])
#loc556 = loc(fused[#loc201, #loc202])
#loc557 = loc(fused[#loc203, #loc204])
#loc558 = loc(fused[#loc205, #loc206])
#loc559 = loc(fused[#loc207, #loc208])
#loc560 = loc(fused[#loc209, #loc210])
#loc561 = loc(fused[#loc215, #loc216])
#loc564 = loc(fused[#loc226, #loc227])
#loc565 = loc(fused[#loc230, #loc231])
#loc566 = loc(fused[#loc234, #loc233])
#loc567 = loc(fused[#loc235, #loc236])
#loc568 = loc(fused[#loc238, #loc239])
#loc569 = loc(fused[#loc240, #loc241])
#loc570 = loc(fused[#loc242, #loc243])
#loc571 = loc(fused[#loc244, #loc245])
#loc572 = loc(fused[#loc246, #loc247])
#loc573 = loc(fused[#loc249, #loc248])
#loc574 = loc(fused[#loc250, #loc251])
#loc575 = loc(fused[#loc252, #loc253])
#loc576 = loc(fused[#loc259, #loc257])
#loc577 = loc(fused[#loc260, #loc261])
#loc578 = loc(fused[#loc262, #loc263])
#loc579 = loc(fused[#loc265, #loc266])
#loc580 = loc(fused[#loc267, #loc268])
#loc581 = loc(fused[#loc267, #loc269])
#loc582 = loc(fused[#loc267, #loc270])
#loc583 = loc(fused[#loc271, #loc272])
#loc584 = loc(fused[#loc273, #loc276])
#loc585 = loc(fused[#loc277, #loc272])
#loc586 = loc(fused[#loc279, #loc278])
#loc587 = loc(fused[#loc280, #loc281])
#loc588 = loc(fused[#loc283, #loc282])
#loc589 = loc(fused[#loc284, #loc285])
#loc590 = loc(fused[#loc287, #loc281])
#loc591 = loc(fused[#loc289, #loc288])
#loc592 = loc(fused[#loc291, #loc290])
#loc593 = loc(fused[#loc294, #loc295])
#loc594 = loc(fused[#loc296, #loc297])
#loc595 = loc(fused[#loc298, #loc299])
#loc596 = loc(fused[#loc300, #loc301])
#loc597 = loc(fused[#loc302, #loc303])
#loc598 = loc(fused[#loc305, #loc304])
#loc599 = loc(fused[#loc306, #loc307])
#loc600 = loc(fused[#loc308, #loc309])
#loc601 = loc(fused[#loc311, #loc312])
#loc602 = loc(fused[#loc313, #loc314])
#loc603 = loc(fused[#loc315, #loc316])
#loc604 = loc(fused[#loc317, #loc318])
#loc605 = loc(fused[#loc319, #loc320])
#loc606 = loc(fused[#loc321, #loc322])
#loc607 = loc(fused[#loc325, #loc326])
#loc608 = loc(fused[#loc331, #loc332])
#loc609 = loc(fused[#loc333, #loc334])
#loc610 = loc(fused[#loc335, #loc336])
#loc611 = loc(fused[#loc337, #loc334])
#loc612 = loc(fused[#loc339, #loc340])
#loc613 = loc(fused[#loc342, #loc343])
#loc614 = loc(fused[#loc344, #loc345])
#loc615 = loc(fused[#loc347, #loc346])
#loc616 = loc(fused[#loc350, #loc351])
#loc617 = loc(fused[#loc354, #loc355])
#loc618 = loc(fused[#loc356, #loc357])
#loc619 = loc(fused[#loc359, #loc360])
#loc620 = loc(fused[#loc361, #loc362])
#loc621 = loc(fused[#loc363, #loc364])
#loc622 = loc(fused[#loc365, #loc357])
#loc623 = loc(fused[#loc371, #loc372])
#loc624 = loc(fused[#loc373, #loc374])
#loc625 = loc(fused[#loc375, #loc376])
#loc626 = loc(fused[#loc375, #loc377])
#loc627 = loc(fused[#loc373, #loc378])
#loc628 = loc(fused[#loc381, #loc382])
#loc629 = loc(fused[#loc383, #loc384])
#loc630 = loc(fused[#loc385, #loc386])
#loc631 = loc(fused[#loc388, #loc389])
#loc632 = loc(fused[#loc390, #loc384])
#loc633 = loc(fused[#loc396, #loc397])
#loc634 = loc(fused[#loc395, #loc397])
#loc635 = loc(fused[#loc394, #loc397])
#loc636 = loc(fused[#loc393, #loc392])
#loc637 = loc(fused[#loc402, #loc403])
#loc638 = loc(fused[#loc404, #loc405])
#loc639 = loc(fused[#loc407, #loc405])
#loc640 = loc(fused[#loc410, #loc408])
#loc641 = loc(fused[#loc414, #loc415])
#loc642 = loc(fused[#loc416, #loc417])
#loc643 = loc(fused[#loc419, #loc417])
#loc644 = loc(fused[#loc422, #loc420])
#loc645 = loc(fused[#loc424, #loc425])
#loc646 = loc(fused[#loc426, #loc427])
#loc647 = loc(fused[#loc428, #loc425])
#loc648 = loc(fused[#loc433, #loc431])
#loc649 = loc(fused[#loc434, #loc435])
#loc650 = loc(fused[#loc436, #loc437])
#loc651 = loc(fused[#loc439, #loc440])
#loc652 = loc(fused[#loc441, #loc442])
#loc653 = loc(fused[#loc441, #loc443])
#loc654 = loc(fused[#loc441, #loc444])
#loc655 = loc(fused[#loc445, #loc446])
#loc656 = loc(fused[#loc447, #loc450])
#loc657 = loc(fused[#loc451, #loc446])
#loc658 = loc(fused[#loc452, #loc453])
#loc659 = loc(fused[#loc454, #loc455])
#loc660 = loc(fused[#loc456, #loc453])
#loc661 = loc(fused[#loc458, #loc457])
#loc662 = loc(fused[#loc459, #loc460])
#loc663 = loc(fused[#loc462, #loc461])
#loc664 = loc(fused[#loc463, #loc464])
#loc665 = loc(fused[#loc466, #loc460])
#loc666 = loc(fused[#loc468, #loc467])
#loc667 = loc(fused[#loc470, #loc469])
