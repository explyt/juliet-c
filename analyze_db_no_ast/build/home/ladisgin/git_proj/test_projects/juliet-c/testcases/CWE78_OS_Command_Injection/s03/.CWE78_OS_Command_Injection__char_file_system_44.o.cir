!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":42:21)
#loc9 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":42:28)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":89:25)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":89:32)
#loc129 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc95, #loc96])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc126)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc127)
  cir.func internal private  @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc14)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc15)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc131)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc16)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc3)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc18)
        %8 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc19)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc20)
        cir.call @exit(%9) : (!s32i) -> () extra(#fn_attr) loc(#loc19)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc7)
  } loc(#loc128)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc25)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc26)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc31)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc137)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_system_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc39)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc140)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc141)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc144)
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc145)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc144)
      cir.scope {
        %13 = cir.const #cir.int<100> : !s32i loc(#loc54)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc54)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc55)
        %16 = cir.binop(sub, %14, %15) : !u64i loc(#loc147)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc56)
        %19 = cir.cmp(gt, %16, %18) : !u64i, !s32i loc(#loc148)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc57)
        cir.if %20 {
          %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc59)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc25)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
          %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc26)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc26)
          %26 = cir.call @fopen(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc59)
          cir.store %26, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
          cir.scope {
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc65)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc152)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc66)
            cir.if %31 {
              cir.scope {
                %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                %37 = cir.const #cir.int<100> : !s32i loc(#loc73)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc73)
                %39 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                %40 = cir.binop(sub, %38, %39) : !u64i loc(#loc155)
                %41 = cir.cast(integral, %40 : !u64i), !s32i loc(#loc155)
                %42 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
                %43 = cir.call @fgets(%36, %41, %42) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
                %44 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
                %45 = cir.cast(bitcast, %44 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
                %46 = cir.cmp(eq, %43, %45) : !cir.ptr<!s8i>, !s32i loc(#loc156)
                %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc78)
                cir.if %47 {
                  %48 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc31)
                  %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc31)
                  cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc80)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc81)
                  %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                  %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                  %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                  cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc158)
                } loc(#loc157)
              } loc(#loc154)
              %32 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
              %33 = cir.call @fclose(%32) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc86)
            } loc(#loc153)
          } loc(#loc151)
        } loc(#loc149)
      } loc(#loc146)
    } loc(#loc143)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc87)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc87)
    cir.return loc(#loc35)
  } loc(#loc138)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_system_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc159)
  cir.func internal private  @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc95, #loc96])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc101)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc164)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc103)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc105)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        %8 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc108)
        cir.call @exit(%9) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc94)
  } loc(#loc161)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc170)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc117)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc169)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc170)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc122)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %8 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc111)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc111)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc124)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc124)
    cir.return loc(#loc113)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":923:1)
#loc2 = loc("/usr/include/stdlib.h":923:41)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":47:19)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":42:1)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":50:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":43:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":45:5)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":49:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":45:16)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":45:9)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":45:25)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":45:22)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":46:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":47:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":48:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":48:14)
#loc21 = loc("/usr/include/string.h":407:1)
#loc22 = loc("/usr/include/string.h":408:33)
#loc23 = loc("/usr/include/stdio.h":264:1)
#loc24 = loc("/usr/include/stdio.h":266:3)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":66:27)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":66:37)
#loc27 = loc("/usr/include/stdio.h":654:1)
#loc28 = loc("/usr/include/stdio.h":655:59)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":72:31)
#loc32 = loc("/usr/include/stdio.h":184:1)
#loc33 = loc("/usr/include/stdio.h":184:36)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":52:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":82:1)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":54:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":54:12)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":56:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":56:32)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":57:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":57:26)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":58:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":58:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":59:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":79:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":61:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":61:37)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":62:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":62:16)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":61:26)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":61:33)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":64:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":78:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":64:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":64:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":64:27)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":64:25)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":65:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":66:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":66:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":66:40)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":67:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":77:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":67:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":67:26)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":67:23)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":68:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":75:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:27)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:32)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:31)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:47)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:51)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:61)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:71)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":70:68)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":71:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":72:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":74:37)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":74:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":74:26)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":74:33)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":76:24)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":76:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":81:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":81:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":110:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":113:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":112:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":112:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":89:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":97:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":90:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":92:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":96:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":92:16)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":92:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":92:25)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":92:22)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":93:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":94:19)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":94:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":95:9)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":95:14)
#loc109 = loc("/usr/include/string.h":149:1)
#loc110 = loc("/usr/include/string.h":150:14)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":106:18)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":99:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":108:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":101:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":101:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":102:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":102:32)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":103:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":103:26)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":104:12)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":104:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":106:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":106:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":107:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_system_44.c":107:13)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc4, #loc5])
#loc128 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc14, #loc15])
#loc132 = loc(fused[#loc17, #loc12])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc27, #loc28])
#loc136 = loc(fused[#loc29, #loc30])
#loc137 = loc(fused[#loc32, #loc33])
#loc138 = loc(fused[#loc34, #loc35])
#loc139 = loc(fused[#loc36, #loc37])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc43, #loc42])
#loc143 = loc(fused[#loc44, #loc45])
#loc144 = loc(fused[#loc46, #loc47])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc52, #loc53])
#loc147 = loc(fused[#loc54, #loc55])
#loc148 = loc(fused[#loc54, #loc56])
#loc149 = loc(fused[#loc58, #loc53])
#loc150 = loc(fused[#loc60, #loc61])
#loc151 = loc(fused[#loc62, #loc63])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc67, #loc63])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc79, #loc69])
#loc158 = loc(fused[#loc82, #loc81])
#loc159 = loc(fused[#loc89, #loc90])
#loc160 = loc(fused[#loc91, #loc92])
#loc161 = loc(fused[#loc93, #loc94])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc104, #loc99])
#loc166 = loc(fused[#loc109, #loc110])
#loc167 = loc(fused[#loc112, #loc113])
#loc168 = loc(fused[#loc114, #loc115])
#loc169 = loc(fused[#loc116, #loc117])
#loc170 = loc(fused[#loc118, #loc119])
#loc171 = loc(fused[#loc121, #loc120])
