!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__CWE415_Double_Free__malloc_free_int_67_structType = !cir.struct<struct "_CWE415_Double_Free__malloc_free_int_67_structType" {!cir.ptr<!s32i>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int_67a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc103)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc104)
  cir.func private  @CWE415_Double_Free__malloc_free_int_67b_badSink(!ty__CWE415_Double_Free__malloc_free_int_67_structType) loc(#loc105)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int_67_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !ty__CWE415_Double_Free__malloc_free_int_67_structType, !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc111)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc112)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc26)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc27)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc31)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
      } loc(#loc116)
    } loc(#loc114)
    %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %14 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc35)
    cir.store %13, %14 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
    %15 = cir.load %1 : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, !ty__CWE415_Double_Free__malloc_free_int_67_structType loc(#loc37)
    cir.call @CWE415_Double_Free__malloc_free_int_67b_badSink(%15) : (!ty__CWE415_Double_Free__malloc_free_int_67_structType) -> () loc(#loc37)
    cir.return loc(#loc10)
  } loc(#loc106)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int_67_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc118)
  cir.func private  @CWE415_Double_Free__malloc_free_int_67b_goodG2BSink(!ty__CWE415_Double_Free__malloc_free_int_67_structType) loc(#loc121)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !ty__CWE415_Double_Free__malloc_free_int_67_structType, !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc52)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc55)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc126)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc127)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc128)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc63)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc64)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc68)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
      } loc(#loc132)
    } loc(#loc130)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %11 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc35)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    %12 = cir.load %1 : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, !ty__CWE415_Double_Free__malloc_free_int_67_structType loc(#loc71)
    cir.call @CWE415_Double_Free__malloc_free_int_67b_goodG2BSink(%12) : (!ty__CWE415_Double_Free__malloc_free_int_67_structType) -> () loc(#loc71)
    cir.return loc(#loc47)
  } loc(#loc122)
  cir.func private  @CWE415_Double_Free__malloc_free_int_67b_goodB2GSink(!ty__CWE415_Double_Free__malloc_free_int_67_structType) loc(#loc134)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !ty__CWE415_Double_Free__malloc_free_int_67_structType, !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc80)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc83)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc139)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc140)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc91)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !s32i loc(#loc144)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc92)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc96)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc145)
    } loc(#loc143)
    %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    %14 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc35)
    cir.store %13, %14 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc146)
    %15 = cir.load %1 : !cir.ptr<!ty__CWE415_Double_Free__malloc_free_int_67_structType>, !ty__CWE415_Double_Free__malloc_free_int_67_structType loc(#loc101)
    cir.call @CWE415_Double_Free__malloc_free_int_67b_goodB2GSink(%15) : (!ty__CWE415_Double_Free__malloc_free_int_67_structType) -> () loc(#loc101)
    cir.return loc(#loc75)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int_67a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_int_67a.c":30:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_int_67a.c":30:112)
#loc9 = loc("CWE415_Double_Free__malloc_free_int_67a.c":32:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int_67a.c":44:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_int_67a.c":34:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_int_67a.c":34:11)
#loc13 = loc("CWE415_Double_Free__malloc_free_int_67a.c":35:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_int_67a.c":35:55)
#loc15 = loc("CWE415_Double_Free__malloc_free_int_67a.c":37:12)
#loc16 = loc("CWE415_Double_Free__malloc_free_int_67a.c":37:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:19)
#loc18 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:26)
#loc19 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:30)
#loc20 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:40)
#loc21 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:41)
#loc22 = loc("CWE415_Double_Free__malloc_free_int_67a.c":38:5)
#loc23 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:5)
#loc24 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:33)
#loc25 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:17)
#loc27 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:14)
#loc28 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:23)
#loc29 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:24)
#loc30 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:30)
#loc31 = loc("CWE415_Double_Free__malloc_free_int_67a.c":39:29)
#loc32 = loc("CWE415_Double_Free__malloc_free_int_67a.c":41:5)
#loc33 = loc("CWE415_Double_Free__malloc_free_int_67a.c":41:10)
#loc34 = loc("CWE415_Double_Free__malloc_free_int_67a.c":42:28)
#loc35 = loc("CWE415_Double_Free__malloc_free_int_67a.c":24:11)
#loc36 = loc("CWE415_Double_Free__malloc_free_int_67a.c":42:5)
#loc37 = loc("CWE415_Double_Free__malloc_free_int_67a.c":43:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_int_67a.c":83:1)
#loc39 = loc("CWE415_Double_Free__malloc_free_int_67a.c":87:1)
#loc40 = loc("CWE415_Double_Free__malloc_free_int_67a.c":85:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_int_67a.c":85:13)
#loc42 = loc("CWE415_Double_Free__malloc_free_int_67a.c":86:5)
#loc43 = loc("CWE415_Double_Free__malloc_free_int_67a.c":86:13)
#loc44 = loc("CWE415_Double_Free__malloc_free_int_67a.c":51:1)
#loc45 = loc("CWE415_Double_Free__malloc_free_int_67a.c":51:116)
#loc46 = loc("CWE415_Double_Free__malloc_free_int_67a.c":53:1)
#loc47 = loc("CWE415_Double_Free__malloc_free_int_67a.c":64:1)
#loc48 = loc("CWE415_Double_Free__malloc_free_int_67a.c":55:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_int_67a.c":55:11)
#loc50 = loc("CWE415_Double_Free__malloc_free_int_67a.c":56:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_int_67a.c":56:55)
#loc52 = loc("CWE415_Double_Free__malloc_free_int_67a.c":58:12)
#loc53 = loc("CWE415_Double_Free__malloc_free_int_67a.c":58:5)
#loc54 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:19)
#loc55 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:26)
#loc56 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:30)
#loc57 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:40)
#loc58 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:41)
#loc59 = loc("CWE415_Double_Free__malloc_free_int_67a.c":59:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:33)
#loc62 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:9)
#loc63 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:17)
#loc64 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:14)
#loc65 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:23)
#loc66 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:24)
#loc67 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:30)
#loc68 = loc("CWE415_Double_Free__malloc_free_int_67a.c":60:29)
#loc69 = loc("CWE415_Double_Free__malloc_free_int_67a.c":62:28)
#loc70 = loc("CWE415_Double_Free__malloc_free_int_67a.c":62:5)
#loc71 = loc("CWE415_Double_Free__malloc_free_int_67a.c":63:5)
#loc72 = loc("CWE415_Double_Free__malloc_free_int_67a.c":67:1)
#loc73 = loc("CWE415_Double_Free__malloc_free_int_67a.c":67:116)
#loc74 = loc("CWE415_Double_Free__malloc_free_int_67a.c":69:1)
#loc75 = loc("CWE415_Double_Free__malloc_free_int_67a.c":81:1)
#loc76 = loc("CWE415_Double_Free__malloc_free_int_67a.c":71:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_int_67a.c":71:11)
#loc78 = loc("CWE415_Double_Free__malloc_free_int_67a.c":72:5)
#loc79 = loc("CWE415_Double_Free__malloc_free_int_67a.c":72:55)
#loc80 = loc("CWE415_Double_Free__malloc_free_int_67a.c":74:12)
#loc81 = loc("CWE415_Double_Free__malloc_free_int_67a.c":74:5)
#loc82 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:19)
#loc83 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:26)
#loc84 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:30)
#loc85 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:40)
#loc86 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:41)
#loc87 = loc("CWE415_Double_Free__malloc_free_int_67a.c":75:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:33)
#loc90 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:9)
#loc91 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:17)
#loc92 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:14)
#loc93 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:23)
#loc94 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:24)
#loc95 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:30)
#loc96 = loc("CWE415_Double_Free__malloc_free_int_67a.c":76:29)
#loc97 = loc("CWE415_Double_Free__malloc_free_int_67a.c":78:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_int_67a.c":78:10)
#loc99 = loc("CWE415_Double_Free__malloc_free_int_67a.c":79:28)
#loc100 = loc("CWE415_Double_Free__malloc_free_int_67a.c":79:5)
#loc101 = loc("CWE415_Double_Free__malloc_free_int_67a.c":80:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc13, #loc14])
#loc109 = loc(fused[#loc16, #loc15])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc18, #loc20])
#loc112 = loc(fused[#loc17, #loc21])
#loc113 = loc(fused[#loc22, #loc21])
#loc114 = loc(fused[#loc23, #loc24])
#loc115 = loc(fused[#loc25, #loc26])
#loc116 = loc(fused[#loc28, #loc24])
#loc117 = loc(fused[#loc36, #loc34])
#loc118 = loc(fused[#loc38, #loc39])
#loc119 = loc(fused[#loc40, #loc41])
#loc120 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc46, #loc47])
#loc123 = loc(fused[#loc48, #loc49])
#loc124 = loc(fused[#loc50, #loc51])
#loc125 = loc(fused[#loc53, #loc52])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc55, #loc57])
#loc128 = loc(fused[#loc54, #loc58])
#loc129 = loc(fused[#loc59, #loc58])
#loc130 = loc(fused[#loc60, #loc61])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc65, #loc61])
#loc133 = loc(fused[#loc70, #loc69])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc81, #loc80])
#loc139 = loc(fused[#loc84, #loc85])
#loc140 = loc(fused[#loc83, #loc85])
#loc141 = loc(fused[#loc82, #loc86])
#loc142 = loc(fused[#loc87, #loc86])
#loc143 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc93, #loc89])
#loc146 = loc(fused[#loc100, #loc99])
