!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":23:25)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":23:32)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":49:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":49:36)
#loc88 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc50, #loc51])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc3, #loc4])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc5)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc6)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc6)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc7)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc8)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc8)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc89)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc12)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc14)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc90)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc91)
  } loc(#loc87)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc95)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc97)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc30)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc30)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc30)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc30)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %12 = cir.call @badSource(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc34)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc95)
    cir.store %13, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc95)
    %14 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc40)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.call @strcat(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc39)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb2 loc(#loc38)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc24)
  } loc(#loc94)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc101)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc50, #loc51])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc49)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc54)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc55)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc55)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc105)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc59)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc61)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc61)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc107)
  } loc(#loc103)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc73)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc73)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc73)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %12 = cir.call @goodG2BSource(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc77)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc109)
    cir.store %13, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc109)
    %14 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc83)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %17 = cir.call @strcat(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc82)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb2 loc(#loc81)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc67)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":29:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":24:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:18)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:23)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:27)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":26:28)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":27:19)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":27:10)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":27:14)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":27:15)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":28:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":28:5)
#loc19 = loc("/usr/include/string.h":149:1)
#loc20 = loc("/usr/include/string.h":150:14)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":31:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":43:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":38:25)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":33:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":33:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":34:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":34:33)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":35:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":35:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":36:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":36:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":36:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":36:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":37:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":42:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":40:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":40:16)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":40:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":41:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":41:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":72:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":75:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":74:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":74:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":49:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":55:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":50:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:18)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:26)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":52:27)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":53:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":53:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":53:10)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":53:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":53:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":54:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":54:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":58:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":70:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":65:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":65:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":60:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":60:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":61:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":61:33)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":62:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":62:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":63:26)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":63:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":63:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":63:30)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":64:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":69:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":67:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":67:16)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":67:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":68:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_42.c":68:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc10, #loc11])
#loc90 = loc(fused[#loc13, #loc12])
#loc91 = loc(fused[#loc18, #loc17])
#loc92 = loc(fused[#loc19, #loc20])
#loc93 = loc(fused[#loc21, #loc22])
#loc94 = loc(fused[#loc23, #loc24])
#loc95 = loc(fused[#loc25, #loc26])
#loc96 = loc(fused[#loc27, #loc28])
#loc97 = loc(fused[#loc29, #loc30])
#loc98 = loc(fused[#loc32, #loc31])
#loc99 = loc(fused[#loc35, #loc36])
#loc100 = loc(fused[#loc37, #loc38])
#loc101 = loc(fused[#loc44, #loc45])
#loc102 = loc(fused[#loc46, #loc47])
#loc103 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc57, #loc58])
#loc106 = loc(fused[#loc60, #loc59])
#loc107 = loc(fused[#loc65, #loc64])
#loc108 = loc(fused[#loc66, #loc67])
#loc109 = loc(fused[#loc68, #loc69])
#loc110 = loc(fused[#loc70, #loc71])
#loc111 = loc(fused[#loc72, #loc73])
#loc112 = loc(fused[#loc75, #loc74])
#loc113 = loc(fused[#loc78, #loc79])
#loc114 = loc(fused[#loc80, #loc81])
