!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":95:10)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":95:14)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":95:20)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":95:32)
#loc184 = loc(fused[#loc80, #loc81])
#loc185 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc11)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc15)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    cir.goto "source" loc(#loc165)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc22)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %24 = cir.const #cir.int<8> : !s32i loc(#loc24)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc24)
    %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
      %28 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %31 = cir.const #cir.int<67> : !s32i loc(#loc34)
      %32 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc35)
      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc35)
      cir.libc.memset %35 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
      %36 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc39)
      %38 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %39 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc40)
      %41 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %37, %42 : !s8i, !cir.ptr<!s8i> loc(#loc171)
      cir.scope {
        %51 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc45)
        cir.store %52, %27 : !u64i, !cir.ptr<!u64i> loc(#loc173)
        cir.for : cond {
          %53 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %54 = cir.const #cir.int<100> : !s32i loc(#loc48)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc48)
          %56 = cir.cmp(lt, %53, %55) : !u64i, !cir.bool loc(#loc174)
          cir.condition(%56) loc(#loc49)
        } body {
          cir.scope {
            %53 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %54 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc52)
            %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc52)
            %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
            %58 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc55)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc176)
          } loc(#loc175)
          cir.yield loc(#loc44)
        } step {
          %53 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc58)
          cir.store %54, %27 : !u64i, !cir.ptr<!u64i> loc(#loc177)
          cir.yield loc(#loc172)
        } loc(#loc172)
      } loc(#loc172)
      %43 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc59)
      %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %46 = cir.const #cir.int<100> : !s32i loc(#loc61)
      %47 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc61)
      %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc63)
      cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc178)
      %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    } loc(#loc167)
    cir.return loc(#loc4)
  } loc(#loc160)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc179)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc181)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_18_good() : () -> () loc(#loc89)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_18_bad() : () -> () loc(#loc93)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %17 : !s32i loc(#loc188)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc103)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc103)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc103)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc103)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc105)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc106)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc106)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc110)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc112)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.goto "source" loc(#loc194)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc117)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.scope {
      %24 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc197)
      %25 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc198)
      %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
      %28 = cir.const #cir.int<67> : !s32i loc(#loc127)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc128)
      %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc128)
      cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc199)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc132)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc132)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc133)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc133)
      %38 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc135)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc200)
      cir.scope {
        %48 = cir.const #cir.int<0> : !s32i loc(#loc138)
        %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc138)
        cir.store %49, %24 : !u64i, !cir.ptr<!u64i> loc(#loc202)
        cir.for : cond {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc140)
          %51 = cir.const #cir.int<100> : !s32i loc(#loc141)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc141)
          %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc203)
          cir.condition(%53) loc(#loc142)
        } body {
          cir.scope {
            %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %51 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc145)
            %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc145)
            %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %55 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc148)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc205)
          } loc(#loc204)
          cir.yield loc(#loc137)
        } step {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc150)
          %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc151)
          cir.store %51, %24 : !u64i, !cir.ptr<!u64i> loc(#loc206)
          cir.yield loc(#loc201)
        } loc(#loc201)
      } loc(#loc201)
      %40 = cir.const #cir.int<0> : !s32i loc(#loc152)
      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc152)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      %43 = cir.const #cir.int<100> : !s32i loc(#loc154)
      %44 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc154)
      %46 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc156)
      cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc207)
      %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    } loc(#loc196)
    cir.return loc(#loc99)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":23:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":47:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":25:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":25:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":26:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":26:33)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:12)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:24)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:29)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":27:34)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":28:25)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":28:5)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":28:16)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":28:20)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":28:21)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":29:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":29:10)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":30:1)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":32:12)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":32:25)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":32:23)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":32:5)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":33:5)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":46:5)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":34:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":34:16)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":35:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":35:24)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:16)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:24)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:29)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:33)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:9)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":36:34)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":37:25)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":37:16)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":37:20)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":37:9)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:9)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":42:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:18)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:14)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:21)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:25)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:23)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":40:9)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:30)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:23)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:13)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:18)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:19)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":41:31)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:31)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":39:30)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":44:23)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":44:9)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":44:14)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":44:18)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":44:19)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":45:19)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":45:9)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":80:1)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":83:1)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":82:5)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":82:13)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":100:15)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":102:15)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":105:15)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":107:15)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":95:1)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":110:1)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":96:1)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":98:27)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":98:22)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":98:5)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":100:5)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":101:5)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":101:56)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":102:5)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":105:5)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":106:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":106:55)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":107:5)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":109:12)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":109:5)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":54:1)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":78:1)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":56:5)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":56:12)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":57:5)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":57:33)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:12)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:24)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:29)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:33)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:5)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":58:34)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":59:25)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":59:5)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":59:16)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":59:20)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":59:21)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":60:5)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":60:10)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":61:1)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":63:12)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":63:5)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":64:5)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":77:5)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":65:9)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":65:16)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":66:9)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":66:24)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:16)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:24)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:29)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:33)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:9)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":67:34)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":68:25)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":68:16)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":68:20)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":68:9)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:9)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":73:9)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:18)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:14)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:21)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:25)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:23)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":71:9)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:30)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:23)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:13)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:18)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:19)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":72:31)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:31)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":70:30)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":75:23)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":75:9)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":75:14)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":75:18)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":75:19)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":76:19)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_18.c":76:9)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc16, #loc15])
#loc165 = loc(fused[#loc20, #loc21])
#loc166 = loc(fused[#loc26, #loc24])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc30])
#loc169 = loc(fused[#loc31, #loc32])
#loc170 = loc(fused[#loc37, #loc38])
#loc171 = loc(fused[#loc42, #loc39])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc46, #loc45])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc50, #loc44])
#loc176 = loc(fused[#loc53, #loc56])
#loc177 = loc(fused[#loc58, #loc57])
#loc178 = loc(fused[#loc60, #loc59])
#loc179 = loc(fused[#loc66, #loc67])
#loc180 = loc(fused[#loc68, #loc69])
#loc181 = loc(fused[#loc70, #loc71])
#loc182 = loc(fused[#loc72, #loc73])
#loc183 = loc(fused[#loc78, #loc79])
#loc186 = loc(fused[#loc89, #loc90])
#loc187 = loc(fused[#loc93, #loc94])
#loc188 = loc(fused[#loc97, #loc96])
#loc189 = loc(fused[#loc98, #loc99])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc102, #loc103])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc111, #loc110])
#loc194 = loc(fused[#loc115, #loc116])
#loc195 = loc(fused[#loc119, #loc118])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc122, #loc123])
#loc198 = loc(fused[#loc124, #loc125])
#loc199 = loc(fused[#loc130, #loc131])
#loc200 = loc(fused[#loc135, #loc132])
#loc201 = loc(fused[#loc136, #loc137])
#loc202 = loc(fused[#loc139, #loc138])
#loc203 = loc(fused[#loc140, #loc141])
#loc204 = loc(fused[#loc143, #loc137])
#loc205 = loc(fused[#loc146, #loc149])
#loc206 = loc(fused[#loc151, #loc150])
#loc207 = loc(fused[#loc153, #loc152])
