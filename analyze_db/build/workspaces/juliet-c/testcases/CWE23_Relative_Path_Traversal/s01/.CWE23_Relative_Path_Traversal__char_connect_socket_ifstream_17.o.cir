!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc215)
  cir.global "private" constant cir_private @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_173badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc216)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc217)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc220)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
  cir.func private @close(!s32i) -> !s32i loc(#loc224)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc225)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc226)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc227)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc228)
  cir.func @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc216)
    %3 = cir.get_global @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_173badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc216)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc216)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc40)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc235)
        cir.condition(%8) loc(#loc235)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc238)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc239)
            %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc240)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc241)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc242)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc54)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc54)
            cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc241)
            %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc57)
            %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
            %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc57)
            cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc242)
            cir.scope {
              cir.do {
                cir.scope {
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc63)
                  %17 = cir.const #cir.int<1> : !u32i loc(#loc64)
                  %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc64)
                  %19 = cir.const #cir.int<6> : !u32i loc(#loc65)
                  %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc65)
                  %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
                  cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc245)
                  cir.scope {
                    %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                    %72 = cir.const #cir.int<1> : !s32i loc(#loc72)
                    %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc72)
                    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc247)
                    cir.if %74 {
                      cir.break loc(#loc74)
                    } loc(#loc248)
                  } loc(#loc246)
                  %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc249)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc77)
                  %24 = cir.const #cir.int<16> : !u64i loc(#loc250)
                  cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
                  %25 = cir.const #cir.int<2> : !s32i loc(#loc82)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc82)
                  %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc252)
                  %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
                  %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
                  %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc85)
                  %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
                  %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
                  cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc253)
                  %33 = cir.const #cir.int<27015> : !s32i loc(#loc90)
                  %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc90)
                  %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc91)
                  %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
                  cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc254)
                  cir.scope {
                    %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                    %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc256)
                    %73 = cir.const #cir.int<16> : !u64i loc(#loc257)
                    %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc257)
                    %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc102)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc103)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc103)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc258)
                    cir.if %78 {
                      cir.break loc(#loc105)
                    } loc(#loc259)
                  } loc(#loc255)
                  %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
                  %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc108)
                  %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc109)
                  %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
                  %42 = cir.const #cir.int<1> : !u64i loc(#loc261)
                  %43 = cir.const #cir.int<4096> : !s32i loc(#loc114)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc114)
                  %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc115)
                  %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc262)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc116)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc263)
                  %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc264)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
                  %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc119)
                  cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc265)
                  cir.scope {
                    %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %72 = cir.const #cir.int<1> : !s32i loc(#loc125)
                    %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc125)
                    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc267)
                    %75 = cir.ternary(%74, true {
                      %76 = cir.const #true loc(#loc126)
                      cir.yield %76 : !cir.bool loc(#loc126)
                    }, false {
                      %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc128)
                      %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc268)
                      %79 = cir.ternary(%78, true {
                        %80 = cir.const #true loc(#loc126)
                        cir.yield %80 : !cir.bool loc(#loc126)
                      }, false {
                        %80 = cir.const #false loc(#loc126)
                        cir.yield %80 : !cir.bool loc(#loc126)
                      }) : (!cir.bool) -> !cir.bool loc(#loc126)
                      cir.yield %79 : !cir.bool loc(#loc126)
                    }) : (!cir.bool) -> !cir.bool loc(#loc126)
                    cir.if %75 {
                      cir.break loc(#loc130)
                    } loc(#loc269)
                  } loc(#loc266)
                  %54 = cir.const #cir.int<0> : !s8i loc(#loc131)
                  %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
                  %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc133)
                  %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                  %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc134)
                  %59 = cir.const #cir.int<1> : !u64i loc(#loc270)
                  %60 = cir.binop(div, %58, %59) : !u64i loc(#loc271)
                  %61 = cir.binop(add, %56, %60) : !u64i loc(#loc272)
                  %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc137)
                  cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc273)
                  %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  %64 = cir.const #cir.int<13> : !s8i loc(#loc139)
                  %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc139)
                  %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc140)
                  cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
                  cir.scope {
                    %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                    %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
                    cir.if %72 {
                      %73 = cir.const #cir.int<0> : !s8i loc(#loc147)
                      %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                      cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc277)
                    } loc(#loc276)
                  } loc(#loc275)
                  %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                  %68 = cir.const #cir.int<10> : !s8i loc(#loc151)
                  %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc151)
                  %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc152)
                  cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
                  cir.scope {
                    %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                    %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
                    cir.if %72 {
                      %73 = cir.const #cir.int<0> : !s8i loc(#loc159)
                      %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                      cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc281)
                    } loc(#loc280)
                  } loc(#loc279)
                } loc(#loc244)
                cir.yield loc(#loc60)
              } while {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc162)
                %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc162)
                cir.condition(%17) loc(#loc162)
              } loc(#loc243)
            } loc(#loc243)
            cir.scope {
              %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc166)
              %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc166)
              %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc283)
              cir.if %19 {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc168)
                %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc169)
              } loc(#loc284)
            } loc(#loc282)
          } loc(#loc237)
        } loc(#loc236)
        cir.yield loc(#loc39)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc171)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
        cir.yield loc(#loc233)
      } loc(#loc233)
    } loc(#loc233)
    cir.scope {
      %5 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc287)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc175)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
      %7 = cir.const #cir.int<8> : !s32i loc(#loc288)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%5, %6, %7) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
          cir.yield loc(#loc180)
        } loc(#loc180)
        cir.yield loc(#loc179)
      } catch [#cir.unwind {
        cir.resume loc(#loc179)
      }] loc(#loc179)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
          cir.yield loc(#loc181)
        } loc(#loc181)
        cir.yield loc(#loc179)
      } catch [#cir.unwind {
        cir.resume loc(#loc179)
      }] loc(#loc179)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
    } loc(#loc286)
    cir.return loc(#loc31)
  } loc(#loc229)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc184)
  cir.func internal private @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc215)
    %3 = cir.get_global @__const._ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc215)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc215)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc191)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc195)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc198)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc296)
        cir.condition(%8) loc(#loc296)
      } body {
        cir.scope {
          %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
          %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc184)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc184)
          %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
        } loc(#loc297)
        cir.yield loc(#loc194)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc203)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
        cir.yield loc(#loc294)
      } loc(#loc294)
    } loc(#loc294)
    cir.scope {
      %5 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc300)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc207)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
      %7 = cir.const #cir.int<8> : !s32i loc(#loc288)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%5, %6, %7) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
          cir.yield loc(#loc210)
        } loc(#loc210)
        cir.yield loc(#loc209)
      } catch [#cir.unwind {
        cir.resume loc(#loc209)
      }] loc(#loc209)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
          cir.yield loc(#loc211)
        } loc(#loc211)
        cir.yield loc(#loc209)
      } catch [#cir.unwind {
        cir.resume loc(#loc209)
      }] loc(#loc209)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc228)
    } loc(#loc299)
    cir.return loc(#loc186)
  } loc(#loc290)
  cir.func @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17L7goodG2BEv() : () -> () loc(#loc214)
    cir.return loc(#loc213)
  } loc(#loc301)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":148:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":148:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":59:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":59:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":90:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc25 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc26 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc27 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":55:1)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":137:1)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":57:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":57:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":58:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":58:12)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":60:12)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":60:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":130:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:16)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:20)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":62:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":63:9)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":129:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":68:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":68:17)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":69:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":69:32)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":70:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":70:19)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":71:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":71:36)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":72:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":72:41)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":72:30)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":72:37)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":73:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":118:21)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":74:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":117:13)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:40)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:49)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:62)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:33)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":83:73)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":84:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":87:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":84:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":84:38)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":85:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":86:21)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:24)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:25)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:34)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:37)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:51)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":88:52)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":89:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":89:17)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":90:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":90:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":90:63)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":91:42)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":91:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":91:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":91:50)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:17)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":95:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:29)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:62)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:63)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:72)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:86)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":92:92)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":93:17)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":94:21)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:35)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:59)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:66)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:64)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:50)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:73)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:76)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:87)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:92)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:107)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:117)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:118)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:121)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:30)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":99:122)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:17)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":103:17)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:21)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:35)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:48)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:51)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":100:65)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":101:17)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":102:21)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:61)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:17)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:22)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:32)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:45)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:56)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":105:57)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":107:34)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":107:40)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":107:27)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":107:17)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":107:44)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":108:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":111:17)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":108:21)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":109:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":110:32)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":110:22)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":110:21)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":112:34)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":112:40)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":112:27)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":112:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":112:44)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":113:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":116:17)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":113:21)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":114:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":115:32)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":115:22)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":115:21)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":118:20)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":119:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":122:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":119:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":119:34)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":120:13)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":121:30)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":121:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:24)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":61:23)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":131:5)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":136:5)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":132:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":132:18)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":134:32)
#loc177 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc178 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":55:6)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":134:19)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":135:19)
#loc182 = loc("/usr/include/string.h":149:1)
#loc183 = loc("/usr/include/string.h":150:14)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":153:22)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":144:1)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":161:1)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":146:5)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":146:9)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":147:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":147:12)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":149:12)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":149:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":154:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:13)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:9)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:16)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:20)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":151:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":153:9)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":153:16)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:24)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":150:23)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":155:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":160:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":156:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":156:18)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":158:32)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":144:13)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":158:19)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":159:19)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":163:1)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":166:1)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_ifstream_17.cpp":165:5)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc16, #loc17])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc22, #loc23])
#loc226 = loc(fused[#loc24, #loc25])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc28, #loc29])
#loc229 = loc(fused[#loc30, #loc31])
#loc230 = loc(fused[#loc32, #loc33])
#loc231 = loc(fused[#loc34, #loc35])
#loc232 = loc(fused[#loc37, #loc36])
#loc233 = loc(fused[#loc38, #loc39])
#loc234 = loc(fused[#loc41, #loc40])
#loc235 = loc(fused[#loc42, #loc43])
#loc236 = loc(fused[#loc44, #loc39])
#loc237 = loc(fused[#loc45, #loc46])
#loc238 = loc(fused[#loc47, #loc48])
#loc239 = loc(fused[#loc49, #loc50])
#loc240 = loc(fused[#loc51, #loc52])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc55, #loc56])
#loc243 = loc(fused[#loc59, #loc60])
#loc244 = loc(fused[#loc61, #loc62])
#loc245 = loc(fused[#loc67, #loc68])
#loc246 = loc(fused[#loc69, #loc70])
#loc247 = loc(fused[#loc71, #loc72])
#loc248 = loc(fused[#loc73, #loc70])
#loc249 = loc(fused[#loc75, #loc76])
#loc250 = loc(fused[#loc78, #loc79])
#loc251 = loc(fused[#loc80, #loc81])
#loc252 = loc(fused[#loc84, #loc82])
#loc253 = loc(fused[#loc88, #loc89])
#loc254 = loc(fused[#loc93, #loc94])
#loc255 = loc(fused[#loc95, #loc96])
#loc256 = loc(fused[#loc98, #loc99])
#loc257 = loc(fused[#loc100, #loc101])
#loc258 = loc(fused[#loc102, #loc103])
#loc259 = loc(fused[#loc104, #loc96])
#loc260 = loc(fused[#loc110, #loc111])
#loc261 = loc(fused[#loc112, #loc113])
#loc262 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc114, #loc116])
#loc264 = loc(fused[#loc112, #loc117])
#loc265 = loc(fused[#loc120, #loc121])
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc124, #loc125])
#loc268 = loc(fused[#loc127, #loc128])
#loc269 = loc(fused[#loc129, #loc123])
#loc270 = loc(fused[#loc135, #loc136])
#loc271 = loc(fused[#loc134, #loc136])
#loc272 = loc(fused[#loc133, #loc136])
#loc273 = loc(fused[#loc132, #loc131])
#loc274 = loc(fused[#loc141, #loc142])
#loc275 = loc(fused[#loc143, #loc144])
#loc276 = loc(fused[#loc146, #loc144])
#loc277 = loc(fused[#loc149, #loc147])
#loc278 = loc(fused[#loc153, #loc154])
#loc279 = loc(fused[#loc155, #loc156])
#loc280 = loc(fused[#loc158, #loc156])
#loc281 = loc(fused[#loc161, #loc159])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc164])
#loc285 = loc(fused[#loc171, #loc170])
#loc286 = loc(fused[#loc172, #loc173])
#loc287 = loc(fused[#loc174, #loc175])
#loc288 = loc(fused[#loc177, #loc178])
#loc289 = loc(fused[#loc182, #loc183])
#loc290 = loc(fused[#loc185, #loc186])
#loc291 = loc(fused[#loc187, #loc188])
#loc292 = loc(fused[#loc189, #loc190])
#loc293 = loc(fused[#loc192, #loc191])
#loc294 = loc(fused[#loc193, #loc194])
#loc295 = loc(fused[#loc196, #loc195])
#loc296 = loc(fused[#loc197, #loc198])
#loc297 = loc(fused[#loc199, #loc194])
#loc298 = loc(fused[#loc203, #loc202])
#loc299 = loc(fused[#loc204, #loc205])
#loc300 = loc(fused[#loc206, #loc207])
#loc301 = loc(fused[#loc212, #loc213])
