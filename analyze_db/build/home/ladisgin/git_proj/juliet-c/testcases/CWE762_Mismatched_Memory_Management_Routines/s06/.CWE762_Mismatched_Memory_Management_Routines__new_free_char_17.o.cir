!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc121)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %7 ^bb3, ^bb5 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<1> : !u64i loc(#loc127)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc25)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb2 loc(#loc124)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc132)
    cir.brcond %16 ^bb9, ^bb11 loc(#loc132)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb10 loc(#loc27)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc35)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb8 loc(#loc130)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc119)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc137)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc142)
    cir.brcond %7 ^bb3, ^bb5 loc(#loc142)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<1> : !u64i loc(#loc143)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc55)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb4 loc(#loc48)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc58)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb2 loc(#loc140)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc48)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc146)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb8 loc(#loc146)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc148)
    cir.brcond %16 ^bb9, ^bb11 loc(#loc148)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb10 loc(#loc60)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc67)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb8 loc(#loc146)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc60)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc39)
  } loc(#loc135)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc151)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc154)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc79)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc159)
  ^bb3:  // pred: ^bb2
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc87)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc88)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc160)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc161)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
    cir.store %14, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc96)
    %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc100)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
    cir.br ^bb6 loc(#loc94)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc82)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc102)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb2 loc(#loc157)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // pred: ^bb10
    %23 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb12 loc(#loc168)
  ^bb12:  // 2 preds: ^bb11, ^bb14
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %26 ^bb13, ^bb15 loc(#loc170)
  ^bb13:  // pred: ^bb12
    %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb14 loc(#loc104)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc112)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb12 loc(#loc168)
  ^bb15:  // pred: ^bb12
    cir.br ^bb16 loc(#loc104)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc73)
  } loc(#loc152)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_17L7goodB2GEv() : () -> () loc(#loc115)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_17L7goodG2BEv() : () -> () loc(#loc116)
    cir.return loc(#loc114)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":24:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":41:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":26:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":26:9)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":26:11)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":27:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":27:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":29:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":29:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":34:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:13)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:9)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":33:16)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":33:20)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":24:6)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":33:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:24)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":30:23)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":40:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:13)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:16)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:20)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":39:9)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":39:14)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:24)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":35:23)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":48:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":64:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":50:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":50:9)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":50:11)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":51:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":51:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":53:12)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":53:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":58:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:13)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:9)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:16)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:20)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":57:16)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":57:20)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":48:13)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":57:9)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:24)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":54:23)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":63:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:13)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:16)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:20)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":62:16)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:24)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":59:23)
#loc68 = loc("/usr/include/stdlib.h":672:1)
#loc69 = loc("/usr/include/stdlib.h":672:45)
#loc70 = loc("/usr/include/stdlib.h":756:1)
#loc71 = loc("/usr/include/stdlib.h":756:70)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":67:1)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":85:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":69:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":69:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":69:11)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":70:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":70:12)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":72:12)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":72:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":78:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:13)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:16)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:20)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:24)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:31)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:35)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:46)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:47)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":76:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:37)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:13)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:21)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:27)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:28)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:34)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":77:33)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:24)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":73:23)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":84:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:13)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:9)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:16)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:20)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":83:9)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":83:14)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:24)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":79:23)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":87:1)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":91:1)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":89:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_17.cpp":90:5)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc7, #loc9])
#loc122 = loc(fused[#loc10, #loc11])
#loc123 = loc(fused[#loc13, #loc12])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc17, #loc16])
#loc126 = loc(fused[#loc18, #loc19])
#loc127 = loc(fused[#loc20, #loc21])
#loc128 = loc(fused[#loc23, #loc21])
#loc129 = loc(fused[#loc25, #loc24])
#loc130 = loc(fused[#loc26, #loc27])
#loc131 = loc(fused[#loc29, #loc28])
#loc132 = loc(fused[#loc30, #loc31])
#loc133 = loc(fused[#loc35, #loc34])
#loc134 = loc(fused[#loc36, #loc37])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc40, #loc41])
#loc137 = loc(fused[#loc40, #loc42])
#loc138 = loc(fused[#loc43, #loc44])
#loc139 = loc(fused[#loc46, #loc45])
#loc140 = loc(fused[#loc47, #loc48])
#loc141 = loc(fused[#loc50, #loc49])
#loc142 = loc(fused[#loc51, #loc52])
#loc143 = loc(fused[#loc53, #loc54])
#loc144 = loc(fused[#loc56, #loc54])
#loc145 = loc(fused[#loc58, #loc57])
#loc146 = loc(fused[#loc59, #loc60])
#loc147 = loc(fused[#loc62, #loc61])
#loc148 = loc(fused[#loc63, #loc64])
#loc149 = loc(fused[#loc67, #loc66])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc74, #loc76])
#loc155 = loc(fused[#loc77, #loc78])
#loc156 = loc(fused[#loc80, #loc79])
#loc157 = loc(fused[#loc81, #loc82])
#loc158 = loc(fused[#loc84, #loc83])
#loc159 = loc(fused[#loc85, #loc86])
#loc160 = loc(fused[#loc89, #loc90])
#loc161 = loc(fused[#loc88, #loc90])
#loc162 = loc(fused[#loc87, #loc91])
#loc163 = loc(fused[#loc92, #loc91])
#loc164 = loc(fused[#loc93, #loc94])
#loc165 = loc(fused[#loc95, #loc96])
#loc166 = loc(fused[#loc97, #loc94])
#loc167 = loc(fused[#loc102, #loc101])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc106, #loc105])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc112, #loc111])
#loc172 = loc(fused[#loc113, #loc114])
