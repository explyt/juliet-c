!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc222)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc223)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc224)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc225)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc227)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc228)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc229)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc24)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc234)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc234)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc234)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc32)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc33)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc33)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc33)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc33)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc33)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc236)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc37)
        cir.if %20 {
          %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc41)
          %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc42)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc41)
          cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc238)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc47)
        } loc(#loc237)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc240)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc241)
      %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
      cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc240)
      %6 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
      cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc241)
      cir.scope {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc243)
        cir.scope {
          %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %9 = cir.const #cir.int<5> : !u64i loc(#loc245)
          %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc246)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc63)
          cir.if %11 {
            %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %14 = cir.const #cir.int<1> : !u64i loc(#loc248)
            %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc249)
            %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
            cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
            cir.scope {
              %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc253)
              %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc77)
              cir.if %31 {
                %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
                %33 = cir.const #cir.int<1> : !s32i loc(#loc80)
                %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc81)
                cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
              } loc(#loc254)
            } loc(#loc252)
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc82)
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
            %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc85)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc86)
            %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc86)
          } else {
            %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          } loc(#loc247)
        } loc(#loc244)
      } loc(#loc242)
    } loc(#loc239)
    cir.return loc(#loc21)
  } loc(#loc230)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc255)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc99)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc101)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc101)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc263)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc264)
      %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc263)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc108)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc264)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc266)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc268)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !s32i loc(#loc269)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc118)
          cir.if %13 {
            %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
            %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %16 = cir.const #cir.int<1> : !u64i loc(#loc271)
            %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc272)
            %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
            cir.store %19, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
            cir.scope {
              %29 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc276)
              %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc132)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc135)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc136)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
              } loc(#loc277)
            } loc(#loc275)
            %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc137)
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc139)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc139)
            %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
            %25 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc141)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
          } else {
            %14 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc144)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc144)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          } loc(#loc270)
        } loc(#loc267)
      } loc(#loc265)
    } loc(#loc262)
    cir.return loc(#loc96)
  } loc(#loc258)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc146)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc151)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc282)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc282)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc282)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc159)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc160)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc160)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc160)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc160)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc160)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc160)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc160)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc160)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc284)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc164)
        cir.if %20 {
          %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc168)
          %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc169)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc171)
          %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc168)
          cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc286)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc174)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc174)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc175)
        } loc(#loc285)
      } loc(#loc283)
    } loc(#loc281)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc288)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc289)
      %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc179)
      cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc288)
      %6 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc181)
      cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc289)
      cir.scope {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc291)
        cir.scope {
          %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc188)
          %9 = cir.const #cir.int<5> : !u64i loc(#loc293)
          %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc294)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc191)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc193)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc194)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc194)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc295)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc195)
            %18 = cir.ternary(%17, true {
              %19 = cir.const #true loc(#loc192)
              cir.yield %19 : !cir.bool loc(#loc192)
            }, false {
              %19 = cir.const #false loc(#loc192)
              cir.yield %19 : !cir.bool loc(#loc192)
            }) : (!cir.bool) -> !cir.bool loc(#loc192)
            cir.yield %18 : !cir.bool loc(#loc192)
          }, false {
            %13 = cir.const #false loc(#loc192)
            cir.yield %13 : !cir.bool loc(#loc192)
          }) : (!cir.bool) -> !cir.bool loc(#loc192)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc199)
            %14 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc200)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc297)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc298)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc299)
            cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
            cir.scope {
              %28 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
              %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc302)
              %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc209)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc211)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc212)
                %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc213)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc211)
              } loc(#loc303)
            } loc(#loc301)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc214)
            %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
            %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc216)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc216)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc214)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc218)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc219)
            %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc219)
          } else {
            %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc146)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc221)
          } loc(#loc296)
        } loc(#loc292)
      } loc(#loc290)
    } loc(#loc287)
    cir.return loc(#loc148)
  } loc(#loc278)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":45:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":61:34)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":67:27)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":71:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":34:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":35:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":47:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":36:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":36:45)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":46:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:19)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:32)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:49)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:59)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":38:56)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":39:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":42:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":44:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:20)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:28)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:47)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":41:48)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":45:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":48:5)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":70:5)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":49:9)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":49:27)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":50:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":50:23)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":51:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":69:9)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":52:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":52:20)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":56:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":68:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":56:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":56:24)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":56:43)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":56:22)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":57:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":64:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":66:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:36)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:43)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:48)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:59)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:60)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":58:17)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:49)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:21)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:33)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:30)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:39)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:40)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:46)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":59:45)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":61:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":61:24)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":62:27)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":62:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":63:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":63:22)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":67:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":154:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":158:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":156:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":156:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":157:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":157:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":78:1)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":108:1)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":80:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":80:12)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":82:12)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":82:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":84:12)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":84:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":85:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":107:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":86:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":86:27)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":87:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":87:23)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":88:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":106:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":89:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":89:20)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":93:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":105:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":93:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":93:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":93:43)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":93:22)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":94:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":101:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":103:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:36)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:43)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:48)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:59)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:60)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":95:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:49)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:21)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:33)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:30)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:39)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:40)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:46)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":96:45)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":98:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":98:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":98:34)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":99:27)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":99:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":100:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":100:22)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":104:27)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":104:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":148:27)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":111:1)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":152:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":113:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":113:12)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":115:12)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":115:5)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":116:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":128:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":117:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":117:45)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":127:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:19)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:32)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:49)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:59)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":119:56)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":120:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":123:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":125:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:20)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:28)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:41)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:47)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":122:48)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":126:23)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":126:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":129:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":151:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":130:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":130:27)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":131:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":131:23)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":132:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":150:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":133:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":133:20)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":149:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:24)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:43)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:22)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:45)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:48)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:55)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":137:53)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":138:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":145:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":147:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:36)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:43)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:48)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:59)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:60)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":139:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:49)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:21)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:33)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:30)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:39)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:40)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:46)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":140:45)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":142:17)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":142:24)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":142:34)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":143:27)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":143:17)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":144:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":144:22)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_31.c":148:17)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc10, #loc11])
#loc227 = loc(fused[#loc12, #loc13])
#loc228 = loc(fused[#loc14, #loc15])
#loc229 = loc(fused[#loc17, #loc18])
#loc230 = loc(fused[#loc20, #loc21])
#loc231 = loc(fused[#loc22, #loc23])
#loc232 = loc(fused[#loc25, #loc24])
#loc233 = loc(fused[#loc26, #loc27])
#loc234 = loc(fused[#loc28, #loc29])
#loc235 = loc(fused[#loc30, #loc31])
#loc236 = loc(fused[#loc35, #loc36])
#loc237 = loc(fused[#loc38, #loc39, #loc40, #loc31])
#loc238 = loc(fused[#loc45, #loc46])
#loc239 = loc(fused[#loc48, #loc49])
#loc240 = loc(fused[#loc50, #loc51])
#loc241 = loc(fused[#loc52, #loc53])
#loc242 = loc(fused[#loc54, #loc55])
#loc243 = loc(fused[#loc56, #loc57])
#loc244 = loc(fused[#loc58, #loc59])
#loc245 = loc(fused[#loc61, #loc62])
#loc246 = loc(fused[#loc60, #loc62])
#loc247 = loc(fused[#loc64, #loc65, #loc66, #loc59])
#loc248 = loc(fused[#loc69, #loc70])
#loc249 = loc(fused[#loc68, #loc70])
#loc250 = loc(fused[#loc67, #loc71])
#loc251 = loc(fused[#loc72, #loc71])
#loc252 = loc(fused[#loc73, #loc74])
#loc253 = loc(fused[#loc75, #loc76])
#loc254 = loc(fused[#loc78, #loc74])
#loc255 = loc(fused[#loc89, #loc90])
#loc256 = loc(fused[#loc91, #loc92])
#loc257 = loc(fused[#loc93, #loc94])
#loc258 = loc(fused[#loc95, #loc96])
#loc259 = loc(fused[#loc97, #loc98])
#loc260 = loc(fused[#loc100, #loc99])
#loc261 = loc(fused[#loc102, #loc101])
#loc262 = loc(fused[#loc103, #loc104])
#loc263 = loc(fused[#loc105, #loc106])
#loc264 = loc(fused[#loc107, #loc108])
#loc265 = loc(fused[#loc109, #loc110])
#loc266 = loc(fused[#loc111, #loc112])
#loc267 = loc(fused[#loc113, #loc114])
#loc268 = loc(fused[#loc116, #loc117])
#loc269 = loc(fused[#loc115, #loc117])
#loc270 = loc(fused[#loc119, #loc120, #loc121, #loc114])
#loc271 = loc(fused[#loc124, #loc125])
#loc272 = loc(fused[#loc123, #loc125])
#loc273 = loc(fused[#loc122, #loc126])
#loc274 = loc(fused[#loc127, #loc126])
#loc275 = loc(fused[#loc128, #loc129])
#loc276 = loc(fused[#loc130, #loc131])
#loc277 = loc(fused[#loc133, #loc129])
#loc278 = loc(fused[#loc147, #loc148])
#loc279 = loc(fused[#loc149, #loc150])
#loc280 = loc(fused[#loc152, #loc151])
#loc281 = loc(fused[#loc153, #loc154])
#loc282 = loc(fused[#loc155, #loc156])
#loc283 = loc(fused[#loc157, #loc158])
#loc284 = loc(fused[#loc162, #loc163])
#loc285 = loc(fused[#loc165, #loc166, #loc167, #loc158])
#loc286 = loc(fused[#loc172, #loc173])
#loc287 = loc(fused[#loc176, #loc177])
#loc288 = loc(fused[#loc178, #loc179])
#loc289 = loc(fused[#loc180, #loc181])
#loc290 = loc(fused[#loc182, #loc183])
#loc291 = loc(fused[#loc184, #loc185])
#loc292 = loc(fused[#loc186, #loc187])
#loc293 = loc(fused[#loc189, #loc190])
#loc294 = loc(fused[#loc188, #loc190])
#loc295 = loc(fused[#loc193, #loc194])
#loc296 = loc(fused[#loc196, #loc197, #loc198, #loc187])
#loc297 = loc(fused[#loc201, #loc202])
#loc298 = loc(fused[#loc200, #loc202])
#loc299 = loc(fused[#loc199, #loc203])
#loc300 = loc(fused[#loc204, #loc203])
#loc301 = loc(fused[#loc205, #loc206])
#loc302 = loc(fused[#loc207, #loc208])
#loc303 = loc(fused[#loc210, #loc206])
