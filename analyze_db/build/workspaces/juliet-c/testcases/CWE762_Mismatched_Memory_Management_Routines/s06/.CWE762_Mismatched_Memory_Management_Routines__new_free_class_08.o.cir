!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %2 : !s32i loc(#loc165)
  } loc(#loc164)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc166)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc167)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc170)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc172)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc174)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc174)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc22)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc175)
      } loc(#loc173)
    } loc(#loc171)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc27)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc177)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc30)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc31)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc30)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc11)
  } loc(#loc168)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc33)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc34)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %2 : !s32i loc(#loc180)
  } loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc182)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc185)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc49)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc187)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc189)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc54)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc189)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc53)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc190)
      } loc(#loc188)
    } loc(#loc186)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc58)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc192)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc64)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc54)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc42)
  } loc(#loc183)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc196)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc73)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc198)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc200)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc78)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc200)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc77)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc201)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc82)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc203)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc85)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc78)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc66)
  } loc(#loc194)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc205)
  cir.func private @exit(!s32i) extra(#fn_attr2) loc(#loc206)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc209)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc98)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc211)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc104)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc105)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc106)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc106)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc214)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc105)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc215)
        cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc216)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc114)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc218)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc118)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr2) loc(#loc116)
          } loc(#loc219)
        } loc(#loc217)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc121)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc221)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc124)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc125)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc124)
      } loc(#loc222)
    } loc(#loc220)
    cir.return loc(#loc91)
  } loc(#loc207)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc130)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc225)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc134)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc227)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc137)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc138)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc138)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc229)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc230)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc137)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc231)
        cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc232)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc234)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc148)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc149)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc150)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr2) loc(#loc148)
          } loc(#loc235)
        } loc(#loc233)
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc153)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc237)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc156)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc157)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc156)
      } loc(#loc238)
    } loc(#loc236)
    cir.return loc(#loc127)
  } loc(#loc223)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_084goodEv() extra(#fn_attr) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodB2G1Ev() : () -> () loc(#loc160)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodB2G2Ev() : () -> () loc(#loc161)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodG2B1Ev() : () -> () loc(#loc162)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_08L8goodG2B2Ev() : () -> () loc(#loc163)
    cir.return loc(#loc159)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":23:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":26:1)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":25:12)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":25:5)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":38:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":54:1)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":40:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":40:20)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":42:12)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":42:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":43:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":47:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":43:8)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":43:26)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":44:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":46:16)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":46:20)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":38:6)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":46:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":48:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":53:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":48:8)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":48:26)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":49:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":52:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":52:14)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":28:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":31:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":30:12)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":30:5)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":74:19)
#loc39 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc40 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":61:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":81:1)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":63:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":63:20)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":65:12)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":65:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":66:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":70:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":66:8)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":66:26)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":67:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":69:16)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":69:20)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":61:13)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":69:9)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":71:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":80:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":71:8)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":71:27)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":72:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":75:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":77:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":74:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":79:16)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":84:1)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":99:1)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":86:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":86:20)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":88:12)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":88:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":89:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":93:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":89:8)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":89:26)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":90:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":92:16)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":92:20)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":84:13)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":92:9)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":94:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":98:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":94:8)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":94:26)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":95:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":97:16)
#loc86 = loc("/usr/include/stdlib.h":672:1)
#loc87 = loc("/usr/include/stdlib.h":672:45)
#loc88 = loc("/usr/include/stdlib.h":756:1)
#loc89 = loc("/usr/include/stdlib.h":756:70)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":102:1)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":124:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":104:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":104:20)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":106:12)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":106:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":107:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":117:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":107:8)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":107:27)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":108:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":111:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":113:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":110:19)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":110:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:32)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:39)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:43)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:62)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:63)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":115:9)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:9)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:37)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:13)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:21)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:27)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:28)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:34)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":116:33)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":118:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":123:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":118:8)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":118:26)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":119:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":122:9)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":122:14)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":127:1)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":144:1)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":129:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":129:20)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":131:12)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":131:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":132:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":137:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":132:8)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":132:26)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":133:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:32)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:39)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:43)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:62)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:63)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":135:9)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:9)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:37)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:13)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:21)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:27)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:28)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:34)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":136:33)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":138:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":143:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":138:8)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":138:26)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":139:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":142:9)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":142:14)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":146:1)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":152:1)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":148:5)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":149:5)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":150:5)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_08.cpp":151:5)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc4, #loc3])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc15, #loc14])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc18, #loc19])
#loc173 = loc(fused[#loc20, #loc17])
#loc174 = loc(fused[#loc21, #loc22])
#loc175 = loc(fused[#loc24, #loc22])
#loc176 = loc(fused[#loc25, #loc26])
#loc177 = loc(fused[#loc27, #loc28])
#loc178 = loc(fused[#loc29, #loc26])
#loc179 = loc(fused[#loc32, #loc33])
#loc180 = loc(fused[#loc35, #loc34])
#loc181 = loc(fused[#loc36, #loc37])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc41, #loc42])
#loc184 = loc(fused[#loc43, #loc44])
#loc185 = loc(fused[#loc46, #loc45])
#loc186 = loc(fused[#loc47, #loc48])
#loc187 = loc(fused[#loc49, #loc50])
#loc188 = loc(fused[#loc51, #loc48])
#loc189 = loc(fused[#loc52, #loc53])
#loc190 = loc(fused[#loc55, #loc53])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc194 = loc(fused[#loc65, #loc66])
#loc195 = loc(fused[#loc67, #loc68])
#loc196 = loc(fused[#loc70, #loc69])
#loc197 = loc(fused[#loc71, #loc72])
#loc198 = loc(fused[#loc73, #loc74])
#loc199 = loc(fused[#loc75, #loc72])
#loc200 = loc(fused[#loc76, #loc77])
#loc201 = loc(fused[#loc79, #loc77])
#loc202 = loc(fused[#loc80, #loc81])
#loc203 = loc(fused[#loc82, #loc83])
#loc204 = loc(fused[#loc84, #loc81])
#loc205 = loc(fused[#loc86, #loc87])
#loc206 = loc(fused[#loc88, #loc89])
#loc207 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc92, #loc93])
#loc209 = loc(fused[#loc95, #loc94])
#loc210 = loc(fused[#loc96, #loc97])
#loc211 = loc(fused[#loc98, #loc99])
#loc212 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc213 = loc(fused[#loc107, #loc108])
#loc214 = loc(fused[#loc106, #loc108])
#loc215 = loc(fused[#loc105, #loc109])
#loc216 = loc(fused[#loc110, #loc109])
#loc217 = loc(fused[#loc111, #loc112])
#loc218 = loc(fused[#loc113, #loc114])
#loc219 = loc(fused[#loc115, #loc112])
#loc220 = loc(fused[#loc119, #loc120])
#loc221 = loc(fused[#loc121, #loc122])
#loc222 = loc(fused[#loc123, #loc120])
#loc223 = loc(fused[#loc126, #loc127])
#loc224 = loc(fused[#loc128, #loc129])
#loc225 = loc(fused[#loc131, #loc130])
#loc226 = loc(fused[#loc132, #loc133])
#loc227 = loc(fused[#loc134, #loc135])
#loc228 = loc(fused[#loc136, #loc133])
#loc229 = loc(fused[#loc139, #loc140])
#loc230 = loc(fused[#loc138, #loc140])
#loc231 = loc(fused[#loc137, #loc141])
#loc232 = loc(fused[#loc142, #loc141])
#loc233 = loc(fused[#loc143, #loc144])
#loc234 = loc(fused[#loc145, #loc146])
#loc235 = loc(fused[#loc147, #loc144])
#loc236 = loc(fused[#loc151, #loc152])
#loc237 = loc(fused[#loc153, #loc154])
#loc238 = loc(fused[#loc155, #loc152])
#loc239 = loc(fused[#loc158, #loc159])
