!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":98:10)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":98:14)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":98:20)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":98:32)
#loc188 = loc(fused[#loc81, #loc82])
#loc189 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc11)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc15)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %24 = cir.const #cir.int<8> : !s32i loc(#loc21)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc21)
    %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %27 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc169)
      %28 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
      %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.store %29, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      %30 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %30, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
      cir.scope {
        %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc172)
        %32 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc173)
        %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
        %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %35 = cir.const #cir.int<67> : !s32i loc(#loc37)
        %36 = cir.const #cir.int<100> : !s32i loc(#loc38)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc38)
        %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc174)
        %40 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc42)
        %42 = cir.const #cir.int<100> : !s32i loc(#loc43)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc43)
        %45 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
        %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc175)
        cir.scope {
          %55 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc48)
          cir.store %56, %31 : !u64i, !cir.ptr<!u64i> loc(#loc177)
          cir.for : cond {
            %57 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %58 = cir.const #cir.int<100> : !s32i loc(#loc51)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc51)
            %60 = cir.cmp(lt, %57, %59) : !u64i, !cir.bool loc(#loc178)
            cir.condition(%60) loc(#loc52)
          } body {
            cir.scope {
              %57 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %58 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc55)
              %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc56)
              %60 = cir.load %59 : !cir.ptr<!s8i>, !s8i loc(#loc54)
              %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %62 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
              %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc58)
              cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc180)
            } loc(#loc179)
            cir.yield loc(#loc47)
          } step {
            %57 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc60)
            cir.store %58, %31 : !u64i, !cir.ptr<!u64i> loc(#loc181)
            cir.yield loc(#loc176)
          } loc(#loc176)
        } loc(#loc176)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc61)
        %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc61)
        %49 = cir.const #cir.int<100> : !s32i loc(#loc62)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc62)
        %52 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
        %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc182)
        %54 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } loc(#loc171)
    } loc(#loc168)
    cir.return loc(#loc4)
  } loc(#loc162)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE127_Buffer_Underread__char_alloca_loop_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE127_Buffer_Underread__char_alloca_loop_31_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE127_Buffer_Underread__char_alloca_loop_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE127_Buffer_Underread__char_alloca_loop_31_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc104)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc104)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc106)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc107)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc107)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc111)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc113)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.scope {
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc200)
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
      %27 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      cir.scope {
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc204)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc131)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc132)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc132)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc136)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc136)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc137)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc139)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        cir.scope {
          %52 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc142)
          cir.store %53, %28 : !u64i, !cir.ptr<!u64i> loc(#loc208)
          cir.for : cond {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %55 = cir.const #cir.int<100> : !s32i loc(#loc145)
            %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc145)
            %57 = cir.cmp(lt, %54, %56) : !u64i, !cir.bool loc(#loc209)
            cir.condition(%57) loc(#loc146)
          } body {
            cir.scope {
              %54 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %55 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc149)
              %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc150)
              %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc148)
              %58 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc151)
              %59 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
              %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc152)
              cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc211)
            } loc(#loc210)
            cir.yield loc(#loc141)
          } step {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc153)
            %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc154)
            cir.store %55, %28 : !u64i, !cir.ptr<!u64i> loc(#loc212)
            cir.yield loc(#loc207)
          } loc(#loc207)
        } loc(#loc207)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc155)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc155)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc156)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc156)
        %49 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
        %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc158)
        cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc213)
        %51 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
        cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc160)
      } loc(#loc202)
    } loc(#loc199)
    cir.return loc(#loc100)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":23:1)
#loc4 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":49:1)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":25:5)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":25:12)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":26:5)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":26:33)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:12)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:24)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:29)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:33)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:5)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":27:34)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":28:25)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":28:5)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":28:16)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":28:20)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":28:21)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":30:12)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":30:25)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":30:23)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":30:5)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":31:5)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":48:5)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":32:9)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":32:27)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":33:9)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":33:23)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":34:9)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":47:9)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":35:13)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":35:20)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":36:13)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":36:26)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:20)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:26)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:31)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:35)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:13)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":37:36)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":38:27)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":38:18)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":38:22)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":38:13)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:13)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":43:13)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:22)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:18)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:25)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:29)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:27)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":41:13)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":42:27)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":42:32)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":42:33)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":42:22)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":42:17)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:35)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":40:34)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":45:27)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":45:18)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":45:22)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":45:13)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":46:23)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":46:13)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":84:1)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":87:1)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":86:5)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":86:13)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":103:15)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":105:15)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":108:15)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":110:15)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":98:1)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":113:1)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":99:1)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":101:27)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":101:22)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":101:5)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":103:5)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":104:5)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":104:55)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":105:5)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":108:5)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":109:5)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":109:54)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":110:5)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":112:12)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":112:5)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":56:1)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":82:1)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":58:5)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":58:12)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":59:5)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":59:33)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:12)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:24)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:29)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:33)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:5)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":60:34)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":61:25)
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":61:5)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":61:16)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":61:20)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":61:21)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":63:12)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":63:5)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":64:5)
#loc119 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":81:5)
#loc120 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":65:9)
#loc121 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":65:27)
#loc122 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":66:9)
#loc123 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":66:23)
#loc124 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":67:9)
#loc125 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":80:9)
#loc126 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":68:13)
#loc127 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":68:20)
#loc128 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":69:13)
#loc129 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":69:26)
#loc130 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:20)
#loc131 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:26)
#loc132 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:31)
#loc133 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:35)
#loc134 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:13)
#loc135 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":70:36)
#loc136 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":71:27)
#loc137 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":71:18)
#loc138 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":71:22)
#loc139 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":71:13)
#loc140 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:13)
#loc141 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":76:13)
#loc142 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:22)
#loc143 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:18)
#loc144 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:25)
#loc145 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:29)
#loc146 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:27)
#loc147 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":74:13)
#loc148 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":75:27)
#loc149 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":75:32)
#loc150 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":75:33)
#loc151 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":75:22)
#loc152 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":75:17)
#loc153 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:35)
#loc154 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":73:34)
#loc155 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":78:27)
#loc156 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":78:18)
#loc157 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":78:22)
#loc158 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":78:13)
#loc159 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":79:23)
#loc160 = loc("CWE127_Buffer_Underread__char_alloca_loop_31.c":79:13)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc16, #loc15])
#loc167 = loc(fused[#loc23, #loc21])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc30, #loc31])
#loc172 = loc(fused[#loc32, #loc33])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc45, #loc42])
#loc176 = loc(fused[#loc46, #loc47])
#loc177 = loc(fused[#loc49, #loc48])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc53, #loc47])
#loc180 = loc(fused[#loc58, #loc56])
#loc181 = loc(fused[#loc60, #loc59])
#loc182 = loc(fused[#loc64, #loc61])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc69, #loc70])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc79, #loc80])
#loc190 = loc(fused[#loc90, #loc91])
#loc191 = loc(fused[#loc94, #loc95])
#loc192 = loc(fused[#loc98, #loc97])
#loc193 = loc(fused[#loc99, #loc100])
#loc194 = loc(fused[#loc101, #loc102])
#loc195 = loc(fused[#loc103, #loc104])
#loc196 = loc(fused[#loc109, #loc110])
#loc197 = loc(fused[#loc112, #loc111])
#loc198 = loc(fused[#loc117, #loc116])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc124, #loc125])
#loc203 = loc(fused[#loc126, #loc127])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc134, #loc135])
#loc206 = loc(fused[#loc139, #loc136])
#loc207 = loc(fused[#loc140, #loc141])
#loc208 = loc(fused[#loc143, #loc142])
#loc209 = loc(fused[#loc144, #loc145])
#loc210 = loc(fused[#loc147, #loc141])
#loc211 = loc(fused[#loc152, #loc150])
#loc212 = loc(fused[#loc154, #loc153])
#loc213 = loc(fused[#loc158, #loc155])
