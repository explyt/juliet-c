!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":121:10)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":121:14)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":121:20)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":121:32)
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc5)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc149)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc157)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc159)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc159)
    %9 = cir.call %8(%6) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.cast(int_to_ptr, %10 : !u64i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc5)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc33)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc34)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc15)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc152)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc165)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc62)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_07_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc176)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc177)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc149)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb10 loc(#loc89)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc94)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc95)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc97)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc105)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc108)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb7 loc(#loc101)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc109)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc110)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc112)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc85)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc79)
  } loc(#loc178)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc149)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc124)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc195)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc196)
  ^bb3:  // pred: ^bb2
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc128)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc129)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc131)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb4 loc(#loc198)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc199)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc200)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc139)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc142)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
    cir.br ^bb6 loc(#loc135)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc135)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc143)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc144)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc144)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc146)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc122)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc122)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc116)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":0:0)
#loc1 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":23:1)
#loc2 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":23:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":42:27)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":27:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":49:1)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":32:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":32:32)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":33:13)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":33:19)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":29:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":48:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":29:8)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":29:20)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":30:5)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":31:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":47:9)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":37:27)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":37:22)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":37:31)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":37:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":39:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":44:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":39:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":39:27)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":40:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":42:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":43:17)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":43:22)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":45:33)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":45:18)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":45:28)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":45:13)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":46:23)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":46:13)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":106:1)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":110:1)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":108:5)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":108:11)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":109:5)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":109:11)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":126:15)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":128:15)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":131:15)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":133:15)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":121:1)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":136:1)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":122:1)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":124:27)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":124:22)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":124:5)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":126:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":127:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":127:64)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":128:5)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":131:5)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":132:5)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":132:63)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":133:5)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":135:12)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":135:5)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":61:19)
#loc74 = loc("/usr/include/stdio.h":654:1)
#loc75 = loc("/usr/include/stdio.h":655:59)
#loc76 = loc("/usr/include/stdio.h":149:1)
#loc77 = loc("/usr/include/stdio.h":149:14)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":56:1)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":81:1)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":66:13)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":66:32)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":67:13)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":67:19)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":58:5)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":80:5)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":58:8)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":58:20)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":59:5)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":62:5)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":64:5)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":61:9)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":65:9)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":79:9)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:28)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:34)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:45)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:22)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:13)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":69:50)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":71:13)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":76:13)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":71:17)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":71:27)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":72:13)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":74:27)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":74:17)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":75:17)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":75:22)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":77:33)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":77:18)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":77:28)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":77:13)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":78:23)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":78:13)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":84:1)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":104:1)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":89:13)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":89:32)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":90:13)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":90:19)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":86:5)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":103:5)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":86:8)
#loc124 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":86:20)
#loc125 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":87:5)
#loc126 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":88:9)
#loc127 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":102:9)
#loc128 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:28)
#loc129 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:34)
#loc130 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:45)
#loc131 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:22)
#loc132 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:13)
#loc133 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":92:50)
#loc134 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":94:13)
#loc135 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":99:13)
#loc136 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":94:17)
#loc137 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":94:27)
#loc138 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":95:13)
#loc139 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":97:27)
#loc140 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":97:17)
#loc141 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":98:17)
#loc142 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":98:22)
#loc143 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":100:33)
#loc144 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":100:18)
#loc145 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":100:28)
#loc146 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":100:13)
#loc147 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":101:23)
#loc148 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_07.c":101:13)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc6, #loc7])
#loc152 = loc(fused[#loc8, #loc9])
#loc153 = loc(fused[#loc10, #loc11])
#loc154 = loc(fused[#loc12, #loc13])
#loc155 = loc(fused[#loc14, #loc15])
#loc156 = loc(fused[#loc16, #loc17])
#loc157 = loc(fused[#loc18, #loc15])
#loc158 = loc(fused[#loc19, #loc20])
#loc159 = loc(fused[#loc22, #loc23])
#loc160 = loc(fused[#loc24, #loc23])
#loc161 = loc(fused[#loc25, #loc26])
#loc162 = loc(fused[#loc27, #loc28])
#loc163 = loc(fused[#loc29, #loc26])
#loc164 = loc(fused[#loc36, #loc33])
#loc165 = loc(fused[#loc39, #loc40])
#loc166 = loc(fused[#loc41, #loc42])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc48])
#loc170 = loc(fused[#loc53, #loc54])
#loc173 = loc(fused[#loc64, #loc65])
#loc174 = loc(fused[#loc68, #loc69])
#loc175 = loc(fused[#loc72, #loc71])
#loc176 = loc(fused[#loc74, #loc75])
#loc177 = loc(fused[#loc76, #loc77])
#loc178 = loc(fused[#loc78, #loc79])
#loc179 = loc(fused[#loc80, #loc81])
#loc180 = loc(fused[#loc82, #loc83])
#loc181 = loc(fused[#loc84, #loc85])
#loc182 = loc(fused[#loc86, #loc87])
#loc183 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc184 = loc(fused[#loc92, #loc93])
#loc185 = loc(fused[#loc98, #loc99])
#loc186 = loc(fused[#loc100, #loc101])
#loc187 = loc(fused[#loc102, #loc103])
#loc188 = loc(fused[#loc104, #loc101])
#loc189 = loc(fused[#loc112, #loc109])
#loc190 = loc(fused[#loc115, #loc116])
#loc191 = loc(fused[#loc117, #loc118])
#loc192 = loc(fused[#loc119, #loc120])
#loc193 = loc(fused[#loc121, #loc122])
#loc194 = loc(fused[#loc123, #loc124])
#loc195 = loc(fused[#loc125, #loc122])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc132, #loc133])
#loc198 = loc(fused[#loc134, #loc135])
#loc199 = loc(fused[#loc136, #loc137])
#loc200 = loc(fused[#loc138, #loc135])
#loc201 = loc(fused[#loc146, #loc143])
