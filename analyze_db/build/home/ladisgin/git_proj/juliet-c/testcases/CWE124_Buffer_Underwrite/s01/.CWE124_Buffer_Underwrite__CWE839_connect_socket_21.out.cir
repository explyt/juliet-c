!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":47:21)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":47:25)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":389:10)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":389:14)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":389:20)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":389:32)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":148:26)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":148:30)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":244:26)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":244:30)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":335:25)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":335:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc547 = loc(fused[#loc23, #loc24])
#loc606 = loc(fused[#loc178, #loc179])
#loc607 = loc(fused[#loc180, #loc181])
#loc613 = loc(fused[#loc202, #loc203])
#loc667 = loc(fused[#loc345, #loc346])
#loc721 = loc(fused[#loc486, #loc487])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc537)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc538)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc539)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc540)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc541)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc542)
  cir.func private @close(!s32i) -> !s32i loc(#loc543)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc544)
  cir.func private @printIntLine(!s32i) loc(#loc545)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc547)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc544)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc551)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc552)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc552)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc552)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc39)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc554)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc45)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc556)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc48)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc558)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc51)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc559)
                  cir.condition(%17) loc(#loc52)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc55)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc55)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc56)
                  } loc(#loc560)
                  cir.yield loc(#loc47)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc58)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc561)
                  cir.yield loc(#loc557)
                } loc(#loc557)
              } loc(#loc557)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc59)
            } loc(#loc555)
          } loc(#loc553)
        } loc(#loc550)
      } loc(#loc549)
    } loc(#loc548)
    cir.return loc(#loc22)
  } loc(#loc546)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc563)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc566)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc567)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc568)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc569)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc74)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc74)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc568)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc79)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc81)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc571)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc88)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc573)
            cir.if %57 {
              cir.break loc(#loc90)
            } loc(#loc574)
          } loc(#loc572)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc575)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc576)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc577)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc98)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc98)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc578)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc101)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc102)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc103)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc579)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc106)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc106)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc107)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc108)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc580)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc582)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc583)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc583)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc118)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc119)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc584)
            cir.if %61 {
              cir.break loc(#loc121)
            } loc(#loc585)
          } loc(#loc581)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc124)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc124)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc124)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc124)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc124)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc124)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc124)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc125)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc125)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc586)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc127)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc127)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc587)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc133)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc589)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc134)
              cir.yield %59 : !cir.bool loc(#loc134)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc590)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc134)
                cir.yield %63 : !cir.bool loc(#loc134)
              }, false {
                %63 = cir.const #false loc(#loc134)
                cir.yield %63 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.yield %62 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.if %58 {
              cir.break loc(#loc138)
            } loc(#loc591)
          } loc(#loc588)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc139)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc141)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc141)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc592)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
          cir.yield loc(#loc78)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc146)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc146)
          cir.condition(%13) loc(#loc146)
        } loc(#loc570)
      } loc(#loc570)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc150)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc595)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc153)
        } loc(#loc596)
      } loc(#loc594)
    } loc(#loc565)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc544)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc157)
    cir.return loc(#loc61)
  } loc(#loc562)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc599)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc600)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc601)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    cir.return loc(#loc159)
  } loc(#loc598)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc602)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc603)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc604)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc175)
  cir.func @main(%arg0: !s32i loc(fused[#loc178, #loc179]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc180, #loc181])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc606)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc607)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc183)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc184)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc184)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc185)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc172)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc608)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_good() : () -> () loc(#loc187)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc173)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc174)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc609)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_21_bad() : () -> () loc(#loc191)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc175)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc194)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc610)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc610)
    cir.return %17 : !s32i loc(#loc610)
  } loc(#loc605)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc611)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc199)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc202, #loc203])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc613)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc611)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc207)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc198)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc198)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc211)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc617)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc618)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc618)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc618)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc221)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc620)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc224)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc621)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc222)
                cir.yield %15 : !cir.bool loc(#loc222)
              }, false {
                %15 = cir.const #false loc(#loc222)
                cir.yield %15 : !cir.bool loc(#loc222)
              }) : (!cir.bool) -> !cir.bool loc(#loc222)
              cir.yield %14 : !cir.bool loc(#loc222)
            }, false {
              %11 = cir.const #false loc(#loc222)
              cir.yield %11 : !cir.bool loc(#loc222)
            }) : (!cir.bool) -> !cir.bool loc(#loc222)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc229)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc231)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc231)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc623)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc234)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc625)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc237)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc626)
                  cir.condition(%18) loc(#loc238)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc241)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc241)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc242)
                  } loc(#loc627)
                  cir.yield loc(#loc233)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc244)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc628)
                  cir.yield loc(#loc624)
                } loc(#loc624)
              } loc(#loc624)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc199)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc199)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc245)
            } loc(#loc622)
          } loc(#loc619)
        } loc(#loc616)
      } loc(#loc615)
    } loc(#loc614)
    cir.return loc(#loc201)
  } loc(#loc612)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc630)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc251)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc633)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc634)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc635)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc636)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc260)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc260)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc635)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc265)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc266)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc267)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc268)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc638)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc273)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc274)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc274)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc640)
            cir.if %57 {
              cir.break loc(#loc276)
            } loc(#loc641)
          } loc(#loc639)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc642)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc643)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc644)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc284)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc284)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc645)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc286)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc286)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc287)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc102)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc103)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc646)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc290)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc290)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc291)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc108)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc647)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc296)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc649)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc650)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc650)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc301)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc302)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc302)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc651)
            cir.if %61 {
              cir.break loc(#loc304)
            } loc(#loc652)
          } loc(#loc648)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc306)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc306)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc307)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc307)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc307)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc307)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc307)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc307)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc307)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc308)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc308)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc653)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc309)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc310)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc310)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc654)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc315)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc316)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc316)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc656)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc317)
              cir.yield %59 : !cir.bool loc(#loc317)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc319)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc657)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc317)
                cir.yield %63 : !cir.bool loc(#loc317)
              }, false {
                %63 = cir.const #false loc(#loc317)
                cir.yield %63 : !cir.bool loc(#loc317)
              }) : (!cir.bool) -> !cir.bool loc(#loc317)
              cir.yield %62 : !cir.bool loc(#loc317)
            }) : (!cir.bool) -> !cir.bool loc(#loc317)
            cir.if %58 {
              cir.break loc(#loc321)
            } loc(#loc658)
          } loc(#loc655)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc322)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc322)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc323)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc324)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc324)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc659)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc325)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc326)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc660)
          cir.yield loc(#loc264)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc329)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc329)
          cir.condition(%13) loc(#loc329)
        } loc(#loc637)
      } loc(#loc637)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc332)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc333)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc333)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc662)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc335)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc336)
        } loc(#loc663)
      } loc(#loc661)
    } loc(#loc632)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc337)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc611)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc664)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc340)
    cir.return loc(#loc247)
  } loc(#loc629)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc665)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc345, #loc346])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc667)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc665)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc350)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc350)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc671)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc672)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc672)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc672)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc360)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc361)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc674)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc364)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc675)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc362)
                cir.yield %15 : !cir.bool loc(#loc362)
              }, false {
                %15 = cir.const #false loc(#loc362)
                cir.yield %15 : !cir.bool loc(#loc362)
              }) : (!cir.bool) -> !cir.bool loc(#loc362)
              cir.yield %14 : !cir.bool loc(#loc362)
            }, false {
              %11 = cir.const #false loc(#loc362)
              cir.yield %11 : !cir.bool loc(#loc362)
            }) : (!cir.bool) -> !cir.bool loc(#loc362)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc369)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc371)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc371)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc677)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc374)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc679)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc377)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc680)
                  cir.condition(%18) loc(#loc378)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc381)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc381)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc381)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc382)
                  } loc(#loc681)
                  cir.yield loc(#loc373)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc384)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc682)
                  cir.yield loc(#loc678)
                } loc(#loc678)
              } loc(#loc678)
            } else {
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc385)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc385)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc386)
            } loc(#loc676)
          } loc(#loc673)
        } loc(#loc670)
      } loc(#loc669)
    } loc(#loc668)
    cir.return loc(#loc344)
  } loc(#loc666)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc684)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc391)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc392)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc685)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc687)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc688)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc689)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc690)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc401)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc401)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc689)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc406)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc407)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc408)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc409)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc692)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc414)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc415)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc415)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc694)
            cir.if %57 {
              cir.break loc(#loc417)
            } loc(#loc695)
          } loc(#loc693)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc696)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc420)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc697)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc698)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc425)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc425)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc699)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc427)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc427)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc428)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc102)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc103)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc700)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc431)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc431)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc432)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc108)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc701)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc437)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc703)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc704)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc704)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc442)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc443)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc443)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc705)
            cir.if %61 {
              cir.break loc(#loc445)
            } loc(#loc706)
          } loc(#loc702)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc446)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc447)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc447)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc448)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc448)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc448)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc448)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc448)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc448)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc448)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc449)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc449)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc707)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc450)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc451)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc451)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc708)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc456)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc457)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc457)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc710)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc458)
              cir.yield %59 : !cir.bool loc(#loc458)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc459)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc460)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc711)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc458)
                cir.yield %63 : !cir.bool loc(#loc458)
              }, false {
                %63 = cir.const #false loc(#loc458)
                cir.yield %63 : !cir.bool loc(#loc458)
              }) : (!cir.bool) -> !cir.bool loc(#loc458)
              cir.yield %62 : !cir.bool loc(#loc458)
            }) : (!cir.bool) -> !cir.bool loc(#loc458)
            cir.if %58 {
              cir.break loc(#loc462)
            } loc(#loc712)
          } loc(#loc709)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc463)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc463)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc464)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc465)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc465)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc713)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc466)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc467)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc714)
          cir.yield loc(#loc405)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc470)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc470)
          cir.condition(%13) loc(#loc470)
        } loc(#loc691)
      } loc(#loc691)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc473)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc474)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc474)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc716)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc476)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc477)
        } loc(#loc717)
      } loc(#loc715)
    } loc(#loc686)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc478)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc665)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc718)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc480)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc481)
    cir.return loc(#loc388)
  } loc(#loc683)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc719)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc486, #loc487])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc721)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc719)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc491)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc491)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc725)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc726)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc726)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc726)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc501)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc502)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc728)
            cir.if %9 {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc506)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc507)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc508)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc508)
              cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc730)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc511)
                cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc732)
                cir.for : cond {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc513)
                  %16 = cir.const #cir.int<10> : !s32i loc(#loc514)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc733)
                  cir.condition(%17) loc(#loc515)
                } body {
                  cir.scope {
                    %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc517)
                    %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc518)
                    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc518)
                    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc518)
                    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc519)
                  } loc(#loc734)
                  cir.yield loc(#loc510)
                } step {
                  %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc520)
                  %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc521)
                  cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc735)
                  cir.yield loc(#loc731)
                } loc(#loc731)
              } loc(#loc731)
            } else {
              %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc522)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc522)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc523)
            } loc(#loc729)
          } loc(#loc727)
        } loc(#loc724)
      } loc(#loc723)
    } loc(#loc722)
    cir.return loc(#loc485)
  } loc(#loc720)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc737)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc528)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc529)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc738)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc531)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc739)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc533)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc719)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc740)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc535)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc536)
    cir.return loc(#loc525)
  } loc(#loc736)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":104:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":45:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":67:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":47:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":71:1)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":48:1)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":49:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":70:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":49:8)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":50:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":51:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":69:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":52:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":52:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":53:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":53:34)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":56:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":68:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":56:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":56:24)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":57:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":64:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":66:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":58:32)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":58:24)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":58:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":63:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:25)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:21)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:28)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:32)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:30)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":61:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":62:41)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":62:34)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":62:21)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:37)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":60:36)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":67:17)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":73:1)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":136:1)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":75:5)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":75:9)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":77:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":77:12)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":77:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":78:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":133:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":83:9)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":83:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":84:9)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":84:28)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":85:9)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":85:32)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":86:9)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":86:41)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":87:9)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":122:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:36)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:45)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:58)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:29)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":97:69)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":98:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":101:13)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":98:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":98:34)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":99:13)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":100:17)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:20)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:21)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:30)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:33)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:47)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:13)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":102:48)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":103:34)
#loc99 = loc("/usr/include/netinet/in.h":249:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":103:13)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":104:39)
#loc102 = loc("/usr/include/netinet/in.h":251:20)
#loc103 = loc("/usr/include/netinet/in.h":33:15)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":104:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":104:59)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":105:38)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":105:32)
#loc108 = loc("/usr/include/netinet/in.h":250:15)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":105:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":105:46)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:13)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":109:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:25)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:58)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:59)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:68)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:82)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":106:88)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":107:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":108:17)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:31)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:46)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:59)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:77)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:80)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:26)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":112:81)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":116:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:17)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:31)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:44)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:47)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":113:61)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":114:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":115:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":118:39)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":118:25)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":118:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":120:25)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":120:20)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":120:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":120:36)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":122:16)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":123:9)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":126:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":123:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":123:30)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":124:9)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":125:26)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":125:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":134:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":134:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":135:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":135:5)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":373:1)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":378:1)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":375:5)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":375:14)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":376:5)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":376:14)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":377:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":377:13)
#loc166 = loc("/usr/include/stdlib.h":575:1)
#loc167 = loc("/usr/include/stdlib.h":575:41)
#loc168 = loc("/usr/include/time.h":76:1)
#loc169 = loc("/usr/include/time.h":76:38)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":394:15)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":396:15)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":399:15)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":401:15)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":389:1)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":404:1)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":390:1)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":392:27)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":392:22)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":392:5)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":394:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":395:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":395:61)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":396:5)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":399:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":400:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":400:60)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":401:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":403:12)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":403:5)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":143:1)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":143:29)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":153:19)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":172:27)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":148:1)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":176:1)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":149:1)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":150:5)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":175:5)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":150:8)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":151:5)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":154:5)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":156:5)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":153:9)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":157:9)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":174:9)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":158:13)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":158:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":159:13)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":159:34)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":173:13)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:17)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:25)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:27)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:30)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:38)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":161:40)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":162:13)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":169:13)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":171:13)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":163:32)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":163:24)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":163:17)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:17)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":168:17)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:25)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:21)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:28)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:32)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:30)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":166:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":167:41)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":167:34)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":167:21)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:37)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":165:36)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":172:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":178:1)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":241:1)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":180:5)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":180:9)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":182:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":182:12)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":182:5)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":183:5)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":238:5)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":188:9)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":188:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":189:9)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":189:28)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":190:9)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":190:32)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":191:9)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":191:41)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":192:9)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":227:17)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:36)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:45)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:58)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:29)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:13)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":202:69)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":203:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":206:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":203:17)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":203:34)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":204:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":205:17)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:20)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:21)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:30)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:33)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:47)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":207:48)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":208:34)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":208:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":209:49)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":209:39)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":209:13)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":209:59)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":210:38)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":210:32)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":210:13)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":210:46)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":214:13)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:25)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:58)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:59)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:68)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:82)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:17)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":211:88)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":212:13)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":213:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:31)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:46)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:59)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:77)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:80)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:26)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:13)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":217:81)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":221:13)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:17)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:31)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:44)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:47)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":218:61)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":219:13)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":220:17)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":223:39)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":223:25)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":223:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":225:25)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":225:20)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":225:13)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":225:36)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":227:16)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":228:9)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":231:9)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":228:13)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":228:30)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":229:9)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":230:26)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":230:13)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":239:22)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":239:5)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":240:18)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":240:5)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":144:1)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":144:29)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":244:1)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":267:1)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":245:1)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":246:5)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":266:5)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":246:8)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":247:5)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":248:9)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":265:9)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":249:13)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":249:17)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":250:13)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":250:34)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:13)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":264:13)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:25)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:27)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:30)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:38)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":252:40)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":253:13)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":260:13)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":262:13)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":254:32)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":254:24)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":254:17)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:17)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":259:17)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:25)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:21)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:28)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:32)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:30)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":257:17)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":258:41)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":258:34)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":258:21)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:37)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":256:36)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":263:27)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":263:17)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":269:1)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":332:1)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":271:5)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":271:9)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":273:13)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":273:12)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":273:5)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":274:5)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":329:5)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":279:9)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":279:13)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":280:9)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":280:28)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":281:9)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":281:32)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":282:9)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":282:41)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":283:9)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":318:17)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:36)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:45)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:58)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:29)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:13)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":293:69)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":294:13)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":297:13)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":294:17)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":294:34)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":295:13)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":296:17)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:20)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:21)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:30)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:33)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:47)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:13)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":298:48)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":299:34)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":299:13)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":300:49)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":300:39)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":300:13)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":300:59)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":301:38)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":301:32)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":301:13)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":301:46)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:13)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":305:13)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:25)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:58)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:59)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:68)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:82)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:17)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":302:88)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":303:13)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":304:17)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:31)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:46)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:59)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:77)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:80)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:26)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:13)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":308:81)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:13)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":312:13)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:17)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:31)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:44)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:47)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":309:61)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":310:13)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":311:17)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":314:39)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":314:25)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":314:13)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":316:25)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":316:20)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":316:13)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":316:36)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":318:16)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":319:9)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":322:9)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":319:13)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":319:30)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":320:9)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":321:26)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":321:13)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":330:22)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":330:5)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":331:18)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":331:5)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":145:1)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":145:28)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":335:1)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":359:1)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":336:1)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":337:5)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":358:5)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":337:8)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":338:5)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":339:9)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":357:9)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":340:13)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":340:17)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":341:13)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":341:34)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":344:13)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":356:13)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":344:17)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":344:24)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":345:13)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":352:13)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":354:13)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":346:32)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":346:24)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":346:17)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:17)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":351:17)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:25)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:21)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:28)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:32)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:30)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":349:17)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":350:41)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":350:34)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":350:21)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:37)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":348:36)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":355:27)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":355:17)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":361:1)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":371:1)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":363:5)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":363:9)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":365:13)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":365:12)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":365:5)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":368:12)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":368:5)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":369:21)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":369:5)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":370:17)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_21.c":370:5)
#loc537 = loc(fused[#loc1, #loc2])
#loc538 = loc(fused[#loc3, #loc4])
#loc539 = loc(fused[#loc6, #loc7])
#loc540 = loc(fused[#loc8, #loc9])
#loc541 = loc(fused[#loc10, #loc11])
#loc542 = loc(fused[#loc12, #loc13])
#loc543 = loc(fused[#loc14, #loc15])
#loc544 = loc(fused[#loc16, #loc17])
#loc545 = loc(fused[#loc18, #loc19])
#loc546 = loc(fused[#loc21, #loc22])
#loc548 = loc(fused[#loc26, #loc27])
#loc549 = loc(fused[#loc29, #loc27])
#loc550 = loc(fused[#loc30, #loc31])
#loc551 = loc(fused[#loc32, #loc33])
#loc552 = loc(fused[#loc34, #loc35])
#loc553 = loc(fused[#loc36, #loc37])
#loc554 = loc(fused[#loc38, #loc39])
#loc555 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc556 = loc(fused[#loc45, #loc43])
#loc557 = loc(fused[#loc46, #loc47])
#loc558 = loc(fused[#loc49, #loc48])
#loc559 = loc(fused[#loc50, #loc51])
#loc560 = loc(fused[#loc53, #loc47])
#loc561 = loc(fused[#loc58, #loc57])
#loc562 = loc(fused[#loc60, #loc61])
#loc563 = loc(fused[#loc62, #loc63])
#loc564 = loc(fused[#loc66, #loc64])
#loc565 = loc(fused[#loc67, #loc68])
#loc566 = loc(fused[#loc69, #loc70])
#loc567 = loc(fused[#loc71, #loc72])
#loc568 = loc(fused[#loc73, #loc74])
#loc569 = loc(fused[#loc75, #loc76])
#loc570 = loc(fused[#loc77, #loc78])
#loc571 = loc(fused[#loc83, #loc84])
#loc572 = loc(fused[#loc85, #loc86])
#loc573 = loc(fused[#loc87, #loc88])
#loc574 = loc(fused[#loc89, #loc86])
#loc575 = loc(fused[#loc91, #loc92])
#loc576 = loc(fused[#loc94, #loc95])
#loc577 = loc(fused[#loc96, #loc97])
#loc578 = loc(fused[#loc100, #loc98])
#loc579 = loc(fused[#loc104, #loc105])
#loc580 = loc(fused[#loc109, #loc110])
#loc581 = loc(fused[#loc111, #loc112])
#loc582 = loc(fused[#loc114, #loc115])
#loc583 = loc(fused[#loc116, #loc117])
#loc584 = loc(fused[#loc118, #loc119])
#loc585 = loc(fused[#loc120, #loc112])
#loc586 = loc(fused[#loc124, #loc125])
#loc587 = loc(fused[#loc128, #loc129])
#loc588 = loc(fused[#loc130, #loc131])
#loc589 = loc(fused[#loc132, #loc133])
#loc590 = loc(fused[#loc135, #loc136])
#loc591 = loc(fused[#loc137, #loc131])
#loc592 = loc(fused[#loc141, #loc139])
#loc593 = loc(fused[#loc144, #loc145])
#loc594 = loc(fused[#loc147, #loc148])
#loc595 = loc(fused[#loc149, #loc150])
#loc596 = loc(fused[#loc151, #loc148])
#loc597 = loc(fused[#loc155, #loc154])
#loc598 = loc(fused[#loc158, #loc159])
#loc599 = loc(fused[#loc160, #loc161])
#loc600 = loc(fused[#loc162, #loc163])
#loc601 = loc(fused[#loc164, #loc165])
#loc602 = loc(fused[#loc166, #loc167])
#loc603 = loc(fused[#loc168, #loc169])
#loc604 = loc(fused[#loc170, #loc171])
#loc605 = loc(fused[#loc176, #loc177])
#loc608 = loc(fused[#loc187, #loc188])
#loc609 = loc(fused[#loc191, #loc192])
#loc610 = loc(fused[#loc195, #loc194])
#loc611 = loc(fused[#loc196, #loc197])
#loc612 = loc(fused[#loc200, #loc201])
#loc614 = loc(fused[#loc205, #loc206])
#loc615 = loc(fused[#loc208, #loc209, #loc210, #loc206])
#loc616 = loc(fused[#loc212, #loc213])
#loc617 = loc(fused[#loc214, #loc215])
#loc618 = loc(fused[#loc216, #loc217])
#loc619 = loc(fused[#loc218, #loc219])
#loc620 = loc(fused[#loc220, #loc221])
#loc621 = loc(fused[#loc223, #loc225])
#loc622 = loc(fused[#loc226, #loc227, #loc228, #loc219])
#loc623 = loc(fused[#loc231, #loc229])
#loc624 = loc(fused[#loc232, #loc233])
#loc625 = loc(fused[#loc235, #loc234])
#loc626 = loc(fused[#loc236, #loc237])
#loc627 = loc(fused[#loc239, #loc233])
#loc628 = loc(fused[#loc244, #loc243])
#loc629 = loc(fused[#loc246, #loc247])
#loc630 = loc(fused[#loc248, #loc249])
#loc631 = loc(fused[#loc252, #loc250])
#loc632 = loc(fused[#loc253, #loc254])
#loc633 = loc(fused[#loc255, #loc256])
#loc634 = loc(fused[#loc257, #loc258])
#loc635 = loc(fused[#loc259, #loc260])
#loc636 = loc(fused[#loc261, #loc262])
#loc637 = loc(fused[#loc263, #loc264])
#loc638 = loc(fused[#loc269, #loc270])
#loc639 = loc(fused[#loc271, #loc272])
#loc640 = loc(fused[#loc273, #loc274])
#loc641 = loc(fused[#loc275, #loc272])
#loc642 = loc(fused[#loc277, #loc278])
#loc643 = loc(fused[#loc280, #loc281])
#loc644 = loc(fused[#loc282, #loc283])
#loc645 = loc(fused[#loc285, #loc284])
#loc646 = loc(fused[#loc288, #loc289])
#loc647 = loc(fused[#loc292, #loc293])
#loc648 = loc(fused[#loc294, #loc295])
#loc649 = loc(fused[#loc297, #loc298])
#loc650 = loc(fused[#loc299, #loc300])
#loc651 = loc(fused[#loc301, #loc302])
#loc652 = loc(fused[#loc303, #loc295])
#loc653 = loc(fused[#loc307, #loc308])
#loc654 = loc(fused[#loc311, #loc312])
#loc655 = loc(fused[#loc313, #loc314])
#loc656 = loc(fused[#loc315, #loc316])
#loc657 = loc(fused[#loc318, #loc319])
#loc658 = loc(fused[#loc320, #loc314])
#loc659 = loc(fused[#loc324, #loc322])
#loc660 = loc(fused[#loc327, #loc328])
#loc661 = loc(fused[#loc330, #loc331])
#loc662 = loc(fused[#loc332, #loc333])
#loc663 = loc(fused[#loc334, #loc331])
#loc664 = loc(fused[#loc338, #loc337])
#loc665 = loc(fused[#loc341, #loc342])
#loc666 = loc(fused[#loc343, #loc344])
#loc668 = loc(fused[#loc348, #loc349])
#loc669 = loc(fused[#loc351, #loc349])
#loc670 = loc(fused[#loc352, #loc353])
#loc671 = loc(fused[#loc354, #loc355])
#loc672 = loc(fused[#loc356, #loc357])
#loc673 = loc(fused[#loc358, #loc359])
#loc674 = loc(fused[#loc360, #loc361])
#loc675 = loc(fused[#loc363, #loc365])
#loc676 = loc(fused[#loc366, #loc367, #loc368, #loc359])
#loc677 = loc(fused[#loc371, #loc369])
#loc678 = loc(fused[#loc372, #loc373])
#loc679 = loc(fused[#loc375, #loc374])
#loc680 = loc(fused[#loc376, #loc377])
#loc681 = loc(fused[#loc379, #loc373])
#loc682 = loc(fused[#loc384, #loc383])
#loc683 = loc(fused[#loc387, #loc388])
#loc684 = loc(fused[#loc389, #loc390])
#loc685 = loc(fused[#loc393, #loc391])
#loc686 = loc(fused[#loc394, #loc395])
#loc687 = loc(fused[#loc396, #loc397])
#loc688 = loc(fused[#loc398, #loc399])
#loc689 = loc(fused[#loc400, #loc401])
#loc690 = loc(fused[#loc402, #loc403])
#loc691 = loc(fused[#loc404, #loc405])
#loc692 = loc(fused[#loc410, #loc411])
#loc693 = loc(fused[#loc412, #loc413])
#loc694 = loc(fused[#loc414, #loc415])
#loc695 = loc(fused[#loc416, #loc413])
#loc696 = loc(fused[#loc418, #loc419])
#loc697 = loc(fused[#loc421, #loc422])
#loc698 = loc(fused[#loc423, #loc424])
#loc699 = loc(fused[#loc426, #loc425])
#loc700 = loc(fused[#loc429, #loc430])
#loc701 = loc(fused[#loc433, #loc434])
#loc702 = loc(fused[#loc435, #loc436])
#loc703 = loc(fused[#loc438, #loc439])
#loc704 = loc(fused[#loc440, #loc441])
#loc705 = loc(fused[#loc442, #loc443])
#loc706 = loc(fused[#loc444, #loc436])
#loc707 = loc(fused[#loc448, #loc449])
#loc708 = loc(fused[#loc452, #loc453])
#loc709 = loc(fused[#loc454, #loc455])
#loc710 = loc(fused[#loc456, #loc457])
#loc711 = loc(fused[#loc459, #loc460])
#loc712 = loc(fused[#loc461, #loc455])
#loc713 = loc(fused[#loc465, #loc463])
#loc714 = loc(fused[#loc468, #loc469])
#loc715 = loc(fused[#loc471, #loc472])
#loc716 = loc(fused[#loc473, #loc474])
#loc717 = loc(fused[#loc475, #loc472])
#loc718 = loc(fused[#loc479, #loc478])
#loc719 = loc(fused[#loc482, #loc483])
#loc720 = loc(fused[#loc484, #loc485])
#loc722 = loc(fused[#loc489, #loc490])
#loc723 = loc(fused[#loc492, #loc490])
#loc724 = loc(fused[#loc493, #loc494])
#loc725 = loc(fused[#loc495, #loc496])
#loc726 = loc(fused[#loc497, #loc498])
#loc727 = loc(fused[#loc499, #loc500])
#loc728 = loc(fused[#loc501, #loc502])
#loc729 = loc(fused[#loc503, #loc504, #loc505, #loc500])
#loc730 = loc(fused[#loc508, #loc506])
#loc731 = loc(fused[#loc509, #loc510])
#loc732 = loc(fused[#loc512, #loc511])
#loc733 = loc(fused[#loc513, #loc514])
#loc734 = loc(fused[#loc516, #loc510])
#loc735 = loc(fused[#loc521, #loc520])
#loc736 = loc(fused[#loc524, #loc525])
#loc737 = loc(fused[#loc526, #loc527])
#loc738 = loc(fused[#loc530, #loc528])
#loc739 = loc(fused[#loc532, #loc531])
#loc740 = loc(fused[#loc534, #loc533])
