!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":80:10)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":80:14)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":80:20)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":80:32)
#loc128 = loc(fused[#loc55, #loc56])
#loc129 = loc(fused[#loc57, #loc58])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE126_Buffer_Overread__char_alloca_memmove_65b_badSink(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %3 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_65b_badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc8)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc114)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc10)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc10)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc116)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc12)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc12)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc15)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc117)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc19)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc21)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc118)
    %33 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %35 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc26)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc30)
    %42 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc32)
    %46 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc37)
    %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call %48(%49) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc37)
    cir.return loc(#loc4)
  } loc(#loc112)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc122)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc124)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc125)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_65_good : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_65_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_65_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_65_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.return %17 : !s32i loc(#loc132)
  } loc(#loc127)
  cir.func private @CWE126_Buffer_Overread__char_alloca_memmove_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc133)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %3 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc80)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc136)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc82)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc82)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc82)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc82)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc82)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
    cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc84)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc84)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc84)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc84)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc84)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc86)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc87)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc87)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc91)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc93)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc93)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc95)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    %33 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %35 = cir.const #cir.int<65> : !s32i loc(#loc97)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc98)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc102)
    %42 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc104)
    %46 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %47 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc109)
    %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call %48(%49) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc109)
    cir.return loc(#loc76)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_65a.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":24:1)
#loc2 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":24:73)
#loc3 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":26:1)
#loc4 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":41:1)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":28:5)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":28:12)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":30:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":30:32)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":31:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":31:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":32:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":32:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":33:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":34:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":34:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":34:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":34:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":34:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":35:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":36:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":36:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":36:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":36:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":36:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":38:12)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":38:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":40:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":40:13)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":65:1)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":68:1)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":67:5)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":67:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":85:15)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":87:15)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":90:15)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":92:15)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":80:1)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":95:1)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":81:1)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":83:27)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":83:22)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":83:5)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":85:5)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":86:5)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":86:57)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":87:5)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":90:5)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":91:5)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":91:56)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":92:5)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":94:12)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":94:5)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":48:1)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":48:77)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":50:1)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":63:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":52:5)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":52:12)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":53:5)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":53:32)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":54:5)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":54:36)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":55:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":55:37)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:12)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:27)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:32)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:35)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:5)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":56:36)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":57:27)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":57:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":57:19)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":57:22)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":57:23)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:12)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:28)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:33)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:37)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:5)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":58:38)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":59:29)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":59:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":59:20)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":59:24)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":59:25)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":61:12)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":61:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":62:5)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_65a.c":62:13)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc17, #loc18])
#loc118 = loc(fused[#loc20, #loc19])
#loc119 = loc(fused[#loc28, #loc29])
#loc120 = loc(fused[#loc31, #loc30])
#loc121 = loc(fused[#loc36, #loc35])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc41, #loc42])
#loc124 = loc(fused[#loc43, #loc44])
#loc125 = loc(fused[#loc45, #loc46])
#loc126 = loc(fused[#loc47, #loc48])
#loc127 = loc(fused[#loc53, #loc54])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc68, #loc69])
#loc132 = loc(fused[#loc72, #loc71])
#loc133 = loc(fused[#loc73, #loc74])
#loc134 = loc(fused[#loc75, #loc76])
#loc135 = loc(fused[#loc77, #loc78])
#loc136 = loc(fused[#loc79, #loc80])
#loc137 = loc(fused[#loc81, #loc82])
#loc138 = loc(fused[#loc83, #loc84])
#loc139 = loc(fused[#loc89, #loc90])
#loc140 = loc(fused[#loc92, #loc91])
#loc141 = loc(fused[#loc100, #loc101])
#loc142 = loc(fused[#loc103, #loc102])
#loc143 = loc(fused[#loc108, #loc107])
