!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":172:10)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":172:14)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":172:20)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":172:32)
#true = #cir.bool<true> : !cir.bool
#loc318 = loc(fused[#loc108, #loc109])
#loc319 = loc(fused[#loc110, #loc111])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc274)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc275)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc276)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc21)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc25)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc286)
        cir.condition(%8) loc(#loc29)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc289)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc289)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc289)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc38)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc38)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc38)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc38)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc38)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc38)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc275)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
              cir.if %22 {
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
                %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
                cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc293)
              } else {
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc49)
              } loc(#loc292)
            } loc(#loc290)
          } loc(#loc288)
        } loc(#loc287)
        cir.yield loc(#loc24)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc51)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
        cir.yield loc(#loc284)
      } loc(#loc284)
    } loc(#loc284)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc54)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc297)
        cir.condition(%8) loc(#loc58)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc300)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc301)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc301)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc301)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc69)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc303)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc73)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc75)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc75)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc305)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc307)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc81)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc308)
                    cir.condition(%19) loc(#loc82)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc85)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc85)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc86)
                    } loc(#loc309)
                    cir.yield loc(#loc77)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc88)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc310)
                    cir.yield loc(#loc306)
                  } loc(#loc306)
                } loc(#loc306)
              } else {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc89)
              } loc(#loc304)
            } loc(#loc302)
          } loc(#loc299)
        } loc(#loc298)
        cir.yield loc(#loc53)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc91)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc311)
        cir.yield loc(#loc295)
      } loc(#loc295)
    } loc(#loc295)
    cir.return loc(#loc14)
  } loc(#loc279)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc93)
  } loc(#loc312)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc315)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc105)
  cir.func @main(%arg0: !s32i loc(fused[#loc108, #loc109]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc110, #loc111])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc319)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc113)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc114)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc115)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc320)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_17_good() : () -> () loc(#loc117)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc104)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc321)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_17_bad() : () -> () loc(#loc121)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    cir.return %17 : !s32i loc(#loc322)
  } loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc126)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc324)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc325)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc135)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc139)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc330)
        cir.condition(%8) loc(#loc143)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc333)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc333)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc333)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc151)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc152)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc152)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc152)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc152)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc152)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc152)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc152)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc152)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc275)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc153)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc154)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc335)
              cir.if %22 {
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc159)
                %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc160)
                cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc337)
              } else {
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc163)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc163)
                cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc164)
              } loc(#loc336)
            } loc(#loc334)
          } loc(#loc332)
        } loc(#loc331)
        cir.yield loc(#loc138)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc166)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
        cir.yield loc(#loc328)
      } loc(#loc328)
    } loc(#loc328)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc169)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc340)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc341)
        cir.condition(%8) loc(#loc173)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc344)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc345)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc345)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc345)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc184)
              %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc347)
              %12 = cir.ternary(%11, true {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc187)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc348)
                %16 = cir.ternary(%15, true {
                  %17 = cir.const #true loc(#loc185)
                  cir.yield %17 : !cir.bool loc(#loc185)
                }, false {
                  %17 = cir.const #false loc(#loc185)
                  cir.yield %17 : !cir.bool loc(#loc185)
                }) : (!cir.bool) -> !cir.bool loc(#loc185)
                cir.yield %16 : !cir.bool loc(#loc185)
              }, false {
                %13 = cir.const #false loc(#loc185)
                cir.yield %13 : !cir.bool loc(#loc185)
              }) : (!cir.bool) -> !cir.bool loc(#loc185)
              cir.if %12 {
                %13 = cir.const #cir.int<1> : !s32i loc(#loc192)
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc194)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc194)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc350)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc197)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc352)
                  cir.for : cond {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc199)
                    %19 = cir.const #cir.int<10> : !s32i loc(#loc200)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc353)
                    cir.condition(%20) loc(#loc201)
                  } body {
                    cir.scope {
                      %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                      %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc204)
                      %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc204)
                      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc205)
                    } loc(#loc354)
                    cir.yield loc(#loc196)
                  } step {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc206)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc207)
                    cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc355)
                    cir.yield loc(#loc351)
                  } loc(#loc351)
                } loc(#loc351)
              } else {
                %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc126)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc126)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc208)
              } loc(#loc349)
            } loc(#loc346)
          } loc(#loc343)
        } loc(#loc342)
        cir.yield loc(#loc168)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc209)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc210)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc356)
        cir.yield loc(#loc339)
      } loc(#loc339)
    } loc(#loc339)
    cir.return loc(#loc128)
  } loc(#loc323)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc359)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc360)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc219)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc223)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc226)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc364)
        cir.condition(%8) loc(#loc227)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc229)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc366)
        } loc(#loc365)
        cir.yield loc(#loc222)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc232)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
        cir.yield loc(#loc362)
      } loc(#loc362)
    } loc(#loc362)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc235)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc369)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc237)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc238)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc370)
        cir.condition(%8) loc(#loc239)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc373)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc374)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc374)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc374)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc250)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc376)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc254)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc256)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc256)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc378)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc259)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc380)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc262)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc381)
                    cir.condition(%19) loc(#loc263)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc266)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc266)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc267)
                    } loc(#loc382)
                    cir.yield loc(#loc258)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc269)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc383)
                    cir.yield loc(#loc379)
                  } loc(#loc379)
                } loc(#loc379)
              } else {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc270)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc270)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc271)
              } loc(#loc377)
            } loc(#loc375)
          } loc(#loc372)
        } loc(#loc371)
        cir.yield loc(#loc234)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc273)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc384)
        cir.yield loc(#loc368)
      } loc(#loc368)
    } loc(#loc368)
    cir.return loc(#loc212)
  } loc(#loc357)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":42:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":64:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":24:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":68:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":26:11)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":27:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":27:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:12)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":29:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":45:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:16)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:20)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:18)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":31:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":32:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":44:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":33:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":33:49)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":43:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:23)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:36)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:53)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":35:63)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":36:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":39:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":41:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:29)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:24)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":38:40)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":42:17)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:24)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":30:23)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":67:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:9)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:16)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:20)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:18)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":47:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":48:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":66:9)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":49:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":49:17)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":50:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":50:34)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:13)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":65:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:17)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":53:24)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":54:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":61:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":63:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:32)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:24)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":55:17)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":60:17)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:25)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:21)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:28)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:32)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:30)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":58:17)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:41)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:34)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":59:21)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:37)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":57:36)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":64:17)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:24)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":46:23)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":157:1)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":161:1)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":159:5)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":159:13)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":160:5)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":160:13)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":177:15)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":179:15)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":182:15)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":184:15)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":172:1)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":187:1)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":173:1)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":175:27)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":175:22)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":175:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":177:5)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":178:5)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":178:52)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":179:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":182:5)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":183:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":183:51)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":184:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":186:12)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":186:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":114:27)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":75:1)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":118:1)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:5)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:9)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":77:11)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":78:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":78:9)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:12)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":80:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":96:5)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:16)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:20)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:18)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":82:5)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":83:9)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":95:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":84:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":84:49)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":94:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:23)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:36)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:53)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":86:63)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":87:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":90:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":92:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:29)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:24)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":89:40)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":93:27)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":93:17)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:24)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":81:23)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":117:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:13)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:9)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:16)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:20)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:18)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":98:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":99:9)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":116:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":100:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":100:17)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":101:13)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":101:34)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":115:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:17)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:25)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:27)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:30)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:38)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":103:40)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":104:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":111:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":113:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:32)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:24)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":105:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:17)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":110:17)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:25)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:21)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:28)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:32)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:30)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":108:17)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:41)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:34)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":109:21)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:37)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":107:36)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":114:17)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:24)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":97:23)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":121:1)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":155:1)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:5)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:9)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":123:11)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":124:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":124:9)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:12)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":126:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":132:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:13)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:9)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:16)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:20)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:18)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":128:5)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":131:16)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":131:9)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:24)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":127:23)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:5)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":154:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:13)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:9)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:16)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:20)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:18)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":134:5)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":135:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":153:9)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":136:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":136:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":137:13)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":137:34)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":152:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:17)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":140:24)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":141:13)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":148:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":150:13)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:32)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:24)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":142:17)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:17)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":147:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:25)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:21)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:28)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:32)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:30)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":145:17)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:41)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:34)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":146:21)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:37)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":144:36)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":151:27)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":151:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:24)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_17.c":133:23)
#loc274 = loc(fused[#loc1, #loc2])
#loc275 = loc(fused[#loc3, #loc4])
#loc276 = loc(fused[#loc5, #loc6])
#loc277 = loc(fused[#loc7, #loc8])
#loc278 = loc(fused[#loc10, #loc11])
#loc279 = loc(fused[#loc13, #loc14])
#loc280 = loc(fused[#loc15, #loc16])
#loc281 = loc(fused[#loc15, #loc17])
#loc282 = loc(fused[#loc18, #loc19])
#loc283 = loc(fused[#loc22, #loc20])
#loc284 = loc(fused[#loc23, #loc24])
#loc285 = loc(fused[#loc26, #loc25])
#loc286 = loc(fused[#loc27, #loc28])
#loc287 = loc(fused[#loc30, #loc24])
#loc288 = loc(fused[#loc31, #loc32])
#loc289 = loc(fused[#loc33, #loc34])
#loc290 = loc(fused[#loc35, #loc36])
#loc291 = loc(fused[#loc40, #loc41])
#loc292 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc293 = loc(fused[#loc47, #loc48])
#loc294 = loc(fused[#loc51, #loc50])
#loc295 = loc(fused[#loc52, #loc53])
#loc296 = loc(fused[#loc55, #loc54])
#loc297 = loc(fused[#loc56, #loc57])
#loc298 = loc(fused[#loc59, #loc53])
#loc299 = loc(fused[#loc60, #loc61])
#loc300 = loc(fused[#loc62, #loc63])
#loc301 = loc(fused[#loc64, #loc65])
#loc302 = loc(fused[#loc66, #loc67])
#loc303 = loc(fused[#loc68, #loc69])
#loc304 = loc(fused[#loc70, #loc71, #loc72, #loc67])
#loc305 = loc(fused[#loc75, #loc73])
#loc306 = loc(fused[#loc76, #loc77])
#loc307 = loc(fused[#loc79, #loc78])
#loc308 = loc(fused[#loc80, #loc81])
#loc309 = loc(fused[#loc83, #loc77])
#loc310 = loc(fused[#loc88, #loc87])
#loc311 = loc(fused[#loc91, #loc90])
#loc312 = loc(fused[#loc92, #loc93])
#loc313 = loc(fused[#loc94, #loc95])
#loc314 = loc(fused[#loc96, #loc97])
#loc315 = loc(fused[#loc98, #loc99])
#loc316 = loc(fused[#loc100, #loc101])
#loc317 = loc(fused[#loc106, #loc107])
#loc320 = loc(fused[#loc117, #loc118])
#loc321 = loc(fused[#loc121, #loc122])
#loc322 = loc(fused[#loc125, #loc124])
#loc323 = loc(fused[#loc127, #loc128])
#loc324 = loc(fused[#loc129, #loc130])
#loc325 = loc(fused[#loc129, #loc131])
#loc326 = loc(fused[#loc132, #loc133])
#loc327 = loc(fused[#loc136, #loc134])
#loc328 = loc(fused[#loc137, #loc138])
#loc329 = loc(fused[#loc140, #loc139])
#loc330 = loc(fused[#loc141, #loc142])
#loc331 = loc(fused[#loc144, #loc138])
#loc332 = loc(fused[#loc145, #loc146])
#loc333 = loc(fused[#loc147, #loc148])
#loc334 = loc(fused[#loc149, #loc150])
#loc335 = loc(fused[#loc154, #loc155])
#loc336 = loc(fused[#loc156, #loc157, #loc158, #loc150])
#loc337 = loc(fused[#loc161, #loc162])
#loc338 = loc(fused[#loc166, #loc165])
#loc339 = loc(fused[#loc167, #loc168])
#loc340 = loc(fused[#loc170, #loc169])
#loc341 = loc(fused[#loc171, #loc172])
#loc342 = loc(fused[#loc174, #loc168])
#loc343 = loc(fused[#loc175, #loc176])
#loc344 = loc(fused[#loc177, #loc178])
#loc345 = loc(fused[#loc179, #loc180])
#loc346 = loc(fused[#loc181, #loc182])
#loc347 = loc(fused[#loc183, #loc184])
#loc348 = loc(fused[#loc186, #loc188])
#loc349 = loc(fused[#loc189, #loc190, #loc191, #loc182])
#loc350 = loc(fused[#loc194, #loc192])
#loc351 = loc(fused[#loc195, #loc196])
#loc352 = loc(fused[#loc198, #loc197])
#loc353 = loc(fused[#loc199, #loc200])
#loc354 = loc(fused[#loc202, #loc196])
#loc355 = loc(fused[#loc207, #loc206])
#loc356 = loc(fused[#loc210, #loc209])
#loc357 = loc(fused[#loc211, #loc212])
#loc358 = loc(fused[#loc213, #loc214])
#loc359 = loc(fused[#loc213, #loc215])
#loc360 = loc(fused[#loc216, #loc217])
#loc361 = loc(fused[#loc220, #loc218])
#loc362 = loc(fused[#loc221, #loc222])
#loc363 = loc(fused[#loc224, #loc223])
#loc364 = loc(fused[#loc225, #loc226])
#loc365 = loc(fused[#loc228, #loc222])
#loc366 = loc(fused[#loc230, #loc229])
#loc367 = loc(fused[#loc232, #loc231])
#loc368 = loc(fused[#loc233, #loc234])
#loc369 = loc(fused[#loc236, #loc235])
#loc370 = loc(fused[#loc237, #loc238])
#loc371 = loc(fused[#loc240, #loc234])
#loc372 = loc(fused[#loc241, #loc242])
#loc373 = loc(fused[#loc243, #loc244])
#loc374 = loc(fused[#loc245, #loc246])
#loc375 = loc(fused[#loc247, #loc248])
#loc376 = loc(fused[#loc249, #loc250])
#loc377 = loc(fused[#loc251, #loc252, #loc253, #loc248])
#loc378 = loc(fused[#loc256, #loc254])
#loc379 = loc(fused[#loc257, #loc258])
#loc380 = loc(fused[#loc260, #loc259])
#loc381 = loc(fused[#loc261, #loc262])
#loc382 = loc(fused[#loc264, #loc258])
#loc383 = loc(fused[#loc269, #loc268])
#loc384 = loc(fused[#loc273, #loc272])
