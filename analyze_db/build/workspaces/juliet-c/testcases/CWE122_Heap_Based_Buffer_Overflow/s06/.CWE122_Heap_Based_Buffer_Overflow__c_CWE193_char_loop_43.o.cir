!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":31:23)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":31:31)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":63:27)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":63:35)
#loc135 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc72, #loc73])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc130)
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_433badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc131)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc135)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc14)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc15)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc137)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc27)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc142)
    } loc(#loc140)
    cir.return loc(#loc10)
  } loc(#loc134)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc40)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc131)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc150)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc151)
      %5 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_433badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc131)
      cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc131)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc152)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc52)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc154)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc55)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc56)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc56)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc155)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc156)
          cir.condition(%20) loc(#loc156)
        } body {
          cir.scope {
            %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc59)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc59)
            %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc59)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
            %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc62)
            cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc158)
          } loc(#loc157)
          cir.yield loc(#loc51)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc64)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc65)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc159)
          cir.yield loc(#loc153)
        } loc(#loc153)
      } loc(#loc153)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    } loc(#loc149)
    cir.return loc(#loc35)
  } loc(#loc146)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc161)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc75)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc76)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc76)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc163)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc75)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc90)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc71)
  } loc(#loc160)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc97)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc130)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc173)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc174)
      %5 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
      cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc103)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc103)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc175)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc109)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc177)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc112)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc113)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc178)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc179)
          cir.condition(%20) loc(#loc179)
        } body {
          cir.scope {
            %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc116)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc116)
            %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc116)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc118)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc119)
            cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc181)
          } loc(#loc180)
          cir.yield loc(#loc108)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc121)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc122)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc182)
          cir.yield loc(#loc176)
        } loc(#loc176)
      } loc(#loc176)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    } loc(#loc172)
    cir.return loc(#loc92)
  } loc(#loc169)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43L7goodG2BEv() : () -> () loc(#loc129)
    cir.return loc(#loc128)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":76:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":76:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":44:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":44:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":36:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":32:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:30)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:41)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:42)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":35:29)
#loc28 = loc("/usr/include/string.h":407:1)
#loc29 = loc("/usr/include/string.h":408:33)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":38:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":56:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":40:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":40:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":41:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":41:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":42:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":43:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":55:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":45:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":45:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":45:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":46:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":46:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":46:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":46:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":52:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:37)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":50:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:30)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:23)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:18)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:19)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":51:31)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:41)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":49:40)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":53:19)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":53:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":54:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":54:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":63:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":68:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":64:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:20)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:28)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:31)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:34)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:45)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:27)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:46)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":66:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:23)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:24)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:30)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":67:29)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":70:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":88:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":72:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":72:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":73:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":73:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":74:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":75:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":87:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":77:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":77:16)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":77:19)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":78:21)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":78:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":78:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":78:34)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":84:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:18)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:25)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:37)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":82:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:30)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:23)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:18)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:19)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":83:31)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:41)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":81:40)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":85:19)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":85:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":86:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":86:14)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":90:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":93:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_43.cpp":92:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc16, #loc17])
#loc137 = loc(fused[#loc15, #loc17])
#loc138 = loc(fused[#loc14, #loc18])
#loc139 = loc(fused[#loc19, #loc18])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc21])
#loc143 = loc(fused[#loc28, #loc29])
#loc144 = loc(fused[#loc30, #loc31])
#loc145 = loc(fused[#loc32, #loc33])
#loc146 = loc(fused[#loc34, #loc35])
#loc147 = loc(fused[#loc36, #loc37])
#loc148 = loc(fused[#loc39, #loc38])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc43, #loc44])
#loc151 = loc(fused[#loc43, #loc45])
#loc152 = loc(fused[#loc48, #loc49])
#loc153 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc53, #loc52])
#loc155 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc54, #loc56])
#loc157 = loc(fused[#loc57, #loc51])
#loc158 = loc(fused[#loc60, #loc63])
#loc159 = loc(fused[#loc65, #loc64])
#loc160 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc78, #loc79])
#loc163 = loc(fused[#loc80, #loc79])
#loc164 = loc(fused[#loc75, #loc81])
#loc165 = loc(fused[#loc82, #loc81])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc87, #loc84])
#loc169 = loc(fused[#loc91, #loc92])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc96, #loc95])
#loc172 = loc(fused[#loc98, #loc99])
#loc173 = loc(fused[#loc100, #loc101])
#loc174 = loc(fused[#loc100, #loc102])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc110, #loc109])
#loc178 = loc(fused[#loc112, #loc113])
#loc179 = loc(fused[#loc111, #loc113])
#loc180 = loc(fused[#loc114, #loc108])
#loc181 = loc(fused[#loc117, #loc120])
#loc182 = loc(fused[#loc122, #loc121])
#loc183 = loc(fused[#loc127, #loc128])
