!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":219:10)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":219:14)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":219:20)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":219:32)
#loc330 = loc(fused[#loc82, #loc83])
#loc331 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc304)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc305)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc306)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc309)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc312)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc313)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc314)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc317)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc318)
          } loc(#loc316)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc35)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc36)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc36)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc36)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc40)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc42)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc44)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc320)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
          cir.break loc(#loc47)
        } loc(#loc19)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc49)
          cir.break loc(#loc50)
        } loc(#loc48)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc311)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc53)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc54)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.yield loc(#loc51)
      } loc(#loc51)
    } loc(#loc321)
    cir.return loc(#loc11)
  } loc(#loc308)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc324)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc63)
  } loc(#loc322)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc327)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE416_Use_After_Free__malloc_free_char_15_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE416_Use_After_Free__malloc_free_char_15_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc336)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc104)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc108)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc111)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc339)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc340)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc344)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc122)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc123)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
            } loc(#loc345)
          } loc(#loc343)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc125)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc126)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc127)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc126)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc126)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc346)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc130)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc132)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc133)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc132)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc134)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc347)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
          cir.break loc(#loc137)
        } loc(#loc109)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc106)
      } loc(#loc106)
    } loc(#loc338)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc144)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc146)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc147)
          cir.break loc(#loc148)
        } loc(#loc145)
        cir.case(default, []) {
          cir.break loc(#loc150)
        } loc(#loc149)
        cir.yield loc(#loc142)
      } loc(#loc142)
    } loc(#loc348)
    cir.return loc(#loc101)
  } loc(#loc335)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc350)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc155)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc351)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc159)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc161)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc162)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc162)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc353)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc354)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc355)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc358)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc173)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc174)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
            } loc(#loc359)
          } loc(#loc357)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc176)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc177)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc178)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc177)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc177)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc360)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc181)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc183)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc184)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc183)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc185)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc361)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc186)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc187)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc186)
          cir.break loc(#loc188)
        } loc(#loc160)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc191)
          cir.break loc(#loc192)
        } loc(#loc189)
        cir.yield loc(#loc157)
      } loc(#loc157)
    } loc(#loc352)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc195)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc197)
        } loc(#loc196)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          cir.break loc(#loc201)
        } loc(#loc198)
        cir.yield loc(#loc193)
      } loc(#loc193)
    } loc(#loc362)
    cir.return loc(#loc152)
  } loc(#loc349)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc364)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc206)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc365)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc210)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc212)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc212)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc213)
          cir.break loc(#loc214)
        } loc(#loc211)
        cir.case(default, []) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc216)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc217)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc217)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc367)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc368)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc369)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc225)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc372)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc227)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc228)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc229)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc227)
            } loc(#loc373)
          } loc(#loc371)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc231)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc232)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc233)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc232)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc232)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc374)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc236)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc236)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc238)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc239)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc238)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc240)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc375)
          cir.break loc(#loc241)
        } loc(#loc215)
        cir.yield loc(#loc208)
      } loc(#loc208)
    } loc(#loc366)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc244)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc247)
          cir.break loc(#loc248)
        } loc(#loc245)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc250)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc250)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc251)
          cir.break loc(#loc252)
        } loc(#loc249)
        cir.yield loc(#loc242)
      } loc(#loc242)
    } loc(#loc376)
    cir.return loc(#loc203)
  } loc(#loc363)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc378)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc257)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc261)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc263)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc264)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc264)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc381)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc382)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc263)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc383)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc384)
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc271)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc272)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc386)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc274)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc275)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc276)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc274)
            } loc(#loc387)
          } loc(#loc385)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc278)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc279)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc280)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc279)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc279)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc388)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc283)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc283)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc285)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc286)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc285)
          %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc287)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc389)
          cir.break loc(#loc288)
        } loc(#loc262)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc290)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc290)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc291)
          cir.break loc(#loc292)
        } loc(#loc289)
        cir.yield loc(#loc259)
      } loc(#loc259)
    } loc(#loc380)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc295)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc298)
          cir.break loc(#loc299)
        } loc(#loc296)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc301)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc301)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc302)
          cir.break loc(#loc303)
        } loc(#loc300)
        cir.yield loc(#loc293)
      } loc(#loc293)
    } loc(#loc390)
    cir.return loc(#loc254)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":41:19)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":24:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":56:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":26:5)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":26:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":28:12)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":28:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":29:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":43:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":29:12)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":31:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:24)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:31)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:35)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:46)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:47)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":32:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":33:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:16)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:22)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:31)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":34:32)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:23)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:9)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:14)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":35:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":37:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":37:14)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":38:9)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":39:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":41:9)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":42:9)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":44:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":55:5)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":44:12)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":46:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":48:19)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":48:9)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":50:9)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":51:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":53:19)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":53:9)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":54:9)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":202:1)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":208:1)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":204:5)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":204:14)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":205:5)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":205:14)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":206:5)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":206:14)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":207:5)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":207:14)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":224:15)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":226:15)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":229:15)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":231:15)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":219:1)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":234:1)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":220:1)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":222:27)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":222:22)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":222:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":224:5)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":225:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":225:53)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":226:5)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":229:5)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":230:5)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":230:52)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":231:5)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":233:12)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":233:5)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":63:1)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":96:1)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":65:5)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":65:12)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":67:12)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":67:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":68:5)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":82:5)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":68:12)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":70:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:24)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:31)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:35)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:46)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:47)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":71:9)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:9)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:37)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:13)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:21)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:27)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:28)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:34)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":72:33)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:16)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:22)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:27)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:31)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:9)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":73:32)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:23)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:9)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:14)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:18)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":74:19)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":76:9)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":76:14)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":77:9)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":78:5)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":80:19)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":80:9)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":81:9)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":83:5)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":95:5)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":83:12)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":85:5)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":87:19)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":87:9)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":88:9)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":89:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":94:9)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":99:1)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":132:1)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":101:5)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":101:12)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":103:12)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":103:5)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":104:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":118:5)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":104:12)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":106:5)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:24)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:31)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:35)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:46)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:47)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":107:9)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:9)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:37)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:13)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:21)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:27)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:28)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:34)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":108:33)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:16)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:22)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:27)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:31)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:9)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":109:32)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:23)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:9)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:14)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:18)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":110:19)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":112:9)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":112:14)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":113:9)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":114:5)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":116:19)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":116:9)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":117:9)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":119:5)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":131:5)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":119:12)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":121:5)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":126:9)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":127:5)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":129:19)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":129:9)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":130:9)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":135:1)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":166:1)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":137:5)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":137:12)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":139:12)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":139:5)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":140:5)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":153:5)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":140:12)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":142:5)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":144:19)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":144:9)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":145:9)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":146:5)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:24)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:31)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:35)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:46)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:47)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":147:9)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:9)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:37)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:13)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:21)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:27)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:28)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:34)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":148:33)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:16)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:22)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:27)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:31)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:9)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":149:32)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:23)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:9)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:14)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:18)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":150:19)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":152:9)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":154:5)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":165:5)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":154:12)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":156:5)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":158:19)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":158:9)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":160:9)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":161:5)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":163:19)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":163:9)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":164:9)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":169:1)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":200:1)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":171:5)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":171:12)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":173:12)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":173:5)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":174:5)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":187:5)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":174:12)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":176:5)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:24)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:31)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:35)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:46)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:47)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":177:9)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:9)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:37)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:13)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:21)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:27)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:28)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:34)
#loc276 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":178:33)
#loc277 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:16)
#loc278 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:22)
#loc279 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:27)
#loc280 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:31)
#loc281 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:9)
#loc282 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":179:32)
#loc283 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:23)
#loc284 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:9)
#loc285 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:14)
#loc286 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:18)
#loc287 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":180:19)
#loc288 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":182:9)
#loc289 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":183:5)
#loc290 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":185:19)
#loc291 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":185:9)
#loc292 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":186:9)
#loc293 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":188:5)
#loc294 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":199:5)
#loc295 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":188:12)
#loc296 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":190:5)
#loc297 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":192:19)
#loc298 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":192:9)
#loc299 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":194:9)
#loc300 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":195:5)
#loc301 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":197:19)
#loc302 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":197:9)
#loc303 = loc("CWE416_Use_After_Free__malloc_free_char_15.c":198:9)
#loc304 = loc(fused[#loc1, #loc2])
#loc305 = loc(fused[#loc3, #loc4])
#loc306 = loc(fused[#loc5, #loc6])
#loc307 = loc(fused[#loc7, #loc8])
#loc308 = loc(fused[#loc10, #loc11])
#loc309 = loc(fused[#loc12, #loc13])
#loc310 = loc(fused[#loc15, #loc14])
#loc311 = loc(fused[#loc16, #loc17])
#loc312 = loc(fused[#loc22, #loc23])
#loc313 = loc(fused[#loc21, #loc23])
#loc314 = loc(fused[#loc20, #loc24])
#loc315 = loc(fused[#loc25, #loc24])
#loc316 = loc(fused[#loc26, #loc27])
#loc317 = loc(fused[#loc28, #loc29])
#loc318 = loc(fused[#loc30, #loc27])
#loc319 = loc(fused[#loc38, #loc39])
#loc320 = loc(fused[#loc41, #loc40])
#loc321 = loc(fused[#loc51, #loc52])
#loc322 = loc(fused[#loc62, #loc63])
#loc323 = loc(fused[#loc64, #loc65])
#loc324 = loc(fused[#loc66, #loc67])
#loc325 = loc(fused[#loc68, #loc69])
#loc326 = loc(fused[#loc70, #loc71])
#loc327 = loc(fused[#loc72, #loc73])
#loc328 = loc(fused[#loc74, #loc75])
#loc329 = loc(fused[#loc80, #loc81])
#loc332 = loc(fused[#loc91, #loc92])
#loc333 = loc(fused[#loc95, #loc96])
#loc334 = loc(fused[#loc99, #loc98])
#loc335 = loc(fused[#loc100, #loc101])
#loc336 = loc(fused[#loc102, #loc103])
#loc337 = loc(fused[#loc105, #loc104])
#loc338 = loc(fused[#loc106, #loc107])
#loc339 = loc(fused[#loc112, #loc113])
#loc340 = loc(fused[#loc111, #loc113])
#loc341 = loc(fused[#loc110, #loc114])
#loc342 = loc(fused[#loc115, #loc114])
#loc343 = loc(fused[#loc116, #loc117])
#loc344 = loc(fused[#loc118, #loc119])
#loc345 = loc(fused[#loc120, #loc117])
#loc346 = loc(fused[#loc128, #loc129])
#loc347 = loc(fused[#loc131, #loc130])
#loc348 = loc(fused[#loc142, #loc143])
#loc349 = loc(fused[#loc151, #loc152])
#loc350 = loc(fused[#loc153, #loc154])
#loc351 = loc(fused[#loc156, #loc155])
#loc352 = loc(fused[#loc157, #loc158])
#loc353 = loc(fused[#loc163, #loc164])
#loc354 = loc(fused[#loc162, #loc164])
#loc355 = loc(fused[#loc161, #loc165])
#loc356 = loc(fused[#loc166, #loc165])
#loc357 = loc(fused[#loc167, #loc168])
#loc358 = loc(fused[#loc169, #loc170])
#loc359 = loc(fused[#loc171, #loc168])
#loc360 = loc(fused[#loc179, #loc180])
#loc361 = loc(fused[#loc182, #loc181])
#loc362 = loc(fused[#loc193, #loc194])
#loc363 = loc(fused[#loc202, #loc203])
#loc364 = loc(fused[#loc204, #loc205])
#loc365 = loc(fused[#loc207, #loc206])
#loc366 = loc(fused[#loc208, #loc209])
#loc367 = loc(fused[#loc218, #loc219])
#loc368 = loc(fused[#loc217, #loc219])
#loc369 = loc(fused[#loc216, #loc220])
#loc370 = loc(fused[#loc221, #loc220])
#loc371 = loc(fused[#loc222, #loc223])
#loc372 = loc(fused[#loc224, #loc225])
#loc373 = loc(fused[#loc226, #loc223])
#loc374 = loc(fused[#loc234, #loc235])
#loc375 = loc(fused[#loc237, #loc236])
#loc376 = loc(fused[#loc242, #loc243])
#loc377 = loc(fused[#loc253, #loc254])
#loc378 = loc(fused[#loc255, #loc256])
#loc379 = loc(fused[#loc258, #loc257])
#loc380 = loc(fused[#loc259, #loc260])
#loc381 = loc(fused[#loc265, #loc266])
#loc382 = loc(fused[#loc264, #loc266])
#loc383 = loc(fused[#loc263, #loc267])
#loc384 = loc(fused[#loc268, #loc267])
#loc385 = loc(fused[#loc269, #loc270])
#loc386 = loc(fused[#loc271, #loc272])
#loc387 = loc(fused[#loc273, #loc270])
#loc388 = loc(fused[#loc281, #loc282])
#loc389 = loc(fused[#loc284, #loc283])
#loc390 = loc(fused[#loc293, #loc294])
