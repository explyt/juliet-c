!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc134)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc137)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc140)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc19)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc20)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc143)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc144)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc32)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc149)
    } loc(#loc147)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badGlobal : !cir.ptr<!s32i> loc(#loc134)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_badSource(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc36)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc153)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc153)
      %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc43)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc48)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    } loc(#loc152)
    cir.return loc(#loc16)
  } loc(#loc141)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc154)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc156)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc159)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc67)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc163)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc79)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
      } loc(#loc168)
    } loc(#loc166)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc154)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B1Source(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc83)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc172)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc172)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc172)
      %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc90)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc91)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc95)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    } loc(#loc171)
    cir.return loc(#loc63)
  } loc(#loc160)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc103)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc104)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc177)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc114)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc116)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
      } loc(#loc182)
    } loc(#loc180)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %9 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc155)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %11 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22_goodG2B2Source(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc120)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %12 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc186)
      %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc186)
      cir.store %13, %12 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc186)
      %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc127)
      %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc131)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc132)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    } loc(#loc185)
    cir.return loc(#loc100)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":24:70)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":26:82)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":42:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":30:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:27)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:31)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:43)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":31:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":32:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":33:70)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":33:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:75)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":34:79)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":35:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":41:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":36:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":36:25)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":38:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":39:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":39:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":40:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":40:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":49:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":49:75)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":50:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":50:75)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":90:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":94:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":92:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":92:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":93:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":93:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":53:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":53:87)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":55:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":69:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":57:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":57:12)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:31)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:42)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:43)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":58:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:33)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:17)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:30)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":59:29)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":60:75)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":60:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:80)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":61:84)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":62:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":68:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":63:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":63:25)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:16)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":65:22)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":66:19)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":66:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":67:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":67:14)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":72:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":72:87)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":74:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":88:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":76:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":76:12)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:42)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:43)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":77:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:23)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:24)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:30)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":78:29)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":79:75)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":79:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:80)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":80:84)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":81:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":87:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":82:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":82:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:16)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":84:22)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":85:19)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":85:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":86:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_22a.c":86:14)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc11, #loc12])
#loc140 = loc(fused[#loc13, #loc14])
#loc141 = loc(fused[#loc15, #loc16])
#loc142 = loc(fused[#loc17, #loc18])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc20, #loc22])
#loc145 = loc(fused[#loc19, #loc23])
#loc146 = loc(fused[#loc24, #loc23])
#loc147 = loc(fused[#loc25, #loc26])
#loc148 = loc(fused[#loc27, #loc28])
#loc149 = loc(fused[#loc29, #loc26])
#loc150 = loc(fused[#loc34, #loc33])
#loc151 = loc(fused[#loc37, #loc38])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc41, #loc42])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc68, #loc69])
#loc163 = loc(fused[#loc67, #loc69])
#loc164 = loc(fused[#loc66, #loc70])
#loc165 = loc(fused[#loc71, #loc70])
#loc166 = loc(fused[#loc72, #loc73])
#loc167 = loc(fused[#loc74, #loc75])
#loc168 = loc(fused[#loc76, #loc73])
#loc169 = loc(fused[#loc81, #loc80])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc86, #loc87])
#loc172 = loc(fused[#loc88, #loc89])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc100])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc105, #loc106])
#loc177 = loc(fused[#loc104, #loc106])
#loc178 = loc(fused[#loc103, #loc107])
#loc179 = loc(fused[#loc108, #loc107])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc113, #loc110])
#loc183 = loc(fused[#loc118, #loc117])
#loc184 = loc(fused[#loc121, #loc122])
#loc185 = loc(fused[#loc123, #loc124])
#loc186 = loc(fused[#loc125, #loc126])
