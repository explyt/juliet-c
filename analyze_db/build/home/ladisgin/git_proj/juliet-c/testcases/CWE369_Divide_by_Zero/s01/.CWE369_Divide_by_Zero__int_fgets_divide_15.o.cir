!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc233)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc234)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc237)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc239)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc240)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc24)
    cir.br ^bb2 loc(#loc22)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc22)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc239)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc239)
    cir.br ^bb6 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc31)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc31)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc31)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc31)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc31)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc31)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc31)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc234)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb9 loc(#loc36)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc43)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb13 loc(#loc45)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc23)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc248)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<7> : !s32i loc(#loc48)
    cir.br ^bb16 loc(#loc46)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb19 [
      7: ^bb18
    ] loc(#loc46)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc49)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    %28 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %30 = cir.binop(div, %28, %29) : !s32i loc(#loc249)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc52)
    cir.br ^bb20 loc(#loc53)
  ^bb19:  // pred: ^bb16
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb20 loc(#loc56)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc47)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc14)
  } loc(#loc238)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc256)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc257)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc75)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc79)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc77)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc260)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc256)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc256)
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc86)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc86)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc86)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc86)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc86)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc86)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc86)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc234)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc88)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc262)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc263)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc94)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb9 loc(#loc91)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb9 loc(#loc84)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc84)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc82)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc99)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb13 loc(#loc102)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc265)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<8> : !s32i loc(#loc105)
    cir.br ^bb16 loc(#loc103)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb19 [
      7: ^bb18
    ] loc(#loc103)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc106)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb25 loc(#loc109)
  ^bb19:  // pred: ^bb16
    cir.br ^bb20 loc(#loc266)
  ^bb20:  // pred: ^bb19
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %32 = cir.cmp(ne, %30, %31) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %32 ^bb21, ^bb22 loc(#loc268)
  ^bb21:  // pred: ^bb20
    %33 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %35 = cir.binop(div, %33, %34) : !s32i loc(#loc269)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc119)
    cir.br ^bb23 loc(#loc115)
  ^bb22:  // pred: ^bb20
    %36 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc67)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb23 loc(#loc111)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc111)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc121)
  ^bb25:  // 2 preds: ^bb18, ^bb24
    cir.br ^bb26 loc(#loc104)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc69)
  } loc(#loc255)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc271)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc272)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc129)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc133)
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc131)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc275)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc271)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc271)
    cir.br ^bb6 loc(#loc276)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc140)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc140)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc140)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc140)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc140)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc140)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc140)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc140)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc234)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc277)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc278)
  ^bb7:  // pred: ^bb6
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc147)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc148)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb9 loc(#loc145)
  ^bb8:  // pred: ^bb6
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb9 loc(#loc138)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc138)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc136)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc153)
  ^bb12:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb13 loc(#loc156)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc132)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc280)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.int<7> : !s32i loc(#loc159)
    cir.br ^bb16 loc(#loc157)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %27 : !s32i, ^bb24 [
      7: ^bb18
    ] loc(#loc157)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc160)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc281)
  ^bb19:  // pred: ^bb18
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %30 = cir.cmp(ne, %28, %29) : !s32i, !cir.bool loc(#loc282)
    cir.brcond %30 ^bb20, ^bb21 loc(#loc283)
  ^bb20:  // pred: ^bb19
    %31 = cir.const #cir.int<100> : !s32i loc(#loc168)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %33 = cir.binop(div, %31, %32) : !s32i loc(#loc284)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc170)
    cir.br ^bb22 loc(#loc166)
  ^bb21:  // pred: ^bb19
    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc171)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb22 loc(#loc162)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc162)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc173)
  ^bb24:  // pred: ^bb16
    %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.br ^bb25 loc(#loc176)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc158)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc123)
  } loc(#loc270)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc186)
    cir.br ^bb2 loc(#loc184)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc184)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc187)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb6 loc(#loc190)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<7> : !s32i loc(#loc191)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb6 loc(#loc193)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc185)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc290)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc196)
    cir.br ^bb9 loc(#loc194)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc194)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc197)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc198)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc291)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc200)
    cir.br ^bb13 loc(#loc201)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb13 loc(#loc204)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc195)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc178)
  } loc(#loc285)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc293)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc210)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb1 loc(#loc295)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc214)
    cir.br ^bb2 loc(#loc212)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc212)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<7> : !s32i loc(#loc216)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb6 loc(#loc218)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc219)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    cir.br ^bb6 loc(#loc221)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc213)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc297)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc224)
    cir.br ^bb9 loc(#loc222)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc222)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc225)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc226)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc298)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc228)
    cir.br ^bb13 loc(#loc229)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc230)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    cir.br ^bb13 loc(#loc232)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc223)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc206)
  } loc(#loc292)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":42:23)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":24:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":62:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":33:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":33:45)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":26:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":26:9)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":28:13)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":28:12)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":28:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":29:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":50:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":29:12)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":31:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":32:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":44:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":43:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:19)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:32)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:49)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":35:59)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":36:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":39:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":41:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":38:25)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":38:20)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":38:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":38:36)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":42:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":45:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":48:9)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":49:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":51:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":61:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":51:12)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":53:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":55:22)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":55:28)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":55:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":56:9)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":59:19)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":59:9)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":60:9)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":224:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":230:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":226:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":226:14)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":227:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":227:14)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":228:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":228:14)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":229:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":229:14)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":110:23)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":69:1)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":114:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":78:9)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":78:45)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":71:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":71:9)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":73:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":73:12)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":73:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":74:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":95:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":74:12)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":76:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":77:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":89:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:9)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":88:9)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:19)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:32)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:49)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:13)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":80:59)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":81:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":84:9)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":86:9)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":83:25)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":83:20)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":83:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":83:36)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":87:23)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":87:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":90:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":93:19)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":93:9)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":94:9)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":96:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":113:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":96:12)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":98:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":100:19)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":100:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":101:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":104:9)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":111:9)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":104:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":104:21)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":105:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":107:9)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":109:9)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":106:26)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":106:32)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":106:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":110:13)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":112:9)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":117:1)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":162:1)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":126:9)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":126:45)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":119:5)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":119:9)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":121:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":121:12)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":121:5)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":122:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":143:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":122:12)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":124:5)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":125:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":137:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":136:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:19)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:32)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:49)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":128:59)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":129:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":132:9)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":134:9)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":131:25)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":131:20)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":131:13)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":131:36)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":135:23)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":135:13)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":138:5)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":141:19)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":141:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":142:9)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":144:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":161:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":144:12)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":146:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":148:9)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":155:9)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":148:13)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":148:21)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":149:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":151:9)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":153:9)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":150:26)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":150:32)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":150:13)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":154:23)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":154:13)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":156:9)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":159:19)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":159:9)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":160:9)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":165:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":192:1)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":167:5)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":167:9)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":169:13)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":169:12)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":169:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":170:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":180:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":170:12)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":172:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":174:19)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":174:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":175:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":178:16)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":178:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":179:9)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":181:5)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":191:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":181:12)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":183:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":185:22)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":185:28)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":185:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":186:9)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":189:19)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":189:9)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":190:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":195:1)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":222:1)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":197:5)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":197:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":199:13)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":199:12)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":199:5)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":200:5)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":210:5)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":200:12)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":202:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":204:16)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":204:9)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":205:9)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":208:19)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":208:9)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":209:9)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":211:5)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":221:5)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":211:12)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":213:5)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":215:22)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":215:28)
#loc228 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":215:9)
#loc229 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":216:9)
#loc230 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":219:19)
#loc231 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":219:9)
#loc232 = loc("CWE369_Divide_by_Zero__int_fgets_divide_15.c":220:9)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc7, #loc8])
#loc237 = loc(fused[#loc11, #loc12])
#loc238 = loc(fused[#loc13, #loc14])
#loc239 = loc(fused[#loc15, #loc16])
#loc240 = loc(fused[#loc17, #loc18])
#loc241 = loc(fused[#loc21, #loc19])
#loc242 = loc(fused[#loc22, #loc23])
#loc243 = loc(fused[#loc26, #loc27])
#loc244 = loc(fused[#loc28, #loc29])
#loc245 = loc(fused[#loc33, #loc34])
#loc246 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc247 = loc(fused[#loc40, #loc41])
#loc248 = loc(fused[#loc46, #loc47])
#loc249 = loc(fused[#loc50, #loc51])
#loc250 = loc(fused[#loc57, #loc58])
#loc251 = loc(fused[#loc59, #loc60])
#loc252 = loc(fused[#loc61, #loc62])
#loc253 = loc(fused[#loc63, #loc64])
#loc254 = loc(fused[#loc65, #loc66])
#loc255 = loc(fused[#loc68, #loc69])
#loc256 = loc(fused[#loc70, #loc71])
#loc257 = loc(fused[#loc72, #loc73])
#loc258 = loc(fused[#loc76, #loc74])
#loc259 = loc(fused[#loc77, #loc78])
#loc260 = loc(fused[#loc81, #loc82])
#loc261 = loc(fused[#loc83, #loc84])
#loc262 = loc(fused[#loc88, #loc89])
#loc263 = loc(fused[#loc90, #loc91, #loc92, #loc84])
#loc264 = loc(fused[#loc95, #loc96])
#loc265 = loc(fused[#loc103, #loc104])
#loc266 = loc(fused[#loc110, #loc111])
#loc267 = loc(fused[#loc112, #loc113])
#loc268 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc269 = loc(fused[#loc117, #loc118])
#loc270 = loc(fused[#loc122, #loc123])
#loc271 = loc(fused[#loc124, #loc125])
#loc272 = loc(fused[#loc126, #loc127])
#loc273 = loc(fused[#loc130, #loc128])
#loc274 = loc(fused[#loc131, #loc132])
#loc275 = loc(fused[#loc135, #loc136])
#loc276 = loc(fused[#loc137, #loc138])
#loc277 = loc(fused[#loc142, #loc143])
#loc278 = loc(fused[#loc144, #loc145, #loc146, #loc138])
#loc279 = loc(fused[#loc149, #loc150])
#loc280 = loc(fused[#loc157, #loc158])
#loc281 = loc(fused[#loc161, #loc162])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc284 = loc(fused[#loc168, #loc169])
#loc285 = loc(fused[#loc177, #loc178])
#loc286 = loc(fused[#loc179, #loc180])
#loc287 = loc(fused[#loc183, #loc181])
#loc288 = loc(fused[#loc184, #loc185])
#loc289 = loc(fused[#loc192, #loc191])
#loc290 = loc(fused[#loc194, #loc195])
#loc291 = loc(fused[#loc198, #loc199])
#loc292 = loc(fused[#loc205, #loc206])
#loc293 = loc(fused[#loc207, #loc208])
#loc294 = loc(fused[#loc211, #loc209])
#loc295 = loc(fused[#loc212, #loc213])
#loc296 = loc(fused[#loc217, #loc216])
#loc297 = loc(fused[#loc222, #loc223])
#loc298 = loc(fused[#loc226, #loc227])
