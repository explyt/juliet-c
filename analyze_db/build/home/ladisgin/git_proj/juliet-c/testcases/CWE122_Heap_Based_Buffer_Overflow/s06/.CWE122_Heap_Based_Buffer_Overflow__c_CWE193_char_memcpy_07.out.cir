!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":121:10)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":121:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":121:20)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":121:32)
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc184)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc185)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc186)
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc188)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc189)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc190)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc192)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc187)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc198)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc200)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc205)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc43)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc186)
    cir.copy %21 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc186)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc49)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc50)
    %31 = cir.binop(add, %28, %30) : !u64i loc(#loc207)
    %32 = cir.const #cir.int<1> : !u64i loc(#loc208)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc209)
    cir.libc.memcpy %33 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc210)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %35 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc58)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc20)
  } loc(#loc193)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc211)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    cir.return %17 : !s32i loc(#loc221)
  } loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc187)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc104)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb8 loc(#loc106)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc110)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc110)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc228)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc229)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %17, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb4 loc(#loc232)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc233)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc234)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc124)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc102)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc185)
    cir.copy %25 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc185)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc128)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc129)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc130)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc129)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc131)
    %35 = cir.binop(add, %32, %34) : !u64i loc(#loc236)
    %36 = cir.const #cir.int<1> : !u64i loc(#loc237)
    %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc238)
    cir.libc.memcpy %37 bytes from %29 to %27 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc239)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %39 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc139)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc96)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc145)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc187)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc152)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc153)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc153)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc153)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc247)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.br ^bb3 loc(#loc250)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc252)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc167)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc161)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc148)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc184)
    cir.copy %23 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc184)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc171)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc172)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc173)
    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc174)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc254)
    %34 = cir.const #cir.int<1> : !u64i loc(#loc255)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc256)
    cir.libc.memcpy %35 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc257)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc182)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc142)
  } loc(#loc240)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":96:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":96:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":75:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":75:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":45:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":45:29)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":30:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":30:25)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("/usr/include/string.h":407:1)
#loc14 = loc("/usr/include/string.h":408:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":34:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":52:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":36:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":36:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":37:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":37:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":38:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":43:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":38:8)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":38:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":39:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:46)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":41:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":42:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":44:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":51:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:22)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:31)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:38)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:48)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:53)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:64)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:30)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":48:65)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":49:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":49:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":50:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":50:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":105:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":109:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":107:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":107:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":108:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":108:14)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":126:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":128:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":131:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":133:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":121:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":136:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":122:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":124:27)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":124:22)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":124:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":126:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":127:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":127:69)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":128:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":131:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":132:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":132:68)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":133:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":135:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":135:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":66:19)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":59:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":82:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":61:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":61:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":62:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":62:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":63:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":73:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":63:8)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":63:20)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":64:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":67:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":69:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":66:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:24)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:32)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:35)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:38)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:49)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:31)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:50)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":71:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:37)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:27)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:28)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":72:33)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":74:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":81:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:16)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:22)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:31)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:38)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:48)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:53)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:64)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:30)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":78:65)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":79:19)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":79:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":80:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":80:14)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":85:1)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":103:1)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":87:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":87:12)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":88:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":88:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":89:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":94:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":89:8)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":89:20)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":90:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:24)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:32)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:35)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:38)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:49)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:31)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:50)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":92:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:37)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:21)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:27)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:28)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:34)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":93:33)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":95:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":102:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:16)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:22)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:31)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:38)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:48)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:53)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:64)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:30)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":99:65)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":100:19)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":100:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":101:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_07.c":101:14)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc12])
#loc190 = loc(fused[#loc13, #loc14])
#loc191 = loc(fused[#loc15, #loc16])
#loc192 = loc(fused[#loc17, #loc18])
#loc193 = loc(fused[#loc19, #loc20])
#loc194 = loc(fused[#loc21, #loc22])
#loc195 = loc(fused[#loc24, #loc23])
#loc196 = loc(fused[#loc25, #loc26])
#loc197 = loc(fused[#loc27, #loc28])
#loc198 = loc(fused[#loc29, #loc26])
#loc199 = loc(fused[#loc32, #loc33])
#loc200 = loc(fused[#loc31, #loc33])
#loc201 = loc(fused[#loc30, #loc34])
#loc202 = loc(fused[#loc35, #loc34])
#loc203 = loc(fused[#loc36, #loc37])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc40, #loc37])
#loc206 = loc(fused[#loc44, #loc45])
#loc207 = loc(fused[#loc48, #loc50])
#loc208 = loc(fused[#loc51, #loc52])
#loc209 = loc(fused[#loc53, #loc52])
#loc210 = loc(fused[#loc54, #loc55])
#loc211 = loc(fused[#loc60, #loc61])
#loc212 = loc(fused[#loc62, #loc63])
#loc213 = loc(fused[#loc64, #loc65])
#loc214 = loc(fused[#loc66, #loc67])
#loc215 = loc(fused[#loc68, #loc69])
#loc216 = loc(fused[#loc74, #loc75])
#loc219 = loc(fused[#loc85, #loc86])
#loc220 = loc(fused[#loc89, #loc90])
#loc221 = loc(fused[#loc93, #loc92])
#loc222 = loc(fused[#loc95, #loc96])
#loc223 = loc(fused[#loc97, #loc98])
#loc224 = loc(fused[#loc100, #loc99])
#loc225 = loc(fused[#loc101, #loc102])
#loc226 = loc(fused[#loc103, #loc104])
#loc227 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc228 = loc(fused[#loc112, #loc113])
#loc229 = loc(fused[#loc114, #loc113])
#loc230 = loc(fused[#loc109, #loc115])
#loc231 = loc(fused[#loc116, #loc115])
#loc232 = loc(fused[#loc117, #loc118])
#loc233 = loc(fused[#loc119, #loc120])
#loc234 = loc(fused[#loc121, #loc118])
#loc235 = loc(fused[#loc125, #loc126])
#loc236 = loc(fused[#loc129, #loc131])
#loc237 = loc(fused[#loc132, #loc133])
#loc238 = loc(fused[#loc134, #loc133])
#loc239 = loc(fused[#loc135, #loc136])
#loc240 = loc(fused[#loc141, #loc142])
#loc241 = loc(fused[#loc143, #loc144])
#loc242 = loc(fused[#loc146, #loc145])
#loc243 = loc(fused[#loc147, #loc148])
#loc244 = loc(fused[#loc149, #loc150])
#loc245 = loc(fused[#loc151, #loc148])
#loc246 = loc(fused[#loc155, #loc156])
#loc247 = loc(fused[#loc157, #loc156])
#loc248 = loc(fused[#loc152, #loc158])
#loc249 = loc(fused[#loc159, #loc158])
#loc250 = loc(fused[#loc160, #loc161])
#loc251 = loc(fused[#loc162, #loc163])
#loc252 = loc(fused[#loc164, #loc161])
#loc253 = loc(fused[#loc168, #loc169])
#loc254 = loc(fused[#loc172, #loc174])
#loc255 = loc(fused[#loc175, #loc176])
#loc256 = loc(fused[#loc177, #loc176])
#loc257 = loc(fused[#loc178, #loc179])
