!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc50 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":160:10)
#loc51 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":160:14)
#loc52 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":160:20)
#loc53 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":160:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc170)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc174)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc179)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc180)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %12 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %14 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc27)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc171)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_struct_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc29)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc188)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE563_Unused_Variable__unused_value_struct_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE563_Unused_Variable__unused_value_struct_08_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE563_Unused_Variable__unused_value_struct_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE563_Unused_Variable__unused_value_struct_08_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.return %17 : !s32i loc(#loc196)
  } loc(#loc191)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc70)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %2 : !s32i loc(#loc198)
  } loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc202)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc79)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb3 loc(#loc78)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc208)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb8 loc(#loc91)
  ^bb7:  // pred: ^bb5
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc94)
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc74)
  } loc(#loc199)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %2 : !s32i loc(#loc210)
  } loc(#loc209)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc214)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc105)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc218)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc114)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc220)
  ^bb6:  // pred: ^bb5
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc117)
    cir.br ^bb7 loc(#loc113)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc113)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc100)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
    %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc124)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb4 loc(#loc127)
  ^bb3:  // pred: ^bb1
    %6 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %7 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %9 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc135)
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc229)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc138)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc230)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %14 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %16 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc145)
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc119)
  } loc(#loc221)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc236)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc152)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc152)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %5 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %7 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc159)
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc240)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc241)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc162)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc242)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %12 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %14 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.call @printStructLine(%0) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc169)
    cir.br ^bb7 loc(#loc161)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc147)
  } loc(#loc233)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_struct_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":37:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":53:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":39:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":39:19)
#loc7 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":45:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:8)
#loc10 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":40:26)
#loc11 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":41:5)
#loc12 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":43:23)
#loc13 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc14 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":43:9)
#loc15 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":44:23)
#loc16 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc17 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":44:9)
#loc18 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:5)
#loc19 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":52:5)
#loc20 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:8)
#loc21 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":46:26)
#loc22 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":47:5)
#loc23 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":49:23)
#loc24 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":49:9)
#loc25 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":50:23)
#loc26 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":50:9)
#loc27 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":51:9)
#loc28 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":143:1)
#loc29 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":149:1)
#loc30 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":145:5)
#loc31 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":145:14)
#loc32 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":146:5)
#loc33 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":146:14)
#loc34 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":147:5)
#loc35 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":147:14)
#loc36 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":148:5)
#loc37 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":148:14)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":165:15)
#loc45 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":167:15)
#loc46 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":170:15)
#loc47 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":172:15)
#loc48 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":160:1)
#loc49 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":175:1)
#loc54 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":161:1)
#loc55 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":163:27)
#loc56 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":163:22)
#loc57 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":163:5)
#loc58 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":165:5)
#loc59 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":166:5)
#loc60 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":166:57)
#loc61 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":167:5)
#loc62 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":170:5)
#loc63 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":171:5)
#loc64 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":171:56)
#loc65 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":172:5)
#loc66 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":174:12)
#loc67 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":174:5)
#loc68 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":25:1)
#loc69 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":28:1)
#loc70 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":27:12)
#loc71 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":27:5)
#loc72 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":72:19)
#loc73 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":60:1)
#loc74 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":79:1)
#loc75 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":62:5)
#loc76 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":62:19)
#loc77 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:5)
#loc78 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":68:5)
#loc79 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:8)
#loc80 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":63:26)
#loc81 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":64:5)
#loc82 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":66:23)
#loc83 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":66:9)
#loc84 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":67:23)
#loc85 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":67:9)
#loc86 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:5)
#loc87 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":78:5)
#loc88 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:8)
#loc89 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":69:27)
#loc90 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":70:5)
#loc91 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":73:5)
#loc92 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":75:5)
#loc93 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":72:9)
#loc94 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":77:9)
#loc95 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":30:1)
#loc96 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":33:1)
#loc97 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":32:12)
#loc98 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":32:5)
#loc99 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":82:1)
#loc100 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":96:1)
#loc101 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":84:5)
#loc102 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":84:19)
#loc103 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:5)
#loc104 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":90:5)
#loc105 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:8)
#loc106 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":85:26)
#loc107 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":86:5)
#loc108 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":88:23)
#loc109 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":88:9)
#loc110 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":89:23)
#loc111 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":89:9)
#loc112 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:5)
#loc113 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":95:5)
#loc114 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:8)
#loc115 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":91:26)
#loc116 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":92:5)
#loc117 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":94:9)
#loc118 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":99:1)
#loc119 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":121:1)
#loc120 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":101:5)
#loc121 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":101:19)
#loc122 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:5)
#loc123 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":113:5)
#loc124 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:8)
#loc125 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":102:27)
#loc126 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":103:5)
#loc127 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":106:5)
#loc128 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":108:5)
#loc129 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":105:19)
#loc130 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":105:9)
#loc131 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":110:23)
#loc132 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":110:9)
#loc133 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":111:23)
#loc134 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":111:9)
#loc135 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":112:9)
#loc136 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:5)
#loc137 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":120:5)
#loc138 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:8)
#loc139 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":114:26)
#loc140 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":115:5)
#loc141 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":117:23)
#loc142 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":117:9)
#loc143 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":118:23)
#loc144 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":118:9)
#loc145 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":119:9)
#loc146 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":124:1)
#loc147 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":141:1)
#loc148 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":126:5)
#loc149 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":126:19)
#loc150 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:5)
#loc151 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":133:5)
#loc152 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:8)
#loc153 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":127:26)
#loc154 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":128:5)
#loc155 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":130:23)
#loc156 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":130:9)
#loc157 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":131:23)
#loc158 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":131:9)
#loc159 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":132:9)
#loc160 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:5)
#loc161 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":140:5)
#loc162 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:8)
#loc163 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":134:26)
#loc164 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":135:5)
#loc165 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":137:23)
#loc166 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":137:9)
#loc167 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":138:23)
#loc168 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":138:9)
#loc169 = loc("CWE563_Unused_Variable__unused_value_struct_08.c":139:9)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc11, #loc8])
#loc176 = loc(fused[#loc14, #loc12])
#loc177 = loc(fused[#loc17, #loc15])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc22, #loc19])
#loc181 = loc(fused[#loc24, #loc23])
#loc182 = loc(fused[#loc26, #loc25])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc32, #loc33])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc36, #loc37])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc40, #loc41])
#loc190 = loc(fused[#loc42, #loc43])
#loc191 = loc(fused[#loc48, #loc49])
#loc194 = loc(fused[#loc59, #loc60])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc67, #loc66])
#loc197 = loc(fused[#loc68, #loc69])
#loc198 = loc(fused[#loc71, #loc70])
#loc199 = loc(fused[#loc73, #loc74])
#loc200 = loc(fused[#loc75, #loc76])
#loc201 = loc(fused[#loc77, #loc78])
#loc202 = loc(fused[#loc79, #loc80])
#loc203 = loc(fused[#loc81, #loc78])
#loc204 = loc(fused[#loc83, #loc82])
#loc205 = loc(fused[#loc85, #loc84])
#loc206 = loc(fused[#loc86, #loc87])
#loc207 = loc(fused[#loc88, #loc89])
#loc208 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc209 = loc(fused[#loc95, #loc96])
#loc210 = loc(fused[#loc98, #loc97])
#loc211 = loc(fused[#loc99, #loc100])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc103, #loc104])
#loc214 = loc(fused[#loc105, #loc106])
#loc215 = loc(fused[#loc107, #loc104])
#loc216 = loc(fused[#loc109, #loc108])
#loc217 = loc(fused[#loc111, #loc110])
#loc218 = loc(fused[#loc112, #loc113])
#loc219 = loc(fused[#loc114, #loc115])
#loc220 = loc(fused[#loc116, #loc113])
#loc221 = loc(fused[#loc118, #loc119])
#loc222 = loc(fused[#loc120, #loc121])
#loc223 = loc(fused[#loc122, #loc123])
#loc224 = loc(fused[#loc124, #loc125])
#loc225 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc226 = loc(fused[#loc132, #loc131])
#loc227 = loc(fused[#loc134, #loc133])
#loc228 = loc(fused[#loc136, #loc137])
#loc229 = loc(fused[#loc138, #loc139])
#loc230 = loc(fused[#loc140, #loc137])
#loc231 = loc(fused[#loc142, #loc141])
#loc232 = loc(fused[#loc144, #loc143])
#loc233 = loc(fused[#loc146, #loc147])
#loc234 = loc(fused[#loc148, #loc149])
#loc235 = loc(fused[#loc150, #loc151])
#loc236 = loc(fused[#loc152, #loc153])
#loc237 = loc(fused[#loc154, #loc151])
#loc238 = loc(fused[#loc156, #loc155])
#loc239 = loc(fused[#loc158, #loc157])
#loc240 = loc(fused[#loc160, #loc161])
#loc241 = loc(fused[#loc162, #loc163])
#loc242 = loc(fused[#loc164, #loc161])
#loc243 = loc(fused[#loc166, #loc165])
#loc244 = loc(fused[#loc168, #loc167])
