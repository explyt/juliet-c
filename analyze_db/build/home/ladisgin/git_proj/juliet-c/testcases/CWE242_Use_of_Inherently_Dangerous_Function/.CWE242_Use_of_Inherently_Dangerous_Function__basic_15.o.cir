!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc15)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc13)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
    %4 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc131)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc131)
    %6 = cir.call %5(%3) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
    %8 = cir.cast(int_to_ptr, %7 : !u64i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc134)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc135)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc30)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc31)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc32)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc32)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc37)
  ^bb11:  // pred: ^bb2
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb12 loc(#loc39)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc14)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc8)
  } loc(#loc126)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc137)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb12 loc(#loc62)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc66)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc68)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc150)
  ^bb8:  // pred: ^bb7
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc79)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc72)
  ^bb10:  // pred: ^bb9
    %18 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc80)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc81)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc81)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc83)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb11 loc(#loc64)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc57)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc51)
  } loc(#loc142)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc95)
    cir.br ^bb2 loc(#loc93)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc93)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc99)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc100)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc160)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc110)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc113)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc114)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc115)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc115)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc117)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb10 loc(#loc98)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc120)
  ^bb11:  // pred: ^bb2
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb12 loc(#loc123)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc94)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc88)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":38:23)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":47:19)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":22:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":50:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":28:9)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":28:28)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":29:9)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":29:15)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":24:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":49:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":24:12)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":26:5)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":27:5)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":43:5)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:23)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:18)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:27)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:9)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:9)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":40:9)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:23)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":36:9)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":38:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":39:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":39:18)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:29)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:14)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:24)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:9)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":42:19)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":42:9)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":44:5)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":47:9)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":48:9)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":114:1)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":118:1)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":116:5)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":116:11)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":117:5)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":117:11)
#loc46 = loc("/usr/include/stdio.h":654:1)
#loc47 = loc("/usr/include/stdio.h":655:59)
#loc48 = loc("/usr/include/stdio.h":149:1)
#loc49 = loc("/usr/include/stdio.h":149:14)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":57:1)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":83:1)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":67:9)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":67:28)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":68:9)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":68:15)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":59:5)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":82:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":59:12)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":61:5)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":63:19)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":63:9)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":64:9)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":66:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":80:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:24)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:30)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:41)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:18)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:9)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:46)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:9)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":77:9)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:13)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:23)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":73:9)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":75:23)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":75:13)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":76:13)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":76:18)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:29)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:14)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:24)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:9)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":79:19)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":79:9)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":81:5)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":86:1)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":112:1)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":92:9)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":92:28)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":93:9)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":93:15)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":88:5)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":111:5)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":88:12)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":90:5)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":91:5)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":105:5)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:24)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:30)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:41)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:18)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:9)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:46)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:9)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":102:9)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:13)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:23)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":98:9)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":100:23)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":100:13)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":101:13)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":101:18)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:29)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:14)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:24)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:9)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":104:19)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":104:9)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":106:5)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":109:19)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":109:9)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":110:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc4, #loc5])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc13, #loc14])
#loc130 = loc(fused[#loc17, #loc18])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc22, #loc21])
#loc133 = loc(fused[#loc23, #loc24])
#loc134 = loc(fused[#loc25, #loc26])
#loc135 = loc(fused[#loc27, #loc24])
#loc136 = loc(fused[#loc34, #loc31])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc42, #loc43])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc46, #loc47])
#loc141 = loc(fused[#loc48, #loc49])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc52, #loc53])
#loc144 = loc(fused[#loc54, #loc55])
#loc145 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc72])
#loc151 = loc(fused[#loc83, #loc80])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc97, #loc98])
#loc157 = loc(fused[#loc103, #loc104])
#loc158 = loc(fused[#loc105, #loc106])
#loc159 = loc(fused[#loc107, #loc108])
#loc160 = loc(fused[#loc109, #loc106])
#loc161 = loc(fused[#loc117, #loc114])
